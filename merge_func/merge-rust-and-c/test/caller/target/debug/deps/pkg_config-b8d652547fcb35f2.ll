; ModuleID = 'pkg_config.3fbf19fc2dc6568b-cgu.0'
source_filename = "pkg_config.3fbf19fc2dc6568b-cgu.0"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"std::sys::pal::common::thread_local::fast_local::Key<core::cell::Cell<(u64, u64)>>" = type { %"std::sys::pal::common::thread_local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>", i8, [7 x i8] }
%"std::sys::pal::common::thread_local::lazy::LazyKeyInner<core::cell::Cell<(u64, u64)>>" = type { %"core::cell::UnsafeCell<core::option::Option<core::cell::Cell<(u64, u64)>>>" }
%"core::cell::UnsafeCell<core::option::Option<core::cell::Cell<(u64, u64)>>>" = type { %"core::option::Option<core::cell::Cell<(u64, u64)>>" }
%"core::option::Option<core::cell::Cell<(u64, u64)>>" = type { i64, [2 x i64] }
%"alloc::string::String" = type { %"alloc::vec::Vec<u8>" }
%"alloc::vec::Vec<u8>" = type { %"alloc::raw_vec::RawVec<u8>", i64 }
%"alloc::raw_vec::RawVec<u8>" = type { i64, ptr, %"alloc::alloc::Global" }
%"alloc::alloc::Global" = type {}
%"core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>" = type { %"alloc::vec::into_iter::IntoIter<&str>", {} }
%"alloc::vec::into_iter::IntoIter<&str>" = type { ptr, ptr, i64, ptr, %"core::marker::PhantomData<&str>", %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>" }
%"core::marker::PhantomData<&str>" = type {}
%"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>" = type { %"alloc::alloc::Global" }
%"{closure@core::iter::adapters::map::map_fold<&str, alloc::string::String, (), fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}, {closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>>::{closure#0}}>::{closure#0}}>::{closure#0}}" = type { %"{closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>>::{closure#0}}>::{closure#0}}", {} }
%"{closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>>::{closure#0}}>::{closure#0}}" = type { %"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>>::{closure#0}}" }
%"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>>::{closure#0}}" = type { %"alloc::vec::set_len_on_drop::SetLenOnDrop<'_>", ptr }
%"alloc::vec::set_len_on_drop::SetLenOnDrop<'_>" = type { ptr, i64 }
%"{closure@core::iter::adapters::map::map_fold<&std::ffi::os_str::OsString, std::ffi::os_str::OsString, (), {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}, {closure@core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString, {closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}>::{closure#0}}>::{closure#0}}" = type { %"{closure@core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString, {closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}>::{closure#0}}", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}" }
%"{closure@core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString, {closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}>::{closure#0}}" = type { %"{closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}" }
%"{closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}" = type { %"alloc::vec::set_len_on_drop::SetLenOnDrop<'_>", ptr }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}" = type {}
%"{closure@core::iter::adapters::map::map_fold<&(std::ffi::os_str::OsString, std::ffi::os_str::OsString), alloc::string::String, (), {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}, {closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>>::{closure#0}}>::{closure#0}}>::{closure#0}}" = type { %"{closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>>::{closure#0}}>::{closure#0}}", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}" }
%"{closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>>::{closure#0}}>::{closure#0}}" = type { %"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>>::{closure#0}}" }
%"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>>::{closure#0}}" = type { %"alloc::vec::set_len_on_drop::SetLenOnDrop<'_>", ptr }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}" = type {}
%"{closure@core::iter::adapters::map::map_fold<&std::ffi::os_str::OsString, alloc::string::String, (), {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}, {closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>>::{closure#0}}>::{closure#0}}>::{closure#0}}" = type { %"{closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>>::{closure#0}}>::{closure#0}}", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}" }
%"{closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>>::{closure#0}}>::{closure#0}}" = type { %"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>>::{closure#0}}" }
%"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>>::{closure#0}}" = type { %"alloc::vec::set_len_on_drop::SetLenOnDrop<'_>", ptr }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}" = type {}
%"{closure@core::iter::adapters::map::map_fold<&&str, std::ffi::os_str::OsString, (), {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}, {closure@core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString, {closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}>::{closure#0}}>::{closure#0}}" = type { %"{closure@core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString, {closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}>::{closure#0}}", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}.0" }
%"{closure@core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString, {closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}>::{closure#0}}" = type { %"{closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}" }
%"{closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}" = type { %"alloc::vec::set_len_on_drop::SetLenOnDrop<'_>", ptr }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}.0" = type {}
%"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>" = type { ptr, [1 x i64] }
%"core::option::Option<alloc::vec::Vec<&str>>" = type { i64, [2 x i64] }
%"alloc::vec::Vec<&str>" = type { %"alloc::raw_vec::RawVec<&str>", i64 }
%"alloc::raw_vec::RawVec<&str>" = type { i64, ptr, %"alloc::alloc::Global" }
%"core::option::Option<alloc::string::String>" = type { i64, [2 x i64] }
%"core::option::Option<&str>" = type { ptr, [1 x i64] }
%"core::iter::adapters::map::Map<core::str::iter::Split<'_, char>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:372:38: 372:44}>" = type { %"core::str::iter::Split<'_, char>", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:372:38: 372:44}" }
%"core::str::iter::Split<'_, char>" = type { %"core::str::iter::SplitInternal<'_, char>" }
%"core::str::iter::SplitInternal<'_, char>" = type { i64, i64, %"core::str::pattern::CharSearcher<'_>", i8, i8, [6 x i8] }
%"core::str::pattern::CharSearcher<'_>" = type { { ptr, i64 }, i64, i64, i64, [4 x i8], i32 }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:372:38: 372:44}" = type {}
%"core::option::Option<(&str, &str)>" = type { ptr, [3 x i64] }
%"core::iter::adapters::map::Map<core::str::iter::SplitInclusive<'_, char>, core::str::LinesMap>" = type { %"core::str::iter::SplitInclusive<'_, char>", %"core::str::LinesMap" }
%"core::str::iter::SplitInclusive<'_, char>" = type { %"core::str::iter::SplitInternal<'_, char>" }
%"core::str::LinesMap" = type {}
%"core::option::Option<usize>" = type { i64, [1 x i64] }
%"core::option::Option<u32>" = type { i32, [1 x i32] }
%"core::option::Option<(usize, char)>" = type { [2 x i32], i32, [1 x i32] }
%"core::str::iter::CharIndices<'_>" = type { %"core::str::iter::Chars<'_>", i64 }
%"core::str::iter::Chars<'_>" = type { %"core::slice::iter::Iter<'_, u8>" }
%"core::slice::iter::Iter<'_, u8>" = type { ptr, ptr, %"core::marker::PhantomData<&u8>" }
%"core::marker::PhantomData<&u8>" = type {}
%"core::mem::maybe_uninit::MaybeUninit<&str>" = type { [2 x i64] }
%"core::ptr::metadata::PtrComponents<&str>" = type { ptr, {} }
%"core::ptr::metadata::PtrRepr<&str>" = type { [1 x i64] }
%"core::ops::control_flow::ControlFlow<usize>" = type { i64, [1 x i64] }
%"core::str::pattern::SearchStep" = type { i64, [2 x i64] }
%"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim_end::{closure#0}}>" = type { { ptr, i64 }, %"core::str::iter::CharIndices<'_>", %"{closure@core::str::<impl str>::trim_end::{closure#0}}" }
%"{closure@core::str::<impl str>::trim_end::{closure#0}}" = type {}
%"core::str::pattern::SearchStep::Reject" = type { [1 x i64], i64, i64 }
%"core::str::pattern::SearchStep::Match" = type { [1 x i64], i64, i64 }
%"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>" = type { { ptr, i64 }, %"core::str::iter::CharIndices<'_>", %"{closure@core::str::<impl str>::trim::{closure#0}}" }
%"{closure@core::str::<impl str>::trim::{closure#0}}" = type {}
%"core::ptr::metadata::PtrComponents<[u8]>" = type { ptr, i64 }
%"core::ptr::metadata::PtrRepr<[u8]>" = type { [2 x i64] }
%"core::option::Option<&[u8]>" = type { ptr, [1 x i64] }
%"core::option::Option<(usize, usize)>" = type { i64, [2 x i64] }
%"core::option::Option<(usize, usize)>::Some" = type { [1 x i64], { i64, i64 } }
%"alloc::vec::Vec<alloc::string::String>" = type { %"alloc::raw_vec::RawVec<alloc::string::String>", i64 }
%"alloc::raw_vec::RawVec<alloc::string::String>" = type { i64, ptr, %"alloc::alloc::Global" }
%"core::fmt::Arguments<'_>" = type { { ptr, i64 }, { ptr, i64 }, %"core::option::Option<&[core::fmt::rt::Placeholder]>" }
%"core::option::Option<&[core::fmt::rt::Placeholder]>" = type { ptr, [1 x i64] }
%"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>" = type { %"core::slice::iter::Iter<'_, std::ffi::os_str::OsString>", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}" }
%"core::slice::iter::Iter<'_, std::ffi::os_str::OsString>" = type { ptr, ptr, %"core::marker::PhantomData<&std::ffi::os_str::OsString>" }
%"core::marker::PhantomData<&std::ffi::os_str::OsString>" = type {}
%"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>" = type { %"core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}" }
%"core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>" = type { ptr, ptr, %"core::marker::PhantomData<&(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>" }
%"core::marker::PhantomData<&(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>" = type {}
%"core::ptr::metadata::PtrComponents<[alloc::string::String]>" = type { ptr, i64 }
%"core::ptr::metadata::PtrRepr<[alloc::string::String]>" = type { [2 x i64] }
%"alloc::vec::in_place_drop::InPlaceDstDataSrcBufDrop<&str, alloc::string::String>" = type { ptr, i64, i64, %"core::marker::PhantomData<&str>" }
%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>" = type { %"core::slice::iter::Iter<'_, u8>", %"core::slice::iter::Iter<'_, u8>", i64, i64, i64 }
%"core::option::Option<(&u8, &u8)>" = type { ptr, [1 x i64] }
%"core::option::Option<alloc::vec::into_iter::IntoIter<&str>>" = type { ptr, [3 x i64] }
%"core::iter::adapters::flatten::FlattenCompat<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>, alloc::vec::into_iter::IntoIter<&str>>" = type { %"core::option::Option<alloc::vec::into_iter::IntoIter<&str>>", %"core::option::Option<alloc::vec::into_iter::IntoIter<&str>>", %"core::iter::adapters::fuse::Fuse<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>>" }
%"core::iter::adapters::fuse::Fuse<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>>" = type { %"core::option::Option<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>>" }
%"core::option::Option<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>>" = type { ptr, [1 x i64] }
%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", i64, %"alloc::alloc::Global" }
%"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" }
%"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" = type { i64, [3 x i64] }
%"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { ptr, [2 x i64] }
%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>" = type { ptr, i64, %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>" }
%"core::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::LeafOrInternal)>" = type {}
%"core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>" = type { ptr, [1 x i64] }
%"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" = type { %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" }
%"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { %"core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", i64, %"core::mem::manually_drop::ManuallyDrop<alloc::alloc::Global>", %"core::marker::PhantomData<alloc::boxed::Box<(std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>)>>" }
%"core::marker::PhantomData<alloc::boxed::Box<(std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>)>>" = type {}
%"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root" = type { [1 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>" }
%"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some" = type { [1 x i64], %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" }
%"core::ops::range::Range<usize>" = type { i64, i64 }
%"core::result::Result<Library, Error>" = type { i64, [29 x i64] }
%Error = type { i64, [13 x i64] }
%"core::result::Result<Library, Error>::Err" = type { [1 x i64], %Error }
%"core::result::Result<alloc::string::String, Error>" = type { i64, [13 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" = type { %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", i64, %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>" }
%"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>" = type {}
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>" = type { ptr, [2 x i64] }
%"std::collections::hash::map::HashMap<alloc::string::String, core::option::Option<alloc::string::String>>" = type { %"hashbrown::map::HashMap<alloc::string::String, core::option::Option<alloc::string::String>, std::hash::random::RandomState>" }
%"hashbrown::map::HashMap<alloc::string::String, core::option::Option<alloc::string::String>, std::hash::random::RandomState>" = type { %"hashbrown::raw::RawTable<(alloc::string::String, core::option::Option<alloc::string::String>)>", %"std::hash::random::RandomState" }
%"hashbrown::raw::RawTable<(alloc::string::String, core::option::Option<alloc::string::String>)>" = type { %"hashbrown::raw::RawTableInner", %"alloc::alloc::Global", %"core::marker::PhantomData<(alloc::string::String, core::option::Option<alloc::string::String>)>" }
%"hashbrown::raw::RawTableInner" = type { ptr, i64, i64, i64 }
%"core::marker::PhantomData<(alloc::string::String, core::option::Option<alloc::string::String>)>" = type {}
%"std::hash::random::RandomState" = type { i64, i64 }
%"core::result::Result<std::hash::random::RandomState, std::thread::local::AccessError>" = type { i64, [2 x i64] }
%"core::option::Option<core::option::Option<alloc::string::String>>" = type { i64, [2 x i64] }
%"std::fs::Metadata" = type { %"std::sys::pal::unix::fs::FileAttr" }
%"std::sys::pal::unix::fs::FileAttr" = type { %"core::option::Option<std::sys::pal::unix::fs::StatxExtraFields>", %"libc::unix::linux_like::linux::gnu::b64::x86_64::stat64" }
%"core::option::Option<std::sys::pal::unix::fs::StatxExtraFields>" = type { i64, [3 x i64] }
%"libc::unix::linux_like::linux::gnu::b64::x86_64::stat64" = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [3 x i64] }
%"core::result::Result<std::fs::Metadata, std::io::error::Error>" = type { i64, [21 x i64] }
%"core::result::Result<std::sys::pal::unix::fs::FileAttr, std::io::error::Error>" = type { i64, [21 x i64] }
%"core::result::Result<usize, std::io::error::Error>" = type { i64, [1 x i64] }
%"core::result::Result<usize, std::io::error::Error>::Ok" = type { [1 x i64], i64 }
%"core::result::Result<usize, std::io::error::Error>::Err" = type { [1 x i64], ptr }
%"std::io::Write::write_fmt::Adapter<'_, std::sys::pal::unix::stdio::Stderr>" = type { ptr, ptr }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>" = type { i8, [15 x i8] }
%"core::ptr::metadata::PtrComponents<()>" = type { ptr, {} }
%"core::ptr::metadata::PtrRepr<()>" = type { [1 x i64] }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os" = type { [1 x i32], i32 }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage" = type { [1 x i64], ptr }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple" = type { [1 x i8], i8 }
%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom" = type { [1 x i64], ptr }
%"std::io::error::ErrorData<&std::io::error::Custom>" = type { i8, [15 x i8] }
%"std::io::error::ErrorData<&std::io::error::Custom>::Os" = type { [1 x i32], i32 }
%"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage" = type { [1 x i64], ptr }
%"std::io::error::ErrorData<&std::io::error::Custom>::Simple" = type { [1 x i8], i8 }
%"std::io::error::ErrorData<&std::io::error::Custom>::Custom" = type { [1 x i64], ptr }
%"std::io::error::SimpleMessage" = type { { ptr, i64 }, i8, [7 x i8] }
%"std::io::error::Custom" = type { %"alloc::boxed::Box<dyn core::error::Error + core::marker::Send + core::marker::Sync>", i8, [7 x i8] }
%"alloc::boxed::Box<dyn core::error::Error + core::marker::Send + core::marker::Sync>" = type { %"core::ptr::unique::Unique<dyn core::error::Error + core::marker::Send + core::marker::Sync>", %"alloc::alloc::Global" }
%"core::ptr::unique::Unique<dyn core::error::Error + core::marker::Send + core::marker::Sync>" = type { %"core::ptr::non_null::NonNull<dyn core::error::Error + core::marker::Send + core::marker::Sync>", %"core::marker::PhantomData<dyn core::error::Error + core::marker::Send + core::marker::Sync>" }
%"core::ptr::non_null::NonNull<dyn core::error::Error + core::marker::Send + core::marker::Sync>" = type { { ptr, ptr } }
%"core::marker::PhantomData<dyn core::error::Error + core::marker::Send + core::marker::Sync>" = type {}
%"core::result::Result<alloc::string::String, std::env::VarError>" = type { i64, [3 x i64] }
%"core::option::Option<std::ffi::os_str::OsString>" = type { i64, [2 x i64] }
%"std::ffi::os_str::OsString" = type { %"std::sys::os_str::bytes::Buf" }
%"std::sys::os_str::bytes::Buf" = type { %"alloc::vec::Vec<u8>" }
%"alloc::borrow::Cow<'_, str>" = type { i64, [2 x i64] }
%"core::option::Option<core::cell::Cell<(u64, u64)>>::Some" = type { [1 x i64], %"core::cell::Cell<(u64, u64)>" }
%"core::cell::Cell<(u64, u64)>" = type { %"core::cell::UnsafeCell<(u64, u64)>" }
%"core::cell::UnsafeCell<(u64, u64)>" = type { { i64, i64 } }
%"core::fmt::rt::Argument<'_>" = type { ptr, ptr }
%"std::sys::pal::unix::stdio::Stderr" = type { {} }
%"core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>" = type { ptr, [1 x i64] }
%"std::path::PathBuf" = type { %"std::ffi::os_str::OsString" }
%"std::path::Display<'_>" = type { { ptr, i64 } }
%"core::result::Result<std::hash::random::RandomState, std::thread::local::AccessError>::Ok" = type { [1 x i64], %"std::hash::random::RandomState" }
%"core::option::Option<i32>" = type { i32, [1 x i32] }
%"std::sys::pal::unix::process::process_common::Command" = type { %"alloc::vec::Vec<alloc::ffi::c_str::CString>", %"std::sys::pal::unix::process::process_common::Argv", %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>", %"core::option::Option<u32>", %"core::option::Option<u32>", %"core::option::Option<i32>", %"core::option::Option<std::sys::pal::unix::process::process_common::Stdio>", %"core::option::Option<std::sys::pal::unix::process::process_common::Stdio>", %"core::option::Option<std::sys::pal::unix::process::process_common::Stdio>", %"std::sys_common::process::CommandEnv", %"alloc::ffi::c_str::CString", %"core::option::Option<alloc::ffi::c_str::CString>", %"core::option::Option<alloc::boxed::Box<[u32]>>", i8, i8, i8, [5 x i8] }
%"alloc::vec::Vec<alloc::ffi::c_str::CString>" = type { %"alloc::raw_vec::RawVec<alloc::ffi::c_str::CString>", i64 }
%"alloc::raw_vec::RawVec<alloc::ffi::c_str::CString>" = type { i64, ptr, %"alloc::alloc::Global" }
%"std::sys::pal::unix::process::process_common::Argv" = type { %"alloc::vec::Vec<*const i8>" }
%"alloc::vec::Vec<*const i8>" = type { %"alloc::raw_vec::RawVec<*const i8>", i64 }
%"alloc::raw_vec::RawVec<*const i8>" = type { i64, ptr, %"alloc::alloc::Global" }
%"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>" = type { %"alloc::raw_vec::RawVec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>", i64 }
%"alloc::raw_vec::RawVec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>" = type { i64, ptr, %"alloc::alloc::Global" }
%"core::option::Option<std::sys::pal::unix::process::process_common::Stdio>" = type { i32, [1 x i32] }
%"std::sys_common::process::CommandEnv" = type { %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", i8, i8, [6 x i8] }
%"alloc::ffi::c_str::CString" = type { %"alloc::boxed::Box<[u8]>" }
%"alloc::boxed::Box<[u8]>" = type { %"core::ptr::unique::Unique<[u8]>", %"alloc::alloc::Global" }
%"core::ptr::unique::Unique<[u8]>" = type { %"core::ptr::non_null::NonNull<[u8]>", %"core::marker::PhantomData<[u8]>" }
%"core::ptr::non_null::NonNull<[u8]>" = type { { ptr, i64 } }
%"core::marker::PhantomData<[u8]>" = type {}
%"core::option::Option<alloc::ffi::c_str::CString>" = type { ptr, [1 x i64] }
%"core::option::Option<alloc::boxed::Box<[u32]>>" = type { ptr, [1 x i64] }
%"std::process::Command" = type { %"std::sys::pal::unix::process::process_common::Command" }
%"core::slice::iter::Iter<'_, &str>" = type { ptr, ptr, %"core::marker::PhantomData<&&str>" }
%"core::marker::PhantomData<&&str>" = type {}
%"{closure@std::panicking::begin_panic<&str>::{closure#0}}" = type { { ptr, i64 }, ptr }
%"std::panicking::begin_panic::Payload<&str>" = type { %"core::option::Option<&str>" }
%"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<{closure@std::sys::pal::common::thread_local::fast_local::destroy_value<core::cell::Cell<(u64, u64)>>::{closure#0}}>, ()>" = type { [2 x i64] }
%"core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>" = type { %"alloc::boxed::Box<dyn core::any::Any + core::marker::Send>" }
%"alloc::boxed::Box<dyn core::any::Any + core::marker::Send>" = type { %"core::ptr::unique::Unique<dyn core::any::Any + core::marker::Send>", %"alloc::alloc::Global" }
%"core::ptr::unique::Unique<dyn core::any::Any + core::marker::Send>" = type { %"core::ptr::non_null::NonNull<dyn core::any::Any + core::marker::Send>", %"core::marker::PhantomData<dyn core::any::Any + core::marker::Send>" }
%"core::ptr::non_null::NonNull<dyn core::any::Any + core::marker::Send>" = type { { ptr, ptr } }
%"core::marker::PhantomData<dyn core::any::Any + core::marker::Send>" = type {}
%"core::fmt::Formatter<'_>" = type { %"core::option::Option<usize>", %"core::option::Option<usize>", { ptr, ptr }, i32, i32, i8, [7 x i8] }
%"core::fmt::builders::DebugList<'_, '_>" = type { %"core::fmt::builders::DebugInner<'_, '_>" }
%"core::fmt::builders::DebugInner<'_, '_>" = type { ptr, i8, i8, [6 x i8] }
%"core::str::pattern::CharPredicateSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>" = type { %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>" }
%"core::str::pattern::CharPredicateSearcher<'_, {closure@core::str::<impl str>::trim_end::{closure#0}}>" = type { %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim_end::{closure#0}}>" }
%"{closure@hashbrown::raw::RawTable<(alloc::string::String, core::option::Option<alloc::string::String>)>::find_or_find_insert_slot<{closure@hashbrown::map::equivalent_key<alloc::string::String, alloc::string::String, core::option::Option<alloc::string::String>>::{closure#0}}, {closure@hashbrown::map::make_hasher<alloc::string::String, core::option::Option<alloc::string::String>, std::hash::random::RandomState>::{closure#0}}>::{closure#0}}" = type { ptr, ptr }
%"core::mem::maybe_uninit::MaybeUninit<hashbrown::raw::RawTableInner>" = type { [4 x i64] }
%"alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>" = type { %"core::ptr::unique::Unique<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>", %"alloc::alloc::Global" }
%"core::ptr::unique::Unique<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>" = type { %"core::ptr::non_null::NonNull<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>", %"core::marker::PhantomData<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>" }
%"core::ptr::non_null::NonNull<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>" = type { { ptr, ptr } }
%"core::marker::PhantomData<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>" = type {}
%"Error::EnvNoPkgConfig" = type { [1 x i64], %"alloc::string::String" }
%"Error::Command" = type { [1 x i64], ptr, %"alloc::string::String" }
%"Error::Failure" = type { [1 x i64], %"alloc::string::String", %"std::process::Output" }
%"std::process::Output" = type { %"alloc::vec::Vec<u8>", %"alloc::vec::Vec<u8>", i32, [1 x i32] }
%"Error::ProbeFailure" = type { [1 x i64], %"alloc::string::String", %"alloc::string::String", %"std::process::Output" }
%Config = type { %"core::ops::range::Bound<alloc::string::String>", %"core::ops::range::Bound<alloc::string::String>", %"alloc::vec::Vec<std::ffi::os_str::OsString>", i8, i8, i8, i8, i8, [3 x i8] }
%"core::ops::range::Bound<alloc::string::String>" = type { i64, [3 x i64] }
%"alloc::vec::Vec<std::ffi::os_str::OsString>" = type { %"alloc::raw_vec::RawVec<std::ffi::os_str::OsString>", i64 }
%"alloc::raw_vec::RawVec<std::ffi::os_str::OsString>" = type { i64, ptr, %"alloc::alloc::Global" }
%Library = type { %"alloc::vec::Vec<alloc::string::String>", %"alloc::vec::Vec<std::path::PathBuf>", %"alloc::vec::Vec<std::path::PathBuf>", %"alloc::vec::Vec<alloc::string::String>", %"alloc::vec::Vec<std::path::PathBuf>", %"alloc::vec::Vec<std::path::PathBuf>", %"alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>", %"alloc::string::String", %"std::collections::hash::map::HashMap<alloc::string::String, core::option::Option<alloc::string::String>>", {} }
%"alloc::vec::Vec<std::path::PathBuf>" = type { %"alloc::raw_vec::RawVec<std::path::PathBuf>", i64 }
%"alloc::raw_vec::RawVec<std::path::PathBuf>" = type { i64, ptr, %"alloc::alloc::Global" }
%"alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>" = type { %"alloc::raw_vec::RawVec<alloc::vec::Vec<alloc::string::String>>", i64 }
%"alloc::raw_vec::RawVec<alloc::vec::Vec<alloc::string::String>>" = type { i64, ptr, %"alloc::alloc::Global" }
%WrappedCommand = type { %"std::process::Command", %"std::ffi::os_str::OsString", %"alloc::vec::Vec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>", %"alloc::vec::Vec<std::ffi::os_str::OsString>" }
%"alloc::vec::Vec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>" = type { %"alloc::raw_vec::RawVec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>", i64 }
%"alloc::raw_vec::RawVec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>" = type { i64, ptr, %"alloc::alloc::Global" }
%"core::ops::range::Bound<alloc::string::String>::Included" = type { [1 x i64], %"alloc::string::String" }
%"core::ops::range::Bound<alloc::string::String>::Excluded" = type { [1 x i64], %"alloc::string::String" }
%"core::result::Result<std::fs::Metadata, std::io::error::Error>::Err" = type { [1 x i64], ptr }
%"core::result::Result<alloc::string::String, std::env::VarError>::Ok" = type { [1 x i64], %"alloc::string::String" }
%"core::result::Result<alloc::string::String, std::env::VarError>::Err" = type { [1 x i64], %"std::env::VarError" }
%"std::env::VarError" = type { i64, [2 x i64] }
%"core::option::Option<(&&str, alloc::string::String)>" = type { [1 x i64], i64, [2 x i64] }
%"core::str::iter::Lines<'_>" = type { %"core::iter::adapters::map::Map<core::str::iter::SplitInclusive<'_, char>, core::str::LinesMap>" }
%"core::option::Option<(usize, &str)>" = type { [1 x i64], ptr, [1 x i64] }
%"{closure@core::iter::traits::double_ended::DoubleEndedIterator::rfind::check<usize, {closure@core::str::pattern::simd_contains::{closure#0}}>::{closure#0}}" = type { %"{closure@core::str::pattern::simd_contains::{closure#0}}" }
%"{closure@core::str::pattern::simd_contains::{closure#0}}" = type { { ptr, i64 }, ptr }
%"{closure@core::str::pattern::simd_contains::{closure#3}}" = type { { ptr, i64 }, ptr, ptr, ptr }
%"{closure@core::str::pattern::simd_contains::{closure#2}}" = type { { ptr, i64 }, { ptr, i64 } }
%"core::slice::iter::Windows<'_, u8>" = type { { ptr, i64 }, i64 }
%"core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>" = type { %"core::ops::range::Range<usize>" }
%"core::str::pattern::TwoWaySearcher" = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%"std::hash::random::DefaultHasher" = type { %"core::hash::sip::SipHasher13" }
%"core::hash::sip::SipHasher13" = type { %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>" }
%"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>" = type { %"core::hash::sip::State", i64, i64, i64, i64, i64, %"core::marker::PhantomData<core::hash::sip::Sip13Rounds>" }
%"core::hash::sip::State" = type { i64, i64, i64, i64 }
%"core::marker::PhantomData<core::hash::sip::Sip13Rounds>" = type {}
%"core::option::Option<core::fmt::Arguments<'_>>" = type { ptr, [5 x i64] }
%"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>>" = type { i64, [1 x i64] }
%"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>" = type { %"core::slice::iter::Iter<'_, &str>", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}.0" }
%"core::iter::adapters::map::Map<core::str::iter::Chars<'_>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1032:14: 1032:17}>" = type { %"core::str::iter::Chars<'_>", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1032:14: 1032:17}" }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1032:14: 1032:17}" = type {}
%"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>" = type { %"core::slice::iter::Iter<'_, alloc::string::String>", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}" }
%"core::slice::iter::Iter<'_, alloc::string::String>" = type { ptr, ptr, %"core::marker::PhantomData<&alloc::string::String>" }
%"core::marker::PhantomData<&alloc::string::String>" = type {}
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}" = type {}
%"core::iter::adapters::map::Map<core::iter::adapters::filter::Filter<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:885:21: 885:24}>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:886:18: 886:23}>" = type { %"core::iter::adapters::filter::Filter<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:885:21: 885:24}>", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:886:18: 886:23}" }
%"core::iter::adapters::filter::Filter<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:885:21: 885:24}>" = type { %"core::slice::iter::Iter<'_, alloc::string::String>", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:885:21: 885:24}" }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:885:21: 885:24}" = type {}
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:886:18: 886:23}" = type {}
%"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>" = type { %"core::slice::iter::Iter<'_, std::ffi::os_str::OsString>", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}" }
%"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::str::iter::Chars<'_>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1032:14: 1032:17}>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1033:14: 1033:17}>" = type { %"core::iter::adapters::map::Map<core::str::iter::Chars<'_>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1032:14: 1032:17}>", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1033:14: 1033:17}" }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1033:14: 1033:17}" = type {}
%"core::iter::adapters::filter::Filter<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:999:50: 999:55}>" = type { %"core::slice::iter::Iter<'_, alloc::string::String>", %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:999:50: 999:55}" }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:999:50: 999:55}" = type {}
%"core::iter::adapters::flatten::FlatMap<core::slice::iter::Iter<'_, alloc::string::String>, alloc::vec::Vec<&str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>" = type { %"core::iter::adapters::flatten::FlattenCompat<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>, alloc::vec::into_iter::IntoIter<&str>>" }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>" = type { i64, [1 x i64] }
%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>" = type { %"core::ops::range::Range<usize>", i64, i8, [7 x i8] }
%"core::alloc::layout::Layout" = type { i64, i64 }
%"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>" = type { i64, [1 x i64] }
%"core::option::Option<(&mut [core::mem::maybe_uninit::MaybeUninit<u8>], &mut [core::mem::maybe_uninit::MaybeUninit<u8>])>" = type { ptr, [3 x i64] }
%"core::ptr::metadata::PtrComponents<[core::mem::maybe_uninit::MaybeUninit<u8>]>" = type { ptr, i64 }
%"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>" = type { [2 x i64] }
%"core::slice::iter::Iter<'_, std::path::PathBuf>" = type { ptr, ptr, %"core::marker::PhantomData<&std::path::PathBuf>" }
%"core::marker::PhantomData<&std::path::PathBuf>" = type {}
%"core::option::Option<std::path::PathBuf>" = type { i64, [2 x i64] }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:628:30: 628:32}" = type { ptr, ptr, ptr }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:629:30: 629:32}" = type { ptr, ptr, ptr }
%"core::result::Result<std::sys::pal::unix::fs::FileAttr, std::io::error::Error>::Err" = type { [1 x i64], ptr }
%"std::thread::local::AccessError" = type {}
%"core::fmt::Error" = type {}
%"core::result::Result<Library, alloc::string::String>" = type { i64, [29 x i64] }
%"core::result::Result<Library, alloc::string::String>::Err" = type { [1 x i64], %"alloc::string::String" }
%"core::result::Result<alloc::vec::Vec<u8>, Error>" = type { i64, [13 x i64] }
%"core::result::Result<alloc::vec::Vec<u8>, Error>::Ok" = type { [1 x i64], %"alloc::vec::Vec<u8>" }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>" = type { i64, [2 x i64] }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>" = type { ptr, [1 x i64] }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok" = type { [1 x i64], %"core::ptr::non_null::NonNull<[u8]>" }
%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err" = type { [1 x i64], %"alloc::collections::TryReserveError" }
%"alloc::collections::TryReserveError" = type { %"alloc::collections::TryReserveErrorKind" }
%"alloc::collections::TryReserveErrorKind" = type { i64, [1 x i64] }
%"core::result::Result<(), alloc::collections::TryReserveErrorKind>" = type { i64, [1 x i64] }
%"core::result::Result<(), alloc::collections::TryReserveError>" = type { i64, [1 x i64] }
%"core::result::Result<alloc::string::String, alloc::string::String>" = type { i64, [3 x i64] }
%"core::result::Result<alloc::string::String, Error>::Ok" = type { [1 x i64], %"alloc::string::String" }
%"core::result::Result<alloc::string::String, alloc::string::String>::Ok" = type { [1 x i64], %"alloc::string::String" }
%"core::result::Result<alloc::string::String, alloc::string::String>::Err" = type { [1 x i64], %"alloc::string::String" }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>" = type { i64, [2 x i64] }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], %"core::alloc::layout::Layout" }
%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err" = type { [1 x i64], %"alloc::collections::TryReserveErrorKind" }
%"core::result::Result<std::process::Output, std::io::error::Error>" = type { i64, [6 x i64] }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:666:36: 666:39}" = type { %"core::option::Option<std::ffi::os_str::OsString>", ptr, ptr, ptr }
%"core::result::Result<std::process::Output, std::io::error::Error>::Err" = type { [1 x i64], ptr }
%"core::str::pattern::StrSearcher<'_, '_>" = type { %"core::str::pattern::StrSearcherImpl", { ptr, i64 }, { ptr, i64 } }
%"core::str::pattern::StrSearcherImpl" = type { i64, [8 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" = type { %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>", i64, %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>" }
%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>" = type { ptr, i64, %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>" }
%"core::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Leaf)>" = type {}
%"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>" = type {}
%"alloc::collections::btree::mem::replace::PanicGuard" = type {}
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>" = type { ptr, [2 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>" = type { %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", i64, %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>" }
%"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>" = type { ptr, i64, %"core::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>" }
%"core::marker::PhantomData<(alloc::collections::btree::node::marker::Dying, alloc::collections::btree::node::marker::Internal)>" = type {}
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>" = type { ptr, [2 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>" = type { i64, [3 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>" = type { %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", i64, %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>" }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>" = type { %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>", i64, %"core::marker::PhantomData<alloc::collections::btree::node::marker::KV>" }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>" = type { i64, [2 x i64] }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf" = type { [1 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>" }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal" = type { [1 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>" }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>" }
%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>" }
%"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { ptr, [11 x %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>"], [11 x %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>"], i16, i16, [2 x i16] }
%"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>" = type { [3 x i64] }
%"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>" = type { [3 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Err" = type { [1 x i64], %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>" }
%"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>]>" = type { [2 x i64] }
%"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" = type { %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", [12 x ptr] }
%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>" = type { ptr, [5 x i64] }
%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>" = type { %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", i64, %"core::marker::PhantomData<alloc::collections::btree::node::marker::Edge>" }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>" = type { i64, [3 x i64] }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>" }
%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok" = type { [1 x i64], %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }
%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>" = type { ptr, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>" = type { i64, [3 x i64] }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Continue" = type { [1 x i64], %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>" }
%"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}}>" = type { %"core::slice::iter::Iter<'_, &str>", %"{closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}}" }
%"{closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}}" = type {}
%"{closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}}" = type { { ptr, i64 } }
%"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#1}}>" = type { %"core::slice::iter::Iter<'_, alloc::string::String>", %"{closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#1}}" }
%"{closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#1}}" = type {}
%"{closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#0}}" = type { { ptr, i64 } }
%"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}}>" = type { %"core::slice::iter::Iter<'_, &str>", %"{closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}}" }
%"{closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}}" = type {}
%"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#0}::{closure#0}}>" = type { %"core::slice::iter::Iter<'_, alloc::string::String>", %"{closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#0}::{closure#0}}" }
%"{closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#0}::{closure#0}}" = type {}
%"core::str::iter::MatchIndicesInternal<'_, char>" = type { %"core::str::pattern::CharSearcher<'_>" }
%"core::str::iter::MatchIndices<'_, char>" = type { %"core::str::iter::MatchIndicesInternal<'_, char>" }
%"core::ptr::metadata::PtrComponents<[&str]>" = type { ptr, i64 }
%"core::ptr::metadata::PtrRepr<[&str]>" = type { [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>" = type { ptr, [1 x i64] }
%"core::ptr::non_null::NonNull<[alloc::string::String]>" = type { { ptr, i64 } }
%"core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[alloc::string::String]>>" = type { %"alloc::boxed::Box<[alloc::string::String]>" }
%"alloc::boxed::Box<[alloc::string::String]>" = type { %"core::ptr::unique::Unique<[alloc::string::String]>", %"alloc::alloc::Global" }
%"core::ptr::unique::Unique<[alloc::string::String]>" = type { %"core::ptr::non_null::NonNull<[alloc::string::String]>", %"core::marker::PhantomData<[alloc::string::String]>" }
%"core::marker::PhantomData<[alloc::string::String]>" = type {}
%"core::ptr::non_null::NonNull<[&str]>" = type { { ptr, i64 } }
%"core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[&str]>>" = type { %"alloc::boxed::Box<[&str]>" }
%"alloc::boxed::Box<[&str]>" = type { %"core::ptr::unique::Unique<[&str]>", %"alloc::alloc::Global" }
%"core::ptr::unique::Unique<[&str]>" = type { %"core::ptr::non_null::NonNull<[&str]>", %"core::marker::PhantomData<[&str]>" }
%"core::marker::PhantomData<[&str]>" = type {}
%"core::ptr::non_null::NonNull<[std::path::PathBuf]>" = type { { ptr, i64 } }
%"core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[std::path::PathBuf]>>" = type { %"alloc::boxed::Box<[std::path::PathBuf]>" }
%"alloc::boxed::Box<[std::path::PathBuf]>" = type { %"core::ptr::unique::Unique<[std::path::PathBuf]>", %"alloc::alloc::Global" }
%"core::ptr::unique::Unique<[std::path::PathBuf]>" = type { %"core::ptr::non_null::NonNull<[std::path::PathBuf]>", %"core::marker::PhantomData<[std::path::PathBuf]>" }
%"core::marker::PhantomData<[std::path::PathBuf]>" = type {}
%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>" = type { i64, [4 x i64] }
%"alloc::string::FromUtf8Error" = type { %"alloc::vec::Vec<u8>", %"core::str::error::Utf8Error" }
%"core::str::error::Utf8Error" = type { i64, %"core::option::Option<u8>", [6 x i8] }
%"core::option::Option<u8>" = type { i8, [1 x i8] }
%"core::result::Result<&str, core::str::error::Utf8Error>" = type { i64, [2 x i64] }
%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok" = type { [1 x i64], %"alloc::string::String" }
%"core::result::Result<&str, core::str::error::Utf8Error>::Err" = type { [1 x i64], %"core::str::error::Utf8Error" }
%"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err" = type { %"alloc::collections::TryReserveErrorKind" }
%"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err" = type { %"alloc::collections::TryReserveError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>" = type { i64, [1 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>" = type { i64, [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue" = type { [1 x i64], %"core::alloc::layout::Layout" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break" = type { [1 x i64], %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err" }
%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>" = type { [1 x i64], i64, [1 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>" = type { i64, [2 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>" = type { i64, [1 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>" = type { i64, [1 x i64] }
%"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue" = type { [1 x i64], %"core::ptr::non_null::NonNull<[u8]>" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break" = type { [1 x i64], %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err" }
%"alloc::borrow::Cow<'_, str>::Borrowed" = type { [1 x i64], { ptr, i64 } }
%"core::ptr::metadata::PtrComponents<[*const i8]>" = type { ptr, i64 }
%"core::ptr::metadata::PtrRepr<[*const i8]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrComponents<[alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>]>" = type { ptr, i64 }
%"core::ptr::metadata::PtrRepr<[alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrComponents<[std::path::PathBuf]>" = type { ptr, i64 }
%"core::ptr::metadata::PtrRepr<[std::path::PathBuf]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrComponents<[(std::ffi::os_str::OsString, std::ffi::os_str::OsString)]>" = type { ptr, i64 }
%"core::ptr::metadata::PtrRepr<[(std::ffi::os_str::OsString, std::ffi::os_str::OsString)]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrComponents<[std::ffi::os_str::OsString]>" = type { ptr, i64 }
%"core::ptr::metadata::PtrRepr<[std::ffi::os_str::OsString]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrComponents<[alloc::vec::Vec<alloc::string::String>]>" = type { ptr, i64 }
%"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<alloc::string::String>]>" = type { [2 x i64] }
%"core::ptr::metadata::PtrComponents<[alloc::ffi::c_str::CString]>" = type { ptr, i64 }
%"core::ptr::metadata::PtrRepr<[alloc::ffi::c_str::CString]>" = type { [2 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, Error>, alloc::vec::Vec<u8>>" = type { i64, [13 x i64] }
%"core::result::Result<core::convert::Infallible, Error>::Err" = type { %Error }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, Error>, alloc::vec::Vec<u8>>::Continue" = type { [1 x i64], %"alloc::vec::Vec<u8>" }
%"core::str::pattern::StrSearcherImpl::TwoWay" = type { [1 x i64], %"core::str::pattern::TwoWaySearcher" }
%"core::str::pattern::StrSearcherImpl::Empty" = type { [1 x i64], %"core::str::pattern::EmptyNeedle" }
%"core::str::pattern::EmptyNeedle" = type { i64, i64, i8, i8, i8, [5 x i8] }
%"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, &[u8]>" = type { ptr, [1 x i64] }
%"alloc::vec::in_place_drop::InPlaceDrop<alloc::string::String>" = type { ptr, ptr }
%"hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}>" = type { ptr, %"{closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}" }
%"{closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}" = type { ptr, i64 }
%"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>" = type { %"{closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}", %"hashbrown::raw::RawTableInner" }
%"{closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}" = type { ptr, %"hashbrown::raw::TableLayout" }
%"hashbrown::raw::TableLayout" = type { i64, i64 }
%"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>" = type { %"alloc::vec::Vec<&str>" }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1049:21: 1049:26}" = type { ptr, ptr }
%"hashbrown::raw::RawIter<(alloc::string::String, core::option::Option<alloc::string::String>)>" = type { %"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>", i64 }
%"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>" = type { ptr, ptr, ptr, i16, [3 x i16] }
%"core::result::Result<hashbrown::raw::Bucket<(alloc::string::String, core::option::Option<alloc::string::String>)>, hashbrown::raw::InsertSlot>" = type { i64, [1 x i64] }
%"core::result::Result<hashbrown::raw::Bucket<(alloc::string::String, core::option::Option<alloc::string::String>)>, hashbrown::raw::InsertSlot>::Ok" = type { [1 x i64], ptr }
%"core::result::Result<hashbrown::raw::Bucket<(alloc::string::String, core::option::Option<alloc::string::String>)>, hashbrown::raw::InsertSlot>::Err" = type { [1 x i64], i64 }
%"core::option::Option<(core::alloc::layout::Layout, usize)>" = type { i64, [2 x i64] }
%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>, hashbrown::TryReserveError>" = type { ptr, [6 x i64] }
%"core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>::Err" = type { %"hashbrown::TryReserveError" }
%"hashbrown::TryReserveError" = type { i64, [1 x i64] }
%"core::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>" = type { ptr, [3 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner>" = type { ptr, [3 x i64] }
%"core::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>::Err" = type { [1 x i64], %"hashbrown::TryReserveError" }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner>::Break" = type { [1 x i64], %"core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>::Err" }
%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>, hashbrown::TryReserveError>::Err" = type { [1 x i64], %"hashbrown::TryReserveError" }
%"hashbrown::raw::ProbeSeq" = type { i64, i64 }
%"core::result::Result<usize, hashbrown::TryReserveError>" = type { i64, [1 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>" = type { i64, [1 x i64] }
%"core::result::Result<usize, hashbrown::TryReserveError>::Ok" = type { [1 x i64], i64 }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Continue" = type { [1 x i64], i64 }
%"core::result::Result<usize, hashbrown::raw::InsertSlot>" = type { i64, [1 x i64] }
%"hashbrown::raw::FullBucketsIndices" = type { ptr, i64, i64, i16, [3 x i16] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>>" = type { ptr, [6 x i64] }
%"core::result::Result<(), hashbrown::TryReserveError>" = type { i64, [1 x i64] }
%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>>::Break" = type { [1 x i64], %"core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>::Err" }
%"core::fmt::rt::Count" = type { i64, [1 x i64] }
%"core::fmt::rt::Placeholder" = type { %"core::fmt::rt::Count", %"core::fmt::rt::Count", i64, i32, i32, i8, [7 x i8] }
%"core::result::Result<&str, core::str::error::Utf8Error>::Ok" = type { [1 x i64], { ptr, i64 } }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:630:30: 630:32}" = type { ptr, ptr }
%"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:652:36: 652:38}" = type { ptr, ptr }
%"core::option::Option<&std::path::Path>" = type { ptr, [1 x i64] }
%"core::option::Option<&std::ffi::os_str::OsStr>" = type { ptr, [1 x i64] }

@alloc_ec595fc0e82ef92fc59bd74f68296eae = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"assertion failed: 0 < pointee_size && pointee_size <= isize::MAX as usize" }>, align 1
@alloc_4932f39bd283994f8d3e764cc620ee52 = private unnamed_addr constant <{ [81 x i8] }> <{ [81 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/core/src/ptr/const_ptr.rs" }>, align 1
@alloc_768f4da2d83915fa9ce0d03164202475 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_4932f39bd283994f8d3e764cc620ee52, [16 x i8] c"Q\00\00\00\00\00\00\004\03\00\00\09\00\00\00" }>, align 8
@0 = private unnamed_addr constant <{ [8 x i8], [4 x i8], [4 x i8] }> <{ [8 x i8] undef, [4 x i8] c"\00\00\11\00", [4 x i8] undef }>, align 8
@str.0 = internal unnamed_addr constant [58 x i8] c"attempted to zero-initialize type `&str`, which is invalid"
@1 = private unnamed_addr constant <{ [8 x i8], [8 x i8] }> <{ [8 x i8] zeroinitializer, [8 x i8] undef }>, align 8
@alloc_31365cfefba383c4d2bf6b6a04cc10aa = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"capacity overflow" }>, align 1
@alloc_e760b8a82485eab475ddc4c0d696a7ac = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_31365cfefba383c4d2bf6b6a04cc10aa, [8 x i8] c"\11\00\00\00\00\00\00\00" }>, align 8
@alloc_513570631223a12912d85da2bec3b15a = private unnamed_addr constant <{}> zeroinitializer, align 8
@alloc_07bdadc9d1dcd7ff6a481fd426896afa = private unnamed_addr constant <{ [94 x i8] }> <{ [94 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/alloc/src/vec/spec_from_iter_nested.rs" }>, align 1
@alloc_38dd80f2064e09e0c321122057d1bb7b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_07bdadc9d1dcd7ff6a481fd426896afa, [16 x i8] c"^\00\00\00\00\00\00\00;\00\00\00\12\00\00\00" }>, align 8
@alloc_91c7fa63c3cfeaa3c795652d5cf060e4 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"invalid args" }>, align 1
@alloc_af99043bc04c419363a7f04d23183506 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_91c7fa63c3cfeaa3c795652d5cf060e4, [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc_6de2818331109612dbb09d5e2073dc73 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/core/src/fmt/mod.rs" }>, align 1
@alloc_b1c9b46fd6543b9e0f93a51d745efa2a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_6de2818331109612dbb09d5e2073dc73, [16 x i8] c"K\00\00\00\00\00\00\00C\01\00\00\0D\00\00\00" }>, align 8
@alloc_d389186f318fb2e98fa1f460e50b6bb7 = private unnamed_addr constant <{ [89 x i8] }> <{ [89 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/core/src/iter/adapters/step_by.rs" }>, align 1
@alloc_b431752402c9f48eb01e62d17243507d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d389186f318fb2e98fa1f460e50b6bb7, [16 x i8] c"Y\00\00\00\00\00\00\00/\02\00\00\01\00\00\00" }>, align 8
@alloc_a822ce35c8c5e140e883afaff17ee3ea = private unnamed_addr constant <{ ptr }> <{ ptr @_ZN3std4hash6random11RandomState3new4KEYS7__getit17he5c270f0b0cf40d5E }>, align 8
@alloc_2ee7ba9733a263ad3a32ba87b5ec3eae = private unnamed_addr constant <{ [70 x i8] }> <{ [70 x i8] c"cannot access a Thread Local Storage value during or after destruction" }>, align 1
@alloc_3a58387cb677c918b6c5573428e16109 = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/std/src/thread/local.rs" }>, align 1
@alloc_53c9d03fb0aaa6061b80c9d9bdabebac = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_3a58387cb677c918b6c5573428e16109, [16 x i8] c"O\00\00\00\00\00\00\00\06\01\00\00\1A\00\00\00" }>, align 8
@alloc_d0776666182ad032bd1011cf266e2f3a = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF" }>, align 16
@2 = private unnamed_addr constant <{ ptr, [24 x i8] }> <{ ptr @alloc_d0776666182ad032bd1011cf266e2f3a, [24 x i8] zeroinitializer }>, align 8
@alloc_8d68fcbc011419193bd208f22e2789d1 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"failed to write whole buffer" }>, align 1
@alloc_626cc8bfd6c94d404aa777557e31db63 = private unnamed_addr constant <{ ptr, [9 x i8], [7 x i8] }> <{ ptr @alloc_8d68fcbc011419193bd208f22e2789d1, [9 x i8] c"\1C\00\00\00\00\00\00\00\17", [7 x i8] undef }>, align 8
@alloc_57f995c6a338943531b75c489f18a633 = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/std/src/io/mod.rs" }>, align 1
@alloc_fac0d1a84180c12be4f158f9100794e3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_57f995c6a338943531b75c489f18a633, [16 x i8] c"I\00\00\00\00\00\00\00\B1\06\00\00$\00\00\00" }>, align 8
@vtable.1 = private unnamed_addr constant <{ ptr, [16 x i8], ptr, ptr, ptr }> <{ ptr @"_ZN4core3ptr97drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..sys..pal..unix..stdio..Stderr$GT$$GT$17h74c246bc2543a069E", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h902807423469e47aE", ptr @_ZN4core3fmt5Write10write_char17ha39eef9cd5753103E, ptr @_ZN4core3fmt5Write9write_fmt17h097b92dcedbca259E }>, align 8
@alloc_118e5dd62e18907a47aec3e2be501119 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"formatter error" }>, align 1
@alloc_5d9af7a776dc0d9eecd628aaf786bef9 = private unnamed_addr constant <{ ptr, [9 x i8], [7 x i8] }> <{ ptr @alloc_118e5dd62e18907a47aec3e2be501119, [9 x i8] c"\0F\00\00\00\00\00\00\00(", [7 x i8] undef }>, align 8
@alloc_a500d906b91607583596fa15e63c2ada = private unnamed_addr constant <{ [40 x i8] }> <{ [40 x i8] c"internal error: entered unreachable code" }>, align 1
@alloc_4dc3c9a7f2fb38379b849190ec5adafd = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/std/src/io/error/repr_bitpacked.rs" }>, align 1
@alloc_5f9ca26e4863825896f7978e113f791b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_4dc3c9a7f2fb38379b849190ec5adafd, [16 x i8] c"Z\00\00\00\00\00\00\00\17\01\00\00\0D\00\00\00" }>, align 8
@alloc_1ccfc410ce4ba7704b8709f0d6e60294 = private unnamed_addr constant <{ [51 x i8] }> <{ [51 x i8] c"fatal runtime error: thread local panicked on drop\0A" }>, align 1
@alloc_f7c18d5ab6a04e64e435b4d6f64423e3 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_1ccfc410ce4ba7704b8709f0d6e60294, [8 x i8] c"3\00\00\00\00\00\00\00" }>, align 8
@_ZN3std4hash6random11RandomState3new4KEYS7__getit5__KEY17h5946b6708c2be188E = external thread_local global %"std::sys::pal::common::thread_local::fast_local::Key<core::cell::Cell<(u64, u64)>>"
@3 = private unnamed_addr constant <{ [4 x i8], [4 x i8] }> <{ [4 x i8] zeroinitializer, [4 x i8] undef }>, align 4
@vtable.2 = private unnamed_addr constant <{ ptr, [16 x i8], ptr, ptr }> <{ ptr @"_ZN4core3ptr72drop_in_place$LT$std..panicking..begin_panic..Payload$LT$$RF$str$GT$$GT$17hc0c16bbe0b84bf44E", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN91_$LT$std..panicking..begin_panic..Payload$LT$A$GT$$u20$as$u20$core..panic..PanicPayload$GT$8take_box17h52fb4b684d31f22eE", ptr @"_ZN91_$LT$std..panicking..begin_panic..Payload$LT$A$GT$$u20$as$u20$core..panic..PanicPayload$GT$3get17h27df7c34460fc30fE" }>, align 8
@vtable.3 = private unnamed_addr constant <{ ptr, [16 x i8], ptr, ptr, ptr }> <{ ptr @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h05503e6cfc98d033E", ptr @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h977db6aca70d7e40E", ptr @_ZN4core3fmt5Write9write_fmt17hdcebb3c98fa6fcecE }>, align 8
@alloc_cc656815297f75969399c3f4b1ad3de4 = private unnamed_addr constant <{ [55 x i8] }> <{ [55 x i8] c"a Display implementation returned an error unexpectedly" }>, align 1
@alloc_c7087c6f3c7d63b09471cb63981ac0b7 = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/alloc/src/string.rs" }>, align 1
@alloc_0c55029f27e67500548c60265db33aa3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_c7087c6f3c7d63b09471cb63981ac0b7, [16 x i8] c"K\00\00\00\00\00\00\003\0A\00\00\0E\00\00\00" }>, align 8
@vtable.4 = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h335e5d7c04b69952E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf69c9c5a0940145fE" }>, align 8
@alloc_b96933a8148f906cfb135db9ebeba42b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_6de2818331109612dbb09d5e2073dc73, [16 x i8] c"K\00\00\00\00\00\00\00M\01\00\00\0D\00\00\00" }>, align 8
@str.5 = internal unnamed_addr constant [25 x i8] c"attempt to divide by zero"
@str.6 = internal unnamed_addr constant [57 x i8] c"attempt to calculate the remainder with a divisor of zero"
@alloc_1b0254a3d4d07de785a4814dc89d512f = private unnamed_addr constant <{ [79 x i8] }> <{ [79 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/core/src/str/pattern.rs" }>, align 1
@alloc_3c6ac0fe3dd6734d2c8240f89aa476d6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1b0254a3d4d07de785a4814dc89d512f, [16 x i8] c"O\00\00\00\00\00\00\00\D3\06\00\00\17\00\00\00" }>, align 8
@alloc_fdd0e0624533660c537b92012853bf17 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1b0254a3d4d07de785a4814dc89d512f, [16 x i8] c"O\00\00\00\00\00\00\00\ED\06\00\00,\00\00\00" }>, align 8
@alloc_3f514259b7ac91311602ece356074d5c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1b0254a3d4d07de785a4814dc89d512f, [16 x i8] c"O\00\00\00\00\00\00\00'\07\00\00\18\00\00\00" }>, align 8
@alloc_bbfb1b4c5e9ec71166cc885cd62b50a8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1b0254a3d4d07de785a4814dc89d512f, [16 x i8] c"O\00\00\00\00\00\00\00$\07\00\00\0D\00\00\00" }>, align 8
@alloc_23feb004cdb0c8c8b491a13830156679 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1b0254a3d4d07de785a4814dc89d512f, [16 x i8] c"O\00\00\00\00\00\00\00\F0\06\00\00!\00\00\00" }>, align 8
@alloc_d0b5540d38aa67683bd942cb6db4a43b = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"window size must be non-zero" }>, align 1
@alloc_6b2fe0d37a3e165ae1d6770c41c53574 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1b0254a3d4d07de785a4814dc89d512f, [16 x i8] c"O\00\00\00\00\00\00\00\E9\06\00\00\1E\00\00\00" }>, align 8
@alloc_8821998f047ca62cad40e6bc4e4d87c4 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\01" }>, align 1
@alloc_4c5c515d410238309323d0807579fcf6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1b0254a3d4d07de785a4814dc89d512f, [16 x i8] c"O\00\00\00\00\00\00\00\DE\06\00\00I\00\00\00" }>, align 8
@alloc_431a25c37b04d3a86cc1e8847750a060 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1b0254a3d4d07de785a4814dc89d512f, [16 x i8] c"O\00\00\00\00\00\00\00\B7\05\00\00\14\00\00\00" }>, align 8
@alloc_1d819d3ea5ccb7e4567b456d9e9d2d76 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1b0254a3d4d07de785a4814dc89d512f, [16 x i8] c"O\00\00\00\00\00\00\00\B7\05\00\00!\00\00\00" }>, align 8
@alloc_346e11278cee0995e897cbfcb1eebf7f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1b0254a3d4d07de785a4814dc89d512f, [16 x i8] c"O\00\00\00\00\00\00\00\AB\05\00\00\14\00\00\00" }>, align 8
@alloc_2497922004129e7ba28f93adc78f2331 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1b0254a3d4d07de785a4814dc89d512f, [16 x i8] c"O\00\00\00\00\00\00\00\AB\05\00\00!\00\00\00" }>, align 8
@alloc_b424893d6bb704b6d451a9d0687c3d41 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/core/src/char/methods.rs" }>, align 1
@alloc_7a7f897cbce61fe5aefd1aacce65247e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b424893d6bb704b6d451a9d0687c3d41, [16 x i8] c"P\00\00\00\00\00\00\00\05\07\00\00\0D\00\00\00" }>, align 8
@alloc_6b031f9bca8204235732c7c365d04a1d = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"encode_utf8: need " }>, align 1
@alloc_28d13efb0f9a95ccb5d02ec33dd195cf = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c" bytes to encode U+" }>, align 1
@alloc_0d928972d2befd736e581c7fcc5a2f9a = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c", but the buffer has " }>, align 1
@alloc_d51214f097f67314513b76e97e13aa6b = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_6b031f9bca8204235732c7c365d04a1d, [8 x i8] c"\12\00\00\00\00\00\00\00", ptr @alloc_28d13efb0f9a95ccb5d02ec33dd195cf, [8 x i8] c"\13\00\00\00\00\00\00\00", ptr @alloc_0d928972d2befd736e581c7fcc5a2f9a, [8 x i8] c"\15\00\00\00\00\00\00\00" }>, align 8
@alloc_9cd042eb6cb0d992fdeb8ae2db92c748 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b424893d6bb704b6d451a9d0687c3d41, [16 x i8] c"P\00\00\00\00\00\00\00\FE\06\00\00\0E\00\00\00" }>, align 8
@4 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }>, align 8
@alloc_af624c2b066c7078610219577ff0562d = private unnamed_addr constant <{ [90 x i8] }> <{ [90 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/core/src/iter/traits/exact_size.rs" }>, align 1
@alloc_84d3063f56750eac8df834d2832862a3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_af624c2b066c7078610219577ff0562d, [16 x i8] c"Z\00\00\00\00\00\00\00z\00\00\00\09\00\00\00" }>, align 8
@alloc_4aead6e2018a46d0df208d5729447de7 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"assertion failed: step != 0" }>, align 1
@alloc_e87194fea27ecc24370873e5a0a182f2 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d389186f318fb2e98fa1f460e50b6bb7, [16 x i8] c"Y\00\00\00\00\00\00\00!\00\00\00\09\00\00\00" }>, align 8
@alloc_4713d75e44433589dc609fdbfa49699b = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/core/src/alloc/layout.rs" }>, align 1
@alloc_37f08cc86d215bcabda8bef18acdfc7b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_4713d75e44433589dc609fdbfa49699b, [16 x i8] c"P\00\00\00\00\00\00\00\C1\01\00\00)\00\00\00" }>, align 8
@alloc_6dcb7de3ea3172f1492a2498f404d352 = private unnamed_addr constant <{ [77 x i8] }> <{ [77 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/core/src/slice/mod.rs" }>, align 1
@alloc_18fdfadcbcf6e2d76e399d12cf4a970b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_6dcb7de3ea3172f1492a2498f404d352, [16 x i8] c"M\00\00\00\00\00\00\00\EF\09\00\00+\00\00\00" }>, align 8
@alloc_d1084648e479974e70c9329824bf76f9 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"mid > len" }>, align 1
@alloc_2b3e40161faa82f936e1f97ea2aea002 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_d1084648e479974e70c9329824bf76f9, [8 x i8] c"\09\00\00\00\00\00\00\00" }>, align 8
@alloc_0836c4ff1e66de805ca08181e7554aa0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_6dcb7de3ea3172f1492a2498f404d352, [16 x i8] c"M\00\00\00\00\00\00\00\0D\0A\00\00\22\00\00\00" }>, align 8
@alloc_bd805024091ca8424320dc57c3ae5ba9 = private unnamed_addr constant <{ [80 x i8] }> <{ [80 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/core/src/slice/memchr.rs" }>, align 1
@alloc_fd72864725e1c47897c83be58a9099d6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_bd805024091ca8424320dc57c3ae5ba9, [16 x i8] c"P\00\00\00\00\00\00\00+\00\00\00\0C\00\00\00" }>, align 8
@vtable.7 = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr52drop_in_place$LT$std..thread..local..AccessError$GT$17h36635fe143a81cadE", [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", ptr @"_ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdebbe333f47105ecE" }>, align 8
@vtable.8 = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17hd922402f69fea2a7E", [16 x i8] c"\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00", ptr @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h1239501818f84375E" }>, align 8
@alloc_00ae4b301f7fab8ac9617c03fcbd7274 = private unnamed_addr constant <{ [43 x i8] }> <{ [43 x i8] c"called `Result::unwrap()` on an `Err` value" }>, align 1
@vtable.9 = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h7140e22ead202653E", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h173189172731b276E" }>, align 8
@vtable.a = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17h425befde36ad8c1cE", [16 x i8] c"(\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN65_$LT$alloc..string..FromUtf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h759536fc0ae27503E" }>, align 8
@_ZN4core7unicode12unicode_data11white_space14WHITESPACE_MAP17h111833e126630f52E = external global [256 x i8]
@alloc_442873cd510b2fb373ddd80330138317 = private unnamed_addr constant <{ [88 x i8] }> <{ [88 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/core/src/unicode/unicode_data.rs" }>, align 1
@alloc_4ec9a0893d6c40a3f2ed6f3acf3f1bc5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_442873cd510b2fb373ddd80330138317, [16 x i8] c"X\00\00\00\00\00\00\00<\02\00\00\12\00\00\00" }>, align 8
@alloc_87b8c6019d0c28cd94a251b6c9615d90 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_442873cd510b2fb373ddd80330138317, [16 x i8] c"X\00\00\00\00\00\00\00>\02\00\00\13\00\00\00" }>, align 8
@vtable.b = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr58drop_in_place$LT$$RF$core..option..Option$LT$usize$GT$$GT$17hdb13d6f7f9ef00dfE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h55ba9202ec0129beE" }>, align 8
@alloc_99ac8a81a24cac863217ce4a5cbfabea = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"Error" }>, align 1
@alloc_2178ef8f2220ed0485928da1fdc59a2b = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1b0254a3d4d07de785a4814dc89d512f, [16 x i8] c"O\00\00\00\00\00\00\00\C4\03\00\00:\00\00\00" }>, align 8
@alloc_348aae654e64257dd9d050931fa8ebf4 = private unnamed_addr constant <{ [95 x i8] }> <{ [95 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/alloc/src/collections/btree/navigate.rs" }>, align 1
@alloc_462d65656ff0231537c806caec94eab7 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_348aae654e64257dd9d050931fa8ebf4, [16 x i8] c"_\00\00\00\00\00\00\00Y\02\00\000\00\00\00" }>, align 8
@alloc_ac76f5382bcfae58ca8f35f08d974795 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_348aae654e64257dd9d050931fa8ebf4, [16 x i8] c"_\00\00\00\00\00\00\00\C7\00\00\00'\00\00\00" }>, align 8
@alloc_ca673fb95acb8e58af271999e89294ae = private unnamed_addr constant <{ [53 x i8] }> <{ [53 x i8] c"attempt to join into collection with len > usize::MAX" }>, align 1
@alloc_ee4f726f49cb6fc2b42dc4c390f8e1f2 = private unnamed_addr constant <{ [72 x i8] }> <{ [72 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/alloc/src/str.rs" }>, align 1
@alloc_3068534db64c07883069a5f112d64238 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ee4f726f49cb6fc2b42dc4c390f8e1f2, [16 x i8] c"H\00\00\00\00\00\00\00\9B\00\00\00\0A\00\00\00" }>, align 8
@alloc_3a303dcbeb96808a4e23a68d0fb86be4 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_ee4f726f49cb6fc2b42dc4c390f8e1f2, [16 x i8] c"H\00\00\00\00\00\00\00\B2\00\00\00\16\00\00\00" }>, align 8
@alloc_48145efefc82c1e5f9cc3a2f6f45a332 = private unnamed_addr constant <{ [76 x i8] }> <{ [76 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/alloc/src/vec/mod.rs" }>, align 1
@alloc_6c484125f16456a018e814f86cfd3331 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_48145efefc82c1e5f9cc3a2f6f45a332, [16 x i8] c"L\00\00\00\00\00\00\00\A0\0B\00\00\0D\00\00\00" }>, align 8
@alloc_beeb34d8647ef17db11172cea855d525 = private unnamed_addr constant <{ [36 x i8] }> <{ [36 x i8] c"in_place_collectible() prevents this" }>, align 1
@alloc_6a910050c9b05c7991f9e03754df3823 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_beeb34d8647ef17db11172cea855d525, [8 x i8] c"$\00\00\00\00\00\00\00" }>, align 8
@alloc_3e8b6366de49346da1c2a0608e3020d0 = private unnamed_addr constant <{ [89 x i8] }> <{ [89 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/alloc/src/vec/in_place_collect.rs" }>, align 1
@alloc_814fd9ef81381c73332eaf42ec46926e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_3e8b6366de49346da1c2a0608e3020d0, [16 x i8] c"Y\00\00\00\00\00\00\00\C3\00\00\00\09\00\00\00" }>, align 8
@__rust_no_alloc_shim_is_unstable = external global i8
@5 = private unnamed_addr constant <{ [8 x i8], [8 x i8] }> <{ [8 x i8] c"\01\00\00\00\00\00\00\80", [8 x i8] undef }>, align 8
@alloc_8e685ef482aec04a2d7a8ed5ef1228a3 = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"Utf8Error" }>, align 1
@alloc_f34017a1538f19bf68b6d6294eec0bb3 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"valid_up_to" }>, align 1
@vtable.c = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr26drop_in_place$LT$usize$GT$17h9cd44d3c2a569284E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hdbeb62b21ac05a60E" }>, align 8
@alloc_91eca80c47235190e5fbed3d6d8be36c = private unnamed_addr constant <{ [9 x i8] }> <{ [9 x i8] c"error_len" }>, align 1
@vtable.d = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr55drop_in_place$LT$$RF$core..option..Option$LT$u8$GT$$GT$17h62bb3e6ef18d6edcE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3fe4b80c8cc9c2deE" }>, align 8
@alloc_b44d52c0728a956e7d16327f52693b58 = private unnamed_addr constant <{ [13 x i8] }> <{ [13 x i8] c"FromUtf8Error" }>, align 1
@alloc_dd4ffb6a82fadbcfa53fa009063078f4 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"bytes" }>, align 1
@vtable.e = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E", [16 x i8] c"\18\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN65_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h5badfd4d654de6ceE" }>, align 8
@alloc_3f7b77ecc8a3c421d9a84c3c3ee05b1c = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"error" }>, align 1
@vtable.f = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr52drop_in_place$LT$$RF$core..str..error..Utf8Error$GT$17h32f9e45b85eeaad4E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hebb679e5959010dbE" }>, align 8
@alloc_37d2e53432a03a1f90b3e7253015eaf9 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"None" }>, align 1
@alloc_9535bf4c204f3eb9b19ec2c83e446e52 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"Some" }>, align 1
@vtable.g = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h3e0c746767d82777E", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbce462ec4ae8c672E" }>, align 8
@alloc_d885dc34a6ac7ffd29f75383ab60ea71 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1b0254a3d4d07de785a4814dc89d512f, [16 x i8] c"O\00\00\00\00\00\00\00;\04\00\00$\00\00\00" }>, align 8
@alloc_b4da369ef54df77252123b7302c79f68 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_1b0254a3d4d07de785a4814dc89d512f, [16 x i8] c"O\00\00\00\00\00\00\00\B8\01\00\007\00\00\00" }>, align 8
@vtable.h = private unnamed_addr constant <{ ptr, [16 x i8], ptr }> <{ ptr @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h13d7bc1b98b406e7E", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h106c7fd780718957E" }>, align 8
@alloc_d1d9293d059b72690e3cdecde619c8b4 = private unnamed_addr constant <{ [78 x i8] }> <{ [78 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/core/src/slice/iter.rs" }>, align 1
@alloc_5708c263f989adfc7221fdf77b018441 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d1d9293d059b72690e3cdecde619c8b4, [16 x i8] c"N\00\00\00\00\00\00\006\05\00\00#\00\00\00" }>, align 8
@alloc_0343f61185722ebfa248546bc3c57e60 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_d1d9293d059b72690e3cdecde619c8b4, [16 x i8] c"N\00\00\00\00\00\00\007\05\00\00\1D\00\00\00" }>, align 8
@6 = private unnamed_addr constant <{ [8 x i8], [8 x i8] }> <{ [8 x i8] c"\01\00\00\00\00\00\00\00", [8 x i8] undef }>, align 8
@alloc_aa3bb9ab3fc43e2b5f45552f6b007feb = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"/rust/deps/hashbrown-0.14.3/src/raw/mod.rs" }>, align 1
@alloc_7fdd578fc20d48c7b024df126e168bd1 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_aa3bb9ab3fc43e2b5f45552f6b007feb, [16 x i8] c"*\00\00\00\00\00\00\00x\07\00\00'\00\00\00" }>, align 8
@alloc_f920c44e117e8824edd9d43218800b5b = private unnamed_addr constant <{ [75 x i8] }> <{ [75 x i8] c"/rustc/aedd173a2c086e558c2b66d3743b344f977621a7/library/core/src/num/mod.rs" }>, align 1
@alloc_48cc1937a43f011ed300e26a9f1ec808 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_f920c44e117e8824edd9d43218800b5b, [16 x i8] c"K\00\00\00\00\00\00\00\01\05\00\00\05\00\00\00" }>, align 8
@str.i = internal unnamed_addr constant [28 x i8] c"attempt to add with overflow"
@vtable.j = private unnamed_addr constant <{ ptr, [16 x i8], ptr, ptr, ptr }> <{ ptr @"_ZN4core3ptr357drop_in_place$LT$hashbrown..raw..RawTable$LT$$LP$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$RP$$GT$..reserve_rehash$LT$hashbrown..map..make_hasher$LT$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$C$std..hash..random..RandomState$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h02b01634df7305afE", [16 x i8] c"\08\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h75d35925ebfab28dE", ptr @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash28_$u7b$$u7b$closure$u7d$$u7d$17h8d8ec22d2225dab1E", ptr @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash28_$u7b$$u7b$closure$u7d$$u7d$17h8d8ec22d2225dab1E" }>, align 8
@vtable.k = private unnamed_addr constant <{ ptr, [16 x i8], ptr, ptr }> <{ ptr @"_ZN4core3ptr534drop_in_place$LT$hashbrown..raw..RawTable$LT$$LP$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$RP$$GT$..find_or_find_insert_slot$LT$hashbrown..map..equivalent_key$LT$alloc..string..String$C$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$hashbrown..map..make_hasher$LT$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$C$std..hash..random..RandomState$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hc05e02647ecaa077E", [16 x i8] c"\10\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00", ptr @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hd2b37632d8fd9942E", ptr @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$24find_or_find_insert_slot28_$u7b$$u7b$closure$u7d$$u7d$17h2ffe10efd3d30c46E" }>, align 8
@alloc_0242e8ee118de705af76c627590b82cc = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c" " }>, align 1
@alloc_f68a4a9c2df0c6c5745df7fbc7ac7a6b = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_513570631223a12912d85da2bec3b15a, [8 x i8] zeroinitializer, ptr @alloc_0242e8ee118de705af76c627590b82cc, [8 x i8] c"\01\00\00\00\00\00\00\00", ptr @alloc_0242e8ee118de705af76c627590b82cc, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_219cd7325be98984893e9f7eb51114d4 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"=" }>, align 1
@alloc_587d33f3f14f886a08b060eeff3ed426 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_513570631223a12912d85da2bec3b15a, [8 x i8] zeroinitializer, ptr @alloc_219cd7325be98984893e9f7eb51114d4, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_89639d919492b3bd8f252399df60f784 = private unnamed_addr constant <{ [16 x i8] }> <{ [16 x i8] c"Aborted because " }>, align 1
@alloc_614cc06b92dda57fa14792b9f028ff02 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c" is set" }>, align 1
@alloc_e5f6adb735c211f6f016cdac87baac54 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_89639d919492b3bd8f252399df60f784, [8 x i8] c"\10\00\00\00\00\00\00\00", ptr @alloc_614cc06b92dda57fa14792b9f028ff02, [8 x i8] c"\07\00\00\00\00\00\00\00" }>, align 8
@alloc_dfabbe2c14568b3a30c863ae54b1c4a5 = private unnamed_addr constant <{ [272 x i8] }> <{ [272 x i8] c"pkg-config has not been configured to support cross-compilation.\0A\0AInstall a sysroot for the target platform and configure it via\0APKG_CONFIG_SYSROOT_DIR and PKG_CONFIG_PATH, or install a\0Across-compiling wrapper for pkg-config and set it via\0APKG_CONFIG environment variable." }>, align 1
@alloc_9a2a3c3036bdc83c38b9c860d16ef631 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"CARGO_PKG_NAME" }>, align 1
@alloc_b15bf7fff39080371cc0f373d88246f4 = private unnamed_addr constant <{ [96 x i8] }> <{ [96 x i8] c"/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs" }>, align 1
@alloc_8d138a45dcefad12d3052b1cd56e93a6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\1F\01\00\00=\00\00\00" }>, align 8
@alloc_25de438c3c41061b66c8c760d5e6c336 = private unnamed_addr constant <{ [143 x i8] }> <{ [143 x i8] c"Try `apt install pkg-config`, or `yum install pkg-config`,\0Aor `pkg install pkg-config`, or `apk add pkgconfig` depending on your distribution.\0A" }>, align 1
@alloc_fbd1237be5f227ea824c9d4f4d5a8fb9 = private unnamed_addr constant <{ [52 x i8] }> <{ [52 x i8] c"Try `brew install pkg-config` if you have Homebrew.\0A" }>, align 1
@alloc_30684727a4c330aa6eaaa770981d01de = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"Could not run `" }>, align 1
@alloc_9d166f9e4ecbe887c6e550653c4a78d3 = private unnamed_addr constant <{ [113 x i8] }> <{ [113 x i8] c"`\0AThe pkg-config command could not be found.\0A\0AMost likely, you need to install a pkg-config package for your OS.\0A" }>, align 1
@alloc_c047512d5ba7fde0cd765a95e92ef8f1 = private unnamed_addr constant <{ [232 x i8] }> <{ [232 x i8] c"\0AIf you've already installed it, ensure the pkg-config command is one of the\0Adirectories in the PATH environment variable.\0A\0AIf you did not expect this build to link to a pre-installed system library,\0Athen check documentation of the " }>, align 1
@alloc_540100c6194baa3bf0bf7bfee005fcdd = private unnamed_addr constant <{ [115 x i8] }> <{ [115 x i8] c" crate for an option to\0Abuild the library from source, or disable features or dependencies\0Athat require pkg-config." }>, align 1
@alloc_c59376b0255aa905f5d4c83b016652c8 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_30684727a4c330aa6eaaa770981d01de, [8 x i8] c"\0F\00\00\00\00\00\00\00", ptr @alloc_9d166f9e4ecbe887c6e550653c4a78d3, [8 x i8] c"q\00\00\00\00\00\00\00", ptr @alloc_c047512d5ba7fde0cd765a95e92ef8f1, [8 x i8] c"\E8\00\00\00\00\00\00\00", ptr @alloc_540100c6194baa3bf0bf7bfee005fcdd, [8 x i8] c"s\00\00\00\00\00\00\00" }>, align 8
@alloc_6b08c92fd983f0354a0777cc7312fda1 = private unnamed_addr constant <{ [23 x i8] }> <{ [23 x i8] c"Failed to run command `" }>, align 1
@alloc_15af1fc7348706064954c555344a9757 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"`, because: " }>, align 1
@alloc_d55d20b8d7b931c47068ebb5fcd58424 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_6b08c92fd983f0354a0777cc7312fda1, [8 x i8] c"\17\00\00\00\00\00\00\00", ptr @alloc_15af1fc7348706064954c555344a9757, [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc_7622ca0e93da89aea742c62846d74c88 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"`" }>, align 1
@alloc_bf2e27fb1a3175c7126bc4d8e542c338 = private unnamed_addr constant <{ [29 x i8] }> <{ [29 x i8] c"` did not exit successfully: " }>, align 1
@alloc_709cc5d9a83cee975e88b29245cecbb1 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_7622ca0e93da89aea742c62846d74c88, [8 x i8] c"\01\00\00\00\00\00\00\00", ptr @alloc_bf2e27fb1a3175c7126bc4d8e542c338, [8 x i8] c"\1D\00\00\00\00\00\00\00" }>, align 8
@alloc_d26fa2939e9abf966817920a6ac74921 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\8E\01\00\00\11\00\00\00" }>, align 8
@alloc_91e9e93f67bf795c484f94a9c5b8d556 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"<NO CRATE NAME>" }>, align 1
@alloc_49a1e817e911805af64bbc7efb390101 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"\0A" }>, align 1
@alloc_905721c3cf206ce86b0d110014b92e9a = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_49a1e817e911805af64bbc7efb390101, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_e05a1fa6d26741c908924047e8e65988 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"pkg-config " }>, align 1
@alloc_3848cd39ae0b8840246e3e96a3c59dae = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_e05a1fa6d26741c908924047e8e65988, [8 x i8] c"\0B\00\00\00\00\00\00\00", ptr @alloc_49a1e817e911805af64bbc7efb390101, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_304b3db965ef4291853f9435575a9710 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"was terminated by signal" }>, align 1
@alloc_6dc2bb94069978dd56a981213da11e69 = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"exited with status code " }>, align 1
@alloc_c731d085d44f44d0d28b5ac209fc3783 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_6dc2bb94069978dd56a981213da11e69, [8 x i8] c"\18\00\00\00\00\00\00\00" }>, align 8
@alloc_497bf069984d9b51728086bf7474a8fe = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"> " }>, align 1
@alloc_3f62f09340ec4217b72fe8840b861b6c = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"\0A\0A" }>, align 1
@alloc_6855a0a42a91e42f32127a171ff35065 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_497bf069984d9b51728086bf7474a8fe, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc_3f62f09340ec4217b72fe8840b861b6c, [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc_6aaed7f7cede53e09e6b12234b7c67e5 = private unnamed_addr constant <{ [20 x i8] }> <{ [20 x i8] c"The system library `" }>, align 1
@alloc_7dd635846a0afc0bde025e6df2b2ce96 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"` required by crate `" }>, align 1
@alloc_1ef83a5dfc0f3c5629c2d89471fe5c4f = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"` was not found.\0A" }>, align 1
@alloc_b57816e70a9e5be5212b772e7a85ff36 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_6aaed7f7cede53e09e6b12234b7c67e5, [8 x i8] c"\14\00\00\00\00\00\00\00", ptr @alloc_7dd635846a0afc0bde025e6df2b2ce96, [8 x i8] c"\15\00\00\00\00\00\00\00", ptr @alloc_1ef83a5dfc0f3c5629c2d89471fe5c4f, [8 x i8] c"\11\00\00\00\00\00\00\00" }>, align 8
@alloc_694f64614b6f74d3d5f78cd2a2020a5c = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"The file `" }>, align 1
@alloc_ee07d9906803f4ca389f12754ccf50bf = private unnamed_addr constant <{ [107 x i8] }> <{ [107 x i8] c".pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.\0A" }>, align 1
@alloc_b77bcb96968b65b4c1b699567c0c274c = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_694f64614b6f74d3d5f78cd2a2020a5c, [8 x i8] c"\0A\00\00\00\00\00\00\00", ptr @alloc_ee07d9906803f4ca389f12754ccf50bf, [8 x i8] c"k\00\00\00\00\00\00\00" }>, align 8
@alloc_55cf2f91542826791c64c291a3d46481 = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"PKG_CONFIG_PATH" }>, align 1
@alloc_25dd1a64598d6f21ba2c87890f82d86f = private unnamed_addr constant <{ [26 x i8] }> <{ [26 x i8] c"PKG_CONFIG_PATH_FOR_TARGET" }>, align 1
@alloc_fabe55e0469c44ba5a4b1c0f5cf69750 = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c" contains the following:\0A" }>, align 1
@alloc_e30b1b2d049cf9cfbe50a3a3a345a715 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_513570631223a12912d85da2bec3b15a, [8 x i8] zeroinitializer, ptr @alloc_fabe55e0469c44ba5a4b1c0f5cf69750, [8 x i8] c"\19\00\00\00\00\00\00\00", ptr @alloc_49a1e817e911805af64bbc7efb390101, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_ffc017a50cd4a720771808fbf0e0f2ba = private unnamed_addr constant <{ [42 x i8] }> <{ [42 x i8] c"you may need to install a package such as " }>, align 1
@alloc_94b00be069aafad82a2c6df764237b82 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c", " }>, align 1
@alloc_6810cf2db8a5d9129a713b255b8895e8 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"-dev or " }>, align 1
@alloc_c181d2f9ac3ea5b848bd9b50a8607f7c = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"-devel." }>, align 1
@alloc_830e7cf66b552282a94e5bcf556207d0 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_ffc017a50cd4a720771808fbf0e0f2ba, [8 x i8] c"*\00\00\00\00\00\00\00", ptr @alloc_94b00be069aafad82a2c6df764237b82, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc_6810cf2db8a5d9129a713b255b8895e8, [8 x i8] c"\08\00\00\00\00\00\00\00", ptr @alloc_c181d2f9ac3ea5b848bd9b50a8607f7c, [8 x i8] c"\07\00\00\00\00\00\00\00" }>, align 8
@alloc_72512ba49eb471d988ad8f9b8b1b017e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00n\01\00\00\19\00\00\00" }>, align 8
@alloc_4e0066dc19d6e0fea1d6971559fc0201 = private unnamed_addr constant <{ [53 x i8] }> <{ [53 x i8] c"The PKG_CONFIG_PATH environment variable is not set.\0A" }>, align 1
@alloc_d193c765db64f33913afdf66063ac55a = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_4e0066dc19d6e0fea1d6971559fc0201, [8 x i8] c"5\00\00\00\00\00\00\00" }>, align 8
@alloc_c587517f3222b76951613293637c0d7f = private unnamed_addr constant <{ [92 x i8] }> <{ [92 x i8] c"if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `" }>, align 1
@alloc_1f20d5aadecfb9cf81de8b081dc33f12 = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c".pc`." }>, align 1
@alloc_7d4f8d83a96fef8b4fceacece60ddfaf = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_c587517f3222b76951613293637c0d7f, [8 x i8] c"\\\00\00\00\00\00\00\00", ptr @alloc_1f20d5aadecfb9cf81de8b081dc33f12, [8 x i8] c"\05\00\00\00\00\00\00\00" }>, align 8
@alloc_0518f7601fc58d2317c059bf888f8413 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"\0AHINT: " }>, align 1
@alloc_d2b73b1aab45ebe53c8c0665713826d1 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_0518f7601fc58d2317c059bf888f8413, [8 x i8] c"\07\00\00\00\00\00\00\00", ptr @alloc_49a1e817e911805af64bbc7efb390101, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_ffcd79d554342f1f890177bcf6bad2c5 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\85\01\00\00\15\00\00\00" }>, align 8
@alloc_4c2ffd47ac848e06598c07f8df7715cc = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00|\01\00\00\19\00\00\00" }>, align 8
@alloc_27be8f55f41c13bd3ba1cf3549dc9067 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00W\01\00\00\11\00\00\00" }>, align 8
@alloc_4a794ff4effbd30045b4cda2ff267b2c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00R\01\00\00\11\00\00\00" }>, align 8
@alloc_5c59bfb329635a6484ad12df89274e4a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00O\01\00\00\11\00\00\00" }>, align 8
@alloc_b948f7a262558cc20302b260c78948c8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00E\01\00\00\11\00\00\00" }>, align 8
@alloc_18313e0d453b70ca7de85a55710006f8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00B\01\00\00\11\00\00\00" }>, align 8
@alloc_476509aa7047bd805d630c6546685797 = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"explicit panic" }>, align 1
@alloc_9718cd0da82f32f7c7f9e70aaa6ed429 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\95\01\00\00'\00\00\00" }>, align 8
@alloc_8b0439723123a1fd4ed78ad82942ef71 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"sys" }>, align 1
@alloc_8888a9eb9d8e30a67e3860872f0c8105 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"\0A--- stdout\0A" }>, align 1
@alloc_d6c1f5427bb6545f0734fc6b239ad755 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_8888a9eb9d8e30a67e3860872f0c8105, [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc_a76331d6f3e048fc7d1ab6430136d42f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\9D\01\00\00\09\00\00\00" }>, align 8
@alloc_f04fd73196dbe84d48d1c001f59814e9 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"\0A--- stderr\0A" }>, align 1
@alloc_031dc9be9fc4a38483003c8904c69bcf = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_f04fd73196dbe84d48d1c001f59814e9, [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc_c09fb94d8da81b8b258c96da403dddec = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\A1\01\00\00\09\00\00\00" }>, align 8
@alloc_374b0a2ded8a6e32700138d050fa60e5 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"--variable=" }>, align 1
@alloc_35568b4874ea9d238ef0d13426be14d7 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_374b0a2ded8a6e32700138d050fa60e5, [8 x i8] c"\0B\00\00\00\00\00\00\00" }>, align 8
@alloc_387cf9ff9746b3033ca865239c3d2dcb = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\C2\01\00\00\1D\00\00\00" }>, align 8
@alloc_a4b575582fbdfd460b5dd88d4129c946 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\C1\01\00\00\0F\00\00\00" }>, align 8
@alloc_0969e4c9d177a90146ce917de41a1d7c = private unnamed_addr constant <{ [14 x i8] }> <{ [14 x i8] c"_NO_PKG_CONFIG" }>, align 1
@alloc_13ac432f0500ee38af6b23f90545b61b = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_513570631223a12912d85da2bec3b15a, [8 x i8] zeroinitializer, ptr @alloc_0969e4c9d177a90146ce917de41a1d7c, [8 x i8] c"\0E\00\00\00\00\00\00\00" }>, align 8
@alloc_a3b2c46af187110e6545ea8589aa11e5 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"--libs" }>, align 1
@alloc_42349acaecafec9442038f0d3fc0d253 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"--cflags" }>, align 1
@alloc_facda7f113218578214b2b4b02b5f5be = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_a3b2c46af187110e6545ea8589aa11e5, [8 x i8] c"\06\00\00\00\00\00\00\00", ptr @alloc_42349acaecafec9442038f0d3fc0d253, [8 x i8] c"\08\00\00\00\00\00\00\00" }>, align 8
@alloc_0bfad6e13f2b28c744ecc0c8275cd141 = private unnamed_addr constant <{ [12 x i8] }> <{ [12 x i8] c"--modversion" }>, align 1
@alloc_152227176036804d579f88666f0bef5c = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_0bfad6e13f2b28c744ecc0c8275cd141, [8 x i8] c"\0C\00\00\00\00\00\00\00" }>, align 8
@alloc_4e1e90df7618063ef44bc71bce577bdd = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00H\02\00\00:\00\00\00" }>, align 8
@alloc_35a233be016750a26e3fa727b62e7d50 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00G\02\00\00\16\00\00\00" }>, align 8
@alloc_5648e1b2f49cac579e89e1967af98f74 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00;\02\00\00\16\00\00\00" }>, align 8
@alloc_dcbc225a8ec7dbfaaef714ff8a7176fb = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"TARGET" }>, align 1
@alloc_365e0f4ac7a4ea86a3f1f77427fa7258 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"HOST" }>, align 1
@alloc_74426e6b24e30e7484a3e5cf9cf6ecb3 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"PKG_CONFIG_ALLOW_CROSS" }>, align 1
@alloc_5748da153c808379fa2fe46dcd8f2960 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"PKG_CONFIG" }>, align 1
@alloc_d28f1d088998a251cf4ef2f20418d922 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"PKG_CONFIG_SYSROOT_DIR" }>, align 1
@alloc_dda1ee2b88b89b9cdac753eef7988035 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"0" }>, align 1
@alloc_9a059e341cefa220ac9b904db867934e = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_dda1ee2b88b89b9cdac753eef7988035, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_27cca3636828088e60ce450d2eca2060 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"_" }>, align 1
@alloc_9f35f74d3d470109588de1722f391f56 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_513570631223a12912d85da2bec3b15a, [8 x i8] zeroinitializer, ptr @alloc_27cca3636828088e60ce450d2eca2060, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_1e06f868820afc57d793b8506c0b68e4 = private unnamed_addr constant <{ [58 x i8] }> <{ [58 x i8] c"HOST or TARGET environment variable is not valid unicode: " }>, align 1
@alloc_2082406b3ddc89d64258da5ecba2c2ac = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_1e06f868820afc57d793b8506c0b68e4, [8 x i8] c":\00\00\00\00\00\00\00" }>, align 8
@alloc_c456ebc06c59bc1f0834f28e0ef12fb8 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00|\02\00\00\11\00\00\00" }>, align 8
@alloc_3ed53a6122fa254259929d0020407937 = private unnamed_addr constant <{ [27 x i8] }> <{ [27 x i8] c"cargo:rerun-if-env-changed=" }>, align 1
@alloc_270cb6ab8512145ec480ae697d2c38dd = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_3ed53a6122fa254259929d0020407937, [8 x i8] c"\1B\00\00\00\00\00\00\00", ptr @alloc_49a1e817e911805af64bbc7efb390101, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_1bee8dc5f02bbf7e86567ff5e81b10d3 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\8C\02\00\00\15\00\00\00" }>, align 8
@alloc_91d49819a83f3661916a45199fd45153 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"pkgconf" }>, align 1
@alloc_b91df323eb38b849bdb0fabd0c7b0f9d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\96\02\00\00\22\00\00\00" }>, align 8
@alloc_b99730e73100e73a81f4fbfe74b3821d = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_513570631223a12912d85da2bec3b15a, [8 x i8] zeroinitializer }>, align 8
@alloc_fff2372cc172e469f328a240476556e2 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"pkg-config" }>, align 1
@alloc_62de048d6babf578afca503bb0124468 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"--static" }>, align 1
@alloc_890f1fcc5541505a6e3a5224fd1a00ec = private unnamed_addr constant <{ [17 x i8] }> <{ [17 x i8] c"PKG_CONFIG_LIBDIR" }>, align 1
@alloc_d30df8ce94e6ab3f43a58c55883a0a26 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"PKG_CONFIG_ALLOW_SYSTEM_LIBS" }>, align 1
@alloc_26f643e647dbf77f42e670b3488e8932 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"1" }>, align 1
@alloc_47a71d96e636b027e3bdf58ff73cb59b = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c"PKG_CONFIG_ALLOW_SYSTEM_CFLAGS" }>, align 1
@alloc_3d5f084549f1b6ffc93d5cdb66afa2e4 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c" >= " }>, align 1
@alloc_a23b3b72c523b0d1fa2e132f872b693b = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_513570631223a12912d85da2bec3b15a, [8 x i8] zeroinitializer, ptr @alloc_3d5f084549f1b6ffc93d5cdb66afa2e4, [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc_a1fc54a3d1c1b0e65200d44550a0c47c = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c" > " }>, align 1
@alloc_2a960342df3a47f7c6d3b1eb0df99ce6 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_513570631223a12912d85da2bec3b15a, [8 x i8] zeroinitializer, ptr @alloc_a1fc54a3d1c1b0e65200d44550a0c47c, [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc_0d8f95680cb954489259f79349b0e35b = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c" <= " }>, align 1
@alloc_429f8bc725bd8820dd34e8f9f42ffcb9 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_513570631223a12912d85da2bec3b15a, [8 x i8] zeroinitializer, ptr @alloc_0d8f95680cb954489259f79349b0e35b, [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc_485aece92251293aba303622a598e846 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c" < " }>, align 1
@alloc_03b47ee4f1c38a9883d7320b664fa408 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_513570631223a12912d85da2bec3b15a, [8 x i8] zeroinitializer, ptr @alloc_485aece92251293aba303622a598e846, [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc_387c05ca68badc14f160f5c50f18ca95 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"cargo:" }>, align 1
@alloc_b9fd85633ac503155b5c779ebd1fe115 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_387c05ca68badc14f160f5c50f18ca95, [8 x i8] c"\06\00\00\00\00\00\00\00", ptr @alloc_49a1e817e911805af64bbc7efb390101, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_af138f08541bd59b415ebd1d3d02b2f7 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"_STATIC" }>, align 1
@alloc_80f3a84adb80184039fae300fdd3be11 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_513570631223a12912d85da2bec3b15a, [8 x i8] zeroinitializer, ptr @alloc_af138f08541bd59b415ebd1d3d02b2f7, [8 x i8] c"\07\00\00\00\00\00\00\00" }>, align 8
@alloc_388d021fa4ae08597adb8029f5da493d = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"_DYNAMIC" }>, align 1
@alloc_c3502f17a169075d7f67c806e1e4ef1e = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_513570631223a12912d85da2bec3b15a, [8 x i8] zeroinitializer, ptr @alloc_388d021fa4ae08597adb8029f5da493d, [8 x i8] c"\08\00\00\00\00\00\00\00" }>, align 8
@alloc_31152d49bc0dabcd7adf0be9f2b0817d = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"PKG_CONFIG_ALL_STATIC" }>, align 1
@alloc_5fa1a3f443d0d08d209afe1c22a2805c = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"PKG_CONFIG_ALL_DYNAMIC" }>, align 1
@alloc_8e7f0612b08a29ac961b0bae1e370964 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"lib" }>, align 1
@alloc_e99d286d1113f206aa65d630ca15e87c = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"windows" }>, align 1
@alloc_f5fa10d2bd50b965d2515db045847aab = private unnamed_addr constant <{ [5 x i8] }> <{ [5 x i8] c"apple" }>, align 1
@alloc_88bf594a932c0e6546f682648b440303 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00J\03\00\00)\00\00\00" }>, align 8
@alloc_9029e3c0cf49ae16587f116a162d4bb5 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c".a" }>, align 1
@alloc_9a825e605cd51ae347d89fd829bc83f7 = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c".so" }>, align 1
@alloc_c1f78c3ed8cfd84477bdb021104f7be9 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_9029e3c0cf49ae16587f116a162d4bb5, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc_9a825e605cd51ae347d89fd829bc83f7, [8 x i8] c"\03\00\00\00\00\00\00\00" }>, align 8
@alloc_5e1a8298f73dc5d448256af7200533cf = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00D\03\00\00)\00\00\00" }>, align 8
@alloc_f8d17b0ec8d9fa84d6c463e043468711 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c".dylib" }>, align 1
@alloc_297742202d3dcedd53ae837bde93bf41 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_9029e3c0cf49ae16587f116a162d4bb5, [8 x i8] c"\02\00\00\00\00\00\00\00", ptr @alloc_9a825e605cd51ae347d89fd829bc83f7, [8 x i8] c"\03\00\00\00\00\00\00\00", ptr @alloc_f8d17b0ec8d9fa84d6c463e043468711, [8 x i8] c"\06\00\00\00\00\00\00\00" }>, align 8
@alloc_772e61a39199df4134c467e272d2cf4b = private unnamed_addr constant <{ [3 x i8] }> <{ [3 x i8] c"gnu" }>, align 1
@alloc_e9869b42f67ada4d3a241b4799ad3799 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c".dll.a" }>, align 1
@alloc_632227731f0a26974097be90d6eba60f = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c".dll" }>, align 1
@alloc_ca5ec81c00532c1ec9c9b006b0952509 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c".lib" }>, align 1
@alloc_b4be03e00c25f6aa9abb8766bfc9091e = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_e9869b42f67ada4d3a241b4799ad3799, [8 x i8] c"\06\00\00\00\00\00\00\00", ptr @alloc_632227731f0a26974097be90d6eba60f, [8 x i8] c"\04\00\00\00\00\00\00\00", ptr @alloc_ca5ec81c00532c1ec9c9b006b0952509, [8 x i8] c"\04\00\00\00\00\00\00\00", ptr @alloc_9029e3c0cf49ae16587f116a162d4bb5, [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc_c8bd45a2a4ee4ac51c67d82d66ddb8f6 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00,\03\00\00)\00\00\00" }>, align 8
@alloc_30e86650970cbd448a56c02b0013dead = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\1A\03\00\00-\00\00\00" }>, align 8
@str.l = internal unnamed_addr constant [33 x i8] c"attempt to subtract with overflow"
@alloc_19bd2662f64087c047082e76e7fabf6d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\1A\03\00\00*\00\00\00" }>, align 8
@alloc_0b31f4562230d243936ff2637ae71e88 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"msvc" }>, align 1
@alloc_8ee4b9a5c668e9b13a38c4ed8bd18d1d = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00i\03\00\00\1E\00\00\00" }>, align 8
@alloc_89a2e9da03c56a4946080cb454d07f4c = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00i\03\00\00\11\00\00\00" }>, align 8
@alloc_191ed3219a3f67a0d8867bfc131eb76e = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00d\03\00\00\15\00\00\00" }>, align 8
@alloc_3ecb1cd8c41b2e7af2011cccfe10be8a = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"/Library" }>, align 1
@alloc_5ff374f76ac71dc3f031966d57f5c0d5 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"/System" }>, align 1
@alloc_2f0371e1b3bd98270528c81780468e69 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00[\03\00\00\0D\00\00\00" }>, align 8
@alloc_65c8cf3ba2361b1f8b363adfcdbf2b17 = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"-framework" }>, align 1
@alloc_c1630faa47c01a5de646890175d30173 = private unnamed_addr constant <{ [8 x i8] }> <{ [8 x i8] c"-isystem" }>, align 1
@alloc_459973b1dae428a740433a2200641014 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"-iquote" }>, align 1
@alloc_daccd6c8bcb993c55816cadd8230919b = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"-idirafter" }>, align 1
@alloc_150ea2967dc4de3d418c188ed8a2314e = private unnamed_addr constant <{ [10 x i8] }> <{ [10 x i8] c"-undefined" }>, align 1
@alloc_4b12ca9bd0a53281bb7e12838400b144 = private unnamed_addr constant <{ [11 x i8] }> <{ [11 x i8] c"--undefined" }>, align 1
@alloc_afc5c65de10eed0cc378241f508106ff = private unnamed_addr constant <{ [24 x i8] }> <{ [24 x i8] c"cargo:warning=File path " }>, align 1
@alloc_8e3497345ad56b3f20ebfba65fb65102 = private unnamed_addr constant <{ [30 x i8] }> <{ [30 x i8] c" found in pkg-config file for " }>, align 1
@alloc_7ab9d0e71cf23c80117f41a3f3b573c4 = private unnamed_addr constant <{ [73 x i8] }> <{ [73 x i8] c", but could not extract library base name to pass to linker command line\0A" }>, align 1
@alloc_ee847d53142e0005da73ea8745649cca = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_afc5c65de10eed0cc378241f508106ff, [8 x i8] c"\18\00\00\00\00\00\00\00", ptr @alloc_8e3497345ad56b3f20ebfba65fb65102, [8 x i8] c"\1E\00\00\00\00\00\00\00", ptr @alloc_7ab9d0e71cf23c80117f41a3f3b573c4, [8 x i8] c"I\00\00\00\00\00\00\00" }>, align 8
@alloc_34a40dc37133bd83362a7225f6ecbd41 = private unnamed_addr constant <{ [18 x i8] }> <{ [18 x i8] c"rustc-link-search=" }>, align 1
@alloc_5562b61e41f982f38f0e134e7302ef66 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_34a40dc37133bd83362a7225f6ecbd41, [8 x i8] c"\12\00\00\00\00\00\00\00" }>, align 8
@alloc_bf2e2de19bcd6b65a34febf09475d54e = private unnamed_addr constant <{ [15 x i8] }> <{ [15 x i8] c"rustc-link-lib=" }>, align 1
@alloc_69525d560fd19b091bde0739dc06fbf9 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_bf2e2de19bcd6b65a34febf09475d54e, [8 x i8] c"\0F\00\00\00\00\00\00\00" }>, align 8
@alloc_a2d36fdc6cfe71a38b646128eb5b3661 = private unnamed_addr constant <{ [19 x i8] }> <{ [19 x i8] c"rustc-link-arg=-Wl," }>, align 1
@alloc_41a776d8d06dc2b9b0480e88fa257ffe = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"," }>, align 1
@alloc_d0b76532827c6ec023a612aa13ae3b09 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_a2d36fdc6cfe71a38b646128eb5b3661, [8 x i8] c"\13\00\00\00\00\00\00\00", ptr @alloc_41a776d8d06dc2b9b0480e88fa257ffe, [8 x i8] c"\01\00\00\00\00\00\00\00" }>, align 8
@alloc_908e1f6a5ded72ea7bc1d78fb174fc9f = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c"rustc-link-lib=framework=" }>, align 1
@alloc_57328cd0e08492da65005665ccae6f31 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_908e1f6a5ded72ea7bc1d78fb174fc9f, [8 x i8] c"\19\00\00\00\00\00\00\00" }>, align 8
@alloc_1f053a89755d01077bd7134e1ff11664 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\EB\03\00\00!\00\00\00" }>, align 8
@alloc_640948477594b724035d002f9c731505 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_a2d36fdc6cfe71a38b646128eb5b3661, [8 x i8] c"\13\00\00\00\00\00\00\00" }>, align 8
@alloc_07b7b45c4fa6ac028ad5e9bd38ae9290 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_65c8cf3ba2361b1f8b363adfcdbf2b17, [8 x i8] c"\0A\00\00\00\00\00\00\00" }>, align 8
@alloc_d10f0d5043fbc94d70d259f025f16b8e = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"-L" }>, align 1
@alloc_3a992cc6e4d01a5b6d488fec7638d7b0 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"-F" }>, align 1
@alloc_5fd2da0302ebe7328dc023f4447a3a41 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"-I" }>, align 1
@alloc_665d7d49e00c782fd25e4fa7099ae8ab = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"-l" }>, align 1
@alloc_80cfbceebfc90e4304683418bf90bb9c = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"-D" }>, align 1
@alloc_d793d56e905810586c9ec80591506f51 = private unnamed_addr constant <{ [2 x i8] }> <{ [2 x i8] c"-u" }>, align 1
@alloc_f8678536f862f5fb766c1e1605f5cd60 = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"rustc-link-arg=-Wl,-u," }>, align 1
@alloc_dd7944267044200cc6adbecbe4e74159 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_f8678536f862f5fb766c1e1605f5cd60, [8 x i8] c"\16\00\00\00\00\00\00\00" }>, align 8
@alloc_9ea3925b761d43fbdd1912574ecd6a53 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\9E\03\00\00%\00\00\00" }>, align 8
@alloc_db17741ad3337aa0400b53159a3d2f13 = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"m" }>, align 1
@alloc_18f2f0d3d4f38df552db2352111ec81f = private unnamed_addr constant <{ [1 x i8] }> <{ [1 x i8] c"c" }>, align 1
@alloc_4519d6ac8420cd699a3dbb0af5e4a276 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"pthread" }>, align 1
@alloc_a161b95a513a6c8003ba17020d57fbd5 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_db17741ad3337aa0400b53159a3d2f13, [8 x i8] c"\01\00\00\00\00\00\00\00", ptr @alloc_18f2f0d3d4f38df552db2352111ec81f, [8 x i8] c"\01\00\00\00\00\00\00\00", ptr @alloc_4519d6ac8420cd699a3dbb0af5e4a276, [8 x i8] c"\07\00\00\00\00\00\00\00" }>, align 8
@alloc_55d795eb25f3f9cf1ff96772effcaa0c = private unnamed_addr constant <{ [22 x i8] }> <{ [22 x i8] c"rustc-link-lib=static=" }>, align 1
@alloc_a19fe9d5e1d0dabcb73f06808f3eea3f = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_55d795eb25f3f9cf1ff96772effcaa0c, [8 x i8] c"\16\00\00\00\00\00\00\00" }>, align 8
@alloc_c62ac773cef6dbc37a782ea6a3052381 = private unnamed_addr constant <{ [21 x i8] }> <{ [21 x i8] c"cargo:rustc-link-arg=" }>, align 1
@alloc_303033c148b649b824414b6a0c0fe0ca = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_c62ac773cef6dbc37a782ea6a3052381, [8 x i8] c"\15\00\00\00\00\00\00\00", ptr @alloc_513570631223a12912d85da2bec3b15a, [8 x i8] zeroinitializer }>, align 8
@alloc_cf9dabddbecf87ffcdabb90dcbf311f7 = private unnamed_addr constant <{ [28 x i8] }> <{ [28 x i8] c"rustc-link-search=framework=" }>, align 1
@alloc_d560a3fd033a6be62b9f63f09e47ec45 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_cf9dabddbecf87ffcdabb90dcbf311f7, [8 x i8] c"\1C\00\00\00\00\00\00\00" }>, align 8
@alloc_7b64f235d8dddb141ab7395057d600f7 = private unnamed_addr constant <{ [25 x i8] }> <{ [25 x i8] c"rustc-link-search=native=" }>, align 1
@alloc_e25ecc6b9d0f677a7d5eef36e85104dd = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_7b64f235d8dddb141ab7395057d600f7, [8 x i8] c"\19\00\00\00\00\00\00\00" }>, align 8
@alloc_d94058656367933767f61d1a71b68185 = private unnamed_addr constant <{ [7 x i8] }> <{ [7 x i8] c"SYSROOT" }>, align 1
@alloc_374754662dc32b6d89223b0ceeeb9526 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00v\03\00\00\1D\00\00\00" }>, align 8
@alloc_d1c98ea29339261184cc91f96609ac1a = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00v\03\00\00)\00\00\00" }>, align 8
@alloc_81f0eb753630c48ad89ed8c7f585a68a = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"-Wl," }>, align 1
@alloc_dd64e80d73328053fe8af6b371456931 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\AF\03\00\00\11\00\00\00" }>, align 8
@alloc_ac8645abf469c9000a6424ddcd3fb58f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\AD\03\00\00\14\00\00\00" }>, align 8
@alloc_1782ea4018ba67dd7d6d6041da7ebe49 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\02\04\00\005\00\00\00" }>, align 8
@alloc_06870606c25ed1b2d4d4c2db42aeb979 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_8e7f0612b08a29ac961b0bae1e370964, [8 x i8] c"\03\00\00\00\00\00\00\00", ptr @alloc_9029e3c0cf49ae16587f116a162d4bb5, [8 x i8] c"\02\00\00\00\00\00\00\00" }>, align 8
@alloc_f98c3024e5df2d92e7fd2ffbacbd279f = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00\10\04\00\00\19\00\00\00" }>, align 8
@alloc_95ec4aba0127b28671d5f59e26b8fdb8 = private unnamed_addr constant <{ ptr, [8 x i8], ptr, [8 x i8] }> <{ ptr @alloc_513570631223a12912d85da2bec3b15a, [8 x i8] zeroinitializer, ptr @alloc_ca5ec81c00532c1ec9c9b006b0952509, [8 x i8] c"\04\00\00\00\00\00\00\00" }>, align 8
@alloc_4864c65952b93e46575fdc7ff97234b0 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\00=\04\00\00,\00\00\00" }>, align 8
@alloc_f7ecf659acdfa1095fddcaa0bf720674 = private unnamed_addr constant <{ ptr, [16 x i8] }> <{ ptr @alloc_b15bf7fff39080371cc0f373d88246f4, [16 x i8] c"`\00\00\00\00\00\00\004\04\00\008\00\00\00" }>, align 8
@alloc_20ac66b2667cacd803188dc4f3483bb0 = private unnamed_addr constant <{ [6 x i8] }> <{ [6 x i8] c"    - " }>, align 1
@alloc_be8662a971b48efeddae33e6fec76446 = private unnamed_addr constant <{ ptr, [8 x i8] }> <{ ptr @alloc_20ac66b2667cacd803188dc4f3483bb0, [8 x i8] c"\06\00\00\00\00\00\00\00" }>, align 8
@alloc_1a88633319cb23fad7e8fd4588c36cb0 = private unnamed_addr constant <{ [4 x i8] }> <{ [4 x i8] c"/usr" }>, align 1

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h6bac7a9a37e29ed5E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %self, i64 %idx) unnamed_addr #0 {
start:
  %_4 = alloca { { ptr, i64 } }, align 8
  %_3 = getelementptr inbounds %"core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>", ptr %self, i32 0, i32 1
; call <I as core::iter::adapters::zip::SpecTrustedRandomAccess>::try_get_unchecked
  %0 = call { ptr, i64 } @"_ZN72_$LT$I$u20$as$u20$core..iter..adapters..zip..SpecTrustedRandomAccess$GT$17try_get_unchecked17hab4ae95815513184E"(ptr align 8 %self, i64 %idx)
  %_5.0 = extractvalue { ptr, i64 } %0, 0
  %_5.1 = extractvalue { ptr, i64 } %0, 1
  store ptr %_5.0, ptr %_4, align 8
  %1 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %_5.1, ptr %1, align 8
  %2 = load ptr, ptr %_4, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_4, i64 8
  %4 = load i64, ptr %3, align 8, !noundef !3
; call core::ops::function::FnMut::call_mut
  call void @_ZN4core3ops8function5FnMut8call_mut17h8f9aa82af1e27c21E(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %_3, ptr align 1 %2, i64 %4)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h2811b9ffdd2cc4a6E"(ptr %self.0, ptr %self.1, ptr align 8 %g) unnamed_addr #1 {
start:
  %_5 = alloca ptr, align 8
  store ptr %g, ptr %_5, align 8
  %0 = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h756bc30fe4fe5d0eE"(ptr %self.0, ptr %self.1, ptr align 8 %0)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h34583d1c44990ad5E"(ptr align 8 %self, ptr align 8 %g) unnamed_addr #1 {
start:
  %_5 = alloca %"{closure@core::iter::adapters::map::map_fold<&str, alloc::string::String, (), fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}, {closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>>::{closure#0}}>::{closure#0}}>::{closure#0}}", align 8
  %_4 = alloca %"alloc::vec::into_iter::IntoIter<&str>", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %self, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %g, i64 24, i1 false)
; call core::iter::traits::iterator::Iterator::fold
  call void @_ZN4core4iter6traits8iterator8Iterator4fold17h78950c0723ad1f69E(ptr align 8 %_4, ptr align 8 %_5)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h4642582ed18eb4beE"(ptr %self.0, ptr %self.1, ptr align 8 %g) unnamed_addr #1 {
start:
  %_5 = alloca %"{closure@core::iter::adapters::map::map_fold<&std::ffi::os_str::OsString, std::ffi::os_str::OsString, (), {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}, {closure@core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString, {closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}>::{closure#0}}>::{closure#0}}", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %g, i64 24, i1 false)
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h3e3133eb39dfbda7E"(ptr %self.0, ptr %self.1, ptr align 8 %_5)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h756bc30fe4fe5d0eE"(ptr %self.0, ptr %self.1, ptr align 8 %g) unnamed_addr #1 {
start:
  %_5 = alloca ptr, align 8
  store ptr %g, ptr %_5, align 8
  %0 = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
; call core::iter::traits::iterator::Iterator::fold
  call void @_ZN4core4iter6traits8iterator8Iterator4fold17ha8c904dc0075731eE(ptr %self.0, ptr %self.1, ptr align 8 %0)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9ee17655676718f4E"(ptr %self.0, ptr %self.1, ptr align 8 %g) unnamed_addr #1 {
start:
  %_5 = alloca %"{closure@core::iter::adapters::map::map_fold<&(std::ffi::os_str::OsString, std::ffi::os_str::OsString), alloc::string::String, (), {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}, {closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>>::{closure#0}}>::{closure#0}}>::{closure#0}}", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %g, i64 24, i1 false)
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h807317e3f1997786E"(ptr %self.0, ptr %self.1, ptr align 8 %_5)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hb3709301ba9826cdE"(ptr %self.0, ptr %self.1, ptr align 8 %g) unnamed_addr #1 {
start:
  %_5 = alloca %"{closure@core::iter::adapters::map::map_fold<&std::ffi::os_str::OsString, alloc::string::String, (), {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}, {closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>>::{closure#0}}>::{closure#0}}>::{closure#0}}", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %g, i64 24, i1 false)
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9b8f93cac941e4b8E"(ptr %self.0, ptr %self.1, ptr align 8 %_5)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hfec6113d7ed1e02bE"(ptr %self.0, ptr %self.1, ptr align 8 %g) unnamed_addr #1 {
start:
  %_5 = alloca %"{closure@core::iter::adapters::map::map_fold<&&str, std::ffi::os_str::OsString, (), {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}, {closure@core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString, {closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}>::{closure#0}}>::{closure#0}}", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %g, i64 24, i1 false)
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h6dca5a64fc64febcE"(ptr %self.0, ptr %self.1, ptr align 8 %_5)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h02c1656b2970e714E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_8 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_0 = alloca %"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %0 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8cba68a285d0a8e1E"(ptr align 8 %self)
  store ptr %0, ptr %self1, align 8
  %f = getelementptr inbounds i8, ptr %self, i64 16
  %1 = load ptr, ptr %self1, align 8, !noundef !3
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 0
  br i1 %4, label %bb2, label %bb4

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %start
  %x = load ptr, ptr %self1, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %x, ptr %_8, align 8
  %5 = load ptr, ptr %_8, align 8, !nonnull !3, !align !5, !noundef !3
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %6 = call { ptr, i64 } @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h325442084686e197E"(ptr align 1 %f, ptr align 8 %5)
  %_7.0 = extractvalue { ptr, i64 } %6, 0
  %_7.1 = extractvalue { ptr, i64 } %6, 1
  store ptr %_7.0, ptr %_0, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_7.1, ptr %7, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb2
  %8 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  %10 = load i64, ptr %9, align 8
  %11 = insertvalue { ptr, i64 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1
  ret { ptr, i64 } %12

bb3:                                              ; No predecessors!
  unreachable
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4d464dabc208a744E"(ptr sret(%"core::option::Option<alloc::vec::Vec<&str>>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_8 = alloca ptr, align 8
  %_7 = alloca %"alloc::vec::Vec<&str>", align 8
  %self1 = alloca ptr, align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %0 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8cba68a285d0a8e1E"(ptr align 8 %self)
  store ptr %0, ptr %self1, align 8
  %f = getelementptr inbounds i8, ptr %self, i64 16
  %1 = load ptr, ptr %self1, align 8, !noundef !3
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 0
  br i1 %4, label %bb2, label %bb4

bb2:                                              ; preds = %start
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %start
  %x = load ptr, ptr %self1, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %x, ptr %_8, align 8
  %5 = load ptr, ptr %_8, align 8, !nonnull !3, !align !5, !noundef !3
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  call void @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h70db29c21407f4b7E"(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_7, ptr align 1 %f, ptr align 8 %5)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_7, i64 24, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb4, %bb2
  ret void

bb3:                                              ; No predecessors!
  unreachable
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h84d118b3160fa533E"(ptr sret(%"core::option::Option<alloc::string::String>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_8 = alloca { { ptr, i64 } }, align 8
  %_7 = alloca %"alloc::string::String", align 8
  %self1 = alloca %"core::option::Option<&str>", align 8
; call <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %0 = call { ptr, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0568ea1bfd125502E"(ptr align 8 %self)
  %1 = extractvalue { ptr, i64 } %0, 0
  %2 = extractvalue { ptr, i64 } %0, 1
  store ptr %1, ptr %self1, align 8
  %3 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %2, ptr %3, align 8
  %f = getelementptr inbounds %"core::iter::adapters::map::Map<core::str::iter::Split<'_, char>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:372:38: 372:44}>", ptr %self, i32 0, i32 1
  %4 = load ptr, ptr %self1, align 8, !noundef !3
  %5 = ptrtoint ptr %4 to i64
  %6 = icmp eq i64 %5, 0
  %_5 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_5, 0
  br i1 %7, label %bb2, label %bb4

bb2:                                              ; preds = %start
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %start
  %x.0 = load ptr, ptr %self1, align 8, !nonnull !3, !align !4, !noundef !3
  %8 = getelementptr inbounds i8, ptr %self1, i64 8
  %x.1 = load i64, ptr %8, align 8, !noundef !3
  store ptr %x.0, ptr %_8, align 8
  %9 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %x.1, ptr %9, align 8
  %10 = load ptr, ptr %_8, align 8, !nonnull !3, !align !4, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_8, i64 8
  %12 = load i64, ptr %11, align 8, !noundef !3
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  call void @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h9100d43fb89cca70E"(ptr sret(%"alloc::string::String") align 8 %_7, ptr align 1 %f, ptr align 1 %10, i64 %12)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_7, i64 24, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb4, %bb2
  ret void

bb3:                                              ; No predecessors!
  unreachable
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha0bae12a5d1ec3a8E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_8 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_0 = alloca %"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %0 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9cd2dfb86b854212E"(ptr align 8 %self)
  store ptr %0, ptr %self1, align 8
  %f = getelementptr inbounds i8, ptr %self, i64 16
  %1 = load ptr, ptr %self1, align 8, !noundef !3
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 0
  br i1 %4, label %bb2, label %bb4

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %start
  %x = load ptr, ptr %self1, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %x, ptr %_8, align 8
  %5 = load ptr, ptr %_8, align 8, !nonnull !3, !align !5, !noundef !3
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %6 = call { ptr, i64 } @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h01db6871a2dd0d1bE"(ptr align 1 %f, ptr align 8 %5)
  %_7.0 = extractvalue { ptr, i64 } %6, 0
  %_7.1 = extractvalue { ptr, i64 } %6, 1
  store ptr %_7.0, ptr %_0, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_7.1, ptr %7, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb2
  %8 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  %10 = load i64, ptr %9, align 8
  %11 = insertvalue { ptr, i64 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i64 } %11, i64 %10, 1
  ret { ptr, i64 } %12

bb3:                                              ; No predecessors!
  unreachable
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hec744de263f2e8b0E"(ptr sret(%"core::option::Option<(&str, &str)>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_8 = alloca ptr, align 8
  %_7 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %self1 = alloca ptr, align 8
; call <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::next
  %0 = call align 8 ptr @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8417799fd051d235E"(ptr align 8 %self)
  store ptr %0, ptr %self1, align 8
  %f = getelementptr inbounds i8, ptr %self, i64 16
  %1 = load ptr, ptr %self1, align 8, !noundef !3
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_5 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_5, 0
  br i1 %4, label %bb2, label %bb4

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %start
  %x = load ptr, ptr %self1, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %x, ptr %_8, align 8
  %5 = load ptr, ptr %_8, align 8, !nonnull !3, !align !5, !noundef !3
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  call void @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17ha3a3870df8ff1d6cE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_7, ptr align 1 %f, ptr align 8 %5)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_7, i64 32, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb4, %bb2
  ret void

bb3:                                              ; No predecessors!
  unreachable
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf28dc2eb23ac047eE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_8 = alloca { { ptr, i64 } }, align 8
  %self1 = alloca %"core::option::Option<&str>", align 8
  %_0 = alloca %"core::option::Option<&str>", align 8
; call <core::str::iter::SplitInclusive<P> as core::iter::traits::iterator::Iterator>::next
  %0 = call { ptr, i64 } @"_ZN99_$LT$core..str..iter..SplitInclusive$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hdb16a39e8eea015bE"(ptr align 8 %self)
  %1 = extractvalue { ptr, i64 } %0, 0
  %2 = extractvalue { ptr, i64 } %0, 1
  store ptr %1, ptr %self1, align 8
  %3 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %2, ptr %3, align 8
  %f = getelementptr inbounds %"core::iter::adapters::map::Map<core::str::iter::SplitInclusive<'_, char>, core::str::LinesMap>", ptr %self, i32 0, i32 1
  %4 = load ptr, ptr %self1, align 8, !noundef !3
  %5 = ptrtoint ptr %4 to i64
  %6 = icmp eq i64 %5, 0
  %_5 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_5, 0
  br i1 %7, label %bb2, label %bb4

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %start
  %x.0 = load ptr, ptr %self1, align 8, !nonnull !3, !align !4, !noundef !3
  %8 = getelementptr inbounds i8, ptr %self1, i64 8
  %x.1 = load i64, ptr %8, align 8, !noundef !3
  store ptr %x.0, ptr %_8, align 8
  %9 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %x.1, ptr %9, align 8
  %10 = load ptr, ptr %_8, align 8, !nonnull !3, !align !4, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_8, i64 8
  %12 = load i64, ptr %11, align 8, !noundef !3
; call core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
  %13 = call { ptr, i64 } @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h269ebbe4842904aeE"(ptr align 1 %f, ptr align 1 %10, i64 %12)
  %_7.0 = extractvalue { ptr, i64 } %13, 0
  %_7.1 = extractvalue { ptr, i64 } %13, 1
  store ptr %_7.0, ptr %_0, align 8
  %14 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_7.1, ptr %14, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb2
  %15 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %16 = getelementptr inbounds i8, ptr %_0, i64 8
  %17 = load i64, ptr %16, align 8
  %18 = insertvalue { ptr, i64 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i64 } %18, i64 %17, 1
  ret { ptr, i64 } %19

bb3:                                              ; No predecessors!
  unreachable
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h18471fb3af8f3228E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hdb069d32563ecc02E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4131b44401768a3aE"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h77635ce11fcebab3E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h413554d820527bb2E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h77635ce11fcebab3E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h49fafda56b87b743E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
; call <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h49b4213afe646129E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h5046771ed6692a17E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
; call core::iter::traits::iterator::Iterator::size_hint
  call void @_ZN4core4iter6traits8iterator8Iterator9size_hint17h3b653c5f4a3b742bE(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h7b9f2f09ea692becE"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h49fafda56b87b743E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17he3b636c6b6126008E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h3a2bc17cfb1d663bE"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self)
  ret void
}

; <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17he525641c427ddb50E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hd1cd2cf0edbd16e0E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self)
  ret void
}

; <core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hc5ab5ef59ce5fba4E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_0.i = alloca i64, align 8
  %_16 = alloca { i64, i32, [1 x i32] }, align 8
  %self2 = alloca %"core::option::Option<u32>", align 4
  %self1 = alloca i32, align 4
  %_0 = alloca %"core::option::Option<(usize, char)>", align 8
; call core::str::validations::next_code_point_reverse
  %0 = call { i32, i32 } @_ZN4core3str11validations23next_code_point_reverse17hd45be90669842939E(ptr align 8 %self)
  %1 = extractvalue { i32, i32 } %0, 0
  %2 = extractvalue { i32, i32 } %0, 1
  store i32 %1, ptr %self2, align 4
  %3 = getelementptr inbounds i8, ptr %self2, i64 4
  store i32 %2, ptr %3, align 4
  %4 = load i32, ptr %self2, align 4, !range !6, !noundef !3
  %_8 = zext i32 %4 to i64
  %5 = icmp eq i64 %_8, 0
  br i1 %5, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store i32 1114112, ptr %self1, align 4
  br label %bb4

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self2, i64 4
  %x = load i32, ptr %6, align 4, !noundef !3
  store i32 %x, ptr %self1, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %f = getelementptr inbounds %"core::str::iter::CharIndices<'_>", ptr %self, i32 0, i32 1
  %7 = load i32, ptr %self1, align 4, !range !7, !noundef !3
  %8 = icmp eq i32 %7, 1114112
  %_14 = select i1 %8, i64 0, i64 1
  %9 = icmp eq i64 %_14, 0
  br i1 %9, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %10 = load i64, ptr @0, align 8
  %11 = load i32, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8, !range !7, !noundef !3
  store i64 %10, ptr %_0, align 8
  %12 = getelementptr inbounds i8, ptr %_0, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb7

bb6:                                              ; preds = %bb4
  %x3 = load i32, ptr %self1, align 4, !range !8, !noundef !3
  %_18 = load i64, ptr %f, align 8, !noundef !3
  %self1.i = getelementptr inbounds i8, ptr %self, i64 8
  %end.i = load ptr, ptr %self1.i, align 8, !nonnull !3, !noundef !3
  %subtracted.i = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %13 = ptrtoint ptr %end.i to i64
  %14 = ptrtoint ptr %subtracted.i to i64
  %15 = sub nuw i64 %13, %14
  store i64 %15, ptr %_0.i, align 8
  %16 = load i64, ptr %_0.i, align 8, !noundef !3
  %index = add i64 %_18, %16
  store i64 %index, ptr %_16, align 8
  %17 = getelementptr inbounds i8, ptr %_16, i64 8
  store i32 %x3, ptr %17, align 8
  %18 = load i64, ptr %_16, align 8, !noundef !3
  %19 = getelementptr inbounds i8, ptr %_16, i64 8
  %20 = load i32, ptr %19, align 8, !range !8, !noundef !3
  store i64 %18, ptr %_0, align 8
  %21 = getelementptr inbounds i8, ptr %_0, i64 8
  store i32 %20, ptr %21, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %22 = load i64, ptr %_0, align 8
  %23 = getelementptr inbounds i8, ptr %_0, i64 8
  %24 = load i32, ptr %23, align 8, !range !7, !noundef !3
  %25 = insertvalue { i64, i32 } poison, i64 %22, 0
  %26 = insertvalue { i64, i32 } %25, i32 %24, 1
  ret { i64, i32 } %26

bb9:                                              ; No predecessors!
  unreachable
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
; Function Attrs: nonlazybind uwtable
define { ptr, i64 } @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17hc3f410f566ec4bb9E"(ptr align 8 %self, i64 %i) unnamed_addr #1 {
start:
  %u = alloca %"core::mem::maybe_uninit::MaybeUninit<&str>", align 8
  %self1 = alloca ptr, align 8
  %_0 = alloca { ptr, i64 }, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 1
  %self2 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %src = getelementptr inbounds { ptr, i64 }, ptr %self2, i64 %i
  store ptr %src, ptr %self1, align 8
  %1 = load ptr, ptr %src, align 8, !nonnull !3, !align !4, !noundef !3
  %2 = getelementptr inbounds i8, ptr %src, i64 8
  %3 = load i64, ptr %2, align 8, !noundef !3
  store ptr %1, ptr %_0, align 8
  %4 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %3, ptr %4, align 8
  br label %bb3

bb1:                                              ; preds = %start
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h93deae2a6e800156E(ptr align 1 @str.0, i64 58) #26
  call void @llvm.memset.p0.i64(ptr align 8 %u, i8 0, i64 16, i1 false)
  %self.0 = load ptr, ptr %u, align 8
  %5 = getelementptr inbounds i8, ptr %u, i64 8
  %self.1 = load i64, ptr %5, align 8
  store ptr %self.0, ptr %_0, align 8
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %self.1, ptr %6, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %7 = load ptr, ptr %_0, align 8, !nonnull !3, !align !4, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_0, i64 8
  %9 = load i64, ptr %8, align 8, !noundef !3
  %10 = insertvalue { ptr, i64 } poison, ptr %7, 0
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1
  ret { ptr, i64 } %11
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1c76a7541460ed07E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca ptr, align 8
  %u = alloca %"core::mem::maybe_uninit::MaybeUninit<&str>", align 8
  %_27 = alloca %"core::ptr::metadata::PtrComponents<&str>", align 8
  %_26 = alloca %"core::ptr::metadata::PtrRepr<&str>", align 8
  %_18 = alloca ptr, align 8
  %_14 = alloca ptr, align 8
  %_0 = alloca %"core::option::Option<&str>", align 8
  br i1 false, label %bb1, label %bb5

bb5:                                              ; preds = %start
  %self1 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 1
  %_16 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 3
  %1 = load ptr, ptr %_16, align 8, !nonnull !3, !noundef !3
  store ptr %1, ptr %_14, align 8
  %2 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 1
  %self2 = load ptr, ptr %2, align 8, !nonnull !3, !noundef !3
  %self3 = load ptr, ptr %_14, align 8, !nonnull !3, !noundef !3
  %_11 = icmp eq ptr %self2, %self3
  br i1 %_11, label %bb6, label %bb7

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 1
  %self4 = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 3
  %_7 = load ptr, ptr %4, align 8, !noundef !3
  %_3 = icmp eq ptr %self4, %_7
  br i1 %_3, label %bb2, label %bb3

bb7:                                              ; preds = %bb5
  %5 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 1
  %old = load ptr, ptr %5, align 8, !nonnull !3, !noundef !3
  %_43 = getelementptr inbounds { ptr, i64 }, ptr %old, i64 1
  store ptr %_43, ptr %_18, align 8
  %6 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 1
  %7 = load ptr, ptr %_18, align 8, !nonnull !3, !noundef !3
  store ptr %7, ptr %6, align 8
  %_19.0 = load ptr, ptr %old, align 8, !nonnull !3, !align !4, !noundef !3
  %8 = getelementptr inbounds i8, ptr %old, i64 8
  %_19.1 = load i64, ptr %8, align 8, !noundef !3
  store ptr %_19.0, ptr %_0, align 8
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_19.1, ptr %9, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  store ptr null, ptr %_0, align 8
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  br label %bb9

bb9:                                              ; preds = %bb4, %bb8
  %10 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  %12 = load i64, ptr %11, align 8
  %13 = insertvalue { ptr, i64 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1
  ret { ptr, i64 } %14

bb3:                                              ; preds = %bb1
  %15 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 3
  %self5 = load ptr, ptr %15, align 8, !noundef !3
  %16 = getelementptr i8, ptr %self5, i64 -1
  store ptr %16, ptr %0, align 8
  %self6 = load ptr, ptr %0, align 8, !noundef !3
  store ptr %self6, ptr %_27, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_26, ptr align 8 %_27, i64 8, i1 false)
  %_8 = load ptr, ptr %_26, align 8, !noundef !3
  %17 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 3
  store ptr %_8, ptr %17, align 8
; call core::panicking::panic_nounwind
  call void @_ZN4core9panicking14panic_nounwind17h93deae2a6e800156E(ptr align 1 @str.0, i64 58) #26
  call void @llvm.memset.p0.i64(ptr align 8 %u, i8 0, i64 16, i1 false)
  %self.0 = load ptr, ptr %u, align 8
  %18 = getelementptr inbounds i8, ptr %u, i64 8
  %self.1 = load i64, ptr %18, align 8
  store ptr %self.0, ptr %_0, align 8
  %19 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %self.1, ptr %19, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  store ptr null, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  br label %bb9
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hdb069d32563ecc02E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_14 = alloca %"core::option::Option<usize>", align 8
  %exact = alloca i64, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_11 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 3
  %self1 = load ptr, ptr %_11, align 8, !nonnull !3, !noundef !3
  %0 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 1
  %subtracted = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  br i1 true, label %bb5, label %bb7

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 3
  %self2 = load ptr, ptr %1, align 8, !noundef !3
  %self3 = ptrtoint ptr %self2 to i64
  %2 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 1
  %self4 = load ptr, ptr %2, align 8, !nonnull !3, !noundef !3
  %rhs = ptrtoint ptr %self4 to i64
  %3 = sub i64 %self3, %rhs
  store i64 %3, ptr %exact, align 8
  br label %bb3

bb7:                                              ; preds = %bb5, %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_768f4da2d83915fa9ce0d03164202475) #27
  unreachable

bb5:                                              ; preds = %bb2
  br i1 true, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %4 = ptrtoint ptr %self1 to i64
  %5 = ptrtoint ptr %subtracted to i64
  %6 = sub nuw i64 %4, %5
  %7 = udiv exact i64 %6, 16
  store i64 %7, ptr %exact, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb6
  %_13 = load i64, ptr %exact, align 8, !noundef !3
  %_15 = load i64, ptr %exact, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %_15, ptr %8, align 8
  store i64 1, ptr %_14, align 8
  store i64 %_13, ptr %_0, align 8
  %9 = load i64, ptr %_14, align 8, !range !9, !noundef !3
  %10 = getelementptr inbounds i8, ptr %_14, i64 8
  %11 = load i64, ptr %10, align 8
  %12 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_0, i32 0, i32 1
  store i64 %9, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  store i64 %11, ptr %13, align 8
  ret void
}

; <alloc::vec::into_iter::IntoIter<T> as alloc::vec::in_place_collect::AsVecIntoIter>::as_into_iter
; Function Attrs: nonlazybind uwtable
define align 8 ptr @"_ZN104_$LT$alloc..vec..into_iter..IntoIter$LT$T$GT$$u20$as$u20$alloc..vec..in_place_collect..AsVecIntoIter$GT$12as_into_iter17h4cc386e3ad2de013E"(ptr align 8 %self) unnamed_addr #1 {
start:
  ret ptr %self
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h00a8837916e6f78fE"(i64 %0) unnamed_addr #0 {
start:
  %_0 = alloca %"core::ops::control_flow::ControlFlow<usize>", align 8
  %residual = alloca i64, align 8
  store i64 %0, ptr %residual, align 8
  %b = load i64, ptr %residual, align 8, !noundef !3
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %b, ptr %1, align 8
  store i64 1, ptr %_0, align 8
  %2 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  %4 = load i64, ptr %3, align 8
  %5 = insertvalue { i64, i64 } poison, i64 %2, 0
  %6 = insertvalue { i64, i64 } %5, i64 %4, 1
  ret { i64, i64 } %6
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h574976ef0243ca0fE"() unnamed_addr #0 {
start:
  %_0 = alloca i8, align 1
  store i8 1, ptr %_0, align 1
  %0 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %1 = trunc i8 %0 to i1
  ret i1 %1
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::ReverseSearcher>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN104_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$9next_back17h7d9810416141b6aeE"(ptr sret(%"core::str::pattern::SearchStep") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_0.i1 = alloca i64, align 8
  %_0.i = alloca i64, align 8
  %_5 = alloca %"core::option::Option<(usize, char)>", align 8
  %s = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim_end::{closure#0}}>", ptr %self, i32 0, i32 1
  %_4 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim_end::{closure#0}}>", ptr %self, i32 0, i32 1
  %self1.i2 = getelementptr inbounds i8, ptr %_4, i64 8
  %end.i3 = load ptr, ptr %self1.i2, align 8, !nonnull !3, !noundef !3
  %subtracted.i4 = load ptr, ptr %_4, align 8, !nonnull !3, !noundef !3
  %0 = ptrtoint ptr %end.i3 to i64
  %1 = ptrtoint ptr %subtracted.i4 to i64
  %2 = sub nuw i64 %0, %1
  store i64 %2, ptr %_0.i1, align 8
  %3 = load i64, ptr %_0.i1, align 8, !noundef !3
  %_6 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim_end::{closure#0}}>", ptr %self, i32 0, i32 1
; call <core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %4 = call { i64, i32 } @"_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hc5ab5ef59ce5fba4E"(ptr align 8 %_6)
  %5 = extractvalue { i64, i32 } %4, 0
  %6 = extractvalue { i64, i32 } %4, 1
  store i64 %5, ptr %_5, align 8
  %7 = getelementptr inbounds i8, ptr %_5, i64 8
  store i32 %6, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %_5, i64 8
  %9 = load i32, ptr %8, align 8, !range !7, !noundef !3
  %10 = icmp eq i32 %9, 1114112
  %_7 = select i1 %10, i64 0, i64 1
  %11 = icmp eq i64 %_7, 1
  br i1 %11, label %bb3, label %bb8

bb3:                                              ; preds = %start
  %i = load i64, ptr %_5, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %_5, i64 8
  %c = load i32, ptr %12, align 8, !range !8, !noundef !3
  %_11 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim_end::{closure#0}}>", ptr %self, i32 0, i32 1
  %self1.i = getelementptr inbounds i8, ptr %_11, i64 8
  %end.i = load ptr, ptr %self1.i, align 8, !nonnull !3, !noundef !3
  %subtracted.i = load ptr, ptr %_11, align 8, !nonnull !3, !noundef !3
  %13 = ptrtoint ptr %end.i to i64
  %14 = ptrtoint ptr %subtracted.i to i64
  %15 = sub nuw i64 %13, %14
  store i64 %15, ptr %_0.i, align 8
  %16 = load i64, ptr %_0.i, align 8, !noundef !3
  %char_len = sub i64 %3, %16
  %_14 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim_end::{closure#0}}>", ptr %self, i32 0, i32 2
; call <F as core::str::pattern::MultiCharEq>::matches
  %_13 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hcf468ef76ba8b27fE"(ptr align 1 %_14, i32 %c)
  br i1 %_13, label %bb6, label %bb7

bb8:                                              ; preds = %start
  store i64 2, ptr %_0, align 8
  br label %bb10

bb7:                                              ; preds = %bb3
  %_16 = add i64 %i, %char_len
  %17 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_0, i32 0, i32 1
  store i64 %i, ptr %17, align 8
  %18 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_0, i32 0, i32 2
  store i64 %_16, ptr %18, align 8
  store i64 1, ptr %_0, align 8
  br label %bb9

bb6:                                              ; preds = %bb3
  %_15 = add i64 %i, %char_len
  %19 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", ptr %_0, i32 0, i32 1
  store i64 %i, ptr %19, align 8
  %20 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", ptr %_0, i32 0, i32 2
  store i64 %_15, ptr %20, align 8
  store i64 0, ptr %_0, align 8
  br label %bb9

bb9:                                              ; preds = %bb6, %bb7
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  ret void
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::ReverseSearcher>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN104_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$9next_back17hae12b4f4b178ff92E"(ptr sret(%"core::str::pattern::SearchStep") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_0.i1 = alloca i64, align 8
  %_0.i = alloca i64, align 8
  %_5 = alloca %"core::option::Option<(usize, char)>", align 8
  %s = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>", ptr %self, i32 0, i32 1
  %_4 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>", ptr %self, i32 0, i32 1
  %self1.i2 = getelementptr inbounds i8, ptr %_4, i64 8
  %end.i3 = load ptr, ptr %self1.i2, align 8, !nonnull !3, !noundef !3
  %subtracted.i4 = load ptr, ptr %_4, align 8, !nonnull !3, !noundef !3
  %0 = ptrtoint ptr %end.i3 to i64
  %1 = ptrtoint ptr %subtracted.i4 to i64
  %2 = sub nuw i64 %0, %1
  store i64 %2, ptr %_0.i1, align 8
  %3 = load i64, ptr %_0.i1, align 8, !noundef !3
  %_6 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>", ptr %self, i32 0, i32 1
; call <core::str::iter::CharIndices as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %4 = call { i64, i32 } @"_ZN102_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17hc5ab5ef59ce5fba4E"(ptr align 8 %_6)
  %5 = extractvalue { i64, i32 } %4, 0
  %6 = extractvalue { i64, i32 } %4, 1
  store i64 %5, ptr %_5, align 8
  %7 = getelementptr inbounds i8, ptr %_5, i64 8
  store i32 %6, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %_5, i64 8
  %9 = load i32, ptr %8, align 8, !range !7, !noundef !3
  %10 = icmp eq i32 %9, 1114112
  %_7 = select i1 %10, i64 0, i64 1
  %11 = icmp eq i64 %_7, 1
  br i1 %11, label %bb3, label %bb8

bb3:                                              ; preds = %start
  %i = load i64, ptr %_5, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %_5, i64 8
  %c = load i32, ptr %12, align 8, !range !8, !noundef !3
  %_11 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>", ptr %self, i32 0, i32 1
  %self1.i = getelementptr inbounds i8, ptr %_11, i64 8
  %end.i = load ptr, ptr %self1.i, align 8, !nonnull !3, !noundef !3
  %subtracted.i = load ptr, ptr %_11, align 8, !nonnull !3, !noundef !3
  %13 = ptrtoint ptr %end.i to i64
  %14 = ptrtoint ptr %subtracted.i to i64
  %15 = sub nuw i64 %13, %14
  store i64 %15, ptr %_0.i, align 8
  %16 = load i64, ptr %_0.i, align 8, !noundef !3
  %char_len = sub i64 %3, %16
  %_14 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>", ptr %self, i32 0, i32 2
; call <F as core::str::pattern::MultiCharEq>::matches
  %_13 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hee7562c40f4d4452E"(ptr align 1 %_14, i32 %c)
  br i1 %_13, label %bb6, label %bb7

bb8:                                              ; preds = %start
  store i64 2, ptr %_0, align 8
  br label %bb10

bb7:                                              ; preds = %bb3
  %_16 = add i64 %i, %char_len
  %17 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_0, i32 0, i32 1
  store i64 %i, ptr %17, align 8
  %18 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_0, i32 0, i32 2
  store i64 %_16, ptr %18, align 8
  store i64 1, ptr %_0, align 8
  br label %bb9

bb6:                                              ; preds = %bb3
  %_15 = add i64 %i, %char_len
  %19 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", ptr %_0, i32 0, i32 1
  store i64 %i, ptr %19, align 8
  %20 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", ptr %_0, i32 0, i32 2
  store i64 %_15, ptr %20, align 8
  store i64 0, ptr %_0, align 8
  br label %bb9

bb9:                                              ; preds = %bb6, %bb7
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  ret void
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hd664443c145fffb1E"(i64 %self.0, i64 %self.1, ptr align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_17 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_16 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_0 = alloca %"core::option::Option<&[u8]>", align 8
  %_3 = icmp ugt i64 %self.0, %self.1
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_6 = icmp ugt i64 %self.1, %slice.1
  br i1 %_6, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  %0 = load ptr, ptr @1, align 8, !align !4, !noundef !3
  %1 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %0, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %1, ptr %2, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %new_len = sub nuw i64 %self.1, %self.0
  %data = getelementptr inbounds i8, ptr %slice.0, i64 %self.0
  store ptr %data, ptr %_17, align 8
  %3 = getelementptr inbounds i8, ptr %_17, i64 8
  store i64 %new_len, ptr %3, align 8
  %4 = load ptr, ptr %_17, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_17, i64 8
  %6 = load i64, ptr %5, align 8, !noundef !3
  store ptr %4, ptr %_16, align 8
  %7 = getelementptr inbounds i8, ptr %_16, i64 8
  store i64 %6, ptr %7, align 8
  %_9.0 = load ptr, ptr %_16, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_16, i64 8
  %_9.1 = load i64, ptr %8, align 8, !noundef !3
  store ptr %_9.0, ptr %_0, align 8
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_9.1, ptr %9, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %10 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  %12 = load i64, ptr %11, align 8
  %13 = insertvalue { ptr, i64 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1
  ret { ptr, i64 } %14
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h2d503f3440bc826bE"(i64 %self.0, i64 %self.1, ptr align 1 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 {
start:
  %_19 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_18 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_3 = icmp ugt i64 %self.0, %self.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = icmp ugt i64 %self.1, %slice.1
  br i1 %_7, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h06f4de41a511866fE(i64 %self.0, i64 %self.1, ptr align 8 %0) #27
  unreachable

bb4:                                              ; preds = %bb2
  %new_len = sub nuw i64 %self.1, %self.0
  %data = getelementptr inbounds i8, ptr %slice.0, i64 %self.0
  store ptr %data, ptr %_19, align 8
  %1 = getelementptr inbounds i8, ptr %_19, i64 8
  store i64 %new_len, ptr %1, align 8
  %2 = load ptr, ptr %_19, align 8, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_19, i64 8
  %4 = load i64, ptr %3, align 8, !noundef !3
  store ptr %2, ptr %_18, align 8
  %5 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %4, ptr %5, align 8
  %_11.0 = load ptr, ptr %_18, align 8, !noundef !3
  %6 = getelementptr inbounds i8, ptr %_18, i64 8
  %_11.1 = load i64, ptr %6, align 8, !noundef !3
  %7 = insertvalue { ptr, i64 } poison, ptr %_11.0, 0
  %8 = insertvalue { ptr, i64 } %7, i64 %_11.1, 1
  ret { ptr, i64 } %8

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h4c9cdbdfca4072caE(i64 %self.1, i64 %slice.1, ptr align 8 %0) #27
  unreachable
}

; <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h1ee5d670878f4680E"(i64 %self.0, i64 %self.1, ptr align 1 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 {
start:
  %_21 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_20 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_3 = icmp ugt i64 %self.0, %self.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_7 = icmp ugt i64 %self.1, %slice.1
  br i1 %_7, label %bb3, label %bb4

bb1:                                              ; preds = %start
; call core::slice::index::slice_index_order_fail
  call void @_ZN4core5slice5index22slice_index_order_fail17h06f4de41a511866fE(i64 %self.0, i64 %self.1, ptr align 8 %0) #27
  unreachable

bb4:                                              ; preds = %bb2
  %new_len = sub nuw i64 %self.1, %self.0
  %data = getelementptr inbounds i8, ptr %slice.0, i64 %self.0
  store ptr %data, ptr %_21, align 8
  %1 = getelementptr inbounds i8, ptr %_21, i64 8
  store i64 %new_len, ptr %1, align 8
  %2 = load ptr, ptr %_21, align 8, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_21, i64 8
  %4 = load i64, ptr %3, align 8, !noundef !3
  store ptr %2, ptr %_20, align 8
  %5 = getelementptr inbounds i8, ptr %_20, i64 8
  store i64 %4, ptr %5, align 8
  %_11.0 = load ptr, ptr %_20, align 8, !noundef !3
  %6 = getelementptr inbounds i8, ptr %_20, i64 8
  %_11.1 = load i64, ptr %6, align 8, !noundef !3
  %7 = insertvalue { ptr, i64 } poison, ptr %_11.0, 0
  %8 = insertvalue { ptr, i64 } %7, i64 %_11.1, 1
  ret { ptr, i64 } %8

bb3:                                              ; preds = %bb2
; call core::slice::index::slice_end_index_len_fail
  call void @_ZN4core5slice5index24slice_end_index_len_fail17h4c9cdbdfca4072caE(i64 %self.1, i64 %slice.1, ptr align 8 %0) #27
  unreachable
}

; <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h5e976689df65285bE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_10.i = alloca ptr, align 8
  %_0.i = alloca ptr, align 8
  %_13 = alloca ptr, align 8
  %end = alloca ptr, align 8
  %_2 = alloca i8, align 1
  %_0 = alloca ptr, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %0 = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  store ptr %0, ptr %end, align 8
  %self2 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %self3 = load ptr, ptr %end, align 8, !nonnull !3, !noundef !3
  %1 = icmp eq ptr %self2, %self3
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_2, align 1
  br label %bb3

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self4 = load ptr, ptr %3, align 8, !noundef !3
  %len = ptrtoint ptr %self4 to i64
  %4 = icmp eq i64 %len, 0
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %6 = load i8, ptr %_2, align 1, !range !10, !noundef !3
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %self1.i = getelementptr inbounds i8, ptr %self, i64 8
  %self2.i = load ptr, ptr %self1.i, align 8, !nonnull !3, !noundef !3
  %_15.i = getelementptr inbounds i8, ptr %self2.i, i64 -1
  store ptr %_15.i, ptr %_10.i, align 8
  %8 = load ptr, ptr %_10.i, align 8, !nonnull !3, !noundef !3
  store ptr %8, ptr %self1.i, align 8
  %9 = load ptr, ptr %self1.i, align 8, !nonnull !3, !noundef !3
  store ptr %9, ptr %_0.i, align 8
  %10 = load ptr, ptr %_0.i, align 8, !nonnull !3, !noundef !3
  store ptr %10, ptr %_13, align 8
  %self5 = load ptr, ptr %_13, align 8, !nonnull !3, !noundef !3
  store ptr %self5, ptr %_0, align 8
  br label %bb7

bb4:                                              ; preds = %bb3
  store ptr null, ptr %_0, align 8
  br label %bb7

bb7:                                              ; preds = %bb4, %bb5
  %11 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  ret ptr %11
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::ReverseSearcher>::next_reject_back
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN106_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$16next_reject_back17h3376e1ac492a1c95E"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_7 = alloca { i64, i64 }, align 8
  %_3 = alloca %"core::str::pattern::SearchStep", align 8
  br label %bb1

bb1:                                              ; preds = %bb5, %start
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::ReverseSearcher>::next_back
  call void @"_ZN104_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$9next_back17hae12b4f4b178ff92E"(ptr sret(%"core::str::pattern::SearchStep") align 8 %_3, ptr align 8 %self)
  %_4 = load i64, ptr %_3, align 8, !range !11, !noundef !3
  switch i64 %_4, label %bb5 [
    i64 1, label %bb3
    i64 2, label %bb4
  ]

bb5:                                              ; preds = %bb1
  br label %bb1

bb3:                                              ; preds = %bb1
  %0 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_3, i32 0, i32 1
  %a = load i64, ptr %0, align 8, !noundef !3
  %1 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_3, i32 0, i32 2
  %b = load i64, ptr %1, align 8, !noundef !3
  store i64 %a, ptr %_7, align 8
  %2 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %b, ptr %2, align 8
  %3 = load i64, ptr %_7, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_7, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  %6 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %_0, i32 0, i32 1
  store i64 %3, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  store i64 %5, ptr %7, align 8
  store i64 1, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %bb1
  store i64 0, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb3
  ret void
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::ReverseSearcher>::next_reject_back
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN106_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$16next_reject_back17ha0db35aa86a92dadE"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_7 = alloca { i64, i64 }, align 8
  %_3 = alloca %"core::str::pattern::SearchStep", align 8
  br label %bb1

bb1:                                              ; preds = %bb5, %start
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::ReverseSearcher>::next_back
  call void @"_ZN104_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$9next_back17h7d9810416141b6aeE"(ptr sret(%"core::str::pattern::SearchStep") align 8 %_3, ptr align 8 %self)
  %_4 = load i64, ptr %_3, align 8, !range !11, !noundef !3
  switch i64 %_4, label %bb5 [
    i64 1, label %bb3
    i64 2, label %bb4
  ]

bb5:                                              ; preds = %bb1
  br label %bb1

bb3:                                              ; preds = %bb1
  %0 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_3, i32 0, i32 1
  %a = load i64, ptr %0, align 8, !noundef !3
  %1 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_3, i32 0, i32 2
  %b = load i64, ptr %1, align 8, !noundef !3
  store i64 %a, ptr %_7, align 8
  %2 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %b, ptr %2, align 8
  %3 = load i64, ptr %_7, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_7, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  %6 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %_0, i32 0, i32 1
  store i64 %3, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  store i64 %5, ptr %7, align 8
  store i64 1, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %bb1
  store i64 0, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb3
  ret void
}

; <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN107_$LT$core..iter..adapters..fuse..Fuse$LT$I$GT$$u20$as$u20$core..iter..adapters..fuse..FuseImpl$LT$I$GT$$GT$4next17h7fd4b882a52050dfE"(ptr sret(%"core::option::Option<alloc::vec::Vec<&str>>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %self1 = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  %0 = load ptr, ptr %self, align 8, !noundef !3
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_7 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_7, 0
  br i1 %3, label %bb7, label %bb8

bb7:                                              ; preds = %start
  store ptr null, ptr %self1, align 8
  br label %bb6

bb8:                                              ; preds = %start
  store ptr %self, ptr %self1, align 8
  br label %bb6

bb6:                                              ; preds = %bb8, %bb7
  %4 = load ptr, ptr %self1, align 8, !noundef !3
  %5 = ptrtoint ptr %4 to i64
  %6 = icmp eq i64 %5, 0
  %_10 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_10, 0
  br i1 %7, label %bb10, label %bb11

bb10:                                             ; preds = %bb6
  store ptr null, ptr %_2, align 8
  br label %bb9

bb11:                                             ; preds = %bb6
  %v = load ptr, ptr %self1, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %v, ptr %_2, align 8
  br label %bb9

bb9:                                              ; preds = %bb11, %bb10
  %8 = load ptr, ptr %_2, align 8, !noundef !3
  %9 = ptrtoint ptr %8 to i64
  %10 = icmp eq i64 %9, 0
  %_5 = select i1 %10, i64 1, i64 0
  %11 = icmp eq i64 %_5, 0
  br i1 %11, label %bb1, label %bb3

bb1:                                              ; preds = %bb9
  %val = load ptr, ptr %_2, align 8, !nonnull !3, !align !5, !noundef !3
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h4d464dabc208a744E"(ptr sret(%"core::option::Option<alloc::vec::Vec<&str>>") align 8 %_0, ptr align 8 %val)
  br label %bb5

bb3:                                              ; preds = %bb9
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb1
  ret void

bb2:                                              ; No predecessors!
  unreachable
}

; <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3b66128e15d12519E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_3 = getelementptr inbounds i8, ptr %self, i64 16
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::find
  %_0 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4find17hb4633606a4c43892E"(ptr align 8 %self, ptr align 1 %_3)
  ret ptr %_0
}

; <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8417799fd051d235E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_3 = getelementptr inbounds i8, ptr %self, i64 16
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::find
  %_0 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4find17hcc5f9f427a6dd053E"(ptr align 8 %self, ptr align 1 %_3)
  ret ptr %_0
}

; <alloc::string::String as core::ops::index::Index<core::ops::range::Range<usize>>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN109_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..Range$LT$usize$GT$$GT$$GT$5index17h518197816a613e7bE"(ptr align 8 %self, i64 %index.0, i64 %index.1, ptr align 8 %0) unnamed_addr #0 {
start:
  %_18 = alloca %"core::option::Option<&str>", align 8
  %_15 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %1, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %2, align 8, !noundef !3
  store ptr %self1, ptr %_15, align 8
  %3 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %len, ptr %3, align 8
  %4 = load ptr, ptr %_15, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_15, i64 8
  %6 = load i64, ptr %5, align 8, !noundef !3
  store ptr %4, ptr %_14, align 8
  %7 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %6, ptr %7, align 8
  %v.0 = load ptr, ptr %_14, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_14, i64 8
  %v.1 = load i64, ptr %8, align 8, !noundef !3
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get
  %9 = call { ptr, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$3get17ha61b41e035c178e2E"(i64 %index.0, i64 %index.1, ptr align 1 %v.0, i64 %v.1)
  %10 = extractvalue { ptr, i64 } %9, 0
  %11 = extractvalue { ptr, i64 } %9, 1
  store ptr %10, ptr %_18, align 8
  %12 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %11, ptr %12, align 8
  %13 = load ptr, ptr %_18, align 8, !noundef !3
  %14 = ptrtoint ptr %13 to i64
  %15 = icmp eq i64 %14, 0
  %_19 = select i1 %15, i64 0, i64 1
  %16 = icmp eq i64 %_19, 0
  br i1 %16, label %bb2, label %bb3

bb2:                                              ; preds = %start
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h9c5d67f5de864a44E(ptr align 1 %v.0, i64 %v.1, i64 %index.0, i64 %index.1, ptr align 8 %0) #27
  unreachable

bb3:                                              ; preds = %start
  %s.0 = load ptr, ptr %_18, align 8, !nonnull !3, !align !4, !noundef !3
  %17 = getelementptr inbounds i8, ptr %_18, i64 8
  %s.1 = load i64, ptr %17, align 8, !noundef !3
  %18 = insertvalue { ptr, i64 } poison, ptr %s.0, 0
  %19 = insertvalue { ptr, i64 } %18, i64 %s.1, 1
  ret { ptr, i64 } %19

bb4:                                              ; No predecessors!
  unreachable
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h2a2136c492582566E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %iterator) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_17 = alloca %"core::fmt::Arguments<'_>", align 8
  %_13 = alloca i8, align 1
  %_12 = alloca %"core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>", align 8
  %_8 = alloca %"core::fmt::Arguments<'_>", align 8
  %_3 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %vector = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  store i8 1, ptr %_13, align 1
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h18471fb3af8f3228E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_3, ptr align 8 %iterator)
          to label %bb1 unwind label %cleanup

bb8:                                              ; preds = %bb5, %cleanup
  %1 = load i8, ptr %_13, align 1, !range !10, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb7, label %bb6

cleanup:                                          ; preds = %bb10, %bb9, %bb11, %bb3, %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_3, i32 0, i32 1
  %_5 = load i64, ptr %7, align 8, !range !9, !noundef !3
  %8 = icmp eq i64 %_5, 1
  br i1 %8, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %9 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_3, i32 0, i32 1
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  %upper = load i64, ptr %10, align 8, !noundef !3
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %11 = invoke { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h932932697f18691bE"(i64 %upper, i1 zeroext false)
          to label %bb12 unwind label %cleanup

bb2:                                              ; preds = %bb1
  br i1 false, label %bb9, label %bb11

bb12:                                             ; preds = %bb3
  %_20.0 = extractvalue { i64, ptr } %11, 0
  %_20.1 = extractvalue { i64, ptr } %11, 1
  store i64 %_20.0, ptr %vector, align 8
  %12 = getelementptr inbounds i8, ptr %vector, i64 8
  store ptr %_20.1, ptr %12, align 8
  %13 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %vector, i32 0, i32 1
  store i64 0, ptr %13, align 8
  store i8 0, ptr %_13, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %iterator, i64 32, i1 false)
; invoke <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  invoke void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h2dbd599b81093188E"(ptr align 8 %vector, ptr align 8 %_12)
          to label %bb4 unwind label %cleanup1

bb5:                                              ; preds = %cleanup1
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %vector) #28
          to label %bb8 unwind label %terminate

cleanup1:                                         ; preds = %bb12
  %14 = landingpad { ptr, i32 }
          cleanup
  %15 = extractvalue { ptr, i32 } %14, 0
  %16 = extractvalue { ptr, i32 } %14, 1
  store ptr %15, ptr %0, align 8
  %17 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %16, ptr %17, align 8
  br label %bb5

bb4:                                              ; preds = %bb12
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %vector, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb7, %bb5
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb11:                                             ; preds = %bb2
  store ptr @alloc_e760b8a82485eab475ddc4c0d696a7ac, ptr %_8, align 8
  %21 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 1, ptr %21, align 8
  %22 = load ptr, ptr @1, align 8, !align !5, !noundef !3
  %23 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %24 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_8, i32 0, i32 2
  store ptr %22, ptr %24, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 8
  store i64 %23, ptr %25, align 8
  %26 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_8, i32 0, i32 1
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %26, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 8
  store i64 0, ptr %27, align 8
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_8, ptr align 8 @alloc_38dd80f2064e09e0c321122057d1bb7b) #27
          to label %unreachable unwind label %cleanup

bb9:                                              ; preds = %bb2
; invoke core::fmt::Arguments::new_const
  invoke void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_17, ptr align 8 @alloc_af99043bc04c419363a7f04d23183506, i64 1)
          to label %bb10 unwind label %cleanup

unreachable:                                      ; preds = %bb10, %bb11
  unreachable

bb10:                                             ; preds = %bb9
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_17, ptr align 8 @alloc_b1c9b46fd6543b9e0f93a51d745efa2a) #27
          to label %unreachable unwind label %cleanup

bb6:                                              ; preds = %bb7, %bb8
  %28 = load ptr, ptr %0, align 8, !noundef !3
  %29 = getelementptr inbounds i8, ptr %0, i64 8
  %30 = load i32, ptr %29, align 8, !noundef !3
  %31 = insertvalue { ptr, i32 } poison, ptr %28, 0
  %32 = insertvalue { ptr, i32 } %31, i32 %30, 1
  resume { ptr, i32 } %32

bb7:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>,<alloc::string::String as core::convert::From<&str>>::from>>
  invoke void @"_ZN4core3ptr189drop_in_place$LT$core..iter..adapters..map..Map$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$GT$$GT$17hccf534f681aec439E"(ptr align 8 %iterator) #28
          to label %bb6 unwind label %terminate
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h305fcec9134755f6E"(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 8 %iterator) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_20 = alloca i8, align 1
  %_19 = alloca %"core::str::iter::Split<'_, char>", align 8
  %vector1 = alloca %"alloc::vec::Vec<&str>", align 8
  %_8 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %_3 = alloca %"core::option::Option<&str>", align 8
  %vector = alloca %"alloc::vec::Vec<&str>", align 8
  store i8 1, ptr %_20, align 1
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke { ptr, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0568ea1bfd125502E"(ptr align 8 %iterator)
          to label %bb1 unwind label %cleanup

bb11:                                             ; preds = %bb9, %bb7, %cleanup
  %3 = load i8, ptr %_20, align 1, !range !10, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb10, label %bb8

cleanup:                                          ; preds = %start
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %1, align 8
  %8 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb11

bb1:                                              ; preds = %start
  %9 = extractvalue { ptr, i64 } %2, 0
  %10 = extractvalue { ptr, i64 } %2, 1
  store ptr %9, ptr %_3, align 8
  %11 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %10, ptr %11, align 8
  %12 = load ptr, ptr %_3, align 8, !noundef !3
  %13 = ptrtoint ptr %12 to i64
  %14 = icmp eq i64 %13, 0
  %_5 = select i1 %14, i64 0, i64 1
  %15 = icmp eq i64 %_5, 0
  br i1 %15, label %bb12, label %bb2

bb12:                                             ; preds = %bb1
  store i64 0, ptr %_0, align 8
  %16 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 8 to ptr), ptr %16, align 8
  %17 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %17, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  %element.0 = load ptr, ptr %_3, align 8, !nonnull !3, !align !4, !noundef !3
  %18 = getelementptr inbounds i8, ptr %_3, i64 8
  %element.1 = load i64, ptr %18, align 8, !noundef !3
; invoke core::iter::traits::iterator::Iterator::size_hint
  invoke void @_ZN4core4iter6traits8iterator8Iterator9size_hint17h3b653c5f4a3b742bE(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_8, ptr align 8 %iterator)
          to label %bb4 unwind label %cleanup2

bb6:                                              ; preds = %bb5, %bb12
  ret void

bb9:                                              ; preds = %cleanup2
  br label %bb11

cleanup2:                                         ; preds = %bb14, %bb4, %bb2
  %19 = landingpad { ptr, i32 }
          cleanup
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
  store ptr %20, ptr %1, align 8
  %22 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %21, ptr %22, align 8
  br label %bb9

bb4:                                              ; preds = %bb2
  %lower = load i64, ptr %_8, align 8, !noundef !3
  %23 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1)
  store i64 %23, ptr %0, align 8
  %v2 = load i64, ptr %0, align 8, !noundef !3
; invoke core::cmp::max_by
  %initial_capacity = invoke i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 4, i64 %v2)
          to label %bb14 unwind label %cleanup2

bb14:                                             ; preds = %bb4
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %24 = invoke { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h7f9a905a91520728E"(i64 %initial_capacity, i1 zeroext false)
          to label %bb15 unwind label %cleanup2

bb15:                                             ; preds = %bb14
  %_23.0 = extractvalue { i64, ptr } %24, 0
  %_23.1 = extractvalue { i64, ptr } %24, 1
  store i64 %_23.0, ptr %vector1, align 8
  %25 = getelementptr inbounds i8, ptr %vector1, i64 8
  store ptr %_23.1, ptr %25, align 8
  %26 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %vector1, i32 0, i32 1
  store i64 0, ptr %26, align 8
  %27 = getelementptr inbounds i8, ptr %vector1, i64 8
  %self = load ptr, ptr %27, align 8, !nonnull !3, !noundef !3
  store ptr %element.0, ptr %self, align 8
  %28 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %element.1, ptr %28, align 8
  %29 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %vector1, i32 0, i32 1
  store i64 1, ptr %29, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %vector, ptr align 8 %vector1, i64 24, i1 false)
  store i8 0, ptr %_20, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_19, ptr align 8 %iterator, i64 72, i1 false)
; invoke <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  invoke void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h6efed079dc455e66E"(ptr align 8 %vector, ptr align 8 %_19)
          to label %bb5 unwind label %cleanup3

bb7:                                              ; preds = %cleanup3
; invoke core::ptr::drop_in_place<alloc::vec::Vec<&str>>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17h0e3817a1800996b1E"(ptr align 8 %vector) #28
          to label %bb11 unwind label %terminate

cleanup3:                                         ; preds = %bb15
  %30 = landingpad { ptr, i32 }
          cleanup
  %31 = extractvalue { ptr, i32 } %30, 0
  %32 = extractvalue { ptr, i32 } %30, 1
  store ptr %31, ptr %1, align 8
  %33 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %32, ptr %33, align 8
  br label %bb7

bb5:                                              ; preds = %bb15
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %vector, i64 24, i1 false)
  br label %bb6

terminate:                                        ; preds = %bb7
  %34 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %35 = extractvalue { ptr, i32 } %34, 0
  %36 = extractvalue { ptr, i32 } %34, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb3:                                              ; No predecessors!
  unreachable

bb8:                                              ; preds = %bb10, %bb11
  %37 = load ptr, ptr %1, align 8, !noundef !3
  %38 = getelementptr inbounds i8, ptr %1, i64 8
  %39 = load i32, ptr %38, align 8, !noundef !3
  %40 = insertvalue { ptr, i32 } poison, ptr %37, 0
  %41 = insertvalue { ptr, i32 } %40, i32 %39, 1
  resume { ptr, i32 } %41

bb10:                                             ; preds = %bb11
  br label %bb8
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h3393564f8a4cd22cE"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr %0, ptr %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_17 = alloca %"core::fmt::Arguments<'_>", align 8
  %_13 = alloca i8, align 1
  %_8 = alloca %"core::fmt::Arguments<'_>", align 8
  %_3 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %vector = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %iterator = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>", align 8
  store ptr %0, ptr %iterator, align 8
  %3 = getelementptr inbounds i8, ptr %iterator, i64 8
  store ptr %1, ptr %3, align 8
  store i8 1, ptr %_13, align 1
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4131b44401768a3aE"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_3, ptr align 8 %iterator)
          to label %bb1 unwind label %cleanup

bb8:                                              ; preds = %bb5, %cleanup
  %4 = load i8, ptr %_13, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb7, label %bb6

cleanup:                                          ; preds = %bb10, %bb9, %bb11, %bb3, %start
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %2, align 8
  %9 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_3, i32 0, i32 1
  %_5 = load i64, ptr %10, align 8, !range !9, !noundef !3
  %11 = icmp eq i64 %_5, 1
  br i1 %11, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %12 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_3, i32 0, i32 1
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  %upper = load i64, ptr %13, align 8, !noundef !3
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %14 = invoke { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h932932697f18691bE"(i64 %upper, i1 zeroext false)
          to label %bb12 unwind label %cleanup

bb2:                                              ; preds = %bb1
  br i1 false, label %bb9, label %bb11

bb12:                                             ; preds = %bb3
  %_20.0 = extractvalue { i64, ptr } %14, 0
  %_20.1 = extractvalue { i64, ptr } %14, 1
  store i64 %_20.0, ptr %vector, align 8
  %15 = getelementptr inbounds i8, ptr %vector, i64 8
  store ptr %_20.1, ptr %15, align 8
  %16 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %vector, i32 0, i32 1
  store i64 0, ptr %16, align 8
  store i8 0, ptr %_13, align 1
  %_12.0 = load ptr, ptr %iterator, align 8, !nonnull !3, !noundef !3
  %17 = getelementptr inbounds i8, ptr %iterator, i64 8
  %_12.1 = load ptr, ptr %17, align 8, !noundef !3
; invoke <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  invoke void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17heb4065c39c79fba0E"(ptr align 8 %vector, ptr %_12.0, ptr %_12.1)
          to label %bb4 unwind label %cleanup1

bb5:                                              ; preds = %cleanup1
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %vector) #28
          to label %bb8 unwind label %terminate

cleanup1:                                         ; preds = %bb12
  %18 = landingpad { ptr, i32 }
          cleanup
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
  store ptr %19, ptr %2, align 8
  %21 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %20, ptr %21, align 8
  br label %bb5

bb4:                                              ; preds = %bb12
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %vector, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb5
  %22 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %23 = extractvalue { ptr, i32 } %22, 0
  %24 = extractvalue { ptr, i32 } %22, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb11:                                             ; preds = %bb2
  store ptr @alloc_e760b8a82485eab475ddc4c0d696a7ac, ptr %_8, align 8
  %25 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 1, ptr %25, align 8
  %26 = load ptr, ptr @1, align 8, !align !5, !noundef !3
  %27 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %28 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_8, i32 0, i32 2
  store ptr %26, ptr %28, align 8
  %29 = getelementptr inbounds i8, ptr %28, i64 8
  store i64 %27, ptr %29, align 8
  %30 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_8, i32 0, i32 1
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %30, align 8
  %31 = getelementptr inbounds i8, ptr %30, i64 8
  store i64 0, ptr %31, align 8
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_8, ptr align 8 @alloc_38dd80f2064e09e0c321122057d1bb7b) #27
          to label %unreachable unwind label %cleanup

bb9:                                              ; preds = %bb2
; invoke core::fmt::Arguments::new_const
  invoke void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_17, ptr align 8 @alloc_af99043bc04c419363a7f04d23183506, i64 1)
          to label %bb10 unwind label %cleanup

unreachable:                                      ; preds = %bb10, %bb11
  unreachable

bb10:                                             ; preds = %bb9
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_17, ptr align 8 @alloc_b1c9b46fd6543b9e0f93a51d745efa2a) #27
          to label %unreachable unwind label %cleanup

bb6:                                              ; preds = %bb7, %bb8
  %32 = load ptr, ptr %2, align 8, !noundef !3
  %33 = getelementptr inbounds i8, ptr %2, i64 8
  %34 = load i32, ptr %33, align 8, !noundef !3
  %35 = insertvalue { ptr, i32 } poison, ptr %32, 0
  %36 = insertvalue { ptr, i32 } %35, i32 %34, 1
  resume { ptr, i32 } %36

bb7:                                              ; preds = %bb8
  br label %bb6
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h8dacfb235d4c1b6aE"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %iterator) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_20 = alloca i8, align 1
  %_19 = alloca %"core::iter::adapters::map::Map<core::str::iter::Split<'_, char>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:372:38: 372:44}>", align 8
  %src = alloca %"alloc::string::String", align 8
  %vector1 = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %_8 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %element = alloca %"alloc::string::String", align 8
  %_3 = alloca %"core::option::Option<alloc::string::String>", align 8
  %vector = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  store i8 1, ptr %_20, align 1
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h84d118b3160fa533E"(ptr sret(%"core::option::Option<alloc::string::String>") align 8 %_3, ptr align 8 %iterator)
          to label %bb1 unwind label %cleanup

bb11:                                             ; preds = %bb9, %bb7, %cleanup
  %2 = load i8, ptr %_20, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb10, label %bb8

cleanup:                                          ; preds = %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %1, align 8
  %7 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb11

bb1:                                              ; preds = %start
  %8 = load i64, ptr %_3, align 8, !range !12, !noundef !3
  %9 = icmp eq i64 %8, -9223372036854775808
  %_5 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_5, 0
  br i1 %10, label %bb12, label %bb2

bb12:                                             ; preds = %bb1
  store i64 0, ptr %_0, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 8 to ptr), ptr %11, align 8
  %12 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %12, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %element, ptr align 8 %_3, i64 24, i1 false)
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h5046771ed6692a17E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_8, ptr align 8 %iterator)
          to label %bb4 unwind label %cleanup2

bb6:                                              ; preds = %bb5, %bb12
  ret void

bb9:                                              ; preds = %cleanup2
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %element) #28
          to label %bb11 unwind label %terminate

cleanup2:                                         ; preds = %bb14, %bb4, %bb2
  %13 = landingpad { ptr, i32 }
          cleanup
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
  store ptr %14, ptr %1, align 8
  %16 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %15, ptr %16, align 8
  br label %bb9

bb4:                                              ; preds = %bb2
  %lower = load i64, ptr %_8, align 8, !noundef !3
  %17 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1)
  store i64 %17, ptr %0, align 8
  %v2 = load i64, ptr %0, align 8, !noundef !3
; invoke core::cmp::max_by
  %initial_capacity = invoke i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 4, i64 %v2)
          to label %bb14 unwind label %cleanup2

bb14:                                             ; preds = %bb4
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %18 = invoke { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h932932697f18691bE"(i64 %initial_capacity, i1 zeroext false)
          to label %bb15 unwind label %cleanup2

bb15:                                             ; preds = %bb14
  %_23.0 = extractvalue { i64, ptr } %18, 0
  %_23.1 = extractvalue { i64, ptr } %18, 1
  store i64 %_23.0, ptr %vector1, align 8
  %19 = getelementptr inbounds i8, ptr %vector1, i64 8
  store ptr %_23.1, ptr %19, align 8
  %20 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %vector1, i32 0, i32 1
  store i64 0, ptr %20, align 8
  %21 = getelementptr inbounds i8, ptr %vector1, i64 8
  %self = load ptr, ptr %21, align 8, !nonnull !3, !noundef !3
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %src, ptr align 8 %element, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %src, i64 24, i1 false)
  %22 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %vector1, i32 0, i32 1
  store i64 1, ptr %22, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %vector, ptr align 8 %vector1, i64 24, i1 false)
  store i8 0, ptr %_20, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_19, ptr align 8 %iterator, i64 72, i1 false)
; invoke <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  invoke void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h8e4d772b1a00d641E"(ptr align 8 %vector, ptr align 8 %_19)
          to label %bb5 unwind label %cleanup3

bb7:                                              ; preds = %cleanup3
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %vector) #28
          to label %bb11 unwind label %terminate

cleanup3:                                         ; preds = %bb15
  %23 = landingpad { ptr, i32 }
          cleanup
  %24 = extractvalue { ptr, i32 } %23, 0
  %25 = extractvalue { ptr, i32 } %23, 1
  store ptr %24, ptr %1, align 8
  %26 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %25, ptr %26, align 8
  br label %bb7

bb5:                                              ; preds = %bb15
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %vector, i64 24, i1 false)
  br label %bb6

terminate:                                        ; preds = %bb9, %bb7
  %27 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %28 = extractvalue { ptr, i32 } %27, 0
  %29 = extractvalue { ptr, i32 } %27, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb3:                                              ; No predecessors!
  unreachable

bb8:                                              ; preds = %bb10, %bb11
  %30 = load ptr, ptr %1, align 8, !noundef !3
  %31 = getelementptr inbounds i8, ptr %1, i64 8
  %32 = load i32, ptr %31, align 8, !noundef !3
  %33 = insertvalue { ptr, i32 } poison, ptr %30, 0
  %34 = insertvalue { ptr, i32 } %33, i32 %32, 1
  resume { ptr, i32 } %34

bb10:                                             ; preds = %bb11
  br label %bb8
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17hbbb4a2a3d57daa2bE"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr %0, ptr %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_17 = alloca %"core::fmt::Arguments<'_>", align 8
  %_13 = alloca i8, align 1
  %_8 = alloca %"core::fmt::Arguments<'_>", align 8
  %_3 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %vector = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %iterator = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>", align 8
  store ptr %0, ptr %iterator, align 8
  %3 = getelementptr inbounds i8, ptr %iterator, i64 8
  store ptr %1, ptr %3, align 8
  store i8 1, ptr %_13, align 1
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17he525641c427ddb50E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_3, ptr align 8 %iterator)
          to label %bb1 unwind label %cleanup

bb8:                                              ; preds = %bb5, %cleanup
  %4 = load i8, ptr %_13, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb7, label %bb6

cleanup:                                          ; preds = %bb10, %bb9, %bb11, %bb3, %start
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %2, align 8
  %9 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %10 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_3, i32 0, i32 1
  %_5 = load i64, ptr %10, align 8, !range !9, !noundef !3
  %11 = icmp eq i64 %_5, 1
  br i1 %11, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %12 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_3, i32 0, i32 1
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  %upper = load i64, ptr %13, align 8, !noundef !3
; invoke alloc::raw_vec::RawVec<T,A>::allocate_in
  %14 = invoke { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h932932697f18691bE"(i64 %upper, i1 zeroext false)
          to label %bb12 unwind label %cleanup

bb2:                                              ; preds = %bb1
  br i1 false, label %bb9, label %bb11

bb12:                                             ; preds = %bb3
  %_20.0 = extractvalue { i64, ptr } %14, 0
  %_20.1 = extractvalue { i64, ptr } %14, 1
  store i64 %_20.0, ptr %vector, align 8
  %15 = getelementptr inbounds i8, ptr %vector, i64 8
  store ptr %_20.1, ptr %15, align 8
  %16 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %vector, i32 0, i32 1
  store i64 0, ptr %16, align 8
  store i8 0, ptr %_13, align 1
  %_12.0 = load ptr, ptr %iterator, align 8, !nonnull !3, !noundef !3
  %17 = getelementptr inbounds i8, ptr %iterator, i64 8
  %_12.1 = load ptr, ptr %17, align 8, !noundef !3
; invoke <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  invoke void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h916261b782df9f55E"(ptr align 8 %vector, ptr %_12.0, ptr %_12.1)
          to label %bb4 unwind label %cleanup1

bb5:                                              ; preds = %cleanup1
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %vector) #28
          to label %bb8 unwind label %terminate

cleanup1:                                         ; preds = %bb12
  %18 = landingpad { ptr, i32 }
          cleanup
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
  store ptr %19, ptr %2, align 8
  %21 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %20, ptr %21, align 8
  br label %bb5

bb4:                                              ; preds = %bb12
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %vector, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb5
  %22 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %23 = extractvalue { ptr, i32 } %22, 0
  %24 = extractvalue { ptr, i32 } %22, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb11:                                             ; preds = %bb2
  store ptr @alloc_e760b8a82485eab475ddc4c0d696a7ac, ptr %_8, align 8
  %25 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 1, ptr %25, align 8
  %26 = load ptr, ptr @1, align 8, !align !5, !noundef !3
  %27 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %28 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_8, i32 0, i32 2
  store ptr %26, ptr %28, align 8
  %29 = getelementptr inbounds i8, ptr %28, i64 8
  store i64 %27, ptr %29, align 8
  %30 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_8, i32 0, i32 1
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %30, align 8
  %31 = getelementptr inbounds i8, ptr %30, i64 8
  store i64 0, ptr %31, align 8
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_8, ptr align 8 @alloc_38dd80f2064e09e0c321122057d1bb7b) #27
          to label %unreachable unwind label %cleanup

bb9:                                              ; preds = %bb2
; invoke core::fmt::Arguments::new_const
  invoke void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_17, ptr align 8 @alloc_af99043bc04c419363a7f04d23183506, i64 1)
          to label %bb10 unwind label %cleanup

unreachable:                                      ; preds = %bb10, %bb11
  unreachable

bb10:                                             ; preds = %bb9
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_17, ptr align 8 @alloc_b1c9b46fd6543b9e0f93a51d745efa2a) #27
          to label %unreachable unwind label %cleanup

bb6:                                              ; preds = %bb7, %bb8
  %32 = load ptr, ptr %2, align 8, !noundef !3
  %33 = getelementptr inbounds i8, ptr %2, i64 8
  %34 = load i32, ptr %33, align 8, !noundef !3
  %35 = insertvalue { ptr, i32 } poison, ptr %32, 0
  %36 = insertvalue { ptr, i32 } %35, i32 %34, 1
  resume { ptr, i32 } %36

bb7:                                              ; preds = %bb8
  br label %bb6
}

; <alloc::vec::in_place_drop::InPlaceDstDataSrcBufDrop<Src,Dest> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN111_$LT$alloc..vec..in_place_drop..InPlaceDstDataSrcBufDrop$LT$Src$C$Dest$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h42c90be17e203e1cE"(ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_20 = alloca %"core::ptr::metadata::PtrComponents<[alloc::string::String]>", align 8
  %_19 = alloca %"core::ptr::metadata::PtrRepr<[alloc::string::String]>", align 8
  %_14 = alloca ptr, align 8
  %_12 = alloca ptr, align 8
  %cap = alloca i64, align 8
  %_drop_allocation = alloca %"alloc::raw_vec::RawVec<&str>", align 8
  %self1 = load ptr, ptr %self, align 8, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::in_place_drop::InPlaceDstDataSrcBufDrop<&str, alloc::string::String>", ptr %self, i32 0, i32 2
  %capacity = load i64, ptr %1, align 8, !noundef !3
  br i1 false, label %bb5, label %bb6

bb6:                                              ; preds = %start
  store i64 %capacity, ptr %cap, align 8
  br label %bb7

bb5:                                              ; preds = %start
  store i64 0, ptr %cap, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  store ptr %self1, ptr %_14, align 8
  %2 = load ptr, ptr %_14, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %_12, align 8
  %_13 = load i64, ptr %cap, align 8, !range !13, !noundef !3
  %3 = load ptr, ptr %_12, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_drop_allocation, i64 8
  store ptr %3, ptr %4, align 8
  store i64 %_13, ptr %_drop_allocation, align 8
  %data = load ptr, ptr %self, align 8, !noundef !3
  %5 = getelementptr inbounds %"alloc::vec::in_place_drop::InPlaceDstDataSrcBufDrop<&str, alloc::string::String>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %5, align 8, !noundef !3
  store ptr %data, ptr %_20, align 8
  %6 = getelementptr inbounds i8, ptr %_20, i64 8
  store i64 %len, ptr %6, align 8
  %7 = load ptr, ptr %_20, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_20, i64 8
  %9 = load i64, ptr %8, align 8, !noundef !3
  store ptr %7, ptr %_19, align 8
  %10 = getelementptr inbounds i8, ptr %_19, i64 8
  store i64 %9, ptr %10, align 8
  %_7.0 = load ptr, ptr %_19, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_19, i64 8
  %_7.1 = load i64, ptr %11, align 8, !noundef !3
; invoke core::ptr::drop_in_place<[alloc::string::String]>
  invoke void @"_ZN4core3ptr52drop_in_place$LT$$u5b$alloc..string..String$u5d$$GT$17hdec1d56981c42602E"(ptr align 8 %_7.0, i64 %_7.1)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h08340d9e774abd8aE"(ptr align 8 %_drop_allocation) #28
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb7
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %0, align 8
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb3

bb1:                                              ; preds = %bb7
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h08340d9e774abd8aE"(ptr align 8 %_drop_allocation)
  ret void

terminate:                                        ; preds = %bb3
  %16 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %17 = extractvalue { ptr, i32 } %16, 0
  %18 = extractvalue { ptr, i32 } %16, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb4:                                              ; preds = %bb3
  %19 = load ptr, ptr %0, align 8, !noundef !3
  %20 = getelementptr inbounds i8, ptr %0, i64 8
  %21 = load i32, ptr %20, align 8, !noundef !3
  %22 = insertvalue { ptr, i32 } poison, ptr %19, 0
  %23 = insertvalue { ptr, i32 } %22, i32 %21, 1
  resume { ptr, i32 } %23
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h43f6d1ea2f1c8ebdE"(ptr sret(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>") align 8 %_0, ptr %0, ptr %1, ptr %2, ptr %3) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %4 = alloca { ptr, i32, [1 x i32] }, align 8
  %b = alloca %"core::slice::iter::Iter<'_, u8>", align 8
  %a = alloca %"core::slice::iter::Iter<'_, u8>", align 8
  store ptr %0, ptr %a, align 8
  %5 = getelementptr inbounds i8, ptr %a, i64 8
  store ptr %1, ptr %5, align 8
  store ptr %2, ptr %b, align 8
  %6 = getelementptr inbounds i8, ptr %b, i64 8
  store ptr %3, ptr %6, align 8
; invoke core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %a_len = invoke i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hf914ea3fcbab55d7E(ptr align 8 %a)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %7 = load ptr, ptr %4, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %4, i64 8
  %9 = load i32, ptr %8, align 8, !noundef !3
  %10 = insertvalue { ptr, i32 } poison, ptr %7, 0
  %11 = insertvalue { ptr, i32 } %10, i32 %9, 1
  resume { ptr, i32 } %11

cleanup:                                          ; preds = %bb2, %bb1, %start
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %4, align 8
  %15 = getelementptr inbounds i8, ptr %4, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %v2 = invoke i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hf914ea3fcbab55d7E(ptr align 8 %b)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::cmp::min_by
  %len = invoke i64 @_ZN4core3cmp6min_by17h2372ffec580d3119E(i64 %a_len, i64 %v2)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb2
  %_8.0 = load ptr, ptr %a, align 8, !nonnull !3, !noundef !3
  %16 = getelementptr inbounds i8, ptr %a, i64 8
  %_8.1 = load ptr, ptr %16, align 8, !noundef !3
  %_9.0 = load ptr, ptr %b, align 8, !nonnull !3, !noundef !3
  %17 = getelementptr inbounds i8, ptr %b, i64 8
  %_9.1 = load ptr, ptr %17, align 8, !noundef !3
  store ptr %_8.0, ptr %_0, align 8
  %18 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_8.1, ptr %18, align 8
  %19 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %_0, i32 0, i32 1
  store ptr %_9.0, ptr %19, align 8
  %20 = getelementptr inbounds i8, ptr %19, i64 8
  store ptr %_9.1, ptr %20, align 8
  %21 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %_0, i32 0, i32 2
  store i64 0, ptr %21, align 8
  %22 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %_0, i32 0, i32 3
  store i64 %len, ptr %22, align 8
  %23 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %_0, i32 0, i32 4
  store i64 %a_len, ptr %23, align 8
  ret void
}

; <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17h66ed670bb52ca302E"(ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_6 = alloca { ptr, ptr }, align 8
  %_0 = alloca %"core::option::Option<(&u8, &u8)>", align 8
  %1 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %self, i32 0, i32 2
  %_3 = load i64, ptr %1, align 8, !noundef !3
  %2 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %self, i32 0, i32 3
  %_4 = load i64, ptr %2, align 8, !noundef !3
  %_2 = icmp ult i64 %_3, %_4
  br i1 %_2, label %bb1, label %bb4

bb4:                                              ; preds = %start
  br i1 false, label %bb5, label %bb10

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %self, i32 0, i32 2
  %i1 = load i64, ptr %3, align 8, !noundef !3
  %4 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %self, i32 0, i32 2
  %5 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %self, i32 0, i32 2
  %6 = load i64, ptr %5, align 8, !noundef !3
  %7 = add i64 %6, 1
  store i64 %7, ptr %4, align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_7 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h2351ebbf568da19dE"(ptr align 8 %self, i64 %i1)
  %_10 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %self, i32 0, i32 1
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_9 = invoke align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h2351ebbf568da19dE"(ptr align 8 %_10, i64 %i1)
          to label %bb3 unwind label %cleanup

bb10:                                             ; preds = %bb9, %bb4
  store ptr null, ptr %_0, align 8
  br label %bb11

bb5:                                              ; preds = %bb4
  %8 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %self, i32 0, i32 2
  %_13 = load i64, ptr %8, align 8, !noundef !3
  %9 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %self, i32 0, i32 4
  %_14 = load i64, ptr %9, align 8, !noundef !3
  %_12 = icmp ult i64 %_13, %_14
  br i1 %_12, label %bb6, label %bb9

bb9:                                              ; preds = %bb5
  br label %bb10

bb6:                                              ; preds = %bb5
  %10 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %self, i32 0, i32 2
  %i = load i64, ptr %10, align 8, !noundef !3
  %11 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %self, i32 0, i32 2
  %12 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %self, i32 0, i32 2
  %13 = load i64, ptr %12, align 8, !noundef !3
  %14 = add i64 %13, 1
  store i64 %14, ptr %11, align 8
  %15 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %self, i32 0, i32 3
  %16 = getelementptr inbounds %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", ptr %self, i32 0, i32 3
  %17 = load i64, ptr %16, align 8, !noundef !3
  %18 = add i64 %17, 1
  store i64 %18, ptr %15, align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %_16 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h2351ebbf568da19dE"(ptr align 8 %self, i64 %i)
  store ptr null, ptr %_0, align 8
  br label %bb11

bb11:                                             ; preds = %bb6, %bb10
  br label %bb12

bb12:                                             ; preds = %bb3, %bb11
  %19 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %20 = getelementptr inbounds i8, ptr %_0, i64 8
  %21 = load ptr, ptr %20, align 8
  %22 = insertvalue { ptr, ptr } poison, ptr %19, 0
  %23 = insertvalue { ptr, ptr } %22, ptr %21, 1
  ret { ptr, ptr } %23

bb13:                                             ; preds = %cleanup
  %24 = load ptr, ptr %0, align 8, !noundef !3
  %25 = getelementptr inbounds i8, ptr %0, i64 8
  %26 = load i32, ptr %25, align 8, !noundef !3
  %27 = insertvalue { ptr, i32 } poison, ptr %24, 0
  %28 = insertvalue { ptr, i32 } %27, i32 %26, 1
  resume { ptr, i32 } %28

cleanup:                                          ; preds = %bb1
  %29 = landingpad { ptr, i32 }
          cleanup
  %30 = extractvalue { ptr, i32 } %29, 0
  %31 = extractvalue { ptr, i32 } %29, 1
  store ptr %30, ptr %0, align 8
  %32 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %31, ptr %32, align 8
  br label %bb13

bb3:                                              ; preds = %bb1
  store ptr %_7, ptr %_6, align 8
  %33 = getelementptr inbounds i8, ptr %_6, i64 8
  store ptr %_9, ptr %33, align 8
  %34 = load ptr, ptr %_6, align 8, !nonnull !3, !align !4, !noundef !3
  %35 = getelementptr inbounds i8, ptr %_6, i64 8
  %36 = load ptr, ptr %35, align 8, !nonnull !3, !align !4, !noundef !3
  store ptr %34, ptr %_0, align 8
  %37 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %36, ptr %37, align 8
  br label %bb12
}

; <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFrom<usize>>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN113_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFrom$LT$usize$GT$$GT$$GT$5index17h5518cacbec564e85E"(ptr align 8 %self, i64 %index, ptr align 8 %0) unnamed_addr #0 {
start:
  %_18 = alloca %"core::option::Option<&str>", align 8
  %_15 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %1, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %2, align 8, !noundef !3
  store ptr %self1, ptr %_15, align 8
  %3 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %len, ptr %3, align 8
  %4 = load ptr, ptr %_15, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_15, i64 8
  %6 = load i64, ptr %5, align 8, !noundef !3
  store ptr %4, ptr %_14, align 8
  %7 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %6, ptr %7, align 8
  %v.0 = load ptr, ptr %_14, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_14, i64 8
  %v.1 = load i64, ptr %8, align 8, !noundef !3
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
  %9 = call { ptr, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17ha14e1e946f0efbd3E"(i64 %index, ptr align 1 %v.0, i64 %v.1)
  %10 = extractvalue { ptr, i64 } %9, 0
  %11 = extractvalue { ptr, i64 } %9, 1
  store ptr %10, ptr %_18, align 8
  %12 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %11, ptr %12, align 8
  %13 = load ptr, ptr %_18, align 8, !noundef !3
  %14 = ptrtoint ptr %13 to i64
  %15 = icmp eq i64 %14, 0
  %_19 = select i1 %15, i64 0, i64 1
  %16 = icmp eq i64 %_19, 0
  br i1 %16, label %bb2, label %bb3

bb2:                                              ; preds = %start
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h9c5d67f5de864a44E(ptr align 1 %v.0, i64 %v.1, i64 %index, i64 %v.1, ptr align 8 %0) #27
  unreachable

bb3:                                              ; preds = %start
  %s.0 = load ptr, ptr %_18, align 8, !nonnull !3, !align !4, !noundef !3
  %17 = getelementptr inbounds i8, ptr %_18, i64 8
  %s.1 = load i64, ptr %17, align 8, !noundef !3
  %18 = insertvalue { ptr, i64 } poison, ptr %s.0, 0
  %19 = insertvalue { ptr, i64 } %18, i64 %s.1, 1
  ret { ptr, i64 } %19

bb4:                                              ; No predecessors!
  unreachable
}

; <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN114_$LT$core..iter..adapters..flatten..FlatMap$LT$I$C$U$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3509507725d469b9E"(ptr align 8 %self) unnamed_addr #0 {
start:
; call <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next
  %0 = call { ptr, i64 } @"_ZN116_$LT$core..iter..adapters..flatten..FlattenCompat$LT$I$C$U$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc28c0453fa66aec1E"(ptr align 8 %self)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN115_$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$$LP$$RP$$GT$$GT$9call_once17ha50d2a5b743d107cE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_2 = alloca {}, align 1
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17hf0a475157b7220a7E(ptr align 8 %self)
  ret void
}

; <core::iter::adapters::flatten::FlattenCompat<I,U> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN116_$LT$core..iter..adapters..flatten..FlattenCompat$LT$I$C$U$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hc28c0453fa66aec1E"(ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_12 = alloca %"alloc::vec::into_iter::IntoIter<&str>", align 8
  %_11 = alloca %"core::option::Option<alloc::vec::into_iter::IntoIter<&str>>", align 8
  %inner = alloca %"alloc::vec::Vec<&str>", align 8
  %_6 = alloca %"core::option::Option<alloc::vec::Vec<&str>>", align 8
  %_2 = alloca %"core::option::Option<&str>", align 8
  %_0 = alloca %"core::option::Option<&str>", align 8
  br label %bb1

bb1:                                              ; preds = %bb11, %start
; call core::iter::adapters::flatten::and_then_or_clear
  %1 = call { ptr, i64 } @_ZN4core4iter8adapters7flatten17and_then_or_clear17hd5d151cdc3c95050E(ptr align 8 %self)
  %2 = extractvalue { ptr, i64 } %1, 0
  %3 = extractvalue { ptr, i64 } %1, 1
  store ptr %2, ptr %_2, align 8
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %3, ptr %4, align 8
  %5 = load ptr, ptr %_2, align 8, !noundef !3
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_4 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_4, 1
  br i1 %8, label %bb3, label %bb4

bb3:                                              ; preds = %bb1
  %elt.0 = load ptr, ptr %_2, align 8, !align !4, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_2, i64 8
  %elt.1 = load i64, ptr %9, align 8
  store ptr %elt.0, ptr %_0, align 8
  %10 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %elt.1, ptr %10, align 8
  br label %bb13

bb4:                                              ; preds = %bb1
  %self1 = getelementptr inbounds %"core::iter::adapters::flatten::FlattenCompat<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>, alloc::vec::into_iter::IntoIter<&str>>", ptr %self, i32 0, i32 2
; call <core::iter::adapters::fuse::Fuse<I> as core::iter::adapters::fuse::FuseImpl<I>>::next
  call void @"_ZN107_$LT$core..iter..adapters..fuse..Fuse$LT$I$GT$$u20$as$u20$core..iter..adapters..fuse..FuseImpl$LT$I$GT$$GT$4next17h7fd4b882a52050dfE"(ptr sret(%"core::option::Option<alloc::vec::Vec<&str>>") align 8 %_6, ptr align 8 %self1)
  %11 = load i64, ptr %_6, align 8, !range !12, !noundef !3
  %12 = icmp eq i64 %11, -9223372036854775808
  %_8 = select i1 %12, i64 0, i64 1
  %13 = icmp eq i64 %_8, 0
  br i1 %13, label %bb8, label %bb6

bb13:                                             ; preds = %bb8, %bb3
  %14 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %15 = getelementptr inbounds i8, ptr %_0, i64 8
  %16 = load i64, ptr %15, align 8
  %17 = insertvalue { ptr, i64 } poison, ptr %14, 0
  %18 = insertvalue { ptr, i64 } %17, i64 %16, 1
  ret { ptr, i64 } %18

bb8:                                              ; preds = %bb4
  %_9 = getelementptr inbounds %"core::iter::adapters::flatten::FlattenCompat<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>, alloc::vec::into_iter::IntoIter<&str>>", ptr %self, i32 0, i32 1
; call core::iter::adapters::flatten::and_then_or_clear
  %19 = call { ptr, i64 } @_ZN4core4iter8adapters7flatten17and_then_or_clear17hd5d151cdc3c95050E(ptr align 8 %_9)
  %20 = extractvalue { ptr, i64 } %19, 0
  %21 = extractvalue { ptr, i64 } %19, 1
  store ptr %20, ptr %_0, align 8
  %22 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %21, ptr %22, align 8
  br label %bb13

bb6:                                              ; preds = %bb4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %inner, ptr align 8 %_6, i64 24, i1 false)
; call <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hea4a6b49e6435c75E"(ptr sret(%"alloc::vec::into_iter::IntoIter<&str>") align 8 %_12, ptr align 8 %inner)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_11, ptr align 8 %_12, i64 32, i1 false)
; invoke core::ptr::drop_in_place<core::option::Option<alloc::vec::into_iter::IntoIter<&str>>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$$GT$17h75209443e728ad1dE"(ptr align 8 %self)
          to label %bb11 unwind label %cleanup

bb12:                                             ; preds = %cleanup
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_11, i64 32, i1 false)
  %23 = load ptr, ptr %0, align 8, !noundef !3
  %24 = getelementptr inbounds i8, ptr %0, i64 8
  %25 = load i32, ptr %24, align 8, !noundef !3
  %26 = insertvalue { ptr, i32 } poison, ptr %23, 0
  %27 = insertvalue { ptr, i32 } %26, i32 %25, 1
  resume { ptr, i32 } %27

cleanup:                                          ; preds = %bb6
  %28 = landingpad { ptr, i32 }
          cleanup
  %29 = extractvalue { ptr, i32 } %28, 0
  %30 = extractvalue { ptr, i32 } %28, 1
  store ptr %29, ptr %0, align 8
  %31 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %30, ptr %31, align 8
  br label %bb12

bb11:                                             ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_11, i64 32, i1 false)
  br label %bb1

bb7:                                              ; No predecessors!
  unreachable
}

; <alloc::collections::btree::map::BTreeMap<K,V,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN119_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h07ec5246e2a90958E"(ptr sret(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_32 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_28 = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_27 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_26 = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_25 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_14 = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %self1 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %full_range = alloca %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %result = alloca %"core::option::Option<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", align 8
  %me = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %me, ptr align 8 %self, i64 24, i1 false)
  %0 = load ptr, ptr %me, align 8, !noundef !3
  %1 = getelementptr inbounds i8, ptr %me, i64 8
  %2 = load i64, ptr %1, align 8
  store ptr %0, ptr %result, align 8
  %3 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %2, ptr %3, align 8
  %4 = load ptr, ptr @1, align 8, !noundef !3
  %5 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %4, ptr %me, align 8
  %6 = getelementptr inbounds i8, ptr %me, i64 8
  store i64 %5, ptr %6, align 8
  %7 = load ptr, ptr %result, align 8, !noundef !3
  %8 = ptrtoint ptr %7 to i64
  %9 = icmp eq i64 %8, 0
  %_6 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_6, 1
  br i1 %10, label %bb1, label %bb2

bb1:                                              ; preds = %start
  %11 = getelementptr inbounds i8, ptr %result, i64 8
  %root = load i64, ptr %11, align 8, !noundef !3
  %root2 = load ptr, ptr %result, align 8, !nonnull !3, !noundef !3
  %12 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %root, ptr %12, align 8
  store ptr %root2, ptr %self1, align 8
  %self2.0 = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  %13 = getelementptr inbounds i8, ptr %self1, i64 8
  %self2.1 = load i64, ptr %13, align 8, !noundef !3
  %root1.0 = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  %14 = getelementptr inbounds i8, ptr %self1, i64 8
  %root1.1 = load i64, ptr %14, align 8, !noundef !3
  %15 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root", ptr %_26, i32 0, i32 1
  store ptr %root1.0, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %15, i64 8
  store i64 %root1.1, ptr %16, align 8
  store ptr null, ptr %_26, align 8
  %17 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some", ptr %_25, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %_26, i64 24, i1 false)
  store i64 1, ptr %_25, align 8
  %18 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root", ptr %_28, i32 0, i32 1
  store ptr %self2.0, ptr %18, align 8
  %19 = getelementptr inbounds i8, ptr %18, i64 8
  store i64 %self2.1, ptr %19, align 8
  store ptr null, ptr %_28, align 8
  %20 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some", ptr %_27, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %_28, i64 24, i1 false)
  store i64 1, ptr %_27, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %full_range, ptr align 8 %_25, i64 32, i1 false)
  %21 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %full_range, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %_27, i64 32, i1 false)
  %22 = getelementptr inbounds %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %me, i32 0, i32 1
  %_9 = load i64, ptr %22, align 8, !noundef !3
  %slot = getelementptr inbounds %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %me, i32 0, i32 2
  %src = getelementptr inbounds %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %me, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %full_range, i64 64, i1 false)
  %23 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %_0, i32 0, i32 1
  store i64 %_9, ptr %23, align 8
  br label %bb3

bb2:                                              ; preds = %start
  store i64 0, ptr %_32, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_14, ptr align 8 %_32, i64 32, i1 false)
  %24 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %_14, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %_32, i64 32, i1 false)
  %slot3 = getelementptr inbounds %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %me, i32 0, i32 2
  %src4 = getelementptr inbounds %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %me, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_14, i64 64, i1 false)
  %25 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %25, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  ret void
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17he00e02b866c5e4a3E"(ptr align 8 %self, ptr %0, ptr %1) unnamed_addr #1 {
start:
  %_24.i = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_23.i = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %len.i = alloca i64, align 8
  %iterator = alloca %"core::slice::iter::Iter<'_, u8>", align 8
  store ptr %0, ptr %iterator, align 8
  %2 = getelementptr inbounds i8, ptr %iterator, i64 8
  store ptr %1, ptr %2, align 8
  %self1.i = load ptr, ptr %iterator, align 8, !nonnull !3, !noundef !3
  %self2.i = getelementptr inbounds i8, ptr %iterator, i64 8
  %end.i = load ptr, ptr %self2.i, align 8, !nonnull !3, !noundef !3
  %3 = ptrtoint ptr %end.i to i64
  %4 = ptrtoint ptr %self1.i to i64
  %5 = sub nuw i64 %3, %4
  store i64 %5, ptr %len.i, align 8
  store ptr %self1.i, ptr %_24.i, align 8
  %6 = load i64, ptr %len.i, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_24.i, i64 8
  store i64 %6, ptr %7, align 8
  %8 = load ptr, ptr %_24.i, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_24.i, i64 8
  %10 = load i64, ptr %9, align 8, !noundef !3
  store ptr %8, ptr %_23.i, align 8
  %11 = getelementptr inbounds i8, ptr %_23.i, i64 8
  store i64 %10, ptr %11, align 8
  %_21.0.i = load ptr, ptr %_23.i, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %_23.i, i64 8
  %_21.1.i = load i64, ptr %12, align 8, !noundef !3
  %13 = insertvalue { ptr, i64 } poison, ptr %_21.0.i, 0
  %14 = insertvalue { ptr, i64 } %13, i64 %_21.1.i, 1
  %slice.0 = extractvalue { ptr, i64 } %14, 0
  %slice.1 = extractvalue { ptr, i64 } %14, 1
; call alloc::vec::Vec<T,A>::reserve
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h19c8589e8d2b1e26E"(ptr align 8 %self, i64 %slice.1)
  %15 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %15, align 8, !noundef !3
  %16 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %16, align 8, !nonnull !3, !noundef !3
  %dst = getelementptr inbounds i8, ptr %self1, i64 %len
  %17 = mul i64 %slice.1, 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %dst, ptr align 1 %slice.0, i64 %17, i1 false)
  %18 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %19 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %20 = load i64, ptr %19, align 8, !noundef !3
  %21 = add i64 %20, %slice.1
  store i64 %21, ptr %18, align 8
  ret void
}

; <core::ops::range::Range<usize> as core::iter::adapters::step_by::SpecRangeSetup<core::ops::range::Range<usize>>>::setup
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN146_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..iter..adapters..step_by..SpecRangeSetup$LT$core..ops..range..Range$LT$usize$GT$$GT$$GT$5setup17h5e70928bd34d0b30E"(i64 %0, i64 %1, i64 %step) unnamed_addr #0 {
start:
  %_4 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %r = alloca %"core::ops::range::Range<usize>", align 8
  store i64 %0, ptr %r, align 8
  %2 = getelementptr inbounds i8, ptr %r, i64 8
  store i64 %1, ptr %2, align 8
; call core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint
  call void @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9size_hint17h87d8fd2584c87018E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_4, ptr align 8 %r)
  %inner_len = load i64, ptr %_4, align 8, !noundef !3
; call core::num::<impl usize>::div_ceil
  %yield_count = call i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h782c7d6668ed2ee8E"(i64 %inner_len, i64 %step, ptr align 8 @alloc_b431752402c9f48eb01e62d17243507d)
  %3 = getelementptr inbounds i8, ptr %r, i64 8
  store i64 %yield_count, ptr %3, align 8
  %_0.0 = load i64, ptr %r, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %r, i64 8
  %_0.1 = load i64, ptr %4, align 8, !noundef !3
  %5 = insertvalue { i64, i64 } poison, i64 %_0.0, 0
  %6 = insertvalue { i64, i64 } %5, i64 %_0.1, 1
  ret { i64, i64 } %6
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h019591430e0a6fe7E"(ptr align 8 %0) unnamed_addr #0 {
start:
  %_0 = alloca i8, align 1
  store i8 1, ptr %_0, align 1
  %1 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %2 = trunc i8 %1 to i1
  ret i1 %2
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h57b9abc95ad18888E"(ptr sret(%"core::result::Result<Library, Error>") align 8 %_0, ptr align 8 %residual, ptr align 8 %0) unnamed_addr #0 {
start:
  %_3 = alloca %Error, align 8
  %e = alloca %Error, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e, ptr align 8 %residual, i64 112, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %e, i64 112, i1 false)
  %1 = getelementptr inbounds %"core::result::Result<Library, Error>::Err", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %_3, i64 112, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  ret void
}

; <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h99b8b558c7f443dfE"(ptr sret(%"core::result::Result<alloc::string::String, Error>") align 8 %_0, ptr align 8 %residual, ptr align 8 %0) unnamed_addr #0 {
start:
  %_3 = alloca %Error, align 8
  %e = alloca %Error, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e, ptr align 8 %residual, i64 112, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %e, i64 112, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_3, i64 112, i1 false)
  ret void
}

; <<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN157_$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha52546d9e6167d2dE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_19 = alloca ptr, align 8
  %_17 = alloca ptr, align 8
  %cap = alloca i64, align 8
  %_4 = alloca %"alloc::raw_vec::RawVec<&str>", align 8
  %_8 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
  %slot = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %_8, i32 0, i32 5
  %src = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %_8, i32 0, i32 5
  %_9 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
  %self1 = load ptr, ptr %_9, align 8, !nonnull !3, !noundef !3
  %_10 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
  %0 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %_10, i32 0, i32 2
  %capacity = load i64, ptr %0, align 8, !noundef !3
  br i1 false, label %bb2, label %bb3

bb3:                                              ; preds = %start
  store i64 %capacity, ptr %cap, align 8
  br label %bb4

bb2:                                              ; preds = %start
  store i64 0, ptr %cap, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  store ptr %self1, ptr %_19, align 8
  %1 = load ptr, ptr %_19, align 8, !nonnull !3, !noundef !3
  store ptr %1, ptr %_17, align 8
  %_18 = load i64, ptr %cap, align 8, !range !13, !noundef !3
  %2 = load ptr, ptr %_17, align 8, !nonnull !3, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_4, i64 8
  store ptr %2, ptr %3, align 8
  store i64 %_18, ptr %_4, align 8
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h08340d9e774abd8aE"(ptr align 8 %_4)
  ret void
}

; <<alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop::DropGuard<K,V,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN174_$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h583c74dadd6bfa98E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_2 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", align 8
  br label %bb1

bb1:                                              ; preds = %bb3, %start
  %_6 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call alloc::collections::btree::map::IntoIter<K,V,A>::dying_next
  call void @"_ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17he878847a6e2c6d8bE"(ptr sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>") align 8 %_2, ptr align 8 %_6)
  %0 = load ptr, ptr %_2, align 8, !noundef !3
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_3 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_3, 1
  br i1 %3, label %bb3, label %bb5

bb3:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %kv, ptr align 8 %_2, i64 24, i1 false)
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::drop_key_val
  call void @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$12drop_key_val17h6ee72494bcf30979E"(ptr align 8 %kv)
  br label %bb1

bb5:                                              ; preds = %bb1
  ret void
}

; <T as core::any::Any>::type_id
; Function Attrs: nonlazybind uwtable
define i128 @"_ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h106c7fd780718957E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = alloca i128, align 16
  %_0 = alloca i128, align 16
  store i128 -3011075744290844973410273712836543551, ptr %0, align 16
  %t = load i128, ptr %0, align 16, !noundef !3
  store i128 %t, ptr %_0, align 16
  %1 = load i128, ptr %_0, align 16, !noundef !3
  ret i128 %1
}

; std::sys_common::backtrace::__rust_end_short_backtrace
; Function Attrs: noinline noreturn nonlazybind uwtable
define void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17h25cb1b395ce9abd5E(ptr align 8 %f) unnamed_addr #2 {
start:
; call std::panicking::begin_panic::{{closure}}
  call void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17hdfa270edff9aba9cE"(ptr align 8 %f) #27
  call void asm sideeffect "", "~{memory}"(), !srcloc !14
  call void @llvm.trap()
  unreachable
}

; std::collections::hash::map::HashMap<K,V>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std11collections4hash3map20HashMap$LT$K$C$V$GT$3new17h0efc3d5ac86ca5cbE"(ptr sret(%"std::collections::hash::map::HashMap<alloc::string::String, core::option::Option<alloc::string::String>>") align 8 %_0) unnamed_addr #0 {
start:
  %_4 = alloca %"core::result::Result<std::hash::random::RandomState, std::thread::local::AccessError>", align 8
  %_3 = alloca %"hashbrown::raw::RawTable<(alloc::string::String, core::option::Option<alloc::string::String>)>", align 8
  %_2 = alloca %"hashbrown::map::HashMap<alloc::string::String, core::option::Option<alloc::string::String>, std::hash::random::RandomState>", align 8
; call std::thread::local::LocalKey<T>::try_with
  call void @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h64011cd372704556E"(ptr sret(%"core::result::Result<std::hash::random::RandomState, std::thread::local::AccessError>") align 8 %_4, ptr align 8 @alloc_a822ce35c8c5e140e883afaff17ee3ea)
; call core::result::Result<T,E>::expect
  %0 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h25a945615cfc4e89E"(ptr align 8 %_4, ptr align 1 @alloc_2ee7ba9733a263ad3a32ba87b5ec3eae, i64 70, ptr align 8 @alloc_53c9d03fb0aaa6061b80c9d9bdabebac)
  %hash_builder.0 = extractvalue { i64, i64 } %0, 0
  %hash_builder.1 = extractvalue { i64, i64 } %0, 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 @2, i64 32, i1 false)
  %1 = getelementptr inbounds %"hashbrown::map::HashMap<alloc::string::String, core::option::Option<alloc::string::String>, std::hash::random::RandomState>", ptr %_2, i32 0, i32 1
  store i64 %hash_builder.0, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %1, i64 8
  store i64 %hash_builder.1, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %_3, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 48, i1 false)
  ret void
}

; std::collections::hash::map::HashMap<K,V,S>::insert
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std11collections4hash3map24HashMap$LT$K$C$V$C$S$GT$6insert17h1f4e78aba2e29e02E"(ptr sret(%"core::option::Option<core::option::Option<alloc::string::String>>") align 8 %_0, ptr align 8 %self, ptr align 8 %k, ptr align 8 %v) unnamed_addr #0 {
start:
; call hashbrown::map::HashMap<K,V,S,A>::insert
  call void @"_ZN9hashbrown3map28HashMap$LT$K$C$V$C$S$C$A$GT$6insert17h6ba4d1f3ba59c3b0E"(ptr sret(%"core::option::Option<core::option::Option<alloc::string::String>>") align 8 %_0, ptr align 8 %self, ptr align 8 %k, ptr align 8 %v)
  ret void
}

; std::fs::Metadata
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std2fs8Metadata17hc88def3cb05947efE(ptr sret(%"std::fs::Metadata") align 8 %_0, ptr align 8 %_1) unnamed_addr #0 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_1, i64 176, i1 false)
  ret void
}

; std::fs::metadata
; Function Attrs: nonlazybind uwtable
define void @_ZN3std2fs8metadata17hc3fc48999219e660E(ptr sret(%"core::result::Result<std::fs::Metadata, std::io::error::Error>") align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_2 = alloca %"core::result::Result<std::sys::pal::unix::fs::FileAttr, std::io::error::Error>", align 8
  %path = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %path, align 8
  %3 = getelementptr inbounds i8, ptr %path, i64 8
  store i64 %1, ptr %3, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %4 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h33c19d34d1e2a592E"(ptr align 8 %path)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %5 = load ptr, ptr %2, align 8, !noundef !3
  %6 = getelementptr inbounds i8, ptr %2, i64 8
  %7 = load i32, ptr %6, align 8, !noundef !3
  %8 = insertvalue { ptr, i32 } poison, ptr %5, 0
  %9 = insertvalue { ptr, i32 } %8, i32 %7, 1
  resume { ptr, i32 } %9

cleanup:                                          ; preds = %bb2, %bb1, %start
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  %12 = extractvalue { ptr, i32 } %10, 1
  store ptr %11, ptr %2, align 8
  %13 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb5

bb1:                                              ; preds = %start
  %_3.0 = extractvalue { ptr, i64 } %4, 0
  %_3.1 = extractvalue { ptr, i64 } %4, 1
; invoke std::sys::pal::unix::fs::stat
  invoke void @_ZN3std3sys3pal4unix2fs4stat17hf684e63aa6a8db72E(ptr sret(%"core::result::Result<std::sys::pal::unix::fs::FileAttr, std::io::error::Error>") align 8 %_2, ptr align 1 %_3.0, i64 %_3.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke core::result::Result<T,E>::map
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h887dfb7c4a182c3eE"(ptr sret(%"core::result::Result<std::fs::Metadata, std::io::error::Error>") align 8 %_0, ptr align 8 %_2)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  ret void
}

; std::io::Write::write_all
; Function Attrs: nonlazybind uwtable
define ptr @_ZN3std2io5Write9write_all17hdaf622f06a6ae349E(ptr align 1 %self, ptr align 1 %0, i64 %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_40 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_39 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_33 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_21 = alloca ptr, align 8
  %_20 = alloca ptr, align 8
  %e = alloca ptr, align 8
  %_7 = alloca ptr, align 8
  %_4 = alloca %"core::result::Result<usize, std::io::error::Error>", align 8
  %_0 = alloca ptr, align 8
  %buf = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %buf, align 8
  %3 = getelementptr inbounds i8, ptr %buf, i64 8
  store i64 %1, ptr %3, align 8
  br label %bb1

bb1:                                              ; preds = %bb15, %start
  %self.0 = load ptr, ptr %buf, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %buf, i64 8
  %self.1 = load i64, ptr %4, align 8, !noundef !3
  %5 = icmp eq i64 %self.1, 0
  br i1 %5, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store ptr null, ptr %_0, align 8
  br label %bb13

bb3:                                              ; preds = %bb1
  %_5.0 = load ptr, ptr %buf, align 8, !nonnull !3, !align !4, !noundef !3
  %6 = getelementptr inbounds i8, ptr %buf, i64 8
  %_5.1 = load i64, ptr %6, align 8, !noundef !3
; call <std::sys::pal::unix::stdio::Stderr as std::io::Write>::write
  call void @"_ZN69_$LT$std..sys..pal..unix..stdio..Stderr$u20$as$u20$std..io..Write$GT$5write17hef8e66488f853197E"(ptr sret(%"core::result::Result<usize, std::io::error::Error>") align 8 %_4, ptr align 1 %self, ptr align 1 %_5.0, i64 %_5.1)
  %_6 = load i64, ptr %_4, align 8, !range !9, !noundef !3
  %7 = icmp eq i64 %_6, 0
  br i1 %7, label %bb5, label %bb8

bb13:                                             ; preds = %bb12, %bb2
  %8 = load ptr, ptr %_0, align 8, !noundef !3
  ret ptr %8

bb5:                                              ; preds = %bb3
  %9 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", ptr %_4, i32 0, i32 1
  %10 = load i64, ptr %9, align 8, !noundef !3
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %bb6, label %bb7

bb8:                                              ; preds = %bb3
  %12 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", ptr %_4, i32 0, i32 1
  store ptr %12, ptr %e, align 8
  %_16 = load ptr, ptr %e, align 8, !nonnull !3, !align !5, !noundef !3
; invoke std::io::error::Error::is_interrupted
  %_13 = invoke zeroext i1 @_ZN3std2io5error5Error14is_interrupted17h5ada0ae78486cae4E(ptr align 8 %_16)
          to label %bb9 unwind label %cleanup

bb6:                                              ; preds = %bb5
  store ptr @alloc_626cc8bfd6c94d404aa777557e31db63, ptr %_21, align 8
  %13 = load ptr, ptr %_21, align 8, !nonnull !3, !noundef !3
  store ptr %13, ptr %_20, align 8
  %14 = load ptr, ptr %_20, align 8, !nonnull !3, !noundef !3
  store ptr %14, ptr %_7, align 8
  %15 = load ptr, ptr %_7, align 8, !nonnull !3, !noundef !3
  store ptr %15, ptr %_0, align 8
  br label %bb12

bb7:                                              ; preds = %bb5
  %16 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Ok", ptr %_4, i32 0, i32 1
  %n = load i64, ptr %16, align 8, !noundef !3
  %self.01 = load ptr, ptr %buf, align 8, !nonnull !3, !align !4, !noundef !3
  %17 = getelementptr inbounds i8, ptr %buf, i64 8
  %self.12 = load i64, ptr %17, align 8, !noundef !3
  %_27 = icmp ugt i64 %n, %self.12
  br i1 %_27, label %bb20, label %bb21

bb12:                                             ; preds = %bb11, %bb6
  br label %bb13

bb21:                                             ; preds = %bb7
  store ptr %self.01, ptr %_33, align 8
  %18 = getelementptr inbounds i8, ptr %_33, i64 8
  store i64 %self.12, ptr %18, align 8
  %19 = getelementptr inbounds i8, ptr %_33, i64 8
  %self3 = load i64, ptr %19, align 8, !noundef !3
  %new_len = sub nuw i64 %self3, %n
  %data = getelementptr inbounds i8, ptr %self.01, i64 %n
  store ptr %data, ptr %_40, align 8
  %20 = getelementptr inbounds i8, ptr %_40, i64 8
  store i64 %new_len, ptr %20, align 8
  %21 = load ptr, ptr %_40, align 8, !noundef !3
  %22 = getelementptr inbounds i8, ptr %_40, i64 8
  %23 = load i64, ptr %22, align 8, !noundef !3
  store ptr %21, ptr %_39, align 8
  %24 = getelementptr inbounds i8, ptr %_39, i64 8
  store i64 %23, ptr %24, align 8
  %_30.0 = load ptr, ptr %_39, align 8, !noundef !3
  %25 = getelementptr inbounds i8, ptr %_39, i64 8
  %_30.1 = load i64, ptr %25, align 8, !noundef !3
  store ptr %_30.0, ptr %buf, align 8
  %26 = getelementptr inbounds i8, ptr %buf, i64 8
  store i64 %_30.1, ptr %26, align 8
  br label %bb17

bb20:                                             ; preds = %bb7
; invoke core::slice::index::slice_start_index_len_fail
  invoke void @_ZN4core5slice5index26slice_start_index_len_fail17hd7aab39f3024a402E(i64 %n, i64 %self.12, ptr align 8 @alloc_fac0d1a84180c12be4f158f9100794e3) #27
          to label %unreachable unwind label %cleanup

bb17:                                             ; preds = %bb10, %bb21
  %_17 = load i64, ptr %_4, align 8, !range !9, !noundef !3
  %27 = icmp eq i64 %_17, 1
  br i1 %27, label %bb16, label %bb15

bb19:                                             ; preds = %cleanup
  %_18 = load i64, ptr %_4, align 8, !range !9, !noundef !3
  %28 = icmp eq i64 %_18, 1
  br i1 %28, label %bb18, label %bb14

cleanup:                                          ; preds = %bb8, %bb20
  %29 = landingpad { ptr, i32 }
          cleanup
  %30 = extractvalue { ptr, i32 } %29, 0
  %31 = extractvalue { ptr, i32 } %29, 1
  store ptr %30, ptr %2, align 8
  %32 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %31, ptr %32, align 8
  br label %bb19

unreachable:                                      ; preds = %bb20
  unreachable

bb9:                                              ; preds = %bb8
  br i1 %_13, label %bb10, label %bb11

bb11:                                             ; preds = %bb9
  %33 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", ptr %_4, i32 0, i32 1
  %e4 = load ptr, ptr %33, align 8, !nonnull !3, !noundef !3
  store ptr %e4, ptr %_0, align 8
  br label %bb12

bb10:                                             ; preds = %bb9
  br label %bb17

bb16:                                             ; preds = %bb17
  %34 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", ptr %_4, i32 0, i32 1
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h4cd2efc890f62cf8E"(ptr align 8 %34)
  br label %bb15

bb15:                                             ; preds = %bb16, %bb17
  br label %bb1

bb18:                                             ; preds = %bb19
  %35 = getelementptr inbounds %"core::result::Result<usize, std::io::error::Error>::Err", ptr %_4, i32 0, i32 1
; invoke core::ptr::drop_in_place<std::io::error::Error>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h4cd2efc890f62cf8E"(ptr align 8 %35) #28
          to label %bb14 unwind label %terminate

bb14:                                             ; preds = %bb18, %bb19
  %36 = load ptr, ptr %2, align 8, !noundef !3
  %37 = getelementptr inbounds i8, ptr %2, i64 8
  %38 = load i32, ptr %37, align 8, !noundef !3
  %39 = insertvalue { ptr, i32 } poison, ptr %36, 0
  %40 = insertvalue { ptr, i32 } %39, i32 %38, 1
  resume { ptr, i32 } %40

terminate:                                        ; preds = %bb18
  %41 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %42 = extractvalue { ptr, i32 } %41, 0
  %43 = extractvalue { ptr, i32 } %41, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb22:                                             ; No predecessors!
  unreachable
}

; std::io::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define ptr @_ZN3std2io5Write9write_fmt17h51a4a8d86d82ae9bE(ptr align 1 %self, ptr align 8 %fmt) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_16 = alloca ptr, align 8
  %_15 = alloca ptr, align 8
  %_12 = alloca i8, align 1
  %_10 = alloca ptr, align 8
  %_4 = alloca i8, align 1
  %output = alloca %"std::io::Write::write_fmt::Adapter<'_, std::sys::pal::unix::stdio::Stderr>", align 8
  %_0 = alloca ptr, align 8
  store i8 1, ptr %_12, align 1
  store ptr %self, ptr %output, align 8
  %1 = getelementptr inbounds i8, ptr %output, i64 8
  store ptr null, ptr %1, align 8
; invoke core::fmt::write
  %2 = invoke zeroext i1 @_ZN4core3fmt5write17h938c332fdab924ebE(ptr align 1 %output, ptr align 8 @vtable.1, ptr align 8 %fmt)
          to label %bb1 unwind label %cleanup

bb7:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::io::Write::write_fmt::Adapter<std::sys::pal::unix::stdio::Stderr>>
  invoke void @"_ZN4core3ptr97drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..sys..pal..unix..stdio..Stderr$GT$$GT$17h74c246bc2543a069E"(ptr align 8 %output) #28
          to label %bb8 unwind label %terminate

cleanup:                                          ; preds = %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb7

bb1:                                              ; preds = %start
  %7 = zext i1 %2 to i8
  store i8 %7, ptr %_4, align 1
  %8 = load i8, ptr %_4, align 1, !range !10, !noundef !3
  %9 = trunc i8 %8 to i1
  %_7 = zext i1 %9 to i64
  %10 = icmp eq i64 %_7, 0
  br i1 %10, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  store ptr null, ptr %_0, align 8
  br label %bb11

bb2:                                              ; preds = %bb1
  %self1 = getelementptr inbounds i8, ptr %output, i64 8
  %11 = getelementptr inbounds i8, ptr %output, i64 8
  %12 = load ptr, ptr %11, align 8, !noundef !3
  %13 = ptrtoint ptr %12 to i64
  %14 = icmp eq i64 %13, 0
  %_14 = select i1 %14, i64 0, i64 1
  %_13 = icmp eq i64 %_14, 0
  %_8 = xor i1 %_13, true
  br i1 %_8, label %bb4, label %bb5

bb11:                                             ; preds = %bb6, %bb3
  %15 = load i8, ptr %_12, align 1, !range !10, !noundef !3
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb10, label %bb9

bb5:                                              ; preds = %bb2
  store ptr @alloc_5d9af7a776dc0d9eecd628aaf786bef9, ptr %_16, align 8
  %17 = load ptr, ptr %_16, align 8, !nonnull !3, !noundef !3
  store ptr %17, ptr %_15, align 8
  %18 = load ptr, ptr %_15, align 8, !nonnull !3, !noundef !3
  store ptr %18, ptr %_10, align 8
  %19 = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
  store ptr %19, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %bb2
  store i8 0, ptr %_12, align 1
  %20 = getelementptr inbounds i8, ptr %output, i64 8
  %21 = load ptr, ptr %20, align 8, !noundef !3
  store ptr %21, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  br label %bb11

bb9:                                              ; preds = %bb10, %bb11
  %22 = load ptr, ptr %_0, align 8, !noundef !3
  ret ptr %22

bb10:                                             ; preds = %bb11
  %23 = getelementptr inbounds i8, ptr %output, i64 8
; call core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  call void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h35920f8a41514dc6E"(ptr align 8 %23)
  br label %bb9

bb12:                                             ; No predecessors!
  unreachable

terminate:                                        ; preds = %bb7
  %24 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %25 = extractvalue { ptr, i32 } %24, 0
  %26 = extractvalue { ptr, i32 } %24, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb8:                                              ; preds = %bb7
  %27 = load ptr, ptr %0, align 8, !noundef !3
  %28 = getelementptr inbounds i8, ptr %0, i64 8
  %29 = load i32, ptr %28, align 8, !noundef !3
  %30 = insertvalue { ptr, i32 } poison, ptr %27, 0
  %31 = insertvalue { ptr, i32 } %30, i32 %29, 1
  resume { ptr, i32 } %31
}

; std::io::error::repr_bitpacked::decode_repr
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN3std2io5error14repr_bitpacked11decode_repr17h643e7b998b9adc2cE(ptr sret(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>") align 8 %_0, ptr %ptr) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca ptr, align 8
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_45 = alloca %"core::ptr::metadata::PtrComponents<()>", align 8
  %_44 = alloca %"core::ptr::metadata::PtrRepr<()>", align 8
  %_25 = alloca i8, align 1
  %_23 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %self = alloca i8, align 1
  %bits = alloca i64, align 8
  store i8 1, ptr %_25, align 1
  %2 = ptrtoint ptr %ptr to i64
  store i64 %2, ptr %bits, align 8
  %_6 = load i64, ptr %bits, align 8, !noundef !3
  %_5 = and i64 %_6, 3
  switch i64 %_5, label %bb1 [
    i64 2, label %bb2
    i64 3, label %bb3
    i64 0, label %bb5
    i64 1, label %bb6
  ]

bb1:                                              ; preds = %start
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @alloc_a500d906b91607583596fa15e63c2ada, i64 40, ptr align 8 @alloc_5f9ca26e4863825896f7978e113f791b) #27
          to label %unreachable unwind label %cleanup

bb2:                                              ; preds = %start
  %_10 = load i64, ptr %bits, align 8, !noundef !3
  %_8 = ashr i64 %_10, 32
  %code = trunc i64 %_8 to i32
  %3 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Os", ptr %_0, i32 0, i32 1
  store i32 %code, ptr %3, align 4
  store i8 0, ptr %_0, align 8
  br label %bb8

bb3:                                              ; preds = %start
  %_13 = load i64, ptr %bits, align 8, !noundef !3
  %_12 = lshr i64 %_13, 32
  %kind_bits = trunc i64 %_12 to i32
; invoke std::io::error::repr_bitpacked::kind_from_prim
  %4 = invoke i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17hc86544ca1ae31025E(i32 %kind_bits)
          to label %bb4 unwind label %cleanup, !range !15

bb5:                                              ; preds = %start
  store ptr %ptr, ptr %self1, align 8
  %5 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::SimpleMessage", ptr %_0, i32 0, i32 1
  store ptr %ptr, ptr %5, align 8
  store i8 2, ptr %_0, align 8
  br label %bb8

bb6:                                              ; preds = %start
  %6 = getelementptr i8, ptr %ptr, i64 -1
  store ptr %6, ptr %0, align 8
  %_41 = load ptr, ptr %0, align 8, !noundef !3
  store ptr %_41, ptr %_45, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_44, ptr align 8 %_45, i64 8, i1 false)
  %self2 = load ptr, ptr %_44, align 8, !noundef !3
  store i8 0, ptr %_25, align 1
  store ptr %self2, ptr %_23, align 8
  %7 = load ptr, ptr %_23, align 8, !noundef !3
; invoke <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{{closure}}
  %_21 = invoke align 8 ptr @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h9cfbb04b5664acdcE"(ptr %7)
          to label %bb7 unwind label %cleanup

bb8:                                              ; preds = %bb7, %bb5, %bb4, %bb2
  %8 = load i8, ptr %_25, align 1, !range !10, !noundef !3
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb11, label %bb9

bb13:                                             ; preds = %cleanup
  %10 = load i8, ptr %_25, align 1, !range !10, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb12, label %bb10

cleanup:                                          ; preds = %bb1, %bb6, %bb3
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %1, align 8
  %15 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb13

bb4:                                              ; preds = %bb3
  store i8 %4, ptr %self, align 1
  %16 = load i8, ptr %self, align 1, !range !15, !noundef !3
  %17 = icmp eq i8 %16, 41
  %_27 = select i1 %17, i64 0, i64 1
  %_47 = icmp eq i64 %_27, 1
  call void @llvm.assume(i1 %_47)
  %kind = load i8, ptr %self, align 1, !range !16, !noundef !3
  %18 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Simple", ptr %_0, i32 0, i32 1
  store i8 %kind, ptr %18, align 1
  store i8 1, ptr %_0, align 8
  br label %bb8

bb7:                                              ; preds = %bb6
  %19 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom", ptr %_0, i32 0, i32 1
  store ptr %_21, ptr %19, align 8
  store i8 3, ptr %_0, align 8
  br label %bb8

bb9:                                              ; preds = %bb11, %bb8
  ret void

bb11:                                             ; preds = %bb8
  br label %bb9

unreachable:                                      ; preds = %bb1
  unreachable

bb10:                                             ; preds = %bb12, %bb13
  %20 = load ptr, ptr %1, align 8, !noundef !3
  %21 = getelementptr inbounds i8, ptr %1, i64 8
  %22 = load i32, ptr %21, align 8, !noundef !3
  %23 = insertvalue { ptr, i32 } poison, ptr %20, 0
  %24 = insertvalue { ptr, i32 } %23, i32 %22, 1
  resume { ptr, i32 } %24

bb12:                                             ; preds = %bb13
  br label %bb10
}

; std::io::error::repr_bitpacked::decode_repr
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN3std2io5error14repr_bitpacked11decode_repr17hb2f416691d4c3b5dE(ptr sret(%"std::io::error::ErrorData<&std::io::error::Custom>") align 8 %_0, ptr %ptr) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca ptr, align 8
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_45 = alloca %"core::ptr::metadata::PtrComponents<()>", align 8
  %_44 = alloca %"core::ptr::metadata::PtrRepr<()>", align 8
  %_25 = alloca i8, align 1
  %_23 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %self = alloca i8, align 1
  %bits = alloca i64, align 8
  store i8 1, ptr %_25, align 1
  %2 = ptrtoint ptr %ptr to i64
  store i64 %2, ptr %bits, align 8
  %_6 = load i64, ptr %bits, align 8, !noundef !3
  %_5 = and i64 %_6, 3
  switch i64 %_5, label %bb1 [
    i64 2, label %bb2
    i64 3, label %bb3
    i64 0, label %bb5
    i64 1, label %bb6
  ]

bb1:                                              ; preds = %start
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @alloc_a500d906b91607583596fa15e63c2ada, i64 40, ptr align 8 @alloc_5f9ca26e4863825896f7978e113f791b) #27
          to label %unreachable unwind label %cleanup

bb2:                                              ; preds = %start
  %_10 = load i64, ptr %bits, align 8, !noundef !3
  %_8 = ashr i64 %_10, 32
  %code = trunc i64 %_8 to i32
  %3 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Os", ptr %_0, i32 0, i32 1
  store i32 %code, ptr %3, align 4
  store i8 0, ptr %_0, align 8
  br label %bb8

bb3:                                              ; preds = %start
  %_13 = load i64, ptr %bits, align 8, !noundef !3
  %_12 = lshr i64 %_13, 32
  %kind_bits = trunc i64 %_12 to i32
; invoke std::io::error::repr_bitpacked::kind_from_prim
  %4 = invoke i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17hc86544ca1ae31025E(i32 %kind_bits)
          to label %bb4 unwind label %cleanup, !range !15

bb5:                                              ; preds = %start
  store ptr %ptr, ptr %self1, align 8
  %5 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage", ptr %_0, i32 0, i32 1
  store ptr %ptr, ptr %5, align 8
  store i8 2, ptr %_0, align 8
  br label %bb8

bb6:                                              ; preds = %start
  %6 = getelementptr i8, ptr %ptr, i64 -1
  store ptr %6, ptr %0, align 8
  %_41 = load ptr, ptr %0, align 8, !noundef !3
  store ptr %_41, ptr %_45, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_44, ptr align 8 %_45, i64 8, i1 false)
  %self2 = load ptr, ptr %_44, align 8, !noundef !3
  store i8 0, ptr %_25, align 1
  store ptr %self2, ptr %_23, align 8
  %7 = load ptr, ptr %_23, align 8, !noundef !3
; invoke std::io::error::repr_bitpacked::Repr::data::{{closure}}
  %_21 = invoke align 8 ptr @"_ZN3std2io5error14repr_bitpacked4Repr4data28_$u7b$$u7b$closure$u7d$$u7d$17hc02286afb2010960E"(ptr %7)
          to label %bb7 unwind label %cleanup

bb8:                                              ; preds = %bb7, %bb5, %bb4, %bb2
  %8 = load i8, ptr %_25, align 1, !range !10, !noundef !3
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb11, label %bb9

bb13:                                             ; preds = %cleanup
  %10 = load i8, ptr %_25, align 1, !range !10, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb12, label %bb10

cleanup:                                          ; preds = %bb1, %bb6, %bb3
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %1, align 8
  %15 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb13

bb4:                                              ; preds = %bb3
  store i8 %4, ptr %self, align 1
  %16 = load i8, ptr %self, align 1, !range !15, !noundef !3
  %17 = icmp eq i8 %16, 41
  %_27 = select i1 %17, i64 0, i64 1
  %_47 = icmp eq i64 %_27, 1
  call void @llvm.assume(i1 %_47)
  %kind = load i8, ptr %self, align 1, !range !16, !noundef !3
  %18 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Simple", ptr %_0, i32 0, i32 1
  store i8 %kind, ptr %18, align 1
  store i8 1, ptr %_0, align 8
  br label %bb8

bb7:                                              ; preds = %bb6
  %19 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Custom", ptr %_0, i32 0, i32 1
  store ptr %_21, ptr %19, align 8
  store i8 3, ptr %_0, align 8
  br label %bb8

bb9:                                              ; preds = %bb11, %bb8
  ret void

bb11:                                             ; preds = %bb8
  br label %bb9

unreachable:                                      ; preds = %bb1
  unreachable

bb10:                                             ; preds = %bb12, %bb13
  %20 = load ptr, ptr %1, align 8, !noundef !3
  %21 = getelementptr inbounds i8, ptr %1, i64 8
  %22 = load i32, ptr %21, align 8, !noundef !3
  %23 = insertvalue { ptr, i32 } poison, ptr %20, 0
  %24 = insertvalue { ptr, i32 } %23, i32 %22, 1
  resume { ptr, i32 } %24

bb12:                                             ; preds = %bb13
  br label %bb10
}

; std::io::error::repr_bitpacked::kind_from_prim
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN3std2io5error14repr_bitpacked14kind_from_prim17hc86544ca1ae31025E(i32 %0) unnamed_addr #0 {
start:
  %_0 = alloca i8, align 1
  %ek = alloca i32, align 4
  store i32 %0, ptr %ek, align 4
  %_4 = load i32, ptr %ek, align 4, !noundef !3
  %1 = icmp eq i32 %_4, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %start
  %v = load i32, ptr %ek, align 4, !noundef !3
  store i8 0, ptr %_0, align 1
  br label %bb83

bb2:                                              ; preds = %start
  %_7 = load i32, ptr %ek, align 4, !noundef !3
  %2 = icmp eq i32 %_7, 1
  br i1 %2, label %bb3, label %bb4

bb83:                                             ; preds = %bb82, %bb81, %bb79, %bb77, %bb75, %bb73, %bb71, %bb69, %bb67, %bb65, %bb63, %bb61, %bb59, %bb57, %bb55, %bb53, %bb51, %bb49, %bb47, %bb45, %bb43, %bb41, %bb39, %bb37, %bb35, %bb33, %bb31, %bb29, %bb27, %bb25, %bb23, %bb21, %bb19, %bb17, %bb15, %bb13, %bb11, %bb9, %bb7, %bb5, %bb3, %bb1
  %3 = load i8, ptr %_0, align 1, !range !15, !noundef !3
  ret i8 %3

bb3:                                              ; preds = %bb2
  %v1 = load i32, ptr %ek, align 4, !noundef !3
  store i8 1, ptr %_0, align 1
  br label %bb83

bb4:                                              ; preds = %bb2
  %_10 = load i32, ptr %ek, align 4, !noundef !3
  %4 = icmp eq i32 %_10, 2
  br i1 %4, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v2 = load i32, ptr %ek, align 4, !noundef !3
  store i8 2, ptr %_0, align 1
  br label %bb83

bb6:                                              ; preds = %bb4
  %_13 = load i32, ptr %ek, align 4, !noundef !3
  %5 = icmp eq i32 %_13, 3
  br i1 %5, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %v3 = load i32, ptr %ek, align 4, !noundef !3
  store i8 3, ptr %_0, align 1
  br label %bb83

bb8:                                              ; preds = %bb6
  %_16 = load i32, ptr %ek, align 4, !noundef !3
  %6 = icmp eq i32 %_16, 4
  br i1 %6, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %v4 = load i32, ptr %ek, align 4, !noundef !3
  store i8 4, ptr %_0, align 1
  br label %bb83

bb10:                                             ; preds = %bb8
  %_19 = load i32, ptr %ek, align 4, !noundef !3
  %7 = icmp eq i32 %_19, 5
  br i1 %7, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v5 = load i32, ptr %ek, align 4, !noundef !3
  store i8 5, ptr %_0, align 1
  br label %bb83

bb12:                                             ; preds = %bb10
  %_22 = load i32, ptr %ek, align 4, !noundef !3
  %8 = icmp eq i32 %_22, 6
  br i1 %8, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v6 = load i32, ptr %ek, align 4, !noundef !3
  store i8 6, ptr %_0, align 1
  br label %bb83

bb14:                                             ; preds = %bb12
  %_25 = load i32, ptr %ek, align 4, !noundef !3
  %9 = icmp eq i32 %_25, 7
  br i1 %9, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %v7 = load i32, ptr %ek, align 4, !noundef !3
  store i8 7, ptr %_0, align 1
  br label %bb83

bb16:                                             ; preds = %bb14
  %_28 = load i32, ptr %ek, align 4, !noundef !3
  %10 = icmp eq i32 %_28, 8
  br i1 %10, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %v8 = load i32, ptr %ek, align 4, !noundef !3
  store i8 8, ptr %_0, align 1
  br label %bb83

bb18:                                             ; preds = %bb16
  %_31 = load i32, ptr %ek, align 4, !noundef !3
  %11 = icmp eq i32 %_31, 9
  br i1 %11, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  %v9 = load i32, ptr %ek, align 4, !noundef !3
  store i8 9, ptr %_0, align 1
  br label %bb83

bb20:                                             ; preds = %bb18
  %_34 = load i32, ptr %ek, align 4, !noundef !3
  %12 = icmp eq i32 %_34, 10
  br i1 %12, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v10 = load i32, ptr %ek, align 4, !noundef !3
  store i8 10, ptr %_0, align 1
  br label %bb83

bb22:                                             ; preds = %bb20
  %_37 = load i32, ptr %ek, align 4, !noundef !3
  %13 = icmp eq i32 %_37, 11
  br i1 %13, label %bb23, label %bb24

bb23:                                             ; preds = %bb22
  %v11 = load i32, ptr %ek, align 4, !noundef !3
  store i8 11, ptr %_0, align 1
  br label %bb83

bb24:                                             ; preds = %bb22
  %_40 = load i32, ptr %ek, align 4, !noundef !3
  %14 = icmp eq i32 %_40, 12
  br i1 %14, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  %v12 = load i32, ptr %ek, align 4, !noundef !3
  store i8 12, ptr %_0, align 1
  br label %bb83

bb26:                                             ; preds = %bb24
  %_43 = load i32, ptr %ek, align 4, !noundef !3
  %15 = icmp eq i32 %_43, 13
  br i1 %15, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v13 = load i32, ptr %ek, align 4, !noundef !3
  store i8 13, ptr %_0, align 1
  br label %bb83

bb28:                                             ; preds = %bb26
  %_46 = load i32, ptr %ek, align 4, !noundef !3
  %16 = icmp eq i32 %_46, 14
  br i1 %16, label %bb29, label %bb30

bb29:                                             ; preds = %bb28
  %v14 = load i32, ptr %ek, align 4, !noundef !3
  store i8 14, ptr %_0, align 1
  br label %bb83

bb30:                                             ; preds = %bb28
  %_49 = load i32, ptr %ek, align 4, !noundef !3
  %17 = icmp eq i32 %_49, 15
  br i1 %17, label %bb31, label %bb32

bb31:                                             ; preds = %bb30
  %v15 = load i32, ptr %ek, align 4, !noundef !3
  store i8 15, ptr %_0, align 1
  br label %bb83

bb32:                                             ; preds = %bb30
  %_52 = load i32, ptr %ek, align 4, !noundef !3
  %18 = icmp eq i32 %_52, 16
  br i1 %18, label %bb33, label %bb34

bb33:                                             ; preds = %bb32
  %v16 = load i32, ptr %ek, align 4, !noundef !3
  store i8 16, ptr %_0, align 1
  br label %bb83

bb34:                                             ; preds = %bb32
  %_55 = load i32, ptr %ek, align 4, !noundef !3
  %19 = icmp eq i32 %_55, 17
  br i1 %19, label %bb35, label %bb36

bb35:                                             ; preds = %bb34
  %v17 = load i32, ptr %ek, align 4, !noundef !3
  store i8 17, ptr %_0, align 1
  br label %bb83

bb36:                                             ; preds = %bb34
  %_58 = load i32, ptr %ek, align 4, !noundef !3
  %20 = icmp eq i32 %_58, 18
  br i1 %20, label %bb37, label %bb38

bb37:                                             ; preds = %bb36
  %v18 = load i32, ptr %ek, align 4, !noundef !3
  store i8 18, ptr %_0, align 1
  br label %bb83

bb38:                                             ; preds = %bb36
  %_61 = load i32, ptr %ek, align 4, !noundef !3
  %21 = icmp eq i32 %_61, 19
  br i1 %21, label %bb39, label %bb40

bb39:                                             ; preds = %bb38
  %v19 = load i32, ptr %ek, align 4, !noundef !3
  store i8 19, ptr %_0, align 1
  br label %bb83

bb40:                                             ; preds = %bb38
  %_64 = load i32, ptr %ek, align 4, !noundef !3
  %22 = icmp eq i32 %_64, 20
  br i1 %22, label %bb41, label %bb42

bb41:                                             ; preds = %bb40
  %v20 = load i32, ptr %ek, align 4, !noundef !3
  store i8 20, ptr %_0, align 1
  br label %bb83

bb42:                                             ; preds = %bb40
  %_67 = load i32, ptr %ek, align 4, !noundef !3
  %23 = icmp eq i32 %_67, 21
  br i1 %23, label %bb43, label %bb44

bb43:                                             ; preds = %bb42
  %v21 = load i32, ptr %ek, align 4, !noundef !3
  store i8 21, ptr %_0, align 1
  br label %bb83

bb44:                                             ; preds = %bb42
  %_70 = load i32, ptr %ek, align 4, !noundef !3
  %24 = icmp eq i32 %_70, 22
  br i1 %24, label %bb45, label %bb46

bb45:                                             ; preds = %bb44
  %v22 = load i32, ptr %ek, align 4, !noundef !3
  store i8 22, ptr %_0, align 1
  br label %bb83

bb46:                                             ; preds = %bb44
  %_73 = load i32, ptr %ek, align 4, !noundef !3
  %25 = icmp eq i32 %_73, 23
  br i1 %25, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  %v23 = load i32, ptr %ek, align 4, !noundef !3
  store i8 23, ptr %_0, align 1
  br label %bb83

bb48:                                             ; preds = %bb46
  %_76 = load i32, ptr %ek, align 4, !noundef !3
  %26 = icmp eq i32 %_76, 24
  br i1 %26, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  %v24 = load i32, ptr %ek, align 4, !noundef !3
  store i8 24, ptr %_0, align 1
  br label %bb83

bb50:                                             ; preds = %bb48
  %_79 = load i32, ptr %ek, align 4, !noundef !3
  %27 = icmp eq i32 %_79, 25
  br i1 %27, label %bb51, label %bb52

bb51:                                             ; preds = %bb50
  %v25 = load i32, ptr %ek, align 4, !noundef !3
  store i8 25, ptr %_0, align 1
  br label %bb83

bb52:                                             ; preds = %bb50
  %_82 = load i32, ptr %ek, align 4, !noundef !3
  %28 = icmp eq i32 %_82, 26
  br i1 %28, label %bb53, label %bb54

bb53:                                             ; preds = %bb52
  %v26 = load i32, ptr %ek, align 4, !noundef !3
  store i8 26, ptr %_0, align 1
  br label %bb83

bb54:                                             ; preds = %bb52
  %_85 = load i32, ptr %ek, align 4, !noundef !3
  %29 = icmp eq i32 %_85, 27
  br i1 %29, label %bb55, label %bb56

bb55:                                             ; preds = %bb54
  %v27 = load i32, ptr %ek, align 4, !noundef !3
  store i8 27, ptr %_0, align 1
  br label %bb83

bb56:                                             ; preds = %bb54
  %_88 = load i32, ptr %ek, align 4, !noundef !3
  %30 = icmp eq i32 %_88, 28
  br i1 %30, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  %v28 = load i32, ptr %ek, align 4, !noundef !3
  store i8 28, ptr %_0, align 1
  br label %bb83

bb58:                                             ; preds = %bb56
  %_91 = load i32, ptr %ek, align 4, !noundef !3
  %31 = icmp eq i32 %_91, 29
  br i1 %31, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v29 = load i32, ptr %ek, align 4, !noundef !3
  store i8 29, ptr %_0, align 1
  br label %bb83

bb60:                                             ; preds = %bb58
  %_94 = load i32, ptr %ek, align 4, !noundef !3
  %32 = icmp eq i32 %_94, 30
  br i1 %32, label %bb61, label %bb62

bb61:                                             ; preds = %bb60
  %v30 = load i32, ptr %ek, align 4, !noundef !3
  store i8 30, ptr %_0, align 1
  br label %bb83

bb62:                                             ; preds = %bb60
  %_97 = load i32, ptr %ek, align 4, !noundef !3
  %33 = icmp eq i32 %_97, 31
  br i1 %33, label %bb63, label %bb64

bb63:                                             ; preds = %bb62
  %v31 = load i32, ptr %ek, align 4, !noundef !3
  store i8 31, ptr %_0, align 1
  br label %bb83

bb64:                                             ; preds = %bb62
  %_100 = load i32, ptr %ek, align 4, !noundef !3
  %34 = icmp eq i32 %_100, 32
  br i1 %34, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  %v32 = load i32, ptr %ek, align 4, !noundef !3
  store i8 32, ptr %_0, align 1
  br label %bb83

bb66:                                             ; preds = %bb64
  %_103 = load i32, ptr %ek, align 4, !noundef !3
  %35 = icmp eq i32 %_103, 33
  br i1 %35, label %bb67, label %bb68

bb67:                                             ; preds = %bb66
  %v33 = load i32, ptr %ek, align 4, !noundef !3
  store i8 33, ptr %_0, align 1
  br label %bb83

bb68:                                             ; preds = %bb66
  %_106 = load i32, ptr %ek, align 4, !noundef !3
  %36 = icmp eq i32 %_106, 34
  br i1 %36, label %bb69, label %bb70

bb69:                                             ; preds = %bb68
  %v34 = load i32, ptr %ek, align 4, !noundef !3
  store i8 34, ptr %_0, align 1
  br label %bb83

bb70:                                             ; preds = %bb68
  %_109 = load i32, ptr %ek, align 4, !noundef !3
  %37 = icmp eq i32 %_109, 35
  br i1 %37, label %bb71, label %bb72

bb71:                                             ; preds = %bb70
  %v35 = load i32, ptr %ek, align 4, !noundef !3
  store i8 35, ptr %_0, align 1
  br label %bb83

bb72:                                             ; preds = %bb70
  %_112 = load i32, ptr %ek, align 4, !noundef !3
  %38 = icmp eq i32 %_112, 39
  br i1 %38, label %bb73, label %bb74

bb73:                                             ; preds = %bb72
  %v36 = load i32, ptr %ek, align 4, !noundef !3
  store i8 39, ptr %_0, align 1
  br label %bb83

bb74:                                             ; preds = %bb72
  %_115 = load i32, ptr %ek, align 4, !noundef !3
  %39 = icmp eq i32 %_115, 37
  br i1 %39, label %bb75, label %bb76

bb75:                                             ; preds = %bb74
  %v37 = load i32, ptr %ek, align 4, !noundef !3
  store i8 37, ptr %_0, align 1
  br label %bb83

bb76:                                             ; preds = %bb74
  %_118 = load i32, ptr %ek, align 4, !noundef !3
  %40 = icmp eq i32 %_118, 36
  br i1 %40, label %bb77, label %bb78

bb77:                                             ; preds = %bb76
  %v38 = load i32, ptr %ek, align 4, !noundef !3
  store i8 36, ptr %_0, align 1
  br label %bb83

bb78:                                             ; preds = %bb76
  %_121 = load i32, ptr %ek, align 4, !noundef !3
  %41 = icmp eq i32 %_121, 38
  br i1 %41, label %bb79, label %bb80

bb79:                                             ; preds = %bb78
  %v39 = load i32, ptr %ek, align 4, !noundef !3
  store i8 38, ptr %_0, align 1
  br label %bb83

bb80:                                             ; preds = %bb78
  %_124 = load i32, ptr %ek, align 4, !noundef !3
  %42 = icmp eq i32 %_124, 40
  br i1 %42, label %bb81, label %bb82

bb81:                                             ; preds = %bb80
  %v40 = load i32, ptr %ek, align 4, !noundef !3
  store i8 40, ptr %_0, align 1
  br label %bb83

bb82:                                             ; preds = %bb80
  store i8 41, ptr %_0, align 1
  br label %bb83
}

; std::io::error::repr_bitpacked::Repr::data::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN3std2io5error14repr_bitpacked4Repr4data28_$u7b$$u7b$closure$u7d$$u7d$17hc02286afb2010960E"(ptr %c) unnamed_addr #0 {
start:
  ret ptr %c
}

; std::io::error::Error::is_interrupted
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std2io5error5Error14is_interrupted17h5ada0ae78486cae4E(ptr align 8 %self) unnamed_addr #0 {
start:
  %kind = alloca i8, align 1
  %_2 = alloca %"std::io::error::ErrorData<&std::io::error::Custom>", align 8
  %_0 = alloca i8, align 1
  %_12 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
; call std::io::error::repr_bitpacked::decode_repr
  call void @_ZN3std2io5error14repr_bitpacked11decode_repr17hb2f416691d4c3b5dE(ptr sret(%"std::io::error::ErrorData<&std::io::error::Custom>") align 8 %_2, ptr %_12)
  %0 = load i8, ptr %_2, align 8, !range !17, !noundef !3
  %_4 = zext i8 %0 to i64
  switch i64 %_4, label %bb7 [
    i64 0, label %bb2
    i64 1, label %bb4
    i64 2, label %bb1
    i64 3, label %bb3
  ]

bb7:                                              ; preds = %start
  unreachable

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Os", ptr %_2, i32 0, i32 1
  %code = load i32, ptr %1, align 4, !noundef !3
  %2 = icmp eq i32 %code, 4
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %_0, align 1
  br label %bb5

bb4:                                              ; preds = %start
  %4 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Simple", ptr %_2, i32 0, i32 1
  %5 = load i8, ptr %4, align 1, !range !16, !noundef !3
  store i8 %5, ptr %kind, align 1
  %6 = load i8, ptr %kind, align 1, !range !16, !noundef !3
  %__self_tag = zext i8 %6 to i64
  %7 = icmp eq i64 %__self_tag, 35
  %8 = zext i1 %7 to i8
  store i8 %8, ptr %_0, align 1
  br label %bb5

bb1:                                              ; preds = %start
  %9 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage", ptr %_2, i32 0, i32 1
  %m = load ptr, ptr %9, align 8, !nonnull !3, !align !5, !noundef !3
  %self1 = getelementptr inbounds %"std::io::error::SimpleMessage", ptr %m, i32 0, i32 1
  %10 = getelementptr inbounds %"std::io::error::SimpleMessage", ptr %m, i32 0, i32 1
  %11 = load i8, ptr %10, align 8, !range !16, !noundef !3
  %__self_tag2 = zext i8 %11 to i64
  %12 = icmp eq i64 %__self_tag2, 35
  %13 = zext i1 %12 to i8
  store i8 %13, ptr %_0, align 1
  br label %bb5

bb3:                                              ; preds = %start
  %14 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Custom", ptr %_2, i32 0, i32 1
  %c = load ptr, ptr %14, align 8, !nonnull !3, !align !5, !noundef !3
  %self3 = getelementptr inbounds %"std::io::error::Custom", ptr %c, i32 0, i32 1
  %15 = getelementptr inbounds %"std::io::error::Custom", ptr %c, i32 0, i32 1
  %16 = load i8, ptr %15, align 8, !range !16, !noundef !3
  %__self_tag4 = zext i8 %16 to i64
  %17 = icmp eq i64 %__self_tag4, 35
  %18 = zext i1 %17 to i8
  store i8 %18, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb1, %bb4, %bb2
  %19 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %20 = trunc i8 %19 to i1
  ret i1 %20
}

; std::io::error::Error::kind
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN3std2io5error5Error4kind17h769a8be32f998f8bE(ptr align 8 %self) unnamed_addr #0 {
start:
  %_2 = alloca %"std::io::error::ErrorData<&std::io::error::Custom>", align 8
  %_0 = alloca i8, align 1
  %_9 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
; call std::io::error::repr_bitpacked::decode_repr
  call void @_ZN3std2io5error14repr_bitpacked11decode_repr17hb2f416691d4c3b5dE(ptr sret(%"std::io::error::ErrorData<&std::io::error::Custom>") align 8 %_2, ptr %_9)
  %0 = load i8, ptr %_2, align 8, !range !17, !noundef !3
  %_4 = zext i8 %0 to i64
  switch i64 %_4, label %bb7 [
    i64 0, label %bb2
    i64 1, label %bb4
    i64 2, label %bb1
    i64 3, label %bb3
  ]

bb7:                                              ; preds = %start
  unreachable

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Os", ptr %_2, i32 0, i32 1
  %code = load i32, ptr %1, align 4, !noundef !3
; call std::sys::pal::unix::decode_error_kind
  %2 = call i8 @_ZN3std3sys3pal4unix17decode_error_kind17h721babe45d5231baE(i32 %code), !range !16
  store i8 %2, ptr %_0, align 1
  br label %bb5

bb4:                                              ; preds = %start
  %3 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Simple", ptr %_2, i32 0, i32 1
  %kind = load i8, ptr %3, align 1, !range !16, !noundef !3
  store i8 %kind, ptr %_0, align 1
  br label %bb5

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::SimpleMessage", ptr %_2, i32 0, i32 1
  %m = load ptr, ptr %4, align 8, !nonnull !3, !align !5, !noundef !3
  %5 = getelementptr inbounds %"std::io::error::SimpleMessage", ptr %m, i32 0, i32 1
  %6 = load i8, ptr %5, align 8, !range !16, !noundef !3
  store i8 %6, ptr %_0, align 1
  br label %bb5

bb3:                                              ; preds = %start
  %7 = getelementptr inbounds %"std::io::error::ErrorData<&std::io::error::Custom>::Custom", ptr %_2, i32 0, i32 1
  %c = load ptr, ptr %7, align 8, !nonnull !3, !align !5, !noundef !3
  %8 = getelementptr inbounds %"std::io::error::Custom", ptr %c, i32 0, i32 1
  %9 = load i8, ptr %8, align 8, !range !16, !noundef !3
  store i8 %9, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb1, %bb4, %bb2
  %10 = load i8, ptr %_0, align 1, !range !16, !noundef !3
  ret i8 %10
}

; std::env::var
; Function Attrs: nonlazybind uwtable
define void @_ZN3std3env3var17h7eb44638e42656b6E(ptr sret(%"core::result::Result<alloc::string::String, std::env::VarError>") align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %key = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %key, align 8
  %3 = getelementptr inbounds i8, ptr %key, i64 8
  store i64 %1, ptr %3, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %4 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7bec7ec48adc293eE"(ptr align 8 %key)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %5 = load ptr, ptr %2, align 8, !noundef !3
  %6 = getelementptr inbounds i8, ptr %2, i64 8
  %7 = load i32, ptr %6, align 8, !noundef !3
  %8 = insertvalue { ptr, i32 } poison, ptr %5, 0
  %9 = insertvalue { ptr, i32 } %8, i32 %7, 1
  resume { ptr, i32 } %9

cleanup:                                          ; preds = %bb1, %start
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  %12 = extractvalue { ptr, i32 } %10, 1
  store ptr %11, ptr %2, align 8
  %13 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_2.0 = extractvalue { ptr, i64 } %4, 0
  %_2.1 = extractvalue { ptr, i64 } %4, 1
; invoke std::env::_var
  invoke void @_ZN3std3env4_var17h15b5dab35f465e04E(ptr sret(%"core::result::Result<alloc::string::String, std::env::VarError>") align 8 %_0, ptr align 1 %_2.0, i64 %_2.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret void
}

; std::env::var
; Function Attrs: nonlazybind uwtable
define void @_ZN3std3env3var17h90aca72922a21f9eE(ptr sret(%"core::result::Result<alloc::string::String, std::env::VarError>") align 8 %_0, ptr align 8 %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %key = alloca ptr, align 8
  store ptr %0, ptr %key, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %2 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h16d8b0056cf983c7E"(ptr align 8 %key)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %3 = load ptr, ptr %1, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8, !noundef !3
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %bb1, %start
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_2.0 = extractvalue { ptr, i64 } %2, 0
  %_2.1 = extractvalue { ptr, i64 } %2, 1
; invoke std::env::_var
  invoke void @_ZN3std3env4_var17h15b5dab35f465e04E(ptr sret(%"core::result::Result<alloc::string::String, std::env::VarError>") align 8 %_0, ptr align 1 %_2.0, i64 %_2.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret void
}

; std::env::var_os
; Function Attrs: nonlazybind uwtable
define void @_ZN3std3env6var_os17h9e760256a8818e6dE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %key = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %key, align 8
  %3 = getelementptr inbounds i8, ptr %key, i64 8
  store i64 %1, ptr %3, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %4 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7bec7ec48adc293eE"(ptr align 8 %key)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %5 = load ptr, ptr %2, align 8, !noundef !3
  %6 = getelementptr inbounds i8, ptr %2, i64 8
  %7 = load i32, ptr %6, align 8, !noundef !3
  %8 = insertvalue { ptr, i32 } poison, ptr %5, 0
  %9 = insertvalue { ptr, i32 } %8, i32 %7, 1
  resume { ptr, i32 } %9

cleanup:                                          ; preds = %bb1, %start
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  %12 = extractvalue { ptr, i32 } %10, 1
  store ptr %11, ptr %2, align 8
  %13 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_2.0 = extractvalue { ptr, i64 } %4, 0
  %_2.1 = extractvalue { ptr, i64 } %4, 1
; invoke std::env::_var_os
  invoke void @_ZN3std3env7_var_os17h2aab7dfe7e2cd591E(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 1 %_2.0, i64 %_2.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret void
}

; std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for alloc::string::String>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN3std3ffi6os_str103_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$alloc..string..String$GT$6as_ref17hcbef83a0e258cc6dE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_14 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_13 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_14, align 8
  %2 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_14, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_14, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_13, align 8
  %6 = getelementptr inbounds i8, ptr %_13, i64 8
  store i64 %5, ptr %6, align 8
  %v.0 = load ptr, ptr %_13, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_13, i64 8
  %v.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %v.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %v.1, 1
  ret { ptr, i64 } %9
}

; std::ffi::os_str::OsStr::to_os_string
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3ffi6os_str5OsStr12to_os_string17he090fa5dbff1be9cE(ptr sret(%"std::ffi::os_str::OsString") align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_2 = alloca %"std::sys::os_str::bytes::Buf", align 8
; call std::sys::os_str::bytes::Slice::to_owned
  call void @_ZN3std3sys6os_str5bytes5Slice8to_owned17h805dfc47b79ea5d4E(ptr sret(%"std::sys::os_str::bytes::Buf") align 8 %_2, ptr align 1 %self.0, i64 %self.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 24, i1 false)
  ret void
}

; std::ffi::os_str::OsStr::to_string_lossy
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN3std3ffi6os_str5OsStr15to_string_lossy17h2ca5630174251fceE(ptr sret(%"alloc::borrow::Cow<'_, str>") align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call std::sys::os_str::bytes::Slice::to_string_lossy
  call void @_ZN3std3sys6os_str5bytes5Slice15to_string_lossy17h1bd8192d7d8d942fE(ptr sret(%"alloc::borrow::Cow<'_, str>") align 8 %_0, ptr align 1 %self.0, i64 %self.1)
  ret void
}

; std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h38c339d16ee25205E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, i64 } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, i64 } %0, i64 %self.1, 1
  ret { ptr, i64 } %1
}

; std::sys::pal::unix::decode_error_kind
; Function Attrs: nonlazybind uwtable
define internal i8 @_ZN3std3sys3pal4unix17decode_error_kind17h721babe45d5231baE(i32 %errno) unnamed_addr #1 {
start:
  %_2 = alloca i32, align 4
  %_0 = alloca i8, align 1
  store i32 %errno, ptr %_2, align 4
  %0 = load i32, ptr %_2, align 4, !noundef !3
  switch i32 %0, label %bb36 [
    i32 7, label %bb1
    i32 98, label %bb2
    i32 99, label %bb3
    i32 16, label %bb4
    i32 103, label %bb5
    i32 111, label %bb6
    i32 104, label %bb7
    i32 35, label %bb8
    i32 122, label %bb9
    i32 17, label %bb10
    i32 27, label %bb11
    i32 113, label %bb12
    i32 4, label %bb13
    i32 22, label %bb14
    i32 21, label %bb15
    i32 40, label %bb16
    i32 2, label %bb17
    i32 12, label %bb18
    i32 28, label %bb19
    i32 38, label %bb20
    i32 31, label %bb21
    i32 36, label %bb22
    i32 100, label %bb23
    i32 101, label %bb24
    i32 107, label %bb25
    i32 20, label %bb26
    i32 39, label %bb27
    i32 32, label %bb28
    i32 30, label %bb29
    i32 29, label %bb30
    i32 116, label %bb31
    i32 110, label %bb32
    i32 26, label %bb33
    i32 18, label %bb34
    i32 13, label %bb35
    i32 1, label %bb35
  ]

bb36:                                             ; preds = %start
  %_6 = load i32, ptr %_2, align 4, !noundef !3
  %_5 = icmp eq i32 %_6, 11
  br i1 %_5, label %bb37, label %bb38

bb1:                                              ; preds = %start
  store i8 34, ptr %_0, align 1
  br label %bb41

bb2:                                              ; preds = %start
  store i8 8, ptr %_0, align 1
  br label %bb41

bb3:                                              ; preds = %start
  store i8 9, ptr %_0, align 1
  br label %bb41

bb4:                                              ; preds = %start
  store i8 28, ptr %_0, align 1
  br label %bb41

bb5:                                              ; preds = %start
  store i8 6, ptr %_0, align 1
  br label %bb41

bb6:                                              ; preds = %start
  store i8 2, ptr %_0, align 1
  br label %bb41

bb7:                                              ; preds = %start
  store i8 3, ptr %_0, align 1
  br label %bb41

bb8:                                              ; preds = %start
  store i8 30, ptr %_0, align 1
  br label %bb41

bb9:                                              ; preds = %start
  store i8 26, ptr %_0, align 1
  br label %bb41

bb10:                                             ; preds = %start
  store i8 12, ptr %_0, align 1
  br label %bb41

bb11:                                             ; preds = %start
  store i8 27, ptr %_0, align 1
  br label %bb41

bb12:                                             ; preds = %start
  store i8 4, ptr %_0, align 1
  br label %bb41

bb13:                                             ; preds = %start
  store i8 35, ptr %_0, align 1
  br label %bb41

bb14:                                             ; preds = %start
  store i8 20, ptr %_0, align 1
  br label %bb41

bb15:                                             ; preds = %start
  store i8 15, ptr %_0, align 1
  br label %bb41

bb16:                                             ; preds = %start
  store i8 18, ptr %_0, align 1
  br label %bb41

bb17:                                             ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb41

bb18:                                             ; preds = %start
  store i8 38, ptr %_0, align 1
  br label %bb41

bb19:                                             ; preds = %start
  store i8 24, ptr %_0, align 1
  br label %bb41

bb20:                                             ; preds = %start
  store i8 36, ptr %_0, align 1
  br label %bb41

bb21:                                             ; preds = %start
  store i8 32, ptr %_0, align 1
  br label %bb41

bb22:                                             ; preds = %start
  store i8 33, ptr %_0, align 1
  br label %bb41

bb23:                                             ; preds = %start
  store i8 10, ptr %_0, align 1
  br label %bb41

bb24:                                             ; preds = %start
  store i8 5, ptr %_0, align 1
  br label %bb41

bb25:                                             ; preds = %start
  store i8 7, ptr %_0, align 1
  br label %bb41

bb26:                                             ; preds = %start
  store i8 14, ptr %_0, align 1
  br label %bb41

bb27:                                             ; preds = %start
  store i8 16, ptr %_0, align 1
  br label %bb41

bb28:                                             ; preds = %start
  store i8 11, ptr %_0, align 1
  br label %bb41

bb29:                                             ; preds = %start
  store i8 17, ptr %_0, align 1
  br label %bb41

bb30:                                             ; preds = %start
  store i8 25, ptr %_0, align 1
  br label %bb41

bb31:                                             ; preds = %start
  store i8 19, ptr %_0, align 1
  br label %bb41

bb32:                                             ; preds = %start
  store i8 22, ptr %_0, align 1
  br label %bb41

bb33:                                             ; preds = %start
  store i8 29, ptr %_0, align 1
  br label %bb41

bb34:                                             ; preds = %start
  store i8 31, ptr %_0, align 1
  br label %bb41

bb35:                                             ; preds = %start, %start
  store i8 1, ptr %_0, align 1
  br label %bb41

bb41:                                             ; preds = %bb39, %bb40, %bb35, %bb34, %bb33, %bb32, %bb31, %bb30, %bb29, %bb28, %bb27, %bb26, %bb25, %bb24, %bb23, %bb22, %bb21, %bb20, %bb19, %bb18, %bb17, %bb16, %bb15, %bb14, %bb13, %bb12, %bb11, %bb10, %bb9, %bb8, %bb7, %bb6, %bb5, %bb4, %bb3, %bb2, %bb1
  %1 = load i8, ptr %_0, align 1, !range !16, !noundef !3
  ret i8 %1

bb38:                                             ; preds = %bb36
  %_8 = load i32, ptr %_2, align 4, !noundef !3
  %_7 = icmp eq i32 %_8, 11
  br i1 %_7, label %bb39, label %bb40

bb37:                                             ; preds = %bb36
  br label %bb39

bb40:                                             ; preds = %bb38
  store i8 40, ptr %_0, align 1
  br label %bb41

bb39:                                             ; preds = %bb37, %bb38
  %x = load i32, ptr %_2, align 4, !noundef !3
  store i8 13, ptr %_0, align 1
  br label %bb41
}

; std::sys::pal::common::thread_local::fast_local::Key<T>::try_initialize
; Function Attrs: noinline nonlazybind uwtable
define align 8 ptr @"_ZN3std3sys3pal6common12thread_local10fast_local12Key$LT$T$GT$14try_initialize17h665b763dff809a43E"(ptr align 8 %self, ptr align 8 %init) unnamed_addr #3 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %1 = alloca i8, align 1
  %_8 = alloca i8, align 1
  %_0 = alloca ptr, align 8
  store i8 1, ptr %_8, align 1
  store i8 0, ptr %1, align 1
  %2 = load i8, ptr %1, align 1, !range !10, !noundef !3
  %_3 = trunc i8 %2 to i1
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %bb2, %start
  store i8 0, ptr %_8, align 1
; invoke std::sys::pal::common::thread_local::lazy::LazyKeyInner<T>::initialize
  %_5 = invoke align 8 ptr @"_ZN3std3sys3pal6common12thread_local4lazy21LazyKeyInner$LT$T$GT$10initialize17h7d03af8189fc2cfbE"(ptr align 8 %self, ptr align 8 %init)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %start
; invoke std::sys::pal::common::thread_local::fast_local::Key<T>::try_register_dtor
  %_4 = invoke zeroext i1 @"_ZN3std3sys3pal6common12thread_local10fast_local12Key$LT$T$GT$17try_register_dtor17hb7b93fd1d14f979aE"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %3 = load i8, ptr %_8, align 1, !range !10, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb10, label %bb8

cleanup:                                          ; preds = %bb3, %bb1
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %0, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb11

bb2:                                              ; preds = %bb1
  br i1 %_4, label %bb3, label %bb5

bb5:                                              ; preds = %bb2
  store ptr null, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %9 = load i8, ptr %_8, align 1, !range !10, !noundef !3
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb9, label %bb7

bb4:                                              ; preds = %bb3
  store ptr %_5, ptr %_0, align 8
  br label %bb6

bb7:                                              ; preds = %bb9, %bb6
  %11 = load ptr, ptr %_0, align 8, !align !5, !noundef !3
  ret ptr %11

bb9:                                              ; preds = %bb6
  br label %bb7

bb8:                                              ; preds = %bb10, %bb11
  %12 = load ptr, ptr %0, align 8, !noundef !3
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  %14 = load i32, ptr %13, align 8, !noundef !3
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1
  resume { ptr, i32 } %16

bb10:                                             ; preds = %bb11
  br label %bb8
}

; std::sys::pal::common::thread_local::fast_local::Key<T>::try_register_dtor
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN3std3sys3pal6common12thread_local10fast_local12Key$LT$T$GT$17try_register_dtor17hb7b93fd1d14f979aE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca i8, align 1
  %_0 = alloca i8, align 1
  %self1 = getelementptr inbounds %"std::sys::pal::common::thread_local::fast_local::Key<core::cell::Cell<(u64, u64)>>", ptr %self, i32 0, i32 1
  %self2 = getelementptr inbounds %"std::sys::pal::common::thread_local::fast_local::Key<core::cell::Cell<(u64, u64)>>", ptr %self, i32 0, i32 1
  %_13 = getelementptr inbounds %"std::sys::pal::common::thread_local::fast_local::Key<core::cell::Cell<(u64, u64)>>", ptr %self, i32 0, i32 1
  %0 = load i8, ptr %_13, align 1, !range !18, !noundef !3
  store i8 %0, ptr %_2, align 1
  %1 = load i8, ptr %_2, align 1, !range !18, !noundef !3
  %_4 = zext i8 %1 to i64
  switch i64 %_4, label %bb6 [
    i64 0, label %bb2
    i64 1, label %bb4
    i64 2, label %bb1
  ]

bb6:                                              ; preds = %start
  unreachable

bb2:                                              ; preds = %start
; call std::sys::pal::unix::thread_local_dtor::register_dtor
  call void @_ZN3std3sys3pal4unix17thread_local_dtor13register_dtor17hff0e24710dd24134E(ptr %self, ptr @_ZN3std3sys3pal6common12thread_local10fast_local13destroy_value17h1329b1062b0c84c0E)
  %self3 = getelementptr inbounds %"std::sys::pal::common::thread_local::fast_local::Key<core::cell::Cell<(u64, u64)>>", ptr %self, i32 0, i32 1
  %self4 = getelementptr inbounds %"std::sys::pal::common::thread_local::fast_local::Key<core::cell::Cell<(u64, u64)>>", ptr %self, i32 0, i32 1
  %_18 = getelementptr inbounds %"std::sys::pal::common::thread_local::fast_local::Key<core::cell::Cell<(u64, u64)>>", ptr %self, i32 0, i32 1
  %result = load i8, ptr %_18, align 1, !range !18, !noundef !3
  store i8 1, ptr %_18, align 1
  store i8 1, ptr %_0, align 1
  br label %bb5

bb4:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb1, %bb4, %bb2
  %2 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  ret i1 %3
}

; std::sys::pal::common::thread_local::fast_local::Key<T>::get
; Function Attrs: nonlazybind uwtable
define align 8 ptr @"_ZN3std3sys3pal6common12thread_local10fast_local12Key$LT$T$GT$3get17h2c648bd690cb24d7E"(ptr align 8 %self, ptr align 8 %init) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_8 = alloca i8, align 1
  %_3 = alloca ptr, align 8
  %_0 = alloca ptr, align 8
  store i8 1, ptr %_8, align 1
  %_13 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %1 = icmp eq i64 %_13, 0
  br i1 %1, label %bb12, label %bb13

bb12:                                             ; preds = %start
  store ptr null, ptr %_3, align 8
  br label %bb11

bb13:                                             ; preds = %start
  %x = getelementptr inbounds %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some", ptr %self, i32 0, i32 1
  %_15 = getelementptr inbounds %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some", ptr %self, i32 0, i32 1
  store ptr %_15, ptr %_3, align 8
  br label %bb11

bb11:                                             ; preds = %bb13, %bb12
  %2 = load ptr, ptr %_3, align 8, !noundef !3
  %3 = ptrtoint ptr %2 to i64
  %4 = icmp eq i64 %3, 0
  %_5 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_5, 0
  br i1 %5, label %bb1, label %bb3

bb1:                                              ; preds = %bb11
  store i8 0, ptr %_8, align 1
; invoke std::sys::pal::common::thread_local::fast_local::Key<T>::try_initialize
  %6 = invoke align 8 ptr @"_ZN3std3sys3pal6common12thread_local10fast_local12Key$LT$T$GT$14try_initialize17h665b763dff809a43E"(ptr align 8 %self, ptr align 8 %init)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %bb11
  %val = load ptr, ptr %_3, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %val, ptr %_0, align 8
  br label %bb5

bb10:                                             ; preds = %cleanup
  %7 = load i8, ptr %_8, align 1, !range !10, !noundef !3
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb9, label %bb7

cleanup:                                          ; preds = %bb1
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb10

bb4:                                              ; preds = %bb1
  store ptr %6, ptr %_0, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %13 = load i8, ptr %_8, align 1, !range !10, !noundef !3
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb8, label %bb6

bb7:                                              ; preds = %bb9, %bb10
  %15 = load ptr, ptr %0, align 8, !noundef !3
  %16 = getelementptr inbounds i8, ptr %0, i64 8
  %17 = load i32, ptr %16, align 8, !noundef !3
  %18 = insertvalue { ptr, i32 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i32 } %18, i32 %17, 1
  resume { ptr, i32 } %19

bb9:                                              ; preds = %bb10
  br label %bb7

bb6:                                              ; preds = %bb8, %bb5
  %20 = load ptr, ptr %_0, align 8, !align !5, !noundef !3
  ret ptr %20

bb8:                                              ; preds = %bb5
  br label %bb6

bb2:                                              ; No predecessors!
  unreachable
}

; std::sys::pal::common::thread_local::fast_local::destroy_value
; Function Attrs: nonlazybind uwtable
define void @_ZN3std3sys3pal6common12thread_local10fast_local13destroy_value17h1329b1062b0c84c0E(ptr %ptr) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %_15 = alloca [0 x %"core::fmt::rt::Argument<'_>"], align 8
  %_11 = alloca %"core::fmt::Arguments<'_>", align 8
  %_9 = alloca ptr, align 8
  %_8 = alloca %"std::sys::pal::unix::stdio::Stderr", align 1
  %_5 = alloca ptr, align 8
  %f = alloca ptr, align 8
  %_3 = alloca %"core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>", align 8
  %ptr1 = alloca ptr, align 8
  store ptr %ptr, ptr %ptr1, align 8
  store ptr %ptr1, ptr %_5, align 8
  %0 = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %0, ptr %f, align 8
  %1 = load ptr, ptr %f, align 8, !nonnull !3, !align !5, !noundef !3
; invoke std::panicking::try
  %2 = invoke { ptr, ptr } @_ZN3std9panicking3try17hfb1e7187c586efd1E(ptr align 8 %1)
          to label %bb7 unwind label %terminate

terminate:                                        ; preds = %bb5, %bb4, %bb3, %bb2, %bb1, %start
  %3 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
; call core::panicking::panic_cannot_unwind
  call void @_ZN4core9panicking19panic_cannot_unwind17h05e6c610e4e95bd9E() #15
  unreachable

bb7:                                              ; preds = %start
  %6 = extractvalue { ptr, ptr } %2, 0
  %7 = extractvalue { ptr, ptr } %2, 1
  store ptr %6, ptr %_3, align 8
  %8 = getelementptr inbounds i8, ptr %_3, i64 8
  store ptr %7, ptr %8, align 8
  %9 = load ptr, ptr %_3, align 8, !noundef !3
  %10 = ptrtoint ptr %9 to i64
  %11 = icmp eq i64 %10, 0
  %_7 = select i1 %11, i64 0, i64 1
  %12 = icmp eq i64 %_7, 1
  br i1 %12, label %bb1, label %bb5

bb1:                                              ; preds = %bb7
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_11, ptr align 8 @alloc_f7c18d5ab6a04e64e435b4d6f64423e3, i64 1, ptr align 8 %_15, i64 0)
          to label %bb2 unwind label %terminate

bb5:                                              ; preds = %bb7
; invoke core::ptr::drop_in_place<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>
  invoke void @"_ZN4core3ptr130drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$17h001c165d08df4fcdE"(ptr align 8 %_3)
          to label %bb6 unwind label %terminate

bb2:                                              ; preds = %bb1
; invoke std::io::Write::write_fmt
  %13 = invoke ptr @_ZN3std2io5Write9write_fmt17h51a4a8d86d82ae9bE(ptr align 1 %_8, ptr align 8 %_11)
          to label %bb3 unwind label %terminate

bb3:                                              ; preds = %bb2
  store ptr %13, ptr %_9, align 8
; invoke core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  invoke void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h35920f8a41514dc6E"(ptr align 8 %_9)
          to label %bb4 unwind label %terminate

bb4:                                              ; preds = %bb3
; invoke std::sys::pal::unix::abort_internal
  invoke void @_ZN3std3sys3pal4unix14abort_internal17h0c90a563b8bd268fE() #27
          to label %unreachable unwind label %terminate

unreachable:                                      ; preds = %bb4
  unreachable

bb6:                                              ; preds = %bb5
  ret void
}

; std::sys::pal::common::thread_local::fast_local::destroy_value::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std3sys3pal6common12thread_local10fast_local13destroy_value28_$u7b$$u7b$closure$u7d$$u7d$17h59e9000df8a84db4E"(ptr align 8 %_1) unnamed_addr #0 {
start:
  %src = alloca %"core::option::Option<core::cell::Cell<(u64, u64)>>", align 8
  %_x = alloca %"core::option::Option<core::cell::Cell<(u64, u64)>>", align 8
  %value = alloca %"core::option::Option<core::cell::Cell<(u64, u64)>>", align 8
  %_6 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  %_7 = load ptr, ptr %_6, align 8, !noundef !3
  store i64 0, ptr %src, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %value, ptr align 8 %_7, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %src, i64 24, i1 false)
  %self = getelementptr inbounds %"std::sys::pal::common::thread_local::fast_local::Key<core::cell::Cell<(u64, u64)>>", ptr %_7, i32 0, i32 1
  %self1 = getelementptr inbounds %"std::sys::pal::common::thread_local::fast_local::Key<core::cell::Cell<(u64, u64)>>", ptr %_7, i32 0, i32 1
  %_19 = getelementptr inbounds %"std::sys::pal::common::thread_local::fast_local::Key<core::cell::Cell<(u64, u64)>>", ptr %_7, i32 0, i32 1
  %result = load i8, ptr %_19, align 1, !range !18, !noundef !3
  store i8 2, ptr %_19, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_x, ptr align 8 %value, i64 24, i1 false)
  ret void
}

; std::sys::pal::common::thread_local::lazy::LazyKeyInner<T>::initialize
; Function Attrs: nonlazybind uwtable
define align 8 ptr @"_ZN3std3sys3pal6common12thread_local4lazy21LazyKeyInner$LT$T$GT$10initialize17h7d03af8189fc2cfbE"(ptr align 8 %self, ptr align 8 %init) unnamed_addr #1 {
start:
  %src = alloca %"core::option::Option<core::cell::Cell<(u64, u64)>>", align 8
  %result = alloca %"core::option::Option<core::cell::Cell<(u64, u64)>>", align 8
; call std::hash::random::RandomState::new::KEYS::__getit::{{closure}}
  %0 = call { i64, i64 } @"_ZN3std4hash6random11RandomState3new4KEYS7__getit28_$u7b$$u7b$closure$u7d$$u7d$17h43f57845fd2c2d08E"(ptr align 8 %init)
  %value.0 = extractvalue { i64, i64 } %0, 0
  %value.1 = extractvalue { i64, i64 } %0, 1
  %1 = getelementptr inbounds %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some", ptr %src, i32 0, i32 1
  store i64 %value.0, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %1, i64 8
  store i64 %value.1, ptr %2, align 8
  store i64 1, ptr %src, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %result, ptr align 8 %self, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %src, i64 24, i1 false)
  %_8 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %_14 = icmp eq i64 %_8, 1
  call void @llvm.assume(i1 %_14)
  %x = getelementptr inbounds %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some", ptr %self, i32 0, i32 1
  %_0 = getelementptr inbounds %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some", ptr %self, i32 0, i32 1
  ret ptr %_0
}

; std::hash::random::RandomState::new::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN3std4hash6random11RandomState3new28_$u7b$$u7b$closure$u7d$$u7d$17h796a497c9d962fcbE"(ptr align 8 %keys) unnamed_addr #0 {
start:
  %val = alloca { i64, i64 }, align 8
  %_0 = alloca %"std::hash::random::RandomState", align 8
  %k0 = load i64, ptr %keys, align 8, !noundef !3
  %0 = getelementptr inbounds i8, ptr %keys, i64 8
  %k1 = load i64, ptr %0, align 8, !noundef !3
  %_4 = add i64 %k0, 1
  store i64 %_4, ptr %val, align 8
  %1 = getelementptr inbounds i8, ptr %val, i64 8
  store i64 %k1, ptr %1, align 8
  %result = load i64, ptr %keys, align 8, !noundef !3
  %2 = getelementptr inbounds i8, ptr %keys, i64 8
  %result1 = load i64, ptr %2, align 8, !noundef !3
  %3 = load i64, ptr %val, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %val, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store i64 %3, ptr %keys, align 8
  %6 = getelementptr inbounds i8, ptr %keys, i64 8
  store i64 %5, ptr %6, align 8
  store i64 %k0, ptr %_0, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %k1, ptr %7, align 8
  %8 = load i64, ptr %_0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  %10 = load i64, ptr %9, align 8, !noundef !3
  %11 = insertvalue { i64, i64 } poison, i64 %8, 0
  %12 = insertvalue { i64, i64 } %11, i64 %10, 1
  ret { i64, i64 } %12
}

; std::hash::random::RandomState::new::KEYS::__getit
; Function Attrs: inlinehint nonlazybind uwtable
define internal align 8 ptr @_ZN3std4hash6random11RandomState3new4KEYS7__getit17he5c270f0b0cf40d5E(ptr align 8 %init) unnamed_addr #0 {
start:
  %_3 = alloca ptr, align 8
  store ptr %init, ptr %_3, align 8
  %0 = load ptr, ptr %_3, align 8, !align !5, !noundef !3
; call std::sys::pal::common::thread_local::fast_local::Key<T>::get
  %_0 = call align 8 ptr @"_ZN3std3sys3pal6common12thread_local10fast_local12Key$LT$T$GT$3get17h2c648bd690cb24d7E"(ptr align 8 @_ZN3std4hash6random11RandomState3new4KEYS7__getit5__KEY17h5946b6708c2be188E, ptr align 8 %0)
  ret ptr %_0
}

; std::hash::random::RandomState::new::KEYS::__getit::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN3std4hash6random11RandomState3new4KEYS7__getit28_$u7b$$u7b$closure$u7d$$u7d$17h43f57845fd2c2d08E"(ptr align 8 %0) unnamed_addr #0 {
start:
  %_11 = alloca %"core::cell::UnsafeCell<(u64, u64)>", align 8
  %src = alloca %"core::option::Option<core::cell::Cell<(u64, u64)>>", align 8
  %result = alloca %"core::option::Option<core::cell::Cell<(u64, u64)>>", align 8
  %_0 = alloca %"core::cell::Cell<(u64, u64)>", align 8
  %_1 = alloca ptr, align 8
  store ptr %0, ptr %_1, align 8
  %1 = load ptr, ptr %_1, align 8, !noundef !3
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_2 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_2, 1
  br i1 %4, label %bb1, label %bb4

bb1:                                              ; preds = %start
  %init = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  store i64 0, ptr %src, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %result, ptr align 8 %init, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %init, ptr align 8 %src, i64 24, i1 false)
  %_5 = load i64, ptr %result, align 8, !range !9, !noundef !3
  %5 = icmp eq i64 %_5, 1
  br i1 %5, label %bb2, label %bb3

bb4:                                              ; preds = %bb3, %start
; call std::sys::pal::unix::rand::hashmap_random_keys
  %6 = call { i64, i64 } @_ZN3std3sys3pal4unix4rand19hashmap_random_keys17hee6d0984481f50adE()
  %value.01 = extractvalue { i64, i64 } %6, 0
  %value.12 = extractvalue { i64, i64 } %6, 1
  store i64 %value.01, ptr %_11, align 8
  %7 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %value.12, ptr %7, align 8
  %8 = load i64, ptr %_11, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_11, i64 8
  %10 = load i64, ptr %9, align 8, !noundef !3
  store i64 %8, ptr %_0, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %10, ptr %11, align 8
  br label %bb5

bb2:                                              ; preds = %bb1
  %12 = getelementptr inbounds %"core::option::Option<core::cell::Cell<(u64, u64)>>::Some", ptr %result, i32 0, i32 1
  %value.0 = load i64, ptr %12, align 8, !noundef !3
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  %value.1 = load i64, ptr %13, align 8, !noundef !3
  store i64 %value.0, ptr %_0, align 8
  %14 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %value.1, ptr %14, align 8
  br label %bb5

bb3:                                              ; preds = %bb1
  br label %bb4

bb5:                                              ; preds = %bb4, %bb2
  %15 = load i64, ptr %_0, align 8, !noundef !3
  %16 = getelementptr inbounds i8, ptr %_0, i64 8
  %17 = load i64, ptr %16, align 8, !noundef !3
  %18 = insertvalue { i64, i64 } poison, i64 %15, 0
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1
  ret { i64, i64 } %19
}

; std::path::Path::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN3std4path4Path11starts_with17h846632d016cdf6dfE(ptr align 1 %self.0, i64 %self.1, ptr align 8 %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %base = alloca ptr, align 8
  store ptr %0, ptr %base, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %2 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h68e39133499e1ee5E"(ptr align 8 %base)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %3 = load ptr, ptr %1, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8, !noundef !3
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %bb1, %start
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_3.0 = extractvalue { ptr, i64 } %2, 0
  %_3.1 = extractvalue { ptr, i64 } %2, 1
; invoke std::path::Path::_starts_with
  %_0 = invoke zeroext i1 @_ZN3std4path4Path12_starts_with17hd5ff97bc39d427f6E(ptr align 1 %self.0, i64 %self.1, ptr align 1 %_3.0, i64 %_3.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret i1 %_0
}

; std::path::Path::new
; Function Attrs: nonlazybind uwtable
define { ptr, i64 } @_ZN3std4path4Path3new17hec83025b7d21bc96E(ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
; call std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
  %0 = call { ptr, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h38c339d16ee25205E"(ptr align 1 %s.0, i64 %s.1)
  %_4.0 = extractvalue { ptr, i64 } %0, 0
  %_4.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_4.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_4.1, 1
  ret { ptr, i64 } %2
}

; std::path::Path::join
; Function Attrs: nonlazybind uwtable
define void @_ZN3std4path4Path4join17hd872b003b6fb079aE(ptr sret(%"std::path::PathBuf") align 8 %_0, ptr align 1 %self.0, i64 %self.1, ptr align 8 %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %path = alloca ptr, align 8
  store ptr %0, ptr %path, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %2 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h484923e41e360697E"(ptr align 8 %path)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %3 = load ptr, ptr %1, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8, !noundef !3
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %bb1, %start
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_3.0 = extractvalue { ptr, i64 } %2, 0
  %_3.1 = extractvalue { ptr, i64 } %2, 1
; invoke std::path::Path::_join
  invoke void @_ZN3std4path4Path5_join17hec75aca45f8136f8E(ptr sret(%"std::path::PathBuf") align 8 %_0, ptr align 1 %self.0, i64 %self.1, ptr align 1 %_3.0, i64 %_3.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret void
}

; std::path::Path::exists
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN3std4path4Path6exists17hc4fdac10b4667547E(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_3 = alloca %"core::result::Result<std::fs::Metadata, std::io::error::Error>", align 8
; call std::fs::metadata
  call void @_ZN3std2fs8metadata17hc3fc48999219e660E(ptr sret(%"core::result::Result<std::fs::Metadata, std::io::error::Error>") align 8 %_3, ptr align 1 %self.0, i64 %self.1)
  %0 = load i64, ptr %_3, align 8, !range !11, !noundef !3
  %1 = icmp eq i64 %0, 2
  %_4 = select i1 %1, i64 1, i64 0
  %_0 = icmp eq i64 %_4, 0
; call core::ptr::drop_in_place<core::result::Result<std::fs::Metadata,std::io::error::Error>>
  call void @"_ZN4core3ptr90drop_in_place$LT$core..result..Result$LT$std..fs..Metadata$C$std..io..error..Error$GT$$GT$17he975e91c12834d2eE"(ptr align 8 %_3)
  ret i1 %_0
}

; std::path::Path::display
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @_ZN3std4path4Path7display17hb652942038187f6eE(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_0 = alloca %"std::path::Display<'_>", align 8
  store ptr %self.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %self.1, ptr %0, align 8
  %1 = load ptr, ptr %_0, align 8, !nonnull !3, !align !4, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  %3 = load i64, ptr %2, align 8, !noundef !3
  %4 = insertvalue { ptr, i64 } poison, ptr %1, 0
  %5 = insertvalue { ptr, i64 } %4, i64 %3, 1
  ret { ptr, i64 } %5
}

; std::path::<impl core::convert::AsRef<std::path::Path> for alloc::string::String>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN3std4path95_$LT$impl$u20$core..convert..AsRef$LT$std..path..Path$GT$$u20$for$u20$alloc..string..String$GT$6as_ref17h39e91aaa03137aefE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_16 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_15 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_16, align 8
  %2 = getelementptr inbounds i8, ptr %_16, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_16, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_16, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_15, align 8
  %6 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %5, ptr %6, align 8
  %v.0 = load ptr, ptr %_15, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_15, i64 8
  %v.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %v.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %v.1, 1
  ret { ptr, i64 } %9
}

; std::thread::local::LocalKey<T>::try_with
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h64011cd372704556E"(ptr sret(%"core::result::Result<std::hash::random::RandomState, std::thread::local::AccessError>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_12 = alloca i8, align 1
  %_11 = alloca ptr, align 8
  %self2 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_3 = alloca ptr, align 8
  store i8 1, ptr %_12, align 1
  %_6 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %1 = invoke align 8 ptr %_6(ptr align 8 null)
          to label %bb1 unwind label %cleanup

bb8:                                              ; preds = %cleanup
  %2 = load i8, ptr %_12, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb7, label %bb6

cleanup:                                          ; preds = %bb2, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb8

bb1:                                              ; preds = %start
  store ptr %1, ptr %self2, align 8
  %8 = load ptr, ptr %self2, align 8, !noundef !3
  %9 = ptrtoint ptr %8 to i64
  %10 = icmp eq i64 %9, 0
  %_13 = select i1 %10, i64 0, i64 1
  %11 = icmp eq i64 %_13, 0
  br i1 %11, label %bb9, label %bb10

bb9:                                              ; preds = %bb1
  store ptr null, ptr %self1, align 8
  br label %bb11

bb10:                                             ; preds = %bb1
  %v = load ptr, ptr %self2, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %v, ptr %self1, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %12 = load ptr, ptr %self1, align 8, !noundef !3
  %13 = ptrtoint ptr %12 to i64
  %14 = icmp eq i64 %13, 0
  %_15 = select i1 %14, i64 1, i64 0
  %15 = icmp eq i64 %_15, 0
  br i1 %15, label %bb14, label %bb13

bb14:                                             ; preds = %bb11
  %v3 = load ptr, ptr %self1, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %v3, ptr %_3, align 8
  br label %bb12

bb13:                                             ; preds = %bb11
  store ptr null, ptr %_3, align 8
  br label %bb12

bb12:                                             ; preds = %bb13, %bb14
  %16 = load ptr, ptr %_3, align 8, !noundef !3
  %17 = ptrtoint ptr %16 to i64
  %18 = icmp eq i64 %17, 0
  %_7 = select i1 %18, i64 1, i64 0
  %19 = icmp eq i64 %_7, 0
  br i1 %19, label %bb2, label %bb3

bb2:                                              ; preds = %bb12
  %thread_local = load ptr, ptr %_3, align 8, !nonnull !3, !align !5, !noundef !3
  store i8 0, ptr %_12, align 1
  store ptr %thread_local, ptr %_11, align 8
  %20 = load ptr, ptr %_11, align 8, !nonnull !3, !align !5, !noundef !3
; invoke std::hash::random::RandomState::new::{{closure}}
  %21 = invoke { i64, i64 } @"_ZN3std4hash6random11RandomState3new28_$u7b$$u7b$closure$u7d$$u7d$17h796a497c9d962fcbE"(ptr align 8 %20)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %bb12
  store i64 1, ptr %_0, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %_9.0 = extractvalue { i64, i64 } %21, 0
  %_9.1 = extractvalue { i64, i64 } %21, 1
  %22 = getelementptr inbounds %"core::result::Result<std::hash::random::RandomState, std::thread::local::AccessError>::Ok", ptr %_0, i32 0, i32 1
  store i64 %_9.0, ptr %22, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 8
  store i64 %_9.1, ptr %23, align 8
  store i64 0, ptr %_0, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  ret void

bb15:                                             ; No predecessors!
  unreachable

bb6:                                              ; preds = %bb7, %bb8
  %24 = load ptr, ptr %0, align 8, !noundef !3
  %25 = getelementptr inbounds i8, ptr %0, i64 8
  %26 = load i32, ptr %25, align 8, !noundef !3
  %27 = insertvalue { ptr, i32 } poison, ptr %24, 0
  %28 = insertvalue { ptr, i32 } %27, i32 %26, 1
  resume { ptr, i32 } %28

bb7:                                              ; preds = %bb8
  br label %bb6
}

; std::process::ExitStatus::code
; Function Attrs: nonlazybind uwtable
define internal { i32, i32 } @_ZN3std7process10ExitStatus4code17hf3b74bb5426be766E(ptr align 4 %self) unnamed_addr #1 {
start:
  %_0 = alloca %"core::option::Option<i32>", align 4
  %status = load i32, ptr %self, align 4, !noundef !3
  %_5 = and i32 %status, 127
  %self1 = icmp eq i32 %_5, 0
  %0 = icmp eq i32 %_5, 0
  br i1 %0, label %bb1, label %bb2

bb1:                                              ; preds = %start
  %_7 = ashr i32 %status, 8
  %_6 = and i32 %_7, 255
  %1 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %_6, ptr %1, align 4
  store i32 1, ptr %_0, align 4
  br label %bb3

bb2:                                              ; preds = %start
  %2 = load i32, ptr @3, align 4, !range !6, !noundef !3
  %3 = load i32, ptr getelementptr inbounds (i8, ptr @3, i64 4), align 4
  store i32 %2, ptr %_0, align 4
  %4 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %3, ptr %4, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i32, ptr %_0, align 4, !range !6, !noundef !3
  %6 = getelementptr inbounds i8, ptr %_0, i64 4
  %7 = load i32, ptr %6, align 4
  %8 = insertvalue { i32, i32 } poison, i32 %5, 0
  %9 = insertvalue { i32, i32 } %8, i32 %7, 1
  ret { i32, i32 } %9
}

; std::process::Command::arg
; Function Attrs: nonlazybind uwtable
define align 8 ptr @_ZN3std7process7Command3arg17h66d3cc99bf1d7dbeE(ptr align 8 %self, ptr align 1 %0, i64 %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %arg = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %arg, align 8
  %3 = getelementptr inbounds i8, ptr %arg, i64 8
  store i64 %1, ptr %3, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %4 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h451cc258df51801aE"(ptr align 8 %arg)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %5 = load ptr, ptr %2, align 8, !noundef !3
  %6 = getelementptr inbounds i8, ptr %2, i64 8
  %7 = load i32, ptr %6, align 8, !noundef !3
  %8 = insertvalue { ptr, i32 } poison, ptr %5, 0
  %9 = insertvalue { ptr, i32 } %8, i32 %7, 1
  resume { ptr, i32 } %9

cleanup:                                          ; preds = %bb1, %start
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  %12 = extractvalue { ptr, i32 } %10, 1
  store ptr %11, ptr %2, align 8
  %13 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { ptr, i64 } %4, 0
  %_5.1 = extractvalue { ptr, i64 } %4, 1
; invoke std::sys::pal::unix::process::process_common::Command::arg
  invoke void @_ZN3std3sys3pal4unix7process14process_common7Command3arg17h2f5a0e34ed366842E(ptr align 8 %self, ptr align 1 %_5.0, i64 %_5.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret ptr %self
}

; std::process::Command::env
; Function Attrs: nonlazybind uwtable
define align 8 ptr @_ZN3std7process7Command3env17h8cd9cc23dfdf7284E(ptr align 8 %self, ptr align 1 %0, i64 %1, ptr align 1 %2, i64 %3) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %4 = alloca { ptr, i32, [1 x i32] }, align 8
  %val = alloca { ptr, i64 }, align 8
  %key = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %key, align 8
  %5 = getelementptr inbounds i8, ptr %key, i64 8
  store i64 %1, ptr %5, align 8
  store ptr %2, ptr %val, align 8
  %6 = getelementptr inbounds i8, ptr %val, i64 8
  store i64 %3, ptr %6, align 8
  %_5 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %self, i32 0, i32 9
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %7 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h451cc258df51801aE"(ptr align 8 %key)
          to label %bb1 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  br label %bb7

cleanup:                                          ; preds = %bb2, %bb1, %start
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %4, align 8
  %11 = getelementptr inbounds i8, ptr %4, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb6

bb1:                                              ; preds = %start
  %_7.0 = extractvalue { ptr, i64 } %7, 0
  %_7.1 = extractvalue { ptr, i64 } %7, 1
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %12 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h451cc258df51801aE"(ptr align 8 %val)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_9.0 = extractvalue { ptr, i64 } %12, 0
  %_9.1 = extractvalue { ptr, i64 } %12, 1
; invoke std::sys_common::process::CommandEnv::set
  invoke void @_ZN3std10sys_common7process10CommandEnv3set17h1b39159d5c305db7E(ptr align 8 %_5, ptr align 1 %_7.0, i64 %_7.1, ptr align 1 %_9.0, i64 %_9.1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  ret ptr %self

bb7:                                              ; preds = %bb6
  %13 = load ptr, ptr %4, align 8, !noundef !3
  %14 = getelementptr inbounds i8, ptr %4, i64 8
  %15 = load i32, ptr %14, align 8, !noundef !3
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17
}

; std::process::Command::new
; Function Attrs: nonlazybind uwtable
define void @_ZN3std7process7Command3new17hadf7a68de24eeafdE(ptr sret(%"std::process::Command") align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_2 = alloca %"std::sys::pal::unix::process::process_common::Command", align 8
  %program = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %program, align 8
  %3 = getelementptr inbounds i8, ptr %program, i64 8
  store i64 %1, ptr %3, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %4 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h451cc258df51801aE"(ptr align 8 %program)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %5 = load ptr, ptr %2, align 8, !noundef !3
  %6 = getelementptr inbounds i8, ptr %2, i64 8
  %7 = load i32, ptr %6, align 8, !noundef !3
  %8 = insertvalue { ptr, i32 } poison, ptr %5, 0
  %9 = insertvalue { ptr, i32 } %8, i32 %7, 1
  resume { ptr, i32 } %9

cleanup:                                          ; preds = %bb1, %start
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  %12 = extractvalue { ptr, i32 } %10, 1
  store ptr %11, ptr %2, align 8
  %13 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_3.0 = extractvalue { ptr, i64 } %4, 0
  %_3.1 = extractvalue { ptr, i64 } %4, 1
; invoke std::sys::pal::unix::process::process_common::Command::new
  invoke void @_ZN3std3sys3pal4unix7process14process_common7Command3new17h2720cbe0a0e2318cE(ptr sret(%"std::sys::pal::unix::process::process_common::Command") align 8 %_2, ptr align 1 %_3.0, i64 %_3.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 208, i1 false)
  ret void
}

; std::process::Command::args
; Function Attrs: nonlazybind uwtable
define align 8 ptr @_ZN3std7process7Command4args17h25f9e6cdeadb6916E(ptr align 8 %self, ptr align 8 %args.0, i64 %args.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %arg = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  %iter = alloca %"core::slice::iter::Iter<'_, &str>", align 8
; call core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %1 = call { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h821f41eb1e65071fE"(ptr align 8 %args.0, i64 %args.1)
  %_3.0 = extractvalue { ptr, ptr } %1, 0
  %_3.1 = extractvalue { ptr, ptr } %1, 1
  store ptr %_3.0, ptr %iter, align 8
  %2 = getelementptr inbounds i8, ptr %iter, i64 8
  store ptr %_3.1, ptr %2, align 8
  br label %bb2

bb2:                                              ; preds = %bb9, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9cd2dfb86b854212E"(ptr align 8 %iter)
          to label %bb3 unwind label %cleanup

bb12:                                             ; preds = %bb11, %cleanup
  %4 = load ptr, ptr %0, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  %6 = load i32, ptr %5, align 8, !noundef !3
  %7 = insertvalue { ptr, i32 } poison, ptr %4, 0
  %8 = insertvalue { ptr, i32 } %7, i32 %6, 1
  resume { ptr, i32 } %8

cleanup:                                          ; preds = %bb2
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb12

bb3:                                              ; preds = %bb2
  store ptr %3, ptr %_5, align 8
  %13 = load ptr, ptr %_5, align 8, !noundef !3
  %14 = ptrtoint ptr %13 to i64
  %15 = icmp eq i64 %14, 0
  %_7 = select i1 %15, i64 0, i64 1
  %16 = icmp eq i64 %_7, 0
  br i1 %16, label %bb6, label %bb4

bb6:                                              ; preds = %bb3
  ret ptr %self

bb4:                                              ; preds = %bb3
  %17 = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %17, ptr %arg, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %18 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h16d8b0056cf983c7E"(ptr align 8 %arg)
          to label %bb7 unwind label %cleanup1

bb11:                                             ; preds = %cleanup1
  br label %bb12

cleanup1:                                         ; preds = %bb7, %bb4
  %19 = landingpad { ptr, i32 }
          cleanup
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
  store ptr %20, ptr %0, align 8
  %22 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %21, ptr %22, align 8
  br label %bb11

bb7:                                              ; preds = %bb4
  %_10.0 = extractvalue { ptr, i64 } %18, 0
  %_10.1 = extractvalue { ptr, i64 } %18, 1
; invoke std::process::Command::arg
  %_9 = invoke align 8 ptr @_ZN3std7process7Command3arg17h66d3cc99bf1d7dbeE(ptr align 8 %self, ptr align 1 %_10.0, i64 %_10.1)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb2

bb5:                                              ; No predecessors!
  unreachable
}

; std::process::Command::args
; Function Attrs: nonlazybind uwtable
define align 8 ptr @_ZN3std7process7Command4args17ha4850c6988c540b9E(ptr align 8 %self, ptr align 8 %args) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %arg = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  %iter = alloca %"core::slice::iter::Iter<'_, std::ffi::os_str::OsString>", align 8
; call <&alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  %1 = call { ptr, ptr } @"_ZN94_$LT$$RF$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb9b69899005e7b4dE"(ptr align 8 %args)
  %_3.0 = extractvalue { ptr, ptr } %1, 0
  %_3.1 = extractvalue { ptr, ptr } %1, 1
  store ptr %_3.0, ptr %iter, align 8
  %2 = getelementptr inbounds i8, ptr %iter, i64 8
  store ptr %_3.1, ptr %2, align 8
  br label %bb2

bb2:                                              ; preds = %bb9, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h69318d5203c4c54aE"(ptr align 8 %iter)
          to label %bb3 unwind label %cleanup

bb12:                                             ; preds = %bb11, %cleanup
  %4 = load ptr, ptr %0, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  %6 = load i32, ptr %5, align 8, !noundef !3
  %7 = insertvalue { ptr, i32 } poison, ptr %4, 0
  %8 = insertvalue { ptr, i32 } %7, i32 %6, 1
  resume { ptr, i32 } %8

cleanup:                                          ; preds = %bb2
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb12

bb3:                                              ; preds = %bb2
  store ptr %3, ptr %_5, align 8
  %13 = load ptr, ptr %_5, align 8, !noundef !3
  %14 = ptrtoint ptr %13 to i64
  %15 = icmp eq i64 %14, 0
  %_7 = select i1 %15, i64 0, i64 1
  %16 = icmp eq i64 %_7, 0
  br i1 %16, label %bb6, label %bb4

bb6:                                              ; preds = %bb3
  ret ptr %self

bb4:                                              ; preds = %bb3
  %17 = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %17, ptr %arg, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %18 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7e5b9ab8d4dffa78E"(ptr align 8 %arg)
          to label %bb7 unwind label %cleanup1

bb11:                                             ; preds = %cleanup1
  br label %bb12

cleanup1:                                         ; preds = %bb7, %bb4
  %19 = landingpad { ptr, i32 }
          cleanup
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
  store ptr %20, ptr %0, align 8
  %22 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %21, ptr %22, align 8
  br label %bb11

bb7:                                              ; preds = %bb4
  %_10.0 = extractvalue { ptr, i64 } %18, 0
  %_10.1 = extractvalue { ptr, i64 } %18, 1
; invoke std::process::Command::arg
  %_9 = invoke align 8 ptr @_ZN3std7process7Command3arg17h66d3cc99bf1d7dbeE(ptr align 8 %self, ptr align 1 %_10.0, i64 %_10.1)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb8
  br label %bb2

bb5:                                              ; No predecessors!
  unreachable
}

; std::panicking::begin_panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
define void @_ZN3std9panicking11begin_panic17ha93dccbe99f485a5E(ptr align 1 %msg.0, i64 %msg.1, ptr align 8 %0) unnamed_addr #4 {
start:
  %1 = alloca ptr, align 8
  %_3 = alloca %"{closure@std::panicking::begin_panic<&str>::{closure#0}}", align 8
  store ptr %0, ptr %1, align 8
  %loc = load ptr, ptr %1, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %msg.0, ptr %_3, align 8
  %2 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %msg.1, ptr %2, align 8
  %3 = getelementptr inbounds %"{closure@std::panicking::begin_panic<&str>::{closure#0}}", ptr %_3, i32 0, i32 1
  store ptr %loc, ptr %3, align 8
; call std::sys_common::backtrace::__rust_end_short_backtrace
  call void @_ZN3std10sys_common9backtrace26__rust_end_short_backtrace17h25cb1b395ce9abd5E(ptr align 8 %_3) #27
  unreachable
}

; std::panicking::begin_panic::{{closure}}
; Function Attrs: inlinehint noreturn nonlazybind uwtable
define void @"_ZN3std9panicking11begin_panic28_$u7b$$u7b$closure$u7d$$u7d$17hdfa270edff9aba9cE"(ptr align 8 %_1) unnamed_addr #5 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_7 = alloca %"core::option::Option<&str>", align 8
  %_4 = alloca %"std::panicking::begin_panic::Payload<&str>", align 8
  %inner.0 = load ptr, ptr %_1, align 8, !nonnull !3, !align !4, !noundef !3
  %1 = getelementptr inbounds i8, ptr %_1, i64 8
  %inner.1 = load i64, ptr %1, align 8, !noundef !3
  store ptr %inner.0, ptr %_7, align 8
  %2 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %inner.1, ptr %2, align 8
  %3 = load ptr, ptr %_7, align 8, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_7, i64 8
  %5 = load i64, ptr %4, align 8
  store ptr %3, ptr %_4, align 8
  %6 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %5, ptr %6, align 8
  %7 = getelementptr inbounds %"{closure@std::panicking::begin_panic<&str>::{closure#0}}", ptr %_1, i32 0, i32 1
  %_6 = load ptr, ptr %7, align 8, !nonnull !3, !align !5, !noundef !3
; invoke std::panicking::rust_panic_with_hook
  invoke void @_ZN3std9panicking20rust_panic_with_hook17h49021cdbc4b22349E(ptr align 1 %_4, ptr align 8 @vtable.2, ptr align 8 null, ptr align 8 %_6, i1 zeroext true, i1 zeroext false) #27
          to label %unreachable unwind label %cleanup

bb1:                                              ; preds = %cleanup
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12

cleanup:                                          ; preds = %start
  %13 = landingpad { ptr, i32 }
          cleanup
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
  store ptr %14, ptr %0, align 8
  %16 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %15, ptr %16, align 8
  br label %bb1

unreachable:                                      ; preds = %start
  unreachable
}

; std::panicking::try
; Function Attrs: nonlazybind uwtable
define { ptr, ptr } @_ZN3std9panicking3try17hfb1e7187c586efd1E(ptr align 8 %f) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %_3 = alloca ptr, align 8
  %data = alloca %"std::panicking::try::Data<core::panic::unwind_safe::AssertUnwindSafe<{closure@std::sys::pal::common::thread_local::fast_local::destroy_value<core::cell::Cell<(u64, u64)>>::{closure#0}}>, ()>", align 8
  %_0 = alloca %"core::result::Result<(), alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>", align 8
  store ptr %f, ptr %_3, align 8
  %1 = load ptr, ptr %_3, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %1, ptr %data, align 8
  %2 = call i32 @__rust_try(ptr @_ZN3std9panicking3try7do_call17h2577815be921e479E, ptr %data, ptr @_ZN3std9panicking3try8do_catch17h351cb073c693444dE)
  store i32 %2, ptr %0, align 4
  %_6 = load i32, ptr %0, align 4, !noundef !3
  %3 = icmp eq i32 %_6, 0
  br i1 %3, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %slot.0 = load ptr, ptr %data, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %data, i64 8
  %slot.1 = load ptr, ptr %4, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %slot.0, ptr %_0, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %slot.1, ptr %5, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %6 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  %8 = load ptr, ptr %7, align 8
  %9 = insertvalue { ptr, ptr } poison, ptr %6, 0
  %10 = insertvalue { ptr, ptr } %9, ptr %8, 1
  ret { ptr, ptr } %10
}

; std::panicking::try::do_call
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN3std9panicking3try7do_call17h2577815be921e479E(ptr %data) unnamed_addr #0 {
start:
  %f = load ptr, ptr %data, align 8, !nonnull !3, !align !5, !noundef !3
; call <core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
  call void @"_ZN115_$LT$core..panic..unwind_safe..AssertUnwindSafe$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$$LP$$RP$$GT$$GT$9call_once17ha50d2a5b743d107cE"(ptr align 8 %f)
  ret void
}

; std::panicking::try::do_catch
; Function Attrs: inlinehint nounwind nonlazybind uwtable
define void @_ZN3std9panicking3try8do_catch17h351cb073c693444dE(ptr %data, ptr %payload) unnamed_addr #6 personality ptr @rust_eh_personality {
start:
  %_5 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>", align 8
; invoke std::panicking::try::cleanup
  %0 = invoke { ptr, ptr } @_ZN3std9panicking3try7cleanup17h64243c6ceae774e7E(ptr %payload)
          to label %bb1 unwind label %terminate

terminate:                                        ; preds = %start
  %1 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
; call core::panicking::panic_cannot_unwind
  call void @_ZN4core9panicking19panic_cannot_unwind17h05e6c610e4e95bd9E() #15
  unreachable

bb1:                                              ; preds = %start
  %obj.0 = extractvalue { ptr, ptr } %0, 0
  %obj.1 = extractvalue { ptr, ptr } %0, 1
  store ptr %obj.0, ptr %_5, align 8
  %4 = getelementptr inbounds i8, ptr %_5, i64 8
  store ptr %obj.1, ptr %4, align 8
  %5 = load ptr, ptr %_5, align 8, !nonnull !3, !align !4, !noundef !3
  %6 = getelementptr inbounds i8, ptr %_5, i64 8
  %7 = load ptr, ptr %6, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %5, ptr %data, align 8
  %8 = getelementptr inbounds i8, ptr %data, i64 8
  store ptr %7, ptr %8, align 8
  ret void
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h3fe4b80c8cc9c2deE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
; call <core::option::Option<T> as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h6dde431f051d5a31E"(ptr align 1 %_3, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h55ba9202ec0129beE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call <core::option::Option<T> as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h33fd057d7ddbf3a1E"(ptr align 8 %_3, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hbce462ec4ae8c672E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call core::fmt::num::<impl core::fmt::Debug for usize>::fmt
  %_0 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hdbeb62b21ac05a60E"(ptr align 8 %_3, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hebb679e5959010dbE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call <core::str::error::Utf8Error as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h173189172731b276E"(ptr align 8 %_3, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hf69c9c5a0940145fE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
; call core::fmt::num::<impl core::fmt::Debug for u8>::fmt
  %_0 = call zeroext i1 @"_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h6e245ed574afc47bE"(ptr align 1 %_3, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h28e6efe3818a3709E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call <alloc::string::String as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E"(ptr align 8 %_3, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h4258ea0e27e635b8E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call <&T as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E"(ptr align 8 %_3, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_3.1 = load i64, ptr %0, align 8, !noundef !3
; call <str as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h86309c7b5dd516e7E"(ptr align 1 %_3.0, i64 %_3.1, ptr align 8 %f)
  ret i1 %_0
}

; <&T as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9a67a8dd9fe10324E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_3 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call <std::io::error::Error as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h425a926be932f95fE"(ptr align 8 %_3, ptr align 8 %f)
  ret i1 %_0
}

; <T as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17heeaf8ad53c6261d6E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca %"alloc::vec::Vec<u8>", align 8
  %formatter = alloca %"core::fmt::Formatter<'_>", align 8
  %buf = alloca %"alloc::string::String", align 8
  store i64 0, ptr %_10, align 8
  %1 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %_10, i32 0, i32 1
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_10, i64 24, i1 false)
  %3 = getelementptr inbounds %"core::fmt::Formatter<'_>", ptr %formatter, i32 0, i32 4
  store i32 0, ptr %3, align 4
  %4 = getelementptr inbounds %"core::fmt::Formatter<'_>", ptr %formatter, i32 0, i32 3
  store i32 32, ptr %4, align 8
  %5 = getelementptr inbounds %"core::fmt::Formatter<'_>", ptr %formatter, i32 0, i32 5
  store i8 3, ptr %5, align 8
  %6 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %6, ptr %formatter, align 8
  %8 = getelementptr inbounds i8, ptr %formatter, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %11 = getelementptr inbounds %"core::fmt::Formatter<'_>", ptr %formatter, i32 0, i32 1
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  %13 = getelementptr inbounds %"core::fmt::Formatter<'_>", ptr %formatter, i32 0, i32 2
  store ptr %buf, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store ptr @vtable.3, ptr %14, align 8
; invoke <pkg_config::Error as core::fmt::Display>::fmt
  %_7 = invoke zeroext i1 @"_ZN56_$LT$pkg_config..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hf1c77a20ce8c7271E"(ptr align 8 %self, ptr align 8 %formatter)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %buf) #28
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb3

bb1:                                              ; preds = %start
; invoke core::result::Result<T,E>::expect
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hd6cc5aca259a4640E"(i1 zeroext %_7, ptr align 1 @alloc_cc656815297f75969399c3f4b1ad3de4, i64 55, ptr align 8 @alloc_0c55029f27e67500548c60265db33aa3)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb4:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8, !noundef !3
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8, !noundef !3
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; <str as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17h19f0c60c67b6d201E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %v = alloca %"alloc::vec::Vec<u8>", align 8
  %bytes = alloca %"alloc::vec::Vec<u8>", align 8
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %0 = call { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h332409814013709cE"(i64 %self.1, i1 zeroext false)
  %_10.0 = extractvalue { i64, ptr } %0, 0
  %_10.1 = extractvalue { i64, ptr } %0, 1
  store i64 %_10.0, ptr %v, align 8
  %1 = getelementptr inbounds i8, ptr %v, i64 8
  store ptr %_10.1, ptr %1, align 8
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %v, i32 0, i32 1
  store i64 0, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %v, i64 8
  %self = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  %4 = mul i64 %self.1, 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %self, ptr align 1 %self.0, i64 %4, i1 false)
  %5 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %v, i32 0, i32 1
  store i64 %self.1, ptr %5, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %bytes, ptr align 8 %v, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %bytes, i64 24, i1 false)
  ret void
}

; <[T] as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h317c69c23b1980a0E"(ptr align 1 %self.0, i64 %self.1, ptr align 8 %f) unnamed_addr #1 {
start:
  %_12 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %_6 = alloca %"core::slice::iter::Iter<'_, u8>", align 8
  %_5 = alloca %"core::fmt::builders::DebugList<'_, '_>", align 8
; call core::fmt::Formatter::debug_list
  call void @_ZN4core3fmt9Formatter10debug_list17h876a1c15cedf3397E(ptr sret(%"core::fmt::builders::DebugList<'_, '_>") align 8 %_5, ptr align 8 %f)
  br i1 false, label %bb4, label %bb5

bb5:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %self.0, i64 %self.1
  store ptr %0, ptr %end_or_len, align 8
  br label %bb6

bb4:                                              ; preds = %start
  %1 = inttoptr i64 %self.1 to ptr
  store ptr %1, ptr %end_or_len, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  store ptr %self.0, ptr %_12, align 8
  %_14 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %2 = load ptr, ptr %_12, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %_6, align 8
  %3 = getelementptr inbounds i8, ptr %_6, i64 8
  store ptr %_14, ptr %3, align 8
  %4 = load ptr, ptr %_6, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_6, i64 8
  %6 = load ptr, ptr %5, align 8, !noundef !3
; call core::fmt::builders::DebugList::entries
  %_3 = call align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17h2bc69945889fb45aE(ptr align 8 %_5, ptr %4, ptr %6)
; call core::fmt::builders::DebugList::finish
  %_0 = call zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17h052888958915dc88E(ptr align 8 %_3)
  ret i1 %_0
}

; <F as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17he7b155c277f39cdbE"(ptr sret(%"core::str::pattern::CharPredicateSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>") align 8 %_0, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %_13 = alloca ptr, align 8
  %_7 = alloca %"core::slice::iter::Iter<'_, u8>", align 8
  %_6 = alloca %"core::str::iter::Chars<'_>", align 8
  %_5 = alloca %"core::str::iter::CharIndices<'_>", align 8
  %_3 = alloca %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>", align 8
  %end_or_len = getelementptr inbounds i8, ptr %haystack.0, i64 %haystack.1
  store ptr %haystack.0, ptr %_13, align 8
  %0 = load ptr, ptr %_13, align 8, !nonnull !3, !noundef !3
  store ptr %0, ptr %_7, align 8
  %1 = getelementptr inbounds i8, ptr %_7, i64 8
  store ptr %end_or_len, ptr %1, align 8
  %2 = load ptr, ptr %_7, align 8, !nonnull !3, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_7, i64 8
  %4 = load ptr, ptr %3, align 8, !noundef !3
  store ptr %2, ptr %_6, align 8
  %5 = getelementptr inbounds i8, ptr %_6, i64 8
  store ptr %4, ptr %5, align 8
  %6 = getelementptr inbounds %"core::str::iter::CharIndices<'_>", ptr %_5, i32 0, i32 1
  store i64 0, ptr %6, align 8
  %7 = load ptr, ptr %_6, align 8, !nonnull !3, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_6, i64 8
  %9 = load ptr, ptr %8, align 8, !noundef !3
  store ptr %7, ptr %_5, align 8
  %10 = getelementptr inbounds i8, ptr %_5, i64 8
  store ptr %9, ptr %10, align 8
  store ptr %haystack.0, ptr %_3, align 8
  %11 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %haystack.1, ptr %11, align 8
  %12 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>", ptr %_3, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %_5, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_3, i64 40, i1 false)
  ret void
}

; <F as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hfff62ee2d6cc40edE"(ptr sret(%"core::str::pattern::CharPredicateSearcher<'_, {closure@core::str::<impl str>::trim_end::{closure#0}}>") align 8 %_0, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %_13 = alloca ptr, align 8
  %_7 = alloca %"core::slice::iter::Iter<'_, u8>", align 8
  %_6 = alloca %"core::str::iter::Chars<'_>", align 8
  %_5 = alloca %"core::str::iter::CharIndices<'_>", align 8
  %_3 = alloca %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim_end::{closure#0}}>", align 8
  %end_or_len = getelementptr inbounds i8, ptr %haystack.0, i64 %haystack.1
  store ptr %haystack.0, ptr %_13, align 8
  %0 = load ptr, ptr %_13, align 8, !nonnull !3, !noundef !3
  store ptr %0, ptr %_7, align 8
  %1 = getelementptr inbounds i8, ptr %_7, i64 8
  store ptr %end_or_len, ptr %1, align 8
  %2 = load ptr, ptr %_7, align 8, !nonnull !3, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_7, i64 8
  %4 = load ptr, ptr %3, align 8, !noundef !3
  store ptr %2, ptr %_6, align 8
  %5 = getelementptr inbounds i8, ptr %_6, i64 8
  store ptr %4, ptr %5, align 8
  %6 = getelementptr inbounds %"core::str::iter::CharIndices<'_>", ptr %_5, i32 0, i32 1
  store i64 0, ptr %6, align 8
  %7 = load ptr, ptr %_6, align 8, !nonnull !3, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_6, i64 8
  %9 = load ptr, ptr %8, align 8, !noundef !3
  store ptr %7, ptr %_5, align 8
  %10 = getelementptr inbounds i8, ptr %_5, i64 8
  store ptr %9, ptr %10, align 8
  store ptr %haystack.0, ptr %_3, align 8
  %11 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %haystack.1, ptr %11, align 8
  %12 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim_end::{closure#0}}>", ptr %_3, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %_5, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_3, i64 40, i1 false)
  ret void
}

; <usize as core::iter::range::Step>::steps_between
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$13steps_between17h6a2da8b2b72a1e3bE"(ptr align 8 %start1, ptr align 8 %end) unnamed_addr #0 {
start:
  %_0 = alloca %"core::option::Option<usize>", align 8
  %_4 = load i64, ptr %start1, align 8, !noundef !3
  %_5 = load i64, ptr %end, align 8, !noundef !3
  %_3 = icmp ule i64 %_4, %_5
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %0 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %1 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %0, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %1, ptr %2, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %_6 = sub i64 %_5, %_4
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_6, ptr %3, align 8
  store i64 1, ptr %_0, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %4 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  %6 = load i64, ptr %5, align 8
  %7 = insertvalue { i64, i64 } poison, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; <usize as core::iter::range::Step>::forward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hfc82dfa8f57a0e81E"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
  %_0 = add nuw i64 %start1, %n
  ret i64 %_0
}

; <usize as core::iter::range::Step>::backward_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17hdfa41aa916aeefe3E"(i64 %start1, i64 %n) unnamed_addr #0 {
start:
  %_0 = sub nuw i64 %start1, %n
  ret i64 %_0
}

; core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hcb039fcb5fd17610E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 {
start:
  %_0 = alloca i8, align 1
  %_4 = load i64, ptr %self, align 8, !noundef !3
  %_5 = load i64, ptr %other, align 8, !noundef !3
  %_3 = icmp ult i64 %_4, %_5
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_6 = icmp eq i64 %_4, %_5
  br i1 %_6, label %bb3, label %bb4

bb1:                                              ; preds = %start
  store i8 -1, ptr %_0, align 1
  br label %bb6

bb4:                                              ; preds = %bb2
  store i8 1, ptr %_0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  br label %bb6

bb6:                                              ; preds = %bb1, %bb5
  %0 = load i8, ptr %_0, align 1, !range !19, !noundef !3
  ret i8 %0
}

; core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17he66466b4c93fbbdfE"(ptr align 1 %self, ptr align 1 %_other) unnamed_addr #0 {
start:
  ret i1 true
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h73624e3f33ed922aE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 {
start:
  %_3.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_3.1 = load i64, ptr %0, align 8, !noundef !3
  %_4.0 = load ptr, ptr %other, align 8, !nonnull !3, !align !4, !noundef !3
  %1 = getelementptr inbounds i8, ptr %other, i64 8
  %_4.1 = load i64, ptr %1, align 8, !noundef !3
; call core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_0 = call zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h6d0ba1924bcb9aebE"(ptr align 1 %_3.0, i64 %_3.1, ptr align 1 %_4.0, i64 %_4.1)
  ret i1 %_0
}

; core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h75aa0c6169a6b5eaE"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 {
start:
  %_3 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
  %_4.0 = load ptr, ptr %other, align 8, !nonnull !3, !align !4, !noundef !3
  %0 = getelementptr inbounds i8, ptr %other, i64 8
  %_4.1 = load i64, ptr %0, align 8, !noundef !3
; call <std::ffi::os_str::OsString as core::cmp::PartialEq<str>>::eq
  %_0 = call zeroext i1 @"_ZN78_$LT$std..ffi..os_str..OsString$u20$as$u20$core..cmp..PartialEq$LT$str$GT$$GT$2eq17he6497c5be0eb77bfE"(ptr align 8 %_3, ptr align 1 %_4.0, i64 %_4.1)
  ret i1 %_0
}

; core::cmp::max_by
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 %0, i64 %1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_5 = alloca { ptr, ptr }, align 8
  %_4 = alloca i8, align 1
  %_0 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, ptr %v1, align 8
  store i64 %1, ptr %v2, align 8
  store i8 1, ptr %_10, align 1
  store i8 1, ptr %_9, align 1
  store ptr %v1, ptr %_5, align 8
  %3 = getelementptr inbounds i8, ptr %_5, i64 8
  store ptr %v2, ptr %3, align 8
  %4 = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_5, i64 8
  %6 = load ptr, ptr %5, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::ops::function::FnOnce::call_once
  %7 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17h5ece2ea7c3318daeE(ptr align 8 %4, ptr align 8 %6)
          to label %bb1 unwind label %cleanup, !range !19

bb7:                                              ; preds = %cleanup
  br label %bb12

cleanup:                                          ; preds = %start
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %2, align 8
  %11 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb7

bb1:                                              ; preds = %start
  store i8 %7, ptr %_4, align 1
  %_8 = load i8, ptr %_4, align 1, !range !19, !noundef !3
  switch i8 %_8, label %bb13 [
    i8 -1, label %bb3
    i8 0, label %bb3
    i8 1, label %bb2
  ]

bb13:                                             ; preds = %bb1
  unreachable

bb3:                                              ; preds = %bb1, %bb1
  store i8 0, ptr %_9, align 1
  %12 = load i64, ptr %v2, align 8, !noundef !3
  store i64 %12, ptr %_0, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, ptr %_10, align 1
  %13 = load i64, ptr %v1, align 8, !noundef !3
  store i64 %13, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %14 = load i8, ptr %_9, align 1, !range !10, !noundef !3
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb9, label %bb5

bb5:                                              ; preds = %bb9, %bb4
  %16 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb10, label %bb6

bb9:                                              ; preds = %bb4
  br label %bb5

bb6:                                              ; preds = %bb10, %bb5
  %18 = load i64, ptr %_0, align 8, !noundef !3
  ret i64 %18

bb10:                                             ; preds = %bb5
  br label %bb6

bb12:                                             ; preds = %bb7
  %19 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb11, label %bb8

bb8:                                              ; preds = %bb11, %bb12
  %21 = load ptr, ptr %2, align 8, !noundef !3
  %22 = getelementptr inbounds i8, ptr %2, i64 8
  %23 = load i32, ptr %22, align 8, !noundef !3
  %24 = insertvalue { ptr, i32 } poison, ptr %21, 0
  %25 = insertvalue { ptr, i32 } %24, i32 %23, 1
  resume { ptr, i32 } %25

bb11:                                             ; preds = %bb12
  br label %bb8
}

; core::cmp::min_by
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core3cmp6min_by17h2372ffec580d3119E(i64 %0, i64 %1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_5 = alloca { ptr, ptr }, align 8
  %_4 = alloca i8, align 1
  %_0 = alloca i64, align 8
  %v2 = alloca i64, align 8
  %v1 = alloca i64, align 8
  store i64 %0, ptr %v1, align 8
  store i64 %1, ptr %v2, align 8
  store i8 1, ptr %_10, align 1
  store i8 1, ptr %_9, align 1
  store ptr %v1, ptr %_5, align 8
  %3 = getelementptr inbounds i8, ptr %_5, i64 8
  store ptr %v2, ptr %3, align 8
  %4 = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_5, i64 8
  %6 = load ptr, ptr %5, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::ops::function::FnOnce::call_once
  %7 = invoke i8 @_ZN4core3ops8function6FnOnce9call_once17h5ece2ea7c3318daeE(ptr align 8 %4, ptr align 8 %6)
          to label %bb1 unwind label %cleanup, !range !19

bb7:                                              ; preds = %cleanup
  br label %bb12

cleanup:                                          ; preds = %start
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %2, align 8
  %11 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb7

bb1:                                              ; preds = %start
  store i8 %7, ptr %_4, align 1
  %_8 = load i8, ptr %_4, align 1, !range !19, !noundef !3
  switch i8 %_8, label %bb13 [
    i8 -1, label %bb3
    i8 0, label %bb3
    i8 1, label %bb2
  ]

bb13:                                             ; preds = %bb1
  unreachable

bb3:                                              ; preds = %bb1, %bb1
  store i8 0, ptr %_10, align 1
  %12 = load i64, ptr %v1, align 8, !noundef !3
  store i64 %12, ptr %_0, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, ptr %_9, align 1
  %13 = load i64, ptr %v2, align 8, !noundef !3
  store i64 %13, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %14 = load i8, ptr %_9, align 1, !range !10, !noundef !3
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb9, label %bb5

bb5:                                              ; preds = %bb9, %bb4
  %16 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %17 = trunc i8 %16 to i1
  br i1 %17, label %bb10, label %bb6

bb9:                                              ; preds = %bb4
  br label %bb5

bb6:                                              ; preds = %bb10, %bb5
  %18 = load i64, ptr %_0, align 8, !noundef !3
  ret i64 %18

bb10:                                             ; preds = %bb5
  br label %bb6

bb12:                                             ; preds = %bb7
  %19 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb11, label %bb8

bb8:                                              ; preds = %bb11, %bb12
  %21 = load ptr, ptr %2, align 8, !noundef !3
  %22 = getelementptr inbounds i8, ptr %2, i64 8
  %23 = load i32, ptr %22, align 8, !noundef !3
  %24 = insertvalue { ptr, i32 } poison, ptr %21, 0
  %25 = insertvalue { ptr, i32 } %24, i32 %23, 1
  resume { ptr, i32 } %25

bb11:                                             ; preds = %bb12
  br label %bb8
}

; core::fmt::num::<impl core::fmt::Debug for u8>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num49_$LT$impl$u20$core..fmt..Debug$u20$for$u20$u8$GT$3fmt17h6e245ed574afc47bE"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %_0 = alloca i8, align 1
  %0 = getelementptr inbounds %"core::fmt::Formatter<'_>", ptr %f, i32 0, i32 4
  %_4 = load i32, ptr %0, align 4, !noundef !3
  %_3 = and i32 %_4, 16
  %1 = icmp eq i32 %_3, 0
  br i1 %1, label %bb2, label %bb1

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::fmt::Formatter<'_>", ptr %f, i32 0, i32 4
  %_6 = load i32, ptr %2, align 4, !noundef !3
  %_5 = and i32 %_6, 32
  %3 = icmp eq i32 %_5, 0
  br i1 %3, label %bb4, label %bb3

bb1:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
  %4 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17ha5e2045323f0c8f5E"(ptr align 1 %self, ptr align 8 %f)
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_0, align 1
  br label %bb6

bb4:                                              ; preds = %bb2
; call core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
  %6 = call zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17h8e60102b0743c13cE"(ptr align 1 %self, ptr align 8 %f)
  %7 = zext i1 %6 to i8
  store i8 %7, ptr %_0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
  %8 = call zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17hb339727406d21c1fE"(ptr align 1 %self, ptr align 8 %f)
  %9 = zext i1 %8 to i8
  store i8 %9, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  br label %bb6

bb6:                                              ; preds = %bb1, %bb5
  %10 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

; core::fmt::num::<impl core::fmt::Debug for usize>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17hdbeb62b21ac05a60E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %_0 = alloca i8, align 1
  %0 = getelementptr inbounds %"core::fmt::Formatter<'_>", ptr %f, i32 0, i32 4
  %_4 = load i32, ptr %0, align 4, !noundef !3
  %_3 = and i32 %_4, 16
  %1 = icmp eq i32 %_3, 0
  br i1 %1, label %bb2, label %bb1

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::fmt::Formatter<'_>", ptr %f, i32 0, i32 4
  %_6 = load i32, ptr %2, align 4, !noundef !3
  %_5 = and i32 %_6, 32
  %3 = icmp eq i32 %_5, 0
  br i1 %3, label %bb4, label %bb3

bb1:                                              ; preds = %start
; call core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
  %4 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17hdcbbec87e7e8bf7bE"(ptr align 8 %self, ptr align 8 %f)
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_0, align 1
  br label %bb6

bb4:                                              ; preds = %bb2
; call core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
  %6 = call zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h7bbbd896a38dcccaE"(ptr align 8 %self, ptr align 8 %f)
  %7 = zext i1 %6 to i8
  store i8 %7, ptr %_0, align 1
  br label %bb5

bb3:                                              ; preds = %bb2
; call core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
  %8 = call zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17hdaf6f71ebb81ebeeE"(ptr align 8 %self, ptr align 8 %f)
  %9 = zext i1 %8 to i8
  store i8 %9, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  br label %bb6

bb6:                                              ; preds = %bb1, %bb5
  %10 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %11 = trunc i8 %10 to i1
  ret i1 %11
}

; core::fmt::Write::write_char
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write10write_char17ha39eef9cd5753103E(ptr align 8 %self, i32 %c) unnamed_addr #1 {
start:
  %_6 = alloca [4 x i8], align 1
  %0 = getelementptr inbounds [4 x i8], ptr %_6, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 1 %0, i8 0, i64 4, i1 false)
; call core::char::methods::encode_utf8_raw
  %1 = call { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17hce4a0e0468f969f6E(i32 %c, ptr align 1 %_6, i64 4)
  %v.0 = extractvalue { ptr, i64 } %1, 0
  %v.1 = extractvalue { ptr, i64 } %1, 1
; call <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str
  %_0 = call zeroext i1 @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h902807423469e47aE"(ptr align 8 %self, ptr align 1 %v.0, i64 %v.1)
  ret i1 %_0
}

; core::fmt::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write9write_fmt17h097b92dcedbca259E(ptr align 8 %self, ptr align 8 %args) unnamed_addr #1 {
start:
; call <&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt
  %_0 = call zeroext i1 @"_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17hb8afec2ecc798f1aE"(ptr align 8 %self, ptr align 8 %args)
  ret i1 %_0
}

; core::fmt::Write::write_fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN4core3fmt5Write9write_fmt17hdcebb3c98fa6fcecE(ptr align 8 %self, ptr align 8 %args) unnamed_addr #1 {
start:
; call <&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt
  %_0 = call zeroext i1 @"_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17h2429ba0202763b76E"(ptr align 8 %self, ptr align 8 %args)
  ret i1 %_0
}

; core::fmt::builders::DebugList::entries
; Function Attrs: nonlazybind uwtable
define align 8 ptr @_ZN4core3fmt8builders9DebugList7entries17h2bc69945889fb45aE(ptr align 8 %self, ptr %entries.0, ptr %entries.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %entry = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  %iter = alloca %"core::slice::iter::Iter<'_, u8>", align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %1 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf7b7808b0086d36dE"(ptr %entries.0, ptr %entries.1)
  %_3.0 = extractvalue { ptr, ptr } %1, 0
  %_3.1 = extractvalue { ptr, ptr } %1, 1
  store ptr %_3.0, ptr %iter, align 8
  %2 = getelementptr inbounds i8, ptr %iter, i64 8
  store ptr %_3.1, ptr %2, align 8
  br label %bb2

bb2:                                              ; preds = %bb8, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %3 = invoke align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcae68254e9640bb1E"(ptr align 8 %iter)
          to label %bb3 unwind label %cleanup

bb11:                                             ; preds = %bb10, %cleanup
  %4 = load ptr, ptr %0, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  %6 = load i32, ptr %5, align 8, !noundef !3
  %7 = insertvalue { ptr, i32 } poison, ptr %4, 0
  %8 = insertvalue { ptr, i32 } %7, i32 %6, 1
  resume { ptr, i32 } %8

cleanup:                                          ; preds = %bb2
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb11

bb3:                                              ; preds = %bb2
  store ptr %3, ptr %_5, align 8
  %13 = load ptr, ptr %_5, align 8, !noundef !3
  %14 = ptrtoint ptr %13 to i64
  %15 = icmp eq i64 %14, 0
  %_7 = select i1 %15, i64 0, i64 1
  %16 = icmp eq i64 %_7, 0
  br i1 %16, label %bb6, label %bb4

bb6:                                              ; preds = %bb3
  ret ptr %self

bb4:                                              ; preds = %bb3
  %17 = load ptr, ptr %_5, align 8, !nonnull !3, !align !4, !noundef !3
  store ptr %17, ptr %entry, align 8
; invoke core::fmt::builders::DebugList::entry
  %_9 = invoke align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17hd1d9a4a9a039c3ebE(ptr align 8 %self, ptr align 1 %entry, ptr align 8 @vtable.4)
          to label %bb7 unwind label %cleanup1

bb10:                                             ; preds = %cleanup1
  br label %bb11

cleanup1:                                         ; preds = %bb4
  %18 = landingpad { ptr, i32 }
          cleanup
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
  store ptr %19, ptr %0, align 8
  %21 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %20, ptr %21, align 8
  br label %bb10

bb7:                                              ; preds = %bb4
  br label %bb8

bb8:                                              ; preds = %bb7
  br label %bb2

bb5:                                              ; No predecessors!
  unreachable
}

; core::fmt::Arguments::new_v1_formatted
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments16new_v1_formatted17h8648efbea738c34fE(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1, ptr align 8 %fmt.0, i64 %fmt.1) unnamed_addr #0 {
start:
  %_5 = alloca %"core::option::Option<&[core::fmt::rt::Placeholder]>", align 8
  store ptr %fmt.0, ptr %_5, align 8
  %0 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %fmt.1, ptr %0, align 8
  store ptr %pieces.0, ptr %_0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %pieces.1, ptr %1, align 8
  %2 = load ptr, ptr %_5, align 8, !align !5, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_5, i64 8
  %4 = load i64, ptr %3, align 8
  %5 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 2
  store ptr %2, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 %4, ptr %6, align 8
  %7 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 1
  store ptr %args.0, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 8
  store i64 %args.1, ptr %8, align 8
  ret void
}

; core::fmt::Arguments::new_v1
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_0, ptr align 8 %pieces.0, i64 %pieces.1, ptr align 8 %args.0, i64 %args.1) unnamed_addr #0 {
start:
  %_14 = alloca %"core::fmt::Arguments<'_>", align 8
  %_9 = alloca %"core::fmt::Arguments<'_>", align 8
  %_3 = icmp ult i64 %pieces.1, %args.1
  br i1 %_3, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_7 = add i64 %args.1, 1
  %_6 = icmp ugt i64 %pieces.1, %_7
  br i1 %_6, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  br i1 false, label %bb4, label %bb6

bb3:                                              ; preds = %bb1
  store ptr %pieces.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %pieces.1, ptr %0, align 8
  %1 = load ptr, ptr @1, align 8, !align !5, !noundef !3
  %2 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %3 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 2
  store ptr %1, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %2, ptr %4, align 8
  %5 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 1
  store ptr %args.0, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 %args.1, ptr %6, align 8
  ret void

bb6:                                              ; preds = %bb2
  store ptr @alloc_af99043bc04c419363a7f04d23183506, ptr %_9, align 8
  %7 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 1, ptr %7, align 8
  %8 = load ptr, ptr @1, align 8, !align !5, !noundef !3
  %9 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %10 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_9, i32 0, i32 2
  store ptr %8, ptr %10, align 8
  %11 = getelementptr inbounds i8, ptr %10, i64 8
  store i64 %9, ptr %11, align 8
  %12 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_9, i32 0, i32 1
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  store i64 0, ptr %13, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_9, ptr align 8 @alloc_b96933a8148f906cfb135db9ebeba42b) #27
  unreachable

bb4:                                              ; preds = %bb2
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_14, ptr align 8 @alloc_af99043bc04c419363a7f04d23183506, i64 1)
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_14, ptr align 8 @alloc_b1c9b46fd6543b9e0f93a51d745efa2a) #27
  unreachable
}

; core::fmt::Arguments::new_const
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_0, ptr align 8 %pieces.0, i64 %pieces.1) unnamed_addr #0 {
start:
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %_2 = icmp ugt i64 %pieces.1, 1
  br i1 %_2, label %bb1, label %bb3

bb3:                                              ; preds = %start
  store ptr %pieces.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %pieces.1, ptr %0, align 8
  %1 = load ptr, ptr @1, align 8, !align !5, !noundef !3
  %2 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %3 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 2
  store ptr %1, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %2, ptr %4, align 8
  %5 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_0, i32 0, i32 1
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 0, ptr %6, align 8
  ret void

bb1:                                              ; preds = %start
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_af99043bc04c419363a7f04d23183506, i64 1)
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_5, ptr align 8 @alloc_b1c9b46fd6543b9e0f93a51d745efa2a) #27
  unreachable
}

; core::num::<impl usize>::checked_add
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h8cfe75cc272f52d0E"(i64 %self, i64 %rhs) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %_0 = alloca %"core::option::Option<usize>", align 8
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self, i64 %rhs)
  %_6.0 = extractvalue { i64, i1 } %1, 0
  %_6.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_6.1, i1 false)
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %0, align 1
  %4 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_3 = trunc i8 %4 to i1
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_6.0, ptr %5, align 8
  store i64 1, ptr %_0, align 8
  br label %bb4

bb2:                                              ; preds = %start
  %6 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %6, ptr %_0, align 8
  %8 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %7, ptr %8, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %9 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %10 = getelementptr inbounds i8, ptr %_0, i64 8
  %11 = load i64, ptr %10, align 8
  %12 = insertvalue { i64, i64 } poison, i64 %9, 0
  %13 = insertvalue { i64, i64 } %12, i64 %11, 1
  ret { i64, i64 } %13
}

; core::num::<impl usize>::div_ceil
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3num23_$LT$impl$u20$usize$GT$8div_ceil17h782c7d6668ed2ee8E"(i64 %self, i64 %rhs, ptr align 8 %0) unnamed_addr #0 {
start:
  %_0 = alloca i64, align 8
  %_4 = icmp eq i64 %rhs, 0
  %1 = call i1 @llvm.expect.i1(i1 %_4, i1 false)
  br i1 %1, label %panic, label %bb1

bb1:                                              ; preds = %start
  %d = udiv i64 %self, %rhs
  %2 = call i1 @llvm.expect.i1(i1 %_4, i1 false)
  br i1 %2, label %panic1, label %bb2

panic:                                            ; preds = %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @str.5, i64 25, ptr align 8 %0) #27
  unreachable

bb2:                                              ; preds = %bb1
  %r = urem i64 %self, %rhs
  %_6 = icmp ugt i64 %r, 0
  br i1 %_6, label %bb3, label %bb5

panic1:                                           ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @str.6, i64 57, ptr align 8 %0) #27
  unreachable

bb5:                                              ; preds = %bb3, %bb2
  store i64 %d, ptr %_0, align 8
  br label %bb6

bb3:                                              ; preds = %bb2
  %_7 = icmp ugt i64 %rhs, 0
  br i1 %_7, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %3 = add i64 %d, 1
  store i64 %3, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %4 = load i64, ptr %_0, align 8, !noundef !3
  ret i64 %4
}

; core::ops::function::FnMut::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function5FnMut8call_mut17h8f9aa82af1e27c21E(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %_1, ptr align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_2 = alloca { { ptr, i64 } }, align 8
  store ptr %0, ptr %_2, align 8
  %2 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %1, ptr %2, align 8
  %3 = load ptr, ptr %_2, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
; call <alloc::string::String as core::convert::From<&str>>::from
  call void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h2ce6d0b3267d2923E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %3, i64 %5)
  ret void
}

; core::ops::function::FnMut::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core3ops8function5FnMut8call_mut17h9830006f205e19b3E(ptr align 1 %_1, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_2 = alloca { i64, i64 }, align 8
  store i64 %0, ptr %_2, align 8
  %2 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %1, ptr %2, align 8
  %3 = load i64, ptr %_2, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
; call core::num::<impl usize>::checked_add
  %6 = call { i64, i64 } @"_ZN4core3num23_$LT$impl$u20$usize$GT$11checked_add17h8cfe75cc272f52d0E"(i64 %3, i64 %5)
  %_0.0 = extractvalue { i64, i64 } %6, 0
  %_0.1 = extractvalue { i64, i64 } %6, 1
  %7 = insertvalue { i64, i64 } poison, i64 %_0.0, 0
  %8 = insertvalue { i64, i64 } %7, i64 %_0.1, 1
  ret { i64, i64 } %8
}

; core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h679c97a00d84fb7bE"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #1 {
start:
  %args = alloca ptr, align 8
  store ptr %0, ptr %args, align 8
  %_3 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %1 = load ptr, ptr %args, align 8, !nonnull !3, !align !5, !noundef !3
; call pkg_config::Library::parse_libs_cflags::{{closure}}
  %_0 = call zeroext i1 @"_ZN10pkg_config7Library17parse_libs_cflags28_$u7b$$u7b$closure$u7d$$u7d$17ha8ea34036de8d50cE"(ptr align 1 %_3, ptr align 8 %1)
  ret i1 %_0
}

; core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h8d36f1ada60d25faE"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #1 {
start:
  %args = alloca ptr, align 8
  store ptr %0, ptr %args, align 8
  %_3 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %1 = load ptr, ptr %args, align 8, !nonnull !3, !align !5, !noundef !3
; call pkg_config::Library::parse_libs_cflags::{{closure}}
  %_0 = call zeroext i1 @"_ZN10pkg_config7Library17parse_libs_cflags28_$u7b$$u7b$closure$u7d$$u7d$17hbe2eab15cc6f5dc5E"(ptr align 1 %_3, ptr align 8 %1)
  ret i1 %_0
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define { ptr, i64 } @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h01db6871a2dd0d1bE"(ptr align 1 %self, ptr align 8 %0) unnamed_addr #1 {
start:
  %args = alloca ptr, align 8
  store ptr %0, ptr %args, align 8
  %1 = load ptr, ptr %args, align 8, !nonnull !3, !align !5, !noundef !3
; call alloc::str::join_generic_copy::{{closure}}
  %2 = call { ptr, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17h8ca8d4a23444054eE"(ptr align 1 %self, ptr align 8 %1)
  %_0.0 = extractvalue { ptr, i64 } %2, 0
  %_0.1 = extractvalue { ptr, i64 } %2, 1
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1
  ret { ptr, i64 } %4
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define { ptr, i64 } @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h269ebbe4842904aeE"(ptr align 1 %self, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %args = alloca { { ptr, i64 } }, align 8
  store ptr %0, ptr %args, align 8
  %2 = getelementptr inbounds i8, ptr %args, i64 8
  store i64 %1, ptr %2, align 8
  %3 = load ptr, ptr %args, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %args, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
; call <core::str::LinesMap as core::ops::function::FnMut<(&str,)>>::call_mut
  %6 = call { ptr, i64 } @"_ZN92_$LT$core..str..LinesMap$u20$as$u20$core..ops..function..FnMut$LT$$LP$$RF$str$C$$RP$$GT$$GT$8call_mut17h7d4d345c85004250E"(ptr align 1 %self, ptr align 1 %3, i64 %5)
  %_0.0 = extractvalue { ptr, i64 } %6, 0
  %_0.1 = extractvalue { ptr, i64 } %6, 1
  %7 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %8 = insertvalue { ptr, i64 } %7, i64 %_0.1, 1
  ret { ptr, i64 } %8
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define { ptr, i64 } @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h325442084686e197E"(ptr align 1 %self, ptr align 8 %0) unnamed_addr #1 {
start:
  %args = alloca ptr, align 8
  store ptr %0, ptr %args, align 8
  %1 = load ptr, ptr %args, align 8, !nonnull !3, !align !5, !noundef !3
; call alloc::str::join_generic_copy::{{closure}}
  %2 = call { ptr, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17h5bd73595b2755f27E"(ptr align 1 %self, ptr align 8 %1)
  %_0.0 = extractvalue { ptr, i64 } %2, 0
  %_0.1 = extractvalue { ptr, i64 } %2, 1
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1
  ret { ptr, i64 } %4
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h70db29c21407f4b7E"(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 1 %self, ptr align 8 %0) unnamed_addr #1 {
start:
  %args = alloca ptr, align 8
  store ptr %0, ptr %args, align 8
  %1 = load ptr, ptr %args, align 8, !nonnull !3, !align !5, !noundef !3
; call pkg_config::Library::parse_libs_cflags::{{closure}}
  call void @"_ZN10pkg_config7Library17parse_libs_cflags28_$u7b$$u7b$closure$u7d$$u7d$17h4191f920284ace44E"(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 1 %self, ptr align 8 %1)
  ret void
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17h9100d43fb89cca70E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %self, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %args = alloca { { ptr, i64 } }, align 8
  store ptr %0, ptr %args, align 8
  %2 = getelementptr inbounds i8, ptr %args, i64 8
  store i64 %1, ptr %2, align 8
  %3 = load ptr, ptr %args, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %args, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
; call <pkg_config::Error as core::fmt::Display>::fmt::{{closure}}
  call void @"_ZN56_$LT$pkg_config..Error$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h85159a2cd0fe500dE"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %self, ptr align 1 %3, i64 %5)
  ret void
}

; core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &mut F>::call_once
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ops8function5impls80_$LT$impl$u20$core..ops..function..FnOnce$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$9call_once17ha3a3870df8ff1d6cE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_0, ptr align 1 %self, ptr align 8 %0) unnamed_addr #1 {
start:
  %args = alloca ptr, align 8
  store ptr %0, ptr %args, align 8
  %1 = load ptr, ptr %args, align 8, !nonnull !3, !align !5, !noundef !3
; call pkg_config::Library::parse_libs_cflags::{{closure}}
  call void @"_ZN10pkg_config7Library17parse_libs_cflags28_$u7b$$u7b$closure$u7d$$u7d$17ha4e0f09298fa65eaE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_0, ptr align 1 %self, ptr align 8 %1)
  ret void
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17h75d35925ebfab28dE"(ptr %_1, ptr align 8 %0, i64 %1) unnamed_addr #0 {
start:
  %_2 = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %_2, align 8
  %2 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %1, ptr %2, align 8
  %3 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  %4 = load ptr, ptr %_2, align 8, !nonnull !3, !align !5, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_2, i64 8
  %6 = load i64, ptr %5, align 8, !noundef !3
; call core::ops::function::FnOnce::call_once
  %_0 = call i64 @_ZN4core3ops8function6FnOnce9call_once17ha519e81a92345803E(ptr align 8 %3, ptr align 8 %4, i64 %6)
  ret i64 %_0
}

; core::ops::function::FnOnce::call_once{{vtable.shim}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17hd2b37632d8fd9942E"(ptr %_1, i64 %0) unnamed_addr #0 {
start:
  %_2 = alloca i64, align 8
  store i64 %0, ptr %_2, align 8
  %1 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_1, i64 8
  %3 = load ptr, ptr %2, align 8, !nonnull !3, !align !5, !noundef !3
  %4 = load i64, ptr %_2, align 8, !noundef !3
; call core::ops::function::FnOnce::call_once
  %_0 = call zeroext i1 @_ZN4core3ops8function6FnOnce9call_once17ha4179c5e65bab030E(ptr align 8 %1, ptr align 8 %3, i64 %4)
  ret i1 %_0
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @_ZN4core3ops8function6FnOnce9call_once17h0e04a48104de7052E(ptr align 8 %0) unnamed_addr #0 {
start:
  %_2 = alloca ptr, align 8
  store ptr %0, ptr %_2, align 8
  %1 = load ptr, ptr %_2, align 8, !nonnull !3, !align !5, !noundef !3
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::next
  %2 = call { ptr, i64 } @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1c76a7541460ed07E"(ptr align 8 %1)
  %_0.0 = extractvalue { ptr, i64 } %2, 0
  %_0.1 = extractvalue { ptr, i64 } %2, 1
  %3 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %4 = insertvalue { ptr, i64 } %3, i64 %_0.1, 1
  ret { ptr, i64 } %4
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h314810b39c0269bbE(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_2 = alloca { { ptr, i64 } }, align 8
  store ptr %0, ptr %_2, align 8
  %2 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %1, ptr %2, align 8
  %3 = load ptr, ptr %_2, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h67276cf824909686E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %3, i64 %5)
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17h353d424dd2fe7d50E(ptr sret(%"std::fs::Metadata") align 8 %_0, ptr align 8 %0) unnamed_addr #0 {
start:
  %_2 = alloca { %"std::sys::pal::unix::fs::FileAttr" }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %0, i64 176, i1 false)
; call std::fs::Metadata
  call void @_ZN3std2fs8Metadata17hc88def3cb05947efE(ptr sret(%"std::fs::Metadata") align 8 %_0, ptr align 8 %_2)
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3ops8function6FnOnce9call_once17h5ece2ea7c3318daeE(ptr align 8 %0, ptr align 8 %1) unnamed_addr #0 {
start:
  %_2 = alloca { ptr, ptr }, align 8
  store ptr %0, ptr %_2, align 8
  %2 = getelementptr inbounds i8, ptr %_2, i64 8
  store ptr %1, ptr %2, align 8
  %3 = load ptr, ptr %_2, align 8, !nonnull !3, !align !5, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  %5 = load ptr, ptr %4, align 8, !nonnull !3, !align !5, !noundef !3
; call core::cmp::impls::<impl core::cmp::Ord for usize>::cmp
  %_0 = call i8 @"_ZN4core3cmp5impls50_$LT$impl$u20$core..cmp..Ord$u20$for$u20$usize$GT$3cmp17hcb039fcb5fd17610E"(ptr align 8 %3, ptr align 8 %5), !range !19
  ret i8 %_0
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3ops8function6FnOnce9call_once17ha4179c5e65bab030E(ptr align 8 %0, ptr align 8 %1, i64 %2) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %3 = alloca { ptr, i32, [1 x i32] }, align 8
  %_2 = alloca i64, align 8
  %_1 = alloca %"{closure@hashbrown::raw::RawTable<(alloc::string::String, core::option::Option<alloc::string::String>)>::find_or_find_insert_slot<{closure@hashbrown::map::equivalent_key<alloc::string::String, alloc::string::String, core::option::Option<alloc::string::String>>::{closure#0}}, {closure@hashbrown::map::make_hasher<alloc::string::String, core::option::Option<alloc::string::String>, std::hash::random::RandomState>::{closure#0}}>::{closure#0}}", align 8
  store ptr %0, ptr %_1, align 8
  %4 = getelementptr inbounds i8, ptr %_1, i64 8
  store ptr %1, ptr %4, align 8
  store i64 %2, ptr %_2, align 8
  %5 = load i64, ptr %_2, align 8, !noundef !3
; invoke hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot::{{closure}}
  %_0 = invoke zeroext i1 @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$24find_or_find_insert_slot28_$u7b$$u7b$closure$u7d$$u7d$17h2ffe10efd3d30c46E"(ptr align 8 %_1, i64 %5)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %6 = load ptr, ptr %3, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %3, i64 8
  %8 = load i32, ptr %7, align 8, !noundef !3
  %9 = insertvalue { ptr, i32 } poison, ptr %6, 0
  %10 = insertvalue { ptr, i32 } %9, i32 %8, 1
  resume { ptr, i32 } %10

cleanup:                                          ; preds = %start
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
  store ptr %12, ptr %3, align 8
  %14 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %13, ptr %14, align 8
  br label %bb3

bb1:                                              ; preds = %start
  ret i1 %_0
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core3ops8function6FnOnce9call_once17ha519e81a92345803E(ptr align 8 %0, ptr align 8 %1, i64 %2) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %3 = alloca { ptr, i32, [1 x i32] }, align 8
  %_2 = alloca { ptr, i64 }, align 8
  %_1 = alloca ptr, align 8
  store ptr %0, ptr %_1, align 8
  store ptr %1, ptr %_2, align 8
  %4 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %2, ptr %4, align 8
  %5 = load ptr, ptr %_2, align 8, !nonnull !3, !align !5, !noundef !3
  %6 = getelementptr inbounds i8, ptr %_2, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
; invoke hashbrown::raw::RawTable<T,A>::reserve_rehash::{{closure}}
  %_0 = invoke i64 @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash28_$u7b$$u7b$closure$u7d$$u7d$17h8d8ec22d2225dab1E"(ptr align 8 %_1, ptr align 8 %5, i64 %7)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %8 = load ptr, ptr %3, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %3, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12

cleanup:                                          ; preds = %start
  %13 = landingpad { ptr, i32 }
          cleanup
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
  store ptr %14, ptr %3, align 8
  %16 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %15, ptr %16, align 8
  br label %bb3

bb1:                                              ; preds = %start
  ret i64 %_0
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hf0a475157b7220a7E(ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_2 = alloca {}, align 1
  %_1 = alloca ptr, align 8
  store ptr %0, ptr %_1, align 8
; invoke std::sys::pal::common::thread_local::fast_local::destroy_value::{{closure}}
  invoke void @"_ZN3std3sys3pal6common12thread_local10fast_local13destroy_value28_$u7b$$u7b$closure$u7d$$u7d$17h59e9000df8a84db4E"(ptr align 8 %_1)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %2 = load ptr, ptr %1, align 8, !noundef !3
  %3 = getelementptr inbounds i8, ptr %1, i64 8
  %4 = load i32, ptr %3, align 8, !noundef !3
  %5 = insertvalue { ptr, i32 } poison, ptr %2, 0
  %6 = insertvalue { ptr, i32 } %5, i32 %4, 1
  resume { ptr, i32 } %6

cleanup:                                          ; preds = %start
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %1, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb3

bb1:                                              ; preds = %start
  ret void
}

; core::ops::function::FnOnce::call_once
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core3ops8function6FnOnce9call_once17hfc1966382206bc7dE(ptr sret(%"std::path::PathBuf") align 8 %_0, ptr align 8 %0) unnamed_addr #0 {
start:
  %_2 = alloca { %"std::ffi::os_str::OsString" }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %0, i64 24, i1 false)
; call <std::path::PathBuf as core::convert::From<std::ffi::os_str::OsString>>::from
  call void @"_ZN92_$LT$std..path..PathBuf$u20$as$u20$core..convert..From$LT$std..ffi..os_str..OsString$GT$$GT$4from17h376abd3f6a35428eE"(ptr sret(%"std::path::PathBuf") align 8 %_0, ptr align 8 %_2)
  ret void
}

; core::ptr::drop_in_place<core::option::Option<std::sys::pal::unix::process::process_common::Stdio>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr100drop_in_place$LT$core..option..Option$LT$std..sys..pal..unix..process..process_common..Stdio$GT$$GT$17h9f3c49b5cc00d95cE"(ptr align 4 %_1) unnamed_addr #1 {
start:
  %0 = load i32, ptr %_1, align 4, !range !20, !noundef !3
  %1 = icmp eq i32 %0, 5
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<std::sys::pal::unix::process::process_common::Stdio>
  call void @"_ZN4core3ptr72drop_in_place$LT$std..sys..pal..unix..process..process_common..Stdio$GT$17hb6251d78a0e8db35E"(ptr align 4 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17ha2c35500c6b3bbe6E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load i8, ptr %_1, align 8, !range !17, !noundef !3
  %_2 = zext i8 %0 to i64
  switch i64 %_2, label %bb2 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
  ]

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>::Custom", ptr %_1, i32 0, i32 1
; call core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
  call void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17hef53a5667b045cceE"(ptr align 8 %1)
  br label %bb1

bb1:                                              ; preds = %bb2, %start, %start, %start
  ret void
}

; core::ptr::drop_in_place<(alloc::string::String,core::option::Option<alloc::string::String>)>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr102drop_in_place$LT$$LP$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$RP$$GT$17hd5c989e80d38ed15E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %1 = getelementptr inbounds { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h77bf297a2e36d6aaE"(ptr align 8 %1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %6 = getelementptr inbounds { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, ptr %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  call void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h77bf297a2e36d6aaE"(ptr align 8 %6)
  ret void

terminate:                                        ; preds = %bb3
  %7 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %10 = load ptr, ptr %0, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  %12 = load i32, ptr %11, align 8, !noundef !3
  %13 = insertvalue { ptr, i32 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i32 } %13, i32 %12, 1
  resume { ptr, i32 } %14
}

; core::ptr::drop_in_place<alloc::vec::Vec<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr107drop_in_place$LT$alloc..vec..Vec$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$GT$17h7cf3decbf40f2d36E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha12dbd5f87ebbafaE"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>>
  invoke void @"_ZN4core3ptr114drop_in_place$LT$alloc..raw_vec..RawVec$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$GT$17h5830ae8c1fa2c8edE"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>>
  call void @"_ZN4core3ptr114drop_in_place$LT$alloc..raw_vec..RawVec$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$GT$17h5830ae8c1fa2c8edE"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<alloc::vec::in_place_drop::InPlaceDstDataSrcBufDrop<&str,alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr111drop_in_place$LT$alloc..vec..in_place_drop..InPlaceDstDataSrcBufDrop$LT$$RF$str$C$alloc..string..String$GT$$GT$17he6cb8fbd7075c4b6E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::vec::in_place_drop::InPlaceDstDataSrcBufDrop<Src,Dest> as core::ops::drop::Drop>::drop
  call void @"_ZN111_$LT$alloc..vec..in_place_drop..InPlaceDstDataSrcBufDrop$LT$Src$C$Dest$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h42c90be17e203e1cE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr114drop_in_place$LT$alloc..raw_vec..RawVec$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$GT$17h5830ae8c1fa2c8edE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h49b437f2e4c06aefE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::error::Error+core::marker::Send+core::marker::Sync>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr118drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h2f6b23b31417e6b2E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_6.0 = load ptr, ptr %_1, align 8, !noundef !3
  %1 = getelementptr inbounds i8, ptr %_1, i64 8
  %_6.1 = load ptr, ptr %1, align 8, !nonnull !3, !align !5, !noundef !3
  %2 = getelementptr inbounds ptr, ptr %_6.1, i64 0
  %3 = load ptr, ptr %2, align 8, !invariant.load !3, !nonnull !3
  invoke void %3(ptr align 1 %_6.0)
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; invoke <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he4329873de2d2b1aE"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb4

bb3:                                              ; preds = %start
; call <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he4329873de2d2b1aE"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb4
  %8 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb4
  %11 = load ptr, ptr %0, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  %13 = load i32, ptr %12, align 8, !noundef !3
  %14 = insertvalue { ptr, i32 } poison, ptr %11, 0
  %15 = insertvalue { ptr, i32 } %14, i32 %13, 1
  resume { ptr, i32 } %15
}

; core::ptr::drop_in_place<core::result::Result<(),alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr130drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$$GT$17h001c165d08df4fcdE"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load ptr, ptr %_1, align 8, !noundef !3
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
  call void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h6e59d20a598eeef2E"(ptr align 8 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<hashbrown::raw::RawTable<(alloc::string::String,core::option::Option<alloc::string::String>)>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr134drop_in_place$LT$hashbrown..raw..RawTable$LT$$LP$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$RP$$GT$$GT$17hde0cc1bc0ed3510aE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <hashbrown::raw::RawTable<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN79_$LT$hashbrown..raw..RawTable$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4b9ad5df213f3c72E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<std::collections::hash::map::HashMap<alloc::string::String,core::option::Option<alloc::string::String>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr138drop_in_place$LT$std..collections..hash..map..HashMap$LT$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$GT$$GT$17h37c42a37ea76a09fE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<hashbrown::map::HashMap<alloc::string::String,core::option::Option<alloc::string::String>,std::hash::random::RandomState>>
  call void @"_ZN4core3ptr158drop_in_place$LT$hashbrown..map..HashMap$LT$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$C$std..hash..random..RandomState$GT$$GT$17ha6e627430e79190eE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17h7d00f29522f95024E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop
  call void @"_ZN99_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha020abbd51d32c16E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..IntoIter$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17h41591acd5f92b2e7E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop
  call void @"_ZN99_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h34c183411471e298E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<hashbrown::map::HashMap<alloc::string::String,core::option::Option<alloc::string::String>,std::hash::random::RandomState>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr158drop_in_place$LT$hashbrown..map..HashMap$LT$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$C$std..hash..random..RandomState$GT$$GT$17ha6e627430e79190eE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<hashbrown::raw::RawTable<(alloc::string::String,core::option::Option<alloc::string::String>)>>
  call void @"_ZN4core3ptr134drop_in_place$LT$hashbrown..raw..RawTable$LT$$LP$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$RP$$GT$$GT$17hde0cc1bc0ed3510aE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<&str,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr161drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$$RF$str$C$alloc..alloc..Global$GT$$GT$17he92e84dcb9c98850E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN157_$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha52546d9e6167d2dE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner,hashbrown::raw::RawTableInner::rehash_in_place::{{closure}}>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr181drop_in_place$LT$hashbrown..scopeguard..ScopeGuard$LT$$RF$mut$u20$hashbrown..raw..RawTableInner$C$hashbrown..raw..RawTableInner..rehash_in_place..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h1a45db85834700c2E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::drop::Drop>::drop
  call void @"_ZN88_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc38f35ea2bfa9ce9E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>,<alloc::string::String as core::convert::From<&str>>::from>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr189drop_in_place$LT$core..iter..adapters..map..Map$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$GT$$GT$17hccf534f681aec439E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<&str>>
  call void @"_ZN4core3ptr67drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$17haa0704467833df80E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner,hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{{closure}}>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr196drop_in_place$LT$hashbrown..scopeguard..ScopeGuard$LT$hashbrown..raw..RawTableInner$C$hashbrown..raw..RawTableInner..prepare_resize$LT$alloc..alloc..Global$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17hdddd2c14527df78dE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::drop::Drop>::drop
  call void @"_ZN88_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hcc7546c83e431074E"(ptr align 8 %_1)
  ret void
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr19swap_nonoverlapping17h71c7c88427d9cc68E(ptr %x, ptr %y, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %b = alloca %"core::mem::maybe_uninit::MaybeUninit<hashbrown::raw::RawTableInner>", align 8
  %a = alloca %"core::mem::maybe_uninit::MaybeUninit<hashbrown::raw::RawTableInner>", align 8
  %i2 = alloca i64, align 8
  %i1 = alloca i64, align 8
  %i = alloca i64, align 8
  br i1 true, label %bb1, label %bb11

bb11:                                             ; preds = %bb10, %bb2, %start
  store i64 0, ptr %i2, align 8
  br label %bb21

bb1:                                              ; preds = %start
  %1 = call i64 @llvm.ctpop.i64(i64 32)
  store i64 %1, ptr %0, align 8
  %_19 = load i64, ptr %0, align 8, !noundef !3
  %_18 = trunc i64 %_19 to i32
  %2 = icmp eq i32 %_18, 1
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  br i1 true, label %bb4, label %bb11

bb3:                                              ; preds = %bb1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  br i1 true, label %bb5, label %bb8

bb8:                                              ; preds = %bb7, %bb4
  br i1 true, label %bb9, label %bb10

bb5:                                              ; preds = %bb4
  br i1 true, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %count3 = mul i64 %count, 4
  store i64 0, ptr %i, align 8
  br label %bb15

bb7:                                              ; preds = %bb5
  br label %bb8

bb15:                                             ; preds = %bb16, %bb6
  %_25 = load i64, ptr %i, align 8, !noundef !3
  %_24 = icmp ult i64 %_25, %count3
  br i1 %_24, label %bb16, label %bb17

bb17:                                             ; preds = %bb15
  br label %bb12

bb16:                                             ; preds = %bb15
  %count4 = load i64, ptr %i, align 8, !noundef !3
  %x5 = getelementptr inbounds i64, ptr %x, i64 %count4
  %count6 = load i64, ptr %i, align 8, !noundef !3
  %y7 = getelementptr inbounds i64, ptr %y, i64 %count6
  %a8 = load i64, ptr %x5, align 8
  %b9 = load i64, ptr %y7, align 8
  store i64 %b9, ptr %x5, align 8
  store i64 %a8, ptr %y7, align 8
  %3 = load i64, ptr %i, align 8, !noundef !3
  %4 = add i64 %3, 1
  store i64 %4, ptr %i, align 8
  br label %bb15

bb12:                                             ; preds = %bb20, %bb17
  br label %bb13

bb10:                                             ; preds = %bb8
  br label %bb11

bb9:                                              ; preds = %bb8
  %count14 = mul i64 %count, 32
  store i64 0, ptr %i1, align 8
  br label %bb18

bb21:                                             ; preds = %bb22, %bb11
  %_55 = load i64, ptr %i2, align 8, !noundef !3
  %_54 = icmp ult i64 %_55, %count
  br i1 %_54, label %bb22, label %bb23

bb23:                                             ; preds = %bb21
  br label %bb13

bb22:                                             ; preds = %bb21
  %count10 = load i64, ptr %i2, align 8, !noundef !3
  %x11 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<hashbrown::raw::RawTableInner>", ptr %x, i64 %count10
  %count12 = load i64, ptr %i2, align 8, !noundef !3
  %y13 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<hashbrown::raw::RawTableInner>", ptr %y, i64 %count12
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %a, ptr align 8 %x11, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %b, ptr align 8 %y13, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x11, ptr align 8 %b, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %y13, ptr align 8 %a, i64 32, i1 false)
  %5 = load i64, ptr %i2, align 8, !noundef !3
  %6 = add i64 %5, 1
  store i64 %6, ptr %i2, align 8
  br label %bb21

bb13:                                             ; preds = %bb12, %bb23
  ret void

bb18:                                             ; preds = %bb19, %bb9
  %_40 = load i64, ptr %i1, align 8, !noundef !3
  %_39 = icmp ult i64 %_40, %count14
  br i1 %_39, label %bb19, label %bb20

bb20:                                             ; preds = %bb18
  br label %bb12

bb19:                                             ; preds = %bb18
  %count15 = load i64, ptr %i1, align 8, !noundef !3
  %x16 = getelementptr inbounds i8, ptr %x, i64 %count15
  %count17 = load i64, ptr %i1, align 8, !noundef !3
  %y18 = getelementptr inbounds i8, ptr %y, i64 %count17
  %a19 = load i8, ptr %x16, align 1
  %b20 = load i8, ptr %y18, align 1
  store i8 %b20, ptr %x16, align 1
  store i8 %a19, ptr %y18, align 1
  %7 = load i64, ptr %i1, align 8, !noundef !3
  %8 = add i64 %7, 1
  store i64 %8, ptr %i1, align 8
  br label %bb18
}

; core::ptr::swap_nonoverlapping
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3ptr19swap_nonoverlapping17hfe6a6152c953d515E(ptr %x, ptr %y, i64 %count) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %i2 = alloca i64, align 8
  %i1 = alloca i64, align 8
  %i = alloca i64, align 8
  br i1 true, label %bb1, label %bb11

bb11:                                             ; preds = %bb10, %bb2, %start
  store i64 0, ptr %i2, align 8
  br label %bb21

bb1:                                              ; preds = %start
  %1 = call i64 @llvm.ctpop.i64(i64 1)
  store i64 %1, ptr %0, align 8
  %_19 = load i64, ptr %0, align 8, !noundef !3
  %_18 = trunc i64 %_19 to i32
  %2 = icmp eq i32 %_18, 1
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  br i1 false, label %bb4, label %bb11

bb3:                                              ; preds = %bb1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  br i1 false, label %bb5, label %bb8

bb8:                                              ; preds = %bb7, %bb4
  br i1 true, label %bb9, label %bb10

bb5:                                              ; preds = %bb4
  br i1 false, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %count3 = mul i64 %count, 0
  store i64 0, ptr %i, align 8
  br label %bb15

bb7:                                              ; preds = %bb5
  br label %bb8

bb15:                                             ; preds = %bb16, %bb6
  %_25 = load i64, ptr %i, align 8, !noundef !3
  %_24 = icmp ult i64 %_25, %count3
  br i1 %_24, label %bb16, label %bb17

bb17:                                             ; preds = %bb15
  br label %bb12

bb16:                                             ; preds = %bb15
  %count4 = load i64, ptr %i, align 8, !noundef !3
  %x5 = getelementptr inbounds i64, ptr %x, i64 %count4
  %count6 = load i64, ptr %i, align 8, !noundef !3
  %y7 = getelementptr inbounds i64, ptr %y, i64 %count6
  %a = load i64, ptr %x5, align 8
  %b = load i64, ptr %y7, align 8
  store i64 %b, ptr %x5, align 8
  store i64 %a, ptr %y7, align 8
  %3 = load i64, ptr %i, align 8, !noundef !3
  %4 = add i64 %3, 1
  store i64 %4, ptr %i, align 8
  br label %bb15

bb12:                                             ; preds = %bb20, %bb17
  br label %bb13

bb10:                                             ; preds = %bb8
  br label %bb11

bb9:                                              ; preds = %bb8
  %count14 = mul i64 %count, 1
  store i64 0, ptr %i1, align 8
  br label %bb18

bb21:                                             ; preds = %bb22, %bb11
  %_55 = load i64, ptr %i2, align 8, !noundef !3
  %_54 = icmp ult i64 %_55, %count
  br i1 %_54, label %bb22, label %bb23

bb23:                                             ; preds = %bb21
  br label %bb13

bb22:                                             ; preds = %bb21
  %count8 = load i64, ptr %i2, align 8, !noundef !3
  %x9 = getelementptr inbounds i8, ptr %x, i64 %count8
  %count10 = load i64, ptr %i2, align 8, !noundef !3
  %y11 = getelementptr inbounds i8, ptr %y, i64 %count10
  %a12 = load i8, ptr %x9, align 1
  %b13 = load i8, ptr %y11, align 1
  store i8 %b13, ptr %x9, align 1
  store i8 %a12, ptr %y11, align 1
  %5 = load i64, ptr %i2, align 8, !noundef !3
  %6 = add i64 %5, 1
  store i64 %6, ptr %i2, align 8
  br label %bb21

bb13:                                             ; preds = %bb12, %bb23
  ret void

bb18:                                             ; preds = %bb19, %bb9
  %_40 = load i64, ptr %i1, align 8, !noundef !3
  %_39 = icmp ult i64 %_40, %count14
  br i1 %_39, label %bb19, label %bb20

bb20:                                             ; preds = %bb18
  br label %bb12

bb19:                                             ; preds = %bb18
  %count15 = load i64, ptr %i1, align 8, !noundef !3
  %x16 = getelementptr inbounds i8, ptr %x, i64 %count15
  %count17 = load i64, ptr %i1, align 8, !noundef !3
  %y18 = getelementptr inbounds i8, ptr %y, i64 %count17
  %a19 = load i8, ptr %x16, align 1
  %b20 = load i8, ptr %y18, align 1
  store i8 %b20, ptr %x16, align 1
  store i8 %a19, ptr %y18, align 1
  %7 = load i64, ptr %i1, align 8, !noundef !3
  %8 = add i64 %7, 1
  store i64 %8, ptr %i1, align 8
  br label %bb18
}

; core::ptr::drop_in_place<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr203drop_in_place$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17hc0a4e57f53feef5bE"(ptr align 1 %_1.0, ptr align 8 %_1.1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds ptr, ptr %_1.1, i64 0
  %1 = load ptr, ptr %0, align 8, !invariant.load !3, !nonnull !3
  call void %1(ptr align 1 %_1.0)
  ret void
}

; core::ptr::drop_in_place<core::iter::adapters::flatten::FlatMap<core::slice::iter::Iter<alloc::string::String>,alloc::vec::Vec<&str>,pkg_config::Library::parse_libs_cflags::{{closure}}>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr222drop_in_place$LT$core..iter..adapters..flatten..FlatMap$LT$core..slice..iter..Iter$LT$alloc..string..String$GT$$C$alloc..vec..Vec$LT$$RF$str$GT$$C$pkg_config..Library..parse_libs_cflags..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h738be6e4f27d655cE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<core::iter::adapters::flatten::FlattenCompat<core::iter::adapters::map::Map<core::slice::iter::Iter<alloc::string::String>,pkg_config::Library::parse_libs_cflags::{{closure}}>,alloc::vec::into_iter::IntoIter<&str>>>
  call void @"_ZN4core3ptr282drop_in_place$LT$core..iter..adapters..flatten..FlattenCompat$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$alloc..string..String$GT$$C$pkg_config..Library..parse_libs_cflags..$u7b$$u7b$closure$u7d$$u7d$$GT$$C$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$$GT$17habc88c28199c923aE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h46367724e7d0282aE"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_6.0 = load ptr, ptr %_1, align 8, !noundef !3
  %1 = getelementptr inbounds i8, ptr %_1, i64 8
  %_6.1 = load ptr, ptr %1, align 8, !nonnull !3, !align !5, !noundef !3
  %2 = getelementptr inbounds ptr, ptr %_6.1, i64 0
  %3 = load ptr, ptr %2, align 8, !invariant.load !3, !nonnull !3
  invoke void %3(ptr align 1 %_6.0)
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; invoke <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc79ba9f988553170E"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb4

bb3:                                              ; preds = %start
; call <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc79ba9f988553170E"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb4
  %8 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb4
  %11 = load ptr, ptr %0, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  %13 = load i32, ptr %12, align 8, !noundef !3
  %14 = insertvalue { ptr, i32 } poison, ptr %11, 0
  %15 = insertvalue { ptr, i32 } %14, i32 %13, 1
  resume { ptr, i32 } %15
}

; core::ptr::drop_in_place<[alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr238drop_in_place$LT$$u5b$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u5d$$GT$17h15dc09c806b4ea07E"(ptr align 8 %_1.0, i64 %_1.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_3 = alloca i64, align 8
  store i64 0, ptr %_3, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %start
  %1 = load i64, ptr %_3, align 8, !noundef !3
  %_7 = icmp eq i64 %1, %_1.1
  br i1 %_7, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %2 = load i64, ptr %_3, align 8, !noundef !3
  %_6 = getelementptr inbounds [0 x %"alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>"], ptr %_1.0, i64 0, i64 %2
  %3 = load i64, ptr %_3, align 8, !noundef !3
  %4 = add i64 %3, 1
  store i64 %4, ptr %_3, align 8
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>
  invoke void @"_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h46367724e7d0282aE"(ptr align 8 %_6)
          to label %bb6 unwind label %cleanup

bb1:                                              ; preds = %bb6
  ret void

bb4:                                              ; preds = %bb3, %cleanup
  %5 = load i64, ptr %_3, align 8, !noundef !3
  %_5 = icmp eq i64 %5, %_1.1
  br i1 %_5, label %bb2, label %bb3

cleanup:                                          ; preds = %bb5
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %10 = load i64, ptr %_3, align 8, !noundef !3
  %_4 = getelementptr inbounds [0 x %"alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>"], ptr %_1.0, i64 0, i64 %10
  %11 = load i64, ptr %_3, align 8, !noundef !3
  %12 = add i64 %11, 1
  store i64 %12, ptr %_3, align 8
; invoke core::ptr::drop_in_place<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>
  invoke void @"_ZN4core3ptr228drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h46367724e7d0282aE"(ptr align 8 %_4) #28
          to label %bb4 unwind label %terminate

bb2:                                              ; preds = %bb4
  %13 = load ptr, ptr %0, align 8, !noundef !3
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8, !noundef !3
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17

terminate:                                        ; preds = %bb3
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable
}

; core::ptr::drop_in_place<<alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop::DropGuard<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>,alloc::alloc::Global>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr250drop_in_place$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$C$alloc..alloc..Global$GT$$GT$17h14b9c21236e481aeE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <<alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop::DropGuard<K,V,A> as core::ops::drop::Drop>::drop
  call void @"_ZN174_$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h583c74dadd6bfa98E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr251drop_in_place$LT$alloc..vec..Vec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17he47e852dde8d8a97E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7c8e630744120a73E"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
  invoke void @"_ZN4core3ptr258drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h38a2148d4aef9290E"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
  call void @"_ZN4core3ptr258drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h38a2148d4aef9290E"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr258drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17h38a2148d4aef9290E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7e7f92152911f92aE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<usize>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr26drop_in_place$LT$usize$GT$17h9cd44d3c2a569284E"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<&u8>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr27drop_in_place$LT$$RF$u8$GT$17h335e5d7c04b69952E"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<core::iter::adapters::flatten::FlattenCompat<core::iter::adapters::map::Map<core::slice::iter::Iter<alloc::string::String>,pkg_config::Library::parse_libs_cflags::{{closure}}>,alloc::vec::into_iter::IntoIter<&str>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr282drop_in_place$LT$core..iter..adapters..flatten..FlattenCompat$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$alloc..string..String$GT$$C$pkg_config..Library..parse_libs_cflags..$u7b$$u7b$closure$u7d$$u7d$$GT$$C$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$$GT$17habc88c28199c923aE"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::vec::into_iter::IntoIter<&str>>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$$GT$17h75209443e728ad1dE"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %1 = getelementptr inbounds %"core::iter::adapters::flatten::FlattenCompat<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>, alloc::vec::into_iter::IntoIter<&str>>", ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<core::option::Option<alloc::vec::into_iter::IntoIter<&str>>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$$GT$17h75209443e728ad1dE"(ptr align 8 %1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %6 = getelementptr inbounds %"core::iter::adapters::flatten::FlattenCompat<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>, alloc::vec::into_iter::IntoIter<&str>>", ptr %_1, i32 0, i32 1
; call core::ptr::drop_in_place<core::option::Option<alloc::vec::into_iter::IntoIter<&str>>>
  call void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$$GT$17h75209443e728ad1dE"(ptr align 8 %6)
  ret void

terminate:                                        ; preds = %bb3
  %7 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %10 = load ptr, ptr %0, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  %12 = load i32, ptr %11, align 8, !noundef !3
  %13 = insertvalue { ptr, i32 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i32 } %13, i32 %12, 1
  resume { ptr, i32 } %14
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>,<alloc::string::String as core::convert::From<&str>>::from>>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr286drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h93fc8553ea76b9e8E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  call void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17hf46bd7860f45825fE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<&str>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr28drop_in_place$LT$$RF$str$GT$17h13d7bc1b98b406e7E"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>,pkg_config::WrappedCommand::args<&[&str],&&str>::{{closure}}>>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr306drop_in_place$LT$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$RF$str$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$$u5b$$RF$str$u5d$$C$$RF$$RF$str$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5bdb1c0318e642a4E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  call void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17hf46bd7860f45825fE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<&usize>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr30drop_in_place$LT$$RF$usize$GT$17h3e0c746767d82777E"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr314drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h772b604187dcca2aE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  call void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17hf46bd7860f45825fE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr351drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h7ab95f163c956c15E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  call void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17hf46bd7860f45825fE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<hashbrown::raw::RawTable<(alloc::string::String,core::option::Option<alloc::string::String>)>::reserve_rehash<hashbrown::map::make_hasher<alloc::string::String,core::option::Option<alloc::string::String>,std::hash::random::RandomState>::{{closure}}>::{{closure}}>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr357drop_in_place$LT$hashbrown..raw..RawTable$LT$$LP$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$RP$$GT$..reserve_rehash$LT$hashbrown..map..make_hasher$LT$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$C$std..hash..random..RandomState$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h02b01634df7305afE"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,pkg_config::WrappedCommand::args<&alloc::vec::Vec<std::ffi::os_str::OsString>,&std::ffi::os_str::OsString>::{{closure}}>>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr376drop_in_place$LT$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$C$$RF$std..ffi..os_str..OsString$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hb09ac4a8a683283cE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
  call void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17hf46bd7860f45825fE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<core::fmt::Error>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr37drop_in_place$LT$core..fmt..Error$GT$17hd922402f69fea2a7E"(ptr align 1 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<pkg_config::Error>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr38drop_in_place$LT$pkg_config..Error$GT$17hbc8fa24b9a75e2f8E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_2 = load i64, ptr %_1, align 8, !range !21, !noundef !3
  switch i64 %_2, label %bb2 [
    i64 0, label %bb3
    i64 1, label %bb2
    i64 2, label %bb6
    i64 3, label %bb9
    i64 4, label %bb14
  ]

bb2:                                              ; preds = %bb12, %bb8, %bb5, %bb3, %start, %start
  ret void

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds %"Error::EnvNoPkgConfig", ptr %_1, i32 0, i32 1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %1)
  br label %bb2

bb6:                                              ; preds = %start
  %2 = getelementptr inbounds %"Error::Command", ptr %_1, i32 0, i32 2
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %2)
          to label %bb5 unwind label %cleanup

bb9:                                              ; preds = %start
  %3 = getelementptr inbounds %"Error::Failure", ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %3)
          to label %bb8 unwind label %cleanup1

bb14:                                             ; preds = %start
  %4 = getelementptr inbounds %"Error::ProbeFailure", ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %4)
          to label %bb13 unwind label %cleanup2

bb4:                                              ; preds = %cleanup
  %5 = getelementptr inbounds %"Error::Command", ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<std::io::error::Error>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h4cd2efc890f62cf8E"(ptr align 8 %5) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %bb6
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb4

bb5:                                              ; preds = %bb6
  %10 = getelementptr inbounds %"Error::Command", ptr %_1, i32 0, i32 1
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h4cd2efc890f62cf8E"(ptr align 8 %10)
  br label %bb2

terminate:                                        ; preds = %bb10, %bb11, %bb7, %bb4
  %11 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb10, %bb7, %bb4
  %14 = load ptr, ptr %0, align 8, !noundef !3
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  %16 = load i32, ptr %15, align 8, !noundef !3
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1
  resume { ptr, i32 } %18

bb7:                                              ; preds = %cleanup1
  %19 = getelementptr inbounds %"Error::Failure", ptr %_1, i32 0, i32 2
; invoke core::ptr::drop_in_place<std::process::Output>
  invoke void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17hcb669ac1de669d27E"(ptr align 8 %19) #28
          to label %bb1 unwind label %terminate

cleanup1:                                         ; preds = %bb9
  %20 = landingpad { ptr, i32 }
          cleanup
  %21 = extractvalue { ptr, i32 } %20, 0
  %22 = extractvalue { ptr, i32 } %20, 1
  store ptr %21, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %22, ptr %23, align 8
  br label %bb7

bb8:                                              ; preds = %bb9
  %24 = getelementptr inbounds %"Error::Failure", ptr %_1, i32 0, i32 2
; call core::ptr::drop_in_place<std::process::Output>
  call void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17hcb669ac1de669d27E"(ptr align 8 %24)
  br label %bb2

bb11:                                             ; preds = %cleanup2
  %25 = getelementptr inbounds %"Error::ProbeFailure", ptr %_1, i32 0, i32 2
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %25) #28
          to label %bb10 unwind label %terminate

cleanup2:                                         ; preds = %bb14
  %26 = landingpad { ptr, i32 }
          cleanup
  %27 = extractvalue { ptr, i32 } %26, 0
  %28 = extractvalue { ptr, i32 } %26, 1
  store ptr %27, ptr %0, align 8
  %29 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %28, ptr %29, align 8
  br label %bb11

bb13:                                             ; preds = %bb14
  %30 = getelementptr inbounds %"Error::ProbeFailure", ptr %_1, i32 0, i32 2
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %30)
          to label %bb12 unwind label %cleanup3

bb10:                                             ; preds = %bb11, %cleanup3
  %31 = getelementptr inbounds %"Error::ProbeFailure", ptr %_1, i32 0, i32 3
; invoke core::ptr::drop_in_place<std::process::Output>
  invoke void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17hcb669ac1de669d27E"(ptr align 8 %31) #28
          to label %bb1 unwind label %terminate

cleanup3:                                         ; preds = %bb13
  %32 = landingpad { ptr, i32 }
          cleanup
  %33 = extractvalue { ptr, i32 } %32, 0
  %34 = extractvalue { ptr, i32 } %32, 1
  store ptr %33, ptr %0, align 8
  %35 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %34, ptr %35, align 8
  br label %bb10

bb12:                                             ; preds = %bb13
  %36 = getelementptr inbounds %"Error::ProbeFailure", ptr %_1, i32 0, i32 3
; call core::ptr::drop_in_place<std::process::Output>
  call void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17hcb669ac1de669d27E"(ptr align 8 %36)
  br label %bb2
}

; core::ptr::drop_in_place<pkg_config::Config>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr39drop_in_place$LT$pkg_config..Config$GT$17h9772748140077d97E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke core::ptr::drop_in_place<core::ops::range::Bound<alloc::string::String>>
  invoke void @"_ZN4core3ptr73drop_in_place$LT$core..ops..range..Bound$LT$alloc..string..String$GT$$GT$17h67a1a793bb5ff224E"(ptr align 8 %_1)
          to label %bb6 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %1 = getelementptr inbounds %Config, ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<core::ops::range::Bound<alloc::string::String>>
  invoke void @"_ZN4core3ptr73drop_in_place$LT$core..ops..range..Bound$LT$alloc..string..String$GT$$GT$17h67a1a793bb5ff224E"(ptr align 8 %1) #28
          to label %bb3 unwind label %terminate

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb4

bb6:                                              ; preds = %start
  %6 = getelementptr inbounds %Config, ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<core::ops::range::Bound<alloc::string::String>>
  invoke void @"_ZN4core3ptr73drop_in_place$LT$core..ops..range..Bound$LT$alloc..string..String$GT$$GT$17h67a1a793bb5ff224E"(ptr align 8 %6)
          to label %bb5 unwind label %cleanup1

bb3:                                              ; preds = %bb4, %cleanup1
  %7 = getelementptr inbounds %Config, ptr %_1, i32 0, i32 2
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$GT$17he4bc7b2c09421965E"(ptr align 8 %7) #28
          to label %bb1 unwind label %terminate

cleanup1:                                         ; preds = %bb6
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb3

bb5:                                              ; preds = %bb6
  %12 = getelementptr inbounds %Config, ptr %_1, i32 0, i32 2
; call core::ptr::drop_in_place<alloc::vec::Vec<std::ffi::os_str::OsString>>
  call void @"_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$GT$17he4bc7b2c09421965E"(ptr align 8 %12)
  ret void

terminate:                                        ; preds = %bb3, %bb4
  %13 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %16 = load ptr, ptr %0, align 8, !noundef !3
  %17 = getelementptr inbounds i8, ptr %0, i64 8
  %18 = load i32, ptr %17, align 8, !noundef !3
  %19 = insertvalue { ptr, i32 } poison, ptr %16, 0
  %20 = insertvalue { ptr, i32 } %19, i32 %18, 1
  resume { ptr, i32 } %20
}

; core::ptr::drop_in_place<std::env::VarError>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr39drop_in_place$LT$std..env..VarError$GT$17hbd649c907ae9d0a3E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load i64, ptr %_1, align 8, !range !12, !noundef !3
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<std::path::PathBuf>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17h3bed19ef85725cb6E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>,<alloc::string::String as core::convert::From<&str>>::from>>::{{closure}}>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr401drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h6e2ebdcf42f4695bE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>,<alloc::string::String as core::convert::From<&str>>::from>>::{{closure}}>
  call void @"_ZN4core3ptr286drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h93fc8553ea76b9e8E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<pkg_config::Library>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr40drop_in_place$LT$pkg_config..Library$GT$17h16b2b80f750120b4E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %_1)
          to label %bb18 unwind label %cleanup

bb10:                                             ; preds = %cleanup
  %1 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %1) #28
          to label %bb9 unwind label %terminate

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb10

bb18:                                             ; preds = %start
  %6 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %6)
          to label %bb17 unwind label %cleanup1

bb9:                                              ; preds = %bb10, %cleanup1
  %7 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 2
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %7) #28
          to label %bb8 unwind label %terminate

cleanup1:                                         ; preds = %bb18
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb9

bb17:                                             ; preds = %bb18
  %12 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 2
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %12)
          to label %bb16 unwind label %cleanup2

bb8:                                              ; preds = %bb9, %cleanup2
  %13 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 3
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %13) #28
          to label %bb7 unwind label %terminate

cleanup2:                                         ; preds = %bb17
  %14 = landingpad { ptr, i32 }
          cleanup
  %15 = extractvalue { ptr, i32 } %14, 0
  %16 = extractvalue { ptr, i32 } %14, 1
  store ptr %15, ptr %0, align 8
  %17 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %16, ptr %17, align 8
  br label %bb8

bb16:                                             ; preds = %bb17
  %18 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 3
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %18)
          to label %bb15 unwind label %cleanup3

bb7:                                              ; preds = %bb8, %cleanup3
  %19 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 4
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %19) #28
          to label %bb6 unwind label %terminate

cleanup3:                                         ; preds = %bb16
  %20 = landingpad { ptr, i32 }
          cleanup
  %21 = extractvalue { ptr, i32 } %20, 0
  %22 = extractvalue { ptr, i32 } %20, 1
  store ptr %21, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %22, ptr %23, align 8
  br label %bb7

bb15:                                             ; preds = %bb16
  %24 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 4
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %24)
          to label %bb14 unwind label %cleanup4

bb6:                                              ; preds = %bb7, %cleanup4
  %25 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 5
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %25) #28
          to label %bb5 unwind label %terminate

cleanup4:                                         ; preds = %bb15
  %26 = landingpad { ptr, i32 }
          cleanup
  %27 = extractvalue { ptr, i32 } %26, 0
  %28 = extractvalue { ptr, i32 } %26, 1
  store ptr %27, ptr %0, align 8
  %29 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %28, ptr %29, align 8
  br label %bb6

bb14:                                             ; preds = %bb15
  %30 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 5
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %30)
          to label %bb13 unwind label %cleanup5

bb5:                                              ; preds = %bb6, %cleanup5
  %31 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 6
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>>
  invoke void @"_ZN4core3ptr88drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$$GT$17h8fabdcc1d10c7210E"(ptr align 8 %31) #28
          to label %bb4 unwind label %terminate

cleanup5:                                         ; preds = %bb14
  %32 = landingpad { ptr, i32 }
          cleanup
  %33 = extractvalue { ptr, i32 } %32, 0
  %34 = extractvalue { ptr, i32 } %32, 1
  store ptr %33, ptr %0, align 8
  %35 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %34, ptr %35, align 8
  br label %bb5

bb13:                                             ; preds = %bb14
  %36 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 6
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>>
  invoke void @"_ZN4core3ptr88drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$$GT$17h8fabdcc1d10c7210E"(ptr align 8 %36)
          to label %bb12 unwind label %cleanup6

bb4:                                              ; preds = %bb5, %cleanup6
  %37 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 8
; invoke core::ptr::drop_in_place<std::collections::hash::map::HashMap<alloc::string::String,core::option::Option<alloc::string::String>>>
  invoke void @"_ZN4core3ptr138drop_in_place$LT$std..collections..hash..map..HashMap$LT$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$GT$$GT$17h37c42a37ea76a09fE"(ptr align 8 %37) #28
          to label %bb3 unwind label %terminate

cleanup6:                                         ; preds = %bb13
  %38 = landingpad { ptr, i32 }
          cleanup
  %39 = extractvalue { ptr, i32 } %38, 0
  %40 = extractvalue { ptr, i32 } %38, 1
  store ptr %39, ptr %0, align 8
  %41 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %40, ptr %41, align 8
  br label %bb4

bb12:                                             ; preds = %bb13
  %42 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 8
; invoke core::ptr::drop_in_place<std::collections::hash::map::HashMap<alloc::string::String,core::option::Option<alloc::string::String>>>
  invoke void @"_ZN4core3ptr138drop_in_place$LT$std..collections..hash..map..HashMap$LT$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$GT$$GT$17h37c42a37ea76a09fE"(ptr align 8 %42)
          to label %bb11 unwind label %cleanup7

bb3:                                              ; preds = %bb4, %cleanup7
  %43 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 7
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %43) #28
          to label %bb1 unwind label %terminate

cleanup7:                                         ; preds = %bb12
  %44 = landingpad { ptr, i32 }
          cleanup
  %45 = extractvalue { ptr, i32 } %44, 0
  %46 = extractvalue { ptr, i32 } %44, 1
  store ptr %45, ptr %0, align 8
  %47 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %46, ptr %47, align 8
  br label %bb3

bb11:                                             ; preds = %bb12
  %48 = getelementptr inbounds %Library, ptr %_1, i32 0, i32 7
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %48)
  ret void

terminate:                                        ; preds = %bb3, %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10
  %49 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %50 = extractvalue { ptr, i32 } %49, 0
  %51 = extractvalue { ptr, i32 } %49, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %52 = load ptr, ptr %0, align 8, !noundef !3
  %53 = getelementptr inbounds i8, ptr %0, i64 8
  %54 = load i32, ptr %53, align 8, !noundef !3
  %55 = insertvalue { ptr, i32 } poison, ptr %52, 0
  %56 = insertvalue { ptr, i32 } %55, i32 %54, 1
  resume { ptr, i32 } %56
}

; core::ptr::drop_in_place<std::process::Output>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17hcb669ac1de669d27E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %1 = getelementptr inbounds %"std::process::Output", ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %6 = getelementptr inbounds %"std::process::Output", ptr %_1, i32 0, i32 1
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %6)
  ret void

terminate:                                        ; preds = %bb3
  %7 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %10 = load ptr, ptr %0, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  %12 = load i32, ptr %11, align 8, !noundef !3
  %13 = insertvalue { ptr, i32 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i32 } %13, i32 %12, 1
  resume { ptr, i32 } %14
}

; core::ptr::drop_in_place<core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString,alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>,pkg_config::WrappedCommand::args<&[&str],&&str>::{{closure}}>>::{{closure}}>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr426drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$std..ffi..os_str..OsString$C$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$RF$str$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$$u5b$$RF$str$u5d$$C$$RF$$RF$str$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h4894fba0e333e93fE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>,pkg_config::WrappedCommand::args<&[&str],&&str>::{{closure}}>>::{{closure}}>
  call void @"_ZN4core3ptr306drop_in_place$LT$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$RF$str$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$$u5b$$RF$str$u5d$$C$$RF$$RF$str$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5bdb1c0318e642a4E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr429drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h940a81396b6155f1E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>
  call void @"_ZN4core3ptr314drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h772b604187dcca2aE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::string::String>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<std::io::error::Error>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h4cd2efc890f62cf8E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::io::error::repr_bitpacked::Repr>
  call void @"_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17ha94e8caea9d6a12cE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<std::process::Command>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17h2c1ef71027bbd052E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sys::pal::unix::process::process_common::Command>
  call void @"_ZN4core3ptr74drop_in_place$LT$std..sys..pal..unix..process..process_common..Command$GT$17hae95cb14f78f5d63E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<std::io::error::Custom>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h20d66a3a7df78963E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::boxed::Box<dyn core::error::Error+core::marker::Send+core::marker::Sync>>
  call void @"_ZN4core3ptr118drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$17h2f6b23b31417e6b2E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr466drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h2237efabaa6f6d6fE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>
  call void @"_ZN4core3ptr351drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h7ab95f163c956c15E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hcfd8a289ec6bb00fE"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  invoke void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h97fc2a7a9d7200b8E"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
  call void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h97fc2a7a9d7200b8E"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<alloc::ffi::c_str::CString>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17hfd865d7526fd51d4E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke <alloc::ffi::c_str::CString as core::ops::drop::Drop>::drop
  invoke void @"_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc7531c9c629ac6f3E"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17hb334bc8688ffb189E"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17hb334bc8688ffb189E"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<pkg_config::WrappedCommand>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr47drop_in_place$LT$pkg_config..WrappedCommand$GT$17hc4440dabe0a285faE"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17h2c1ef71027bbd052E"(ptr align 8 %_1)
          to label %bb8 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %1 = getelementptr inbounds %WrappedCommand, ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %1) #28
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb5

bb8:                                              ; preds = %start
  %6 = getelementptr inbounds %WrappedCommand, ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %6)
          to label %bb7 unwind label %cleanup1

bb4:                                              ; preds = %bb5, %cleanup1
  %7 = getelementptr inbounds %WrappedCommand, ptr %_1, i32 0, i32 2
; invoke core::ptr::drop_in_place<alloc::vec::Vec<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>>
  invoke void @"_ZN4core3ptr107drop_in_place$LT$alloc..vec..Vec$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$GT$17h7cf3decbf40f2d36E"(ptr align 8 %7) #28
          to label %bb3 unwind label %terminate

cleanup1:                                         ; preds = %bb8
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb4

bb7:                                              ; preds = %bb8
  %12 = getelementptr inbounds %WrappedCommand, ptr %_1, i32 0, i32 2
; invoke core::ptr::drop_in_place<alloc::vec::Vec<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>>
  invoke void @"_ZN4core3ptr107drop_in_place$LT$alloc..vec..Vec$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$GT$17h7cf3decbf40f2d36E"(ptr align 8 %12)
          to label %bb6 unwind label %cleanup2

bb3:                                              ; preds = %bb4, %cleanup2
  %13 = getelementptr inbounds %WrappedCommand, ptr %_1, i32 0, i32 3
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$GT$17he4bc7b2c09421965E"(ptr align 8 %13) #28
          to label %bb1 unwind label %terminate

cleanup2:                                         ; preds = %bb7
  %14 = landingpad { ptr, i32 }
          cleanup
  %15 = extractvalue { ptr, i32 } %14, 0
  %16 = extractvalue { ptr, i32 } %14, 1
  store ptr %15, ptr %0, align 8
  %17 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %16, ptr %17, align 8
  br label %bb3

bb6:                                              ; preds = %bb7
  %18 = getelementptr inbounds %WrappedCommand, ptr %_1, i32 0, i32 3
; call core::ptr::drop_in_place<alloc::vec::Vec<std::ffi::os_str::OsString>>
  call void @"_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$GT$17he4bc7b2c09421965E"(ptr align 8 %18)
  ret void

terminate:                                        ; preds = %bb3, %bb4, %bb5
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %22 = load ptr, ptr %0, align 8, !noundef !3
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  %24 = load i32, ptr %23, align 8, !noundef !3
  %25 = insertvalue { ptr, i32 } poison, ptr %22, 0
  %26 = insertvalue { ptr, i32 } %25, i32 %24, 1
  resume { ptr, i32 } %26
}

; core::ptr::drop_in_place<std::ffi::os_str::OsString>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::sys::os_str::bytes::Buf>
  call void @"_ZN4core3ptr49drop_in_place$LT$std..sys..os_str..bytes..Buf$GT$17hed1d29329088e300E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<core::str::error::Utf8Error>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr48drop_in_place$LT$core..str..error..Utf8Error$GT$17h7140e22ead202653E"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<std::os::fd::owned::OwnedFd>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17h090b27f99162c82cE"(ptr align 4 %_1) unnamed_addr #1 {
start:
; call <std::os::fd::owned::OwnedFd as core::ops::drop::Drop>::drop
  call void @"_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2c37aa9c96cdbbcaE"(ptr align 4 %_1)
  ret void
}

; core::ptr::drop_in_place<core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString,alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,pkg_config::WrappedCommand::args<&alloc::vec::Vec<std::ffi::os_str::OsString>,&std::ffi::os_str::OsString>::{{closure}}>>::{{closure}}>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr496drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$std..ffi..os_str..OsString$C$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$C$$RF$std..ffi..os_str..OsString$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hd349fa222731585dE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,pkg_config::WrappedCommand::args<&alloc::vec::Vec<std::ffi::os_str::OsString>,&std::ffi::os_str::OsString>::{{closure}}>>::{{closure}}>
  call void @"_ZN4core3ptr376drop_in_place$LT$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$C$$RF$std..ffi..os_str..OsString$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hb09ac4a8a683283cE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<[std::path::PathBuf]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr49drop_in_place$LT$$u5b$std..path..PathBuf$u5d$$GT$17ha0367c1c249b9363E"(ptr align 8 %_1.0, i64 %_1.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_3 = alloca i64, align 8
  store i64 0, ptr %_3, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %start
  %1 = load i64, ptr %_3, align 8, !noundef !3
  %_7 = icmp eq i64 %1, %_1.1
  br i1 %_7, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %2 = load i64, ptr %_3, align 8, !noundef !3
  %_6 = getelementptr inbounds [0 x %"std::path::PathBuf"], ptr %_1.0, i64 0, i64 %2
  %3 = load i64, ptr %_3, align 8, !noundef !3
  %4 = add i64 %3, 1
  store i64 %4, ptr %_3, align 8
; invoke core::ptr::drop_in_place<std::path::PathBuf>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17h3bed19ef85725cb6E"(ptr align 8 %_6)
          to label %bb6 unwind label %cleanup

bb1:                                              ; preds = %bb6
  ret void

bb4:                                              ; preds = %bb3, %cleanup
  %5 = load i64, ptr %_3, align 8, !noundef !3
  %_5 = icmp eq i64 %5, %_1.1
  br i1 %_5, label %bb2, label %bb3

cleanup:                                          ; preds = %bb5
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %10 = load i64, ptr %_3, align 8, !noundef !3
  %_4 = getelementptr inbounds [0 x %"std::path::PathBuf"], ptr %_1.0, i64 0, i64 %10
  %11 = load i64, ptr %_3, align 8, !noundef !3
  %12 = add i64 %11, 1
  store i64 %12, ptr %_3, align 8
; invoke core::ptr::drop_in_place<std::path::PathBuf>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17h3bed19ef85725cb6E"(ptr align 8 %_4) #28
          to label %bb4 unwind label %terminate

bb2:                                              ; preds = %bb4
  %13 = load ptr, ptr %0, align 8, !noundef !3
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8, !noundef !3
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17

terminate:                                        ; preds = %bb3
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable
}

; core::ptr::drop_in_place<alloc::string::FromUtf8Error>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17h425befde36ad8c1cE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<std::sys::os_str::bytes::Buf>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr49drop_in_place$LT$std..sys..os_str..bytes..Buf$GT$17hed1d29329088e300E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::borrow::Cow<str>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load i64, ptr %_1, align 8, !range !12, !noundef !3
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<alloc::vec::Vec<&str>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17h0e3817a1800996b1E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9abcde57a55aadeeE"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  invoke void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h08340d9e774abd8aE"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h08340d9e774abd8aE"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<&core::str::error::Utf8Error>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$$RF$core..str..error..Utf8Error$GT$17h32f9e45b85eeaad4E"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<[alloc::string::String]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr52drop_in_place$LT$$u5b$alloc..string..String$u5d$$GT$17hdec1d56981c42602E"(ptr align 8 %_1.0, i64 %_1.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_3 = alloca i64, align 8
  store i64 0, ptr %_3, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %start
  %1 = load i64, ptr %_3, align 8, !noundef !3
  %_7 = icmp eq i64 %1, %_1.1
  br i1 %_7, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %2 = load i64, ptr %_3, align 8, !noundef !3
  %_6 = getelementptr inbounds [0 x %"alloc::string::String"], ptr %_1.0, i64 0, i64 %2
  %3 = load i64, ptr %_3, align 8, !noundef !3
  %4 = add i64 %3, 1
  store i64 %4, ptr %_3, align 8
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_6)
          to label %bb6 unwind label %cleanup

bb1:                                              ; preds = %bb6
  ret void

bb4:                                              ; preds = %bb3, %cleanup
  %5 = load i64, ptr %_3, align 8, !noundef !3
  %_5 = icmp eq i64 %5, %_1.1
  br i1 %_5, label %bb2, label %bb3

cleanup:                                          ; preds = %bb5
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %10 = load i64, ptr %_3, align 8, !noundef !3
  %_4 = getelementptr inbounds [0 x %"alloc::string::String"], ptr %_1.0, i64 0, i64 %10
  %11 = load i64, ptr %_3, align 8, !noundef !3
  %12 = add i64 %11, 1
  store i64 %12, ptr %_3, align 8
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_4) #28
          to label %bb4 unwind label %terminate

bb2:                                              ; preds = %bb4
  %13 = load ptr, ptr %0, align 8, !noundef !3
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8, !noundef !3
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17

terminate:                                        ; preds = %bb3
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable
}

; core::ptr::drop_in_place<std::thread::local::AccessError>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr52drop_in_place$LT$std..thread..local..AccessError$GT$17h36635fe143a81cadE"(ptr align 1 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<hashbrown::raw::RawTable<(alloc::string::String,core::option::Option<alloc::string::String>)>::find_or_find_insert_slot<hashbrown::map::equivalent_key<alloc::string::String,alloc::string::String,core::option::Option<alloc::string::String>>::{{closure}},hashbrown::map::make_hasher<alloc::string::String,core::option::Option<alloc::string::String>,std::hash::random::RandomState>::{{closure}}>::{{closure}}>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr534drop_in_place$LT$hashbrown..raw..RawTable$LT$$LP$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$RP$$GT$..find_or_find_insert_slot$LT$hashbrown..map..equivalent_key$LT$alloc..string..String$C$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$hashbrown..map..make_hasher$LT$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$C$std..hash..random..RandomState$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hc05e02647ecaa077E"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<u8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr53drop_in_place$LT$alloc..raw_vec..RawVec$LT$u8$GT$$GT$17h97fc2a7a9d7200b8E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h519120d3d943c0acE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<std::sys::pal::unix::fd::FileDesc>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr54drop_in_place$LT$std..sys..pal..unix..fd..FileDesc$GT$17h8ec86d896c8673b2E"(ptr align 4 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<std::os::fd::owned::OwnedFd>
  call void @"_ZN4core3ptr48drop_in_place$LT$std..os..fd..owned..OwnedFd$GT$17h090b27f99162c82cE"(ptr align 4 %_1)
  ret void
}

; core::ptr::drop_in_place<&core::option::Option<u8>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr55drop_in_place$LT$$RF$core..option..Option$LT$u8$GT$$GT$17h62bb3e6ef18d6edcE"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<[alloc::ffi::c_str::CString]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr57drop_in_place$LT$$u5b$alloc..ffi..c_str..CString$u5d$$GT$17hdf403cf2158b792bE"(ptr align 8 %_1.0, i64 %_1.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_3 = alloca i64, align 8
  store i64 0, ptr %_3, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %start
  %1 = load i64, ptr %_3, align 8, !noundef !3
  %_7 = icmp eq i64 %1, %_1.1
  br i1 %_7, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %2 = load i64, ptr %_3, align 8, !noundef !3
  %_6 = getelementptr inbounds [0 x %"alloc::ffi::c_str::CString"], ptr %_1.0, i64 0, i64 %2
  %3 = load i64, ptr %_3, align 8, !noundef !3
  %4 = add i64 %3, 1
  store i64 %4, ptr %_3, align 8
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17hfd865d7526fd51d4E"(ptr align 8 %_6)
          to label %bb6 unwind label %cleanup

bb1:                                              ; preds = %bb6
  ret void

bb4:                                              ; preds = %bb3, %cleanup
  %5 = load i64, ptr %_3, align 8, !noundef !3
  %_5 = icmp eq i64 %5, %_1.1
  br i1 %_5, label %bb2, label %bb3

cleanup:                                          ; preds = %bb5
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %10 = load i64, ptr %_3, align 8, !noundef !3
  %_4 = getelementptr inbounds [0 x %"alloc::ffi::c_str::CString"], ptr %_1.0, i64 0, i64 %10
  %11 = load i64, ptr %_3, align 8, !noundef !3
  %12 = add i64 %11, 1
  store i64 %12, ptr %_3, align 8
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17hfd865d7526fd51d4E"(ptr align 8 %_4) #28
          to label %bb4 unwind label %terminate

bb2:                                              ; preds = %bb4
  %13 = load ptr, ptr %0, align 8, !noundef !3
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8, !noundef !3
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17

terminate:                                        ; preds = %bb3
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable
}

; core::ptr::drop_in_place<[std::ffi::os_str::OsString]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr57drop_in_place$LT$$u5b$std..ffi..os_str..OsString$u5d$$GT$17hd01026d62b5567bcE"(ptr align 8 %_1.0, i64 %_1.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_3 = alloca i64, align 8
  store i64 0, ptr %_3, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %start
  %1 = load i64, ptr %_3, align 8, !noundef !3
  %_7 = icmp eq i64 %1, %_1.1
  br i1 %_7, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %2 = load i64, ptr %_3, align 8, !noundef !3
  %_6 = getelementptr inbounds [0 x %"std::ffi::os_str::OsString"], ptr %_1.0, i64 0, i64 %2
  %3 = load i64, ptr %_3, align 8, !noundef !3
  %4 = add i64 %3, 1
  store i64 %4, ptr %_3, align 8
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_6)
          to label %bb6 unwind label %cleanup

bb1:                                              ; preds = %bb6
  ret void

bb4:                                              ; preds = %bb3, %cleanup
  %5 = load i64, ptr %_3, align 8, !noundef !3
  %_5 = icmp eq i64 %5, %_1.1
  br i1 %_5, label %bb2, label %bb3

cleanup:                                          ; preds = %bb5
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %10 = load i64, ptr %_3, align 8, !noundef !3
  %_4 = getelementptr inbounds [0 x %"std::ffi::os_str::OsString"], ptr %_1.0, i64 0, i64 %10
  %11 = load i64, ptr %_3, align 8, !noundef !3
  %12 = add i64 %11, 1
  store i64 %12, ptr %_3, align 8
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_4) #28
          to label %bb4 unwind label %terminate

bb2:                                              ; preds = %bb4
  %13 = load ptr, ptr %0, align 8, !noundef !3
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8, !noundef !3
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17

terminate:                                        ; preds = %bb3
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable
}

; core::ptr::drop_in_place<std::io::error::repr_bitpacked::Repr>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr57drop_in_place$LT$std..io..error..repr_bitpacked..Repr$GT$17ha94e8caea9d6a12cE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop
  call void @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9f1af4aa15b558d0E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<std::sys_common::process::CommandEnv>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..process..CommandEnv$GT$17h8a063876502509ceE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>>>
  call void @"_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..BTreeMap$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17h7d00f29522f95024E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<&core::option::Option<usize>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr58drop_in_place$LT$$RF$core..option..Option$LT$usize$GT$$GT$17hdb13d6f7f9ef00dfE"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<[u8]>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr58drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u8$u5d$$GT$$GT$17hb334bc8688ffb189E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_6.0 = load ptr, ptr %_1, align 8, !noundef !3
  %1 = getelementptr inbounds i8, ptr %_1, i64 8
  %_6.1 = load i64, ptr %1, align 8, !noundef !3
  br label %bb3

bb3:                                              ; preds = %start
; call <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9e85433e2b0dbfb5E"(ptr align 8 %_1)
  ret void

bb4:                                              ; No predecessors!
; invoke <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9e85433e2b0dbfb5E"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

terminate:                                        ; preds = %bb4
  %2 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb4
  %5 = load ptr, ptr %0, align 8, !noundef !3
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  %7 = load i32, ptr %6, align 8, !noundef !3
  %8 = insertvalue { ptr, i32 } poison, ptr %5, 0
  %9 = insertvalue { ptr, i32 } %8, i32 %7, 1
  resume { ptr, i32 } %9
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h08340d9e774abd8aE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7755d9c522fcf09bE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<[u32]>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr59drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$17h50922fde3750ce88E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_6.0 = load ptr, ptr %_1, align 8, !noundef !3
  %1 = getelementptr inbounds i8, ptr %_1, i64 8
  %_6.1 = load i64, ptr %1, align 8, !noundef !3
  br label %bb3

bb3:                                              ; preds = %start
; call <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6b28cdb521962c25E"(ptr align 8 %_1)
  ret void

bb4:                                              ; No predecessors!
; invoke <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6b28cdb521962c25E"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

terminate:                                        ; preds = %bb4
  %2 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb4
  %5 = load ptr, ptr %0, align 8, !noundef !3
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  %7 = load i32, ptr %6, align 8, !noundef !3
  %8 = insertvalue { ptr, i32 } poison, ptr %5, 0
  %9 = insertvalue { ptr, i32 } %8, i32 %7, 1
  resume { ptr, i32 } %9
}

; core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&str,alloc::string::String,(),<alloc::string::String as core::convert::From<&str>>::from,core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>,<alloc::string::String as core::convert::From<&str>>::from>>::{{closure}}>::{{closure}}>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr602drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$str$C$alloc..string..String$C$$LP$$RP$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$C$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h7351bbd5631c9cb1E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>,<alloc::string::String as core::convert::From<&str>>::from>>::{{closure}}>::{{closure}}>
  call void @"_ZN4core3ptr401drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h6e2ebdcf42f4695bE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<*const i8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr60drop_in_place$LT$alloc..vec..Vec$LT$$BP$const$u20$i8$GT$$GT$17hd0c843f9c18b0bd3E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2aba75e37b1dd45dE"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<*const i8>>
  invoke void @"_ZN4core3ptr67drop_in_place$LT$alloc..raw_vec..RawVec$LT$$BP$const$u20$i8$GT$$GT$17h9660100f9b3345d7E"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<*const i8>>
  call void @"_ZN4core3ptr67drop_in_place$LT$alloc..raw_vec..RawVec$LT$$BP$const$u20$i8$GT$$GT$17h9660100f9b3345d7E"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8375a15b1768aafbE"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr69drop_in_place$LT$alloc..raw_vec..RawVec$LT$std..path..PathBuf$GT$$GT$17hcf6d3e9880572c4aE"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<std::path::PathBuf>>
  call void @"_ZN4core3ptr69drop_in_place$LT$alloc..raw_vec..RawVec$LT$std..path..PathBuf$GT$$GT$17hcf6d3e9880572c4aE"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<alloc::vec::set_len_on_drop::SetLenOnDrop>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$GT$17hf46bd7860f45825fE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop>::drop
  call void @"_ZN83_$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1142536fa3c60f46E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<(&&str,alloc::string::String)>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr64drop_in_place$LT$$LP$$RF$$RF$str$C$alloc..string..String$RP$$GT$17h210d618b4556a7f7E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds { ptr, %"alloc::string::String" }, ptr %_1, i32 0, i32 1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %0)
  ret void
}

; core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&&str,std::ffi::os_str::OsString,(),pkg_config::WrappedCommand::args<&[&str],&&str>::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString,alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>,pkg_config::WrappedCommand::args<&[&str],&&str>::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr659drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$$RF$str$C$std..ffi..os_str..OsString$C$$LP$$RP$$C$pkg_config..WrappedCommand..args$LT$$RF$$u5b$$RF$str$u5d$$C$$RF$$RF$str$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$std..ffi..os_str..OsString$C$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$RF$str$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$$u5b$$RF$str$u5d$$C$$RF$$RF$str$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h83be0319d7007e1dE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString,alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>,pkg_config::WrappedCommand::args<&[&str],&&str>::{{closure}}>>::{{closure}}>::{{closure}}>
  call void @"_ZN4core3ptr426drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$std..ffi..os_str..OsString$C$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$RF$str$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$$u5b$$RF$str$u5d$$C$$RF$$RF$str$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h4894fba0e333e93fE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h19518165a6145640E"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::string::String>>
  invoke void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..string..String$GT$$GT$17h52d6dd370bb3a23aE"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::string::String>>
  call void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..string..String$GT$$GT$17h52d6dd370bb3a23aE"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<dyn core::any::Any+core::marker::Send>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr66drop_in_place$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$17hbe7bf72beaaebbfaE"(ptr align 1 %_1.0, ptr align 8 %_1.1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds ptr, ptr %_1.1, i64 0
  %1 = load ptr, ptr %0, align 8, !invariant.load !3, !nonnull !3
  call void %1(ptr align 1 %_1.0)
  ret void
}

; core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&std::ffi::os_str::OsString,alloc::string::String,(),<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr670drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$std..ffi..os_str..OsString$C$alloc..string..String$C$$LP$$RP$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5e4ba4094b6a1d50E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>::{{closure}}>
  call void @"_ZN4core3ptr429drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h940a81396b6155f1E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<*const i8>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr67drop_in_place$LT$alloc..raw_vec..RawVec$LT$$BP$const$u20$i8$GT$$GT$17h9660100f9b3345d7E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha4774d5519d5a6abE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<&str>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr67drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$17haa0704467833df80E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN86_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb132c755adba50faE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<std::io::error::Custom>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr68drop_in_place$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$17hef53a5667b045cceE"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_6 = load ptr, ptr %_1, align 8, !noundef !3
; invoke core::ptr::drop_in_place<std::io::error::Custom>
  invoke void @"_ZN4core3ptr43drop_in_place$LT$std..io..error..Custom$GT$17h20d66a3a7df78963E"(ptr align 8 %_6)
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; invoke <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9726e88f24dae00dE"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb4

bb3:                                              ; preds = %start
; call <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9726e88f24dae00dE"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb4
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb4
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<std::path::PathBuf>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr69drop_in_place$LT$alloc..raw_vec..RawVec$LT$std..path..PathBuf$GT$$GT$17hcf6d3e9880572c4aE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3a71ca05bf530c7cE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::ffi::c_str::CString>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$alloc..ffi..c_str..CString$GT$$GT$17hd4595bcf51646082E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfb306739c08504d4E"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr77drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..ffi..c_str..CString$GT$$GT$17h59075b7a09bf56e5E"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::ffi::c_str::CString>>
  call void @"_ZN4core3ptr77drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..ffi..c_str..CString$GT$$GT$17h59075b7a09bf56e5E"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<alloc::vec::Vec<std::ffi::os_str::OsString>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$GT$17he4bc7b2c09421965E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha827b2674695e81fE"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr77drop_in_place$LT$alloc..raw_vec..RawVec$LT$std..ffi..os_str..OsString$GT$$GT$17hd1b17fa8fa7ed4faE"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<std::ffi::os_str::OsString>>
  call void @"_ZN4core3ptr77drop_in_place$LT$alloc..raw_vec..RawVec$LT$std..ffi..os_str..OsString$GT$$GT$17hd1b17fa8fa7ed4faE"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h77bf297a2e36d6aaE"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load i64, ptr %_1, align 8, !range !12, !noundef !3
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<std::sys::pal::unix::process::process_common::Argv>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr71drop_in_place$LT$std..sys..pal..unix..process..process_common..Argv$GT$17h07cd4c5e2e504c7bE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<alloc::vec::Vec<*const i8>>
  call void @"_ZN4core3ptr60drop_in_place$LT$alloc..vec..Vec$LT$$BP$const$u20$i8$GT$$GT$17hd0c843f9c18b0bd3E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::collections::btree::mem::replace::PanicGuard>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr72drop_in_place$LT$alloc..collections..btree..mem..replace..PanicGuard$GT$17hcac0db49cfa00a6dE"(ptr align 1 %_1) unnamed_addr #1 {
start:
; call <alloc::collections::btree::mem::replace::PanicGuard as core::ops::drop::Drop>::drop
  call void @"_ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17h556ad0e0ca16dd4dE"(ptr align 1 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr72drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..string..String$GT$$GT$17h52d6dd370bb3a23aE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h93a9f6948a0c630fE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<std::panicking::begin_panic::Payload<&str>>
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3ptr72drop_in_place$LT$std..panicking..begin_panic..Payload$LT$$RF$str$GT$$GT$17hc0c16bbe0b84bf44E"(ptr align 8 %_1) unnamed_addr #0 {
start:
  ret void
}

; core::ptr::drop_in_place<std::sys::pal::unix::process::process_common::Stdio>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr72drop_in_place$LT$std..sys..pal..unix..process..process_common..Stdio$GT$17hb6251d78a0e8db35E"(ptr align 4 %_1) unnamed_addr #1 {
start:
  %0 = load i32, ptr %_1, align 4, !range !22, !noundef !3
  %_2 = zext i32 %0 to i64
  switch i64 %_2, label %bb1 [
    i64 0, label %bb1
    i64 1, label %bb1
    i64 2, label %bb1
    i64 3, label %bb2
  ]

bb1:                                              ; preds = %bb2, %start, %start, %start, %start
  ret void

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds i8, ptr %_1, i64 4
; call core::ptr::drop_in_place<std::sys::pal::unix::fd::FileDesc>
  call void @"_ZN4core3ptr54drop_in_place$LT$std..sys..pal..unix..fd..FileDesc$GT$17h8ec86d896c8673b2E"(ptr align 4 %1)
  br label %bb1
}

; core::ptr::drop_in_place<core::ops::range::Bound<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr73drop_in_place$LT$core..ops..range..Bound$LT$alloc..string..String$GT$$GT$17h67a1a793bb5ff224E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %_2 = load i64, ptr %_1, align 8, !range !11, !noundef !3
  switch i64 %_2, label %bb1 [
    i64 0, label %bb2
    i64 1, label %bb3
  ]

bb1:                                              ; preds = %bb3, %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds %"core::ops::range::Bound<alloc::string::String>::Included", ptr %_1, i32 0, i32 1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %0)
  br label %bb1

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds %"core::ops::range::Bound<alloc::string::String>::Excluded", ptr %_1, i32 0, i32 1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %1)
  br label %bb1
}

; core::ptr::drop_in_place<pkg_config::Config::run::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr73drop_in_place$LT$pkg_config..Config..run..$u7b$$u7b$closure$u7d$$u7d$$GT$17hd52fcd5c5ae901afE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  call void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&(std::ffi::os_str::OsString,std::ffi::os_str::OsString),alloc::string::String,(),<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr744drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$C$alloc..string..String$C$$LP$$RP$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hada194198debcdf1E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>::{{closure}}>
  call void @"_ZN4core3ptr466drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h2237efabaa6f6d6fE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::boxed::Box<[&str; 1]>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr74drop_in_place$LT$alloc..boxed..Box$LT$$u5b$$RF$str$u3b$$u20$1$u5d$$GT$$GT$17hbb283b7133642759E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_6 = load ptr, ptr %_1, align 8, !noundef !3
  br label %bb3

bb3:                                              ; preds = %start
; call <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc30de25cf1540c5cE"(ptr align 8 %_1)
  ret void

bb4:                                              ; No predecessors!
; invoke <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc30de25cf1540c5cE"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

terminate:                                        ; preds = %bb4
  %1 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb4
  %4 = load ptr, ptr %0, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  %6 = load i32, ptr %5, align 8, !noundef !3
  %7 = insertvalue { ptr, i32 } poison, ptr %4, 0
  %8 = insertvalue { ptr, i32 } %7, i32 %6, 1
  resume { ptr, i32 } %8
}

; core::ptr::drop_in_place<std::sys::pal::unix::process::process_common::Command>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr74drop_in_place$LT$std..sys..pal..unix..process..process_common..Command$GT$17hae95cb14f78f5d63E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %1 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 10
; invoke core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17hfd865d7526fd51d4E"(ptr align 8 %1)
          to label %bb20 unwind label %cleanup

bb11:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$alloc..ffi..c_str..CString$GT$$GT$17hd4595bcf51646082E"(ptr align 8 %_1) #28
          to label %bb10 unwind label %terminate

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb11

bb20:                                             ; preds = %start
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$alloc..vec..Vec$LT$alloc..ffi..c_str..CString$GT$$GT$17hd4595bcf51646082E"(ptr align 8 %_1)
          to label %bb19 unwind label %cleanup1

bb10:                                             ; preds = %bb11, %cleanup1
  %6 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<std::sys::pal::unix::process::process_common::Argv>
  invoke void @"_ZN4core3ptr71drop_in_place$LT$std..sys..pal..unix..process..process_common..Argv$GT$17h07cd4c5e2e504c7bE"(ptr align 8 %6) #28
          to label %bb9 unwind label %terminate

cleanup1:                                         ; preds = %bb20
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %0, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb10

bb19:                                             ; preds = %bb20
  %11 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<std::sys::pal::unix::process::process_common::Argv>
  invoke void @"_ZN4core3ptr71drop_in_place$LT$std..sys..pal..unix..process..process_common..Argv$GT$17h07cd4c5e2e504c7bE"(ptr align 8 %11)
          to label %bb18 unwind label %cleanup2

bb9:                                              ; preds = %bb10, %cleanup2
  %12 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 9
; invoke core::ptr::drop_in_place<std::sys_common::process::CommandEnv>
  invoke void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..process..CommandEnv$GT$17h8a063876502509ceE"(ptr align 8 %12) #28
          to label %bb8 unwind label %terminate

cleanup2:                                         ; preds = %bb19
  %13 = landingpad { ptr, i32 }
          cleanup
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
  store ptr %14, ptr %0, align 8
  %16 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %15, ptr %16, align 8
  br label %bb9

bb18:                                             ; preds = %bb19
  %17 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 9
; invoke core::ptr::drop_in_place<std::sys_common::process::CommandEnv>
  invoke void @"_ZN4core3ptr57drop_in_place$LT$std..sys_common..process..CommandEnv$GT$17h8a063876502509ceE"(ptr align 8 %17)
          to label %bb17 unwind label %cleanup3

bb8:                                              ; preds = %bb9, %cleanup3
  %18 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 11
; invoke core::ptr::drop_in_place<core::option::Option<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17hc27285b62c28d658E"(ptr align 8 %18) #28
          to label %bb7 unwind label %terminate

cleanup3:                                         ; preds = %bb18
  %19 = landingpad { ptr, i32 }
          cleanup
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
  store ptr %20, ptr %0, align 8
  %22 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %21, ptr %22, align 8
  br label %bb8

bb17:                                             ; preds = %bb18
  %23 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 11
; invoke core::ptr::drop_in_place<core::option::Option<alloc::ffi::c_str::CString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17hc27285b62c28d658E"(ptr align 8 %23)
          to label %bb16 unwind label %cleanup4

bb7:                                              ; preds = %bb8, %cleanup4
  %24 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 2
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
  invoke void @"_ZN4core3ptr251drop_in_place$LT$alloc..vec..Vec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17he47e852dde8d8a97E"(ptr align 8 %24) #28
          to label %bb6 unwind label %terminate

cleanup4:                                         ; preds = %bb17
  %25 = landingpad { ptr, i32 }
          cleanup
  %26 = extractvalue { ptr, i32 } %25, 0
  %27 = extractvalue { ptr, i32 } %25, 1
  store ptr %26, ptr %0, align 8
  %28 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %27, ptr %28, align 8
  br label %bb7

bb16:                                             ; preds = %bb17
  %29 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 2
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>>>
  invoke void @"_ZN4core3ptr251drop_in_place$LT$alloc..vec..Vec$LT$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$GT$$GT$17he47e852dde8d8a97E"(ptr align 8 %29)
          to label %bb15 unwind label %cleanup5

bb6:                                              ; preds = %bb7, %cleanup5
  %30 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 12
; invoke core::ptr::drop_in_place<core::option::Option<alloc::boxed::Box<[u32]>>>
  invoke void @"_ZN4core3ptr87drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$$GT$17h883f232ec197f1b6E"(ptr align 8 %30) #28
          to label %bb5 unwind label %terminate

cleanup5:                                         ; preds = %bb16
  %31 = landingpad { ptr, i32 }
          cleanup
  %32 = extractvalue { ptr, i32 } %31, 0
  %33 = extractvalue { ptr, i32 } %31, 1
  store ptr %32, ptr %0, align 8
  %34 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %33, ptr %34, align 8
  br label %bb6

bb15:                                             ; preds = %bb16
  %35 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 12
; invoke core::ptr::drop_in_place<core::option::Option<alloc::boxed::Box<[u32]>>>
  invoke void @"_ZN4core3ptr87drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$$GT$17h883f232ec197f1b6E"(ptr align 8 %35)
          to label %bb14 unwind label %cleanup6

bb5:                                              ; preds = %bb6, %cleanup6
  %36 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 6
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::pal::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr100drop_in_place$LT$core..option..Option$LT$std..sys..pal..unix..process..process_common..Stdio$GT$$GT$17h9f3c49b5cc00d95cE"(ptr align 4 %36) #28
          to label %bb4 unwind label %terminate

cleanup6:                                         ; preds = %bb15
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = extractvalue { ptr, i32 } %37, 0
  %39 = extractvalue { ptr, i32 } %37, 1
  store ptr %38, ptr %0, align 8
  %40 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %39, ptr %40, align 8
  br label %bb5

bb14:                                             ; preds = %bb15
  %41 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 6
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::pal::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr100drop_in_place$LT$core..option..Option$LT$std..sys..pal..unix..process..process_common..Stdio$GT$$GT$17h9f3c49b5cc00d95cE"(ptr align 4 %41)
          to label %bb13 unwind label %cleanup7

bb4:                                              ; preds = %bb5, %cleanup7
  %42 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 7
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::pal::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr100drop_in_place$LT$core..option..Option$LT$std..sys..pal..unix..process..process_common..Stdio$GT$$GT$17h9f3c49b5cc00d95cE"(ptr align 4 %42) #28
          to label %bb3 unwind label %terminate

cleanup7:                                         ; preds = %bb14
  %43 = landingpad { ptr, i32 }
          cleanup
  %44 = extractvalue { ptr, i32 } %43, 0
  %45 = extractvalue { ptr, i32 } %43, 1
  store ptr %44, ptr %0, align 8
  %46 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %45, ptr %46, align 8
  br label %bb4

bb13:                                             ; preds = %bb14
  %47 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 7
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::pal::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr100drop_in_place$LT$core..option..Option$LT$std..sys..pal..unix..process..process_common..Stdio$GT$$GT$17h9f3c49b5cc00d95cE"(ptr align 4 %47)
          to label %bb12 unwind label %cleanup8

bb3:                                              ; preds = %bb4, %cleanup8
  %48 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 8
; invoke core::ptr::drop_in_place<core::option::Option<std::sys::pal::unix::process::process_common::Stdio>>
  invoke void @"_ZN4core3ptr100drop_in_place$LT$core..option..Option$LT$std..sys..pal..unix..process..process_common..Stdio$GT$$GT$17h9f3c49b5cc00d95cE"(ptr align 4 %48) #28
          to label %bb1 unwind label %terminate

cleanup8:                                         ; preds = %bb13
  %49 = landingpad { ptr, i32 }
          cleanup
  %50 = extractvalue { ptr, i32 } %49, 0
  %51 = extractvalue { ptr, i32 } %49, 1
  store ptr %50, ptr %0, align 8
  %52 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %51, ptr %52, align 8
  br label %bb3

bb12:                                             ; preds = %bb13
  %53 = getelementptr inbounds %"std::sys::pal::unix::process::process_common::Command", ptr %_1, i32 0, i32 8
; call core::ptr::drop_in_place<core::option::Option<std::sys::pal::unix::process::process_common::Stdio>>
  call void @"_ZN4core3ptr100drop_in_place$LT$core..option..Option$LT$std..sys..pal..unix..process..process_common..Stdio$GT$$GT$17h9f3c49b5cc00d95cE"(ptr align 4 %53)
  ret void

terminate:                                        ; preds = %bb3, %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11
  %54 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %55 = extractvalue { ptr, i32 } %54, 0
  %56 = extractvalue { ptr, i32 } %54, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %57 = load ptr, ptr %0, align 8, !noundef !3
  %58 = getelementptr inbounds i8, ptr %0, i64 8
  %59 = load i32, ptr %58, align 8, !noundef !3
  %60 = insertvalue { ptr, i32 } poison, ptr %57, 0
  %61 = insertvalue { ptr, i32 } %60, i32 %59, 1
  resume { ptr, i32 } %61
}

; core::ptr::drop_in_place<[alloc::vec::Vec<alloc::string::String>]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr75drop_in_place$LT$$u5b$alloc..vec..Vec$LT$alloc..string..String$GT$$u5d$$GT$17hacbd5c2b09cbbcccE"(ptr align 8 %_1.0, i64 %_1.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_3 = alloca i64, align 8
  store i64 0, ptr %_3, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %start
  %1 = load i64, ptr %_3, align 8, !noundef !3
  %_7 = icmp eq i64 %1, %_1.1
  br i1 %_7, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %2 = load i64, ptr %_3, align 8, !noundef !3
  %_6 = getelementptr inbounds [0 x %"alloc::vec::Vec<alloc::string::String>"], ptr %_1.0, i64 0, i64 %2
  %3 = load i64, ptr %_3, align 8, !noundef !3
  %4 = add i64 %3, 1
  store i64 %4, ptr %_3, align 8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %_6)
          to label %bb6 unwind label %cleanup

bb1:                                              ; preds = %bb6
  ret void

bb4:                                              ; preds = %bb3, %cleanup
  %5 = load i64, ptr %_3, align 8, !noundef !3
  %_5 = icmp eq i64 %5, %_1.1
  br i1 %_5, label %bb2, label %bb3

cleanup:                                          ; preds = %bb5
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %10 = load i64, ptr %_3, align 8, !noundef !3
  %_4 = getelementptr inbounds [0 x %"alloc::vec::Vec<alloc::string::String>"], ptr %_1.0, i64 0, i64 %10
  %11 = load i64, ptr %_3, align 8, !noundef !3
  %12 = add i64 %11, 1
  store i64 %12, ptr %_3, align 8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %_4) #28
          to label %bb4 unwind label %terminate

bb2:                                              ; preds = %bb4
  %13 = load ptr, ptr %0, align 8, !noundef !3
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8, !noundef !3
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17

terminate:                                        ; preds = %bb3
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable
}

; core::ptr::drop_in_place<core::option::Option<alloc::ffi::c_str::CString>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$alloc..ffi..c_str..CString$GT$$GT$17hc27285b62c28d658E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load ptr, ptr %_1, align 8, !noundef !3
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::ffi::c_str::CString>
  call void @"_ZN4core3ptr47drop_in_place$LT$alloc..ffi..c_str..CString$GT$17hfd865d7526fd51d4E"(ptr align 8 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load i64, ptr %_1, align 8, !range !12, !noundef !3
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::ffi::c_str::CString>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr77drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..ffi..c_str..CString$GT$$GT$17h59075b7a09bf56e5E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4a5afc1f4578b006E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<std::ffi::os_str::OsString>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr77drop_in_place$LT$alloc..raw_vec..RawVec$LT$std..ffi..os_str..OsString$GT$$GT$17hd1b17fa8fa7ed4faE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9e0ca7db601645cdE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&std::ffi::os_str::OsString,std::ffi::os_str::OsString,(),pkg_config::WrappedCommand::args<&alloc::vec::Vec<std::ffi::os_str::OsString>,&std::ffi::os_str::OsString>::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString,alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,pkg_config::WrappedCommand::args<&alloc::vec::Vec<std::ffi::os_str::OsString>,&std::ffi::os_str::OsString>::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr799drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$C$$LP$$RP$$C$pkg_config..WrappedCommand..args$LT$$RF$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$C$$RF$std..ffi..os_str..OsString$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$std..ffi..os_str..OsString$C$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$C$$RF$std..ffi..os_str..OsString$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17he543fc64d9e13fb5E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call core::ptr::drop_in_place<core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString,alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,pkg_config::WrappedCommand::args<&alloc::vec::Vec<std::ffi::os_str::OsString>,&std::ffi::os_str::OsString>::{{closure}}>>::{{closure}}>::{{closure}}>
  call void @"_ZN4core3ptr496drop_in_place$LT$core..iter..traits..iterator..Iterator..for_each..call$LT$std..ffi..os_str..OsString$C$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$C$$RF$std..ffi..os_str..OsString$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hd349fa222731585dE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h35920f8a41514dc6E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load ptr, ptr %_1, align 8, !noundef !3
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h4cd2efc890f62cf8E"(ptr align 8 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr84drop_in_place$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$17he9f43031334b47aaE"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  %1 = getelementptr inbounds { %"std::ffi::os_str::OsString", %"std::ffi::os_str::OsString" }, ptr %_1, i32 0, i32 1
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb3

bb4:                                              ; preds = %start
  %6 = getelementptr inbounds { %"std::ffi::os_str::OsString", %"std::ffi::os_str::OsString" }, ptr %_1, i32 0, i32 1
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %6)
  ret void

terminate:                                        ; preds = %bb3
  %7 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %10 = load ptr, ptr %0, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  %12 = load i32, ptr %11, align 8, !noundef !3
  %13 = insertvalue { ptr, i32 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i32 } %13, i32 %12, 1
  resume { ptr, i32 } %14
}

; core::ptr::drop_in_place<core::option::Option<alloc::boxed::Box<[u32]>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr87drop_in_place$LT$core..option..Option$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$$GT$17h883f232ec197f1b6E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load ptr, ptr %_1, align 8, !noundef !3
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::boxed::Box<[u32]>>
  call void @"_ZN4core3ptr59drop_in_place$LT$alloc..boxed..Box$LT$$u5b$u32$u5d$$GT$$GT$17h50922fde3750ce88E"(ptr align 8 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr88drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$$GT$17h8fabdcc1d10c7210E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17haaf3533dada0972dE"(ptr align 8 %_1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::vec::Vec<alloc::string::String>>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$$GT$17h0b194cb540a35549E"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb4:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::vec::Vec<alloc::string::String>>>
  call void @"_ZN4core3ptr95drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$$GT$17h0b194cb540a35549E"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; core::ptr::drop_in_place<alloc::vec::in_place_drop::InPlaceDrop<alloc::string::String>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr88drop_in_place$LT$alloc..vec..in_place_drop..InPlaceDrop$LT$alloc..string..String$GT$$GT$17h4760d421c4dc525aE"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::vec::in_place_drop::InPlaceDrop<T> as core::ops::drop::Drop>::drop
  call void @"_ZN89_$LT$alloc..vec..in_place_drop..InPlaceDrop$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7b213ce82e503aebE"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<core::result::Result<std::fs::Metadata,std::io::error::Error>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr90drop_in_place$LT$core..result..Result$LT$std..fs..Metadata$C$std..io..error..Error$GT$$GT$17he975e91c12834d2eE"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load i64, ptr %_1, align 8, !range !11, !noundef !3
  %1 = icmp eq i64 %0, 2
  %_2 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::result::Result<std::fs::Metadata, std::io::error::Error>::Err", ptr %_1, i32 0, i32 1
; call core::ptr::drop_in_place<std::io::error::Error>
  call void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h4cd2efc890f62cf8E"(ptr align 8 %3)
  br label %bb1
}

; core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr91drop_in_place$LT$alloc..boxed..Box$LT$dyn$u20$core..any..Any$u2b$core..marker..Send$GT$$GT$17h6e59d20a598eeef2E"(ptr align 8 %_1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_6.0 = load ptr, ptr %_1, align 8, !noundef !3
  %1 = getelementptr inbounds i8, ptr %_1, i64 8
  %_6.1 = load ptr, ptr %1, align 8, !nonnull !3, !align !5, !noundef !3
  %2 = getelementptr inbounds ptr, ptr %_6.1, i64 0
  %3 = load ptr, ptr %2, align 8, !invariant.load !3, !nonnull !3
  invoke void %3(ptr align 1 %_6.0)
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; invoke <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h194de1febf74edecE"(ptr align 8 %_1) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb4

bb3:                                              ; preds = %start
; call <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h194de1febf74edecE"(ptr align 8 %_1)
  ret void

terminate:                                        ; preds = %bb4
  %8 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb4
  %11 = load ptr, ptr %0, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  %13 = load i32, ptr %12, align 8, !noundef !3
  %14 = insertvalue { ptr, i32 } poison, ptr %11, 0
  %15 = insertvalue { ptr, i32 } %14, i32 %13, 1
  resume { ptr, i32 } %15
}

; core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17he3784d90bbaa7c42E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %_2 = load i64, ptr %_1, align 8, !range !9, !noundef !3
  %0 = icmp eq i64 %_2, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", ptr %_1, i32 0, i32 1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %1)
  br label %bb1

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %_1, i32 0, i32 1
; call core::ptr::drop_in_place<std::env::VarError>
  call void @"_ZN4core3ptr39drop_in_place$LT$std..env..VarError$GT$17hbd649c907ae9d0a3E"(ptr align 8 %2)
  br label %bb1

bb1:                                              ; preds = %bb3, %bb2
  ret void
}

; core::ptr::drop_in_place<core::option::Option<(&&str,alloc::string::String)>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr92drop_in_place$LT$core..option..Option$LT$$LP$$RF$$RF$str$C$alloc..string..String$RP$$GT$$GT$17h8f0315ec8371aedaE"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"core::option::Option<(&&str, alloc::string::String)>", ptr %_1, i32 0, i32 1
  %1 = load i64, ptr %0, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, -9223372036854775808
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<(&&str,alloc::string::String)>
  call void @"_ZN4core3ptr64drop_in_place$LT$$LP$$RF$$RF$str$C$alloc..string..String$RP$$GT$17h210d618b4556a7f7E"(ptr align 8 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<dyn core::error::Error+core::marker::Send+core::marker::Sync>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr93drop_in_place$LT$dyn$u20$core..error..Error$u2b$core..marker..Send$u2b$core..marker..Sync$GT$17ha426321816bc7745E"(ptr align 1 %_1.0, ptr align 8 %_1.1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds ptr, ptr %_1.1, i64 0
  %1 = load ptr, ptr %0, align 8, !invariant.load !3, !nonnull !3
  call void %1(ptr align 1 %_1.0)
  ret void
}

; core::ptr::drop_in_place<[(std::ffi::os_str::OsString,std::ffi::os_str::OsString)]>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr94drop_in_place$LT$$u5b$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$u5d$$GT$17h33b441c15d804543E"(ptr align 8 %_1.0, i64 %_1.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_3 = alloca i64, align 8
  store i64 0, ptr %_3, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %start
  %1 = load i64, ptr %_3, align 8, !noundef !3
  %_7 = icmp eq i64 %1, %_1.1
  br i1 %_7, label %bb1, label %bb5

bb5:                                              ; preds = %bb6
  %2 = load i64, ptr %_3, align 8, !noundef !3
  %_6 = getelementptr inbounds [0 x { %"std::ffi::os_str::OsString", %"std::ffi::os_str::OsString" }], ptr %_1.0, i64 0, i64 %2
  %3 = load i64, ptr %_3, align 8, !noundef !3
  %4 = add i64 %3, 1
  store i64 %4, ptr %_3, align 8
; invoke core::ptr::drop_in_place<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>
  invoke void @"_ZN4core3ptr84drop_in_place$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$17he9f43031334b47aaE"(ptr align 8 %_6)
          to label %bb6 unwind label %cleanup

bb1:                                              ; preds = %bb6
  ret void

bb4:                                              ; preds = %bb3, %cleanup
  %5 = load i64, ptr %_3, align 8, !noundef !3
  %_5 = icmp eq i64 %5, %_1.1
  br i1 %_5, label %bb2, label %bb3

cleanup:                                          ; preds = %bb5
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb4

bb3:                                              ; preds = %bb4
  %10 = load i64, ptr %_3, align 8, !noundef !3
  %_4 = getelementptr inbounds [0 x { %"std::ffi::os_str::OsString", %"std::ffi::os_str::OsString" }], ptr %_1.0, i64 0, i64 %10
  %11 = load i64, ptr %_3, align 8, !noundef !3
  %12 = add i64 %11, 1
  store i64 %12, ptr %_3, align 8
; invoke core::ptr::drop_in_place<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>
  invoke void @"_ZN4core3ptr84drop_in_place$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$17he9f43031334b47aaE"(ptr align 8 %_4) #28
          to label %bb4 unwind label %terminate

bb2:                                              ; preds = %bb4
  %13 = load ptr, ptr %0, align 8, !noundef !3
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8, !noundef !3
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17

terminate:                                        ; preds = %bb3
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable
}

; core::ptr::drop_in_place<alloc::raw_vec::RawVec<alloc::vec::Vec<alloc::string::String>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr95drop_in_place$LT$alloc..raw_vec..RawVec$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$$GT$17h0b194cb540a35549E"(ptr align 8 %_1) unnamed_addr #1 {
start:
; call <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
  call void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h31095ee5c95c05a0E"(ptr align 8 %_1)
  ret void
}

; core::ptr::drop_in_place<core::option::Option<alloc::vec::into_iter::IntoIter<&str>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$$GT$17h75209443e728ad1dE"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load ptr, ptr %_1, align 8, !noundef !3
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<&str>>
  call void @"_ZN4core3ptr67drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$17haa0704467833df80E"(ptr align 8 %_1)
  br label %bb1
}

; core::ptr::drop_in_place<std::io::Write::write_fmt::Adapter<std::sys::pal::unix::stdio::Stderr>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr97drop_in_place$LT$std..io..Write..write_fmt..Adapter$LT$std..sys..pal..unix..stdio..Stderr$GT$$GT$17h74c246bc2543a069E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds i8, ptr %_1, i64 8
; call core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  call void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h35920f8a41514dc6E"(ptr align 8 %0)
  ret void
}

; core::ptr::drop_in_place<core::option::Option<core::option::Option<alloc::string::String>>>
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core3ptr98drop_in_place$LT$core..option..Option$LT$core..option..Option$LT$alloc..string..String$GT$$GT$$GT$17h55bfdfe9d14a7ea8E"(ptr align 8 %_1) unnamed_addr #1 {
start:
  %0 = load i64, ptr %_1, align 8, !range !23, !noundef !3
  %1 = icmp eq i64 %0, -9223372036854775807
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %bb2, %start
  ret void

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  call void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h77bf297a2e36d6aaE"(ptr align 8 %_1)
  br label %bb1
}

; core::str::validations::next_code_point
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @_ZN4core3str11validations15next_code_point17hbfd8799dd98e3d98E(ptr align 8 %bytes) unnamed_addr #0 {
start:
  %self3 = alloca ptr, align 8
  %self2 = alloca ptr, align 8
  %ch = alloca i32, align 4
  %self1 = alloca ptr, align 8
  %self = alloca ptr, align 8
  %_3 = alloca ptr, align 8
  %_0 = alloca %"core::option::Option<u32>", align 4
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %0 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcae68254e9640bb1E"(ptr align 8 %bytes)
  store ptr %0, ptr %self, align 8
  %1 = load ptr, ptr %self, align 8, !noundef !3
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_28 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_28, 0
  br i1 %4, label %bb15, label %bb16

bb15:                                             ; preds = %start
  store ptr null, ptr %_3, align 8
  br label %bb14

bb16:                                             ; preds = %start
  %v = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  store ptr %v, ptr %_3, align 8
  br label %bb14

bb14:                                             ; preds = %bb16, %bb15
  %5 = load ptr, ptr %_3, align 8, !noundef !3
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_5 = select i1 %7, i64 1, i64 0
  %8 = icmp eq i64 %_5, 0
  br i1 %8, label %bb2, label %bb3

bb2:                                              ; preds = %bb14
  %val = load ptr, ptr %_3, align 8, !nonnull !3, !align !4, !noundef !3
  %x = load i8, ptr %val, align 1, !noundef !3
  %_7 = icmp ult i8 %x, -128
  br i1 %_7, label %bb4, label %bb5

bb3:                                              ; preds = %bb14
  %9 = load i32, ptr @3, align 4, !range !6, !noundef !3
  %10 = load i32, ptr getelementptr inbounds (i8, ptr @3, i64 4), align 4
  store i32 %9, ptr %_0, align 4
  %11 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %10, ptr %11, align 4
  br label %bb13

bb5:                                              ; preds = %bb2
  %_30 = and i8 %x, 31
  %init = zext i8 %_30 to i32
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %12 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcae68254e9640bb1E"(ptr align 8 %bytes)
  store ptr %12, ptr %self1, align 8
  %13 = load ptr, ptr %self1, align 8, !noundef !3
  %14 = ptrtoint ptr %13 to i64
  %15 = icmp eq i64 %14, 0
  %_32 = select i1 %15, i64 0, i64 1
  %_33 = icmp eq i64 %_32, 1
  call void @llvm.assume(i1 %_33)
  %val4 = load ptr, ptr %self1, align 8, !nonnull !3, !align !4, !noundef !3
  %y = load i8, ptr %val4, align 1, !noundef !3
  %_34 = shl i32 %init, 6
  %_36 = and i8 %y, 63
  %ch5 = zext i8 %_36 to i32
  %16 = or i32 %_34, %ch5
  store i32 %16, ptr %ch, align 4
  %_14 = icmp uge i8 %x, -32
  br i1 %_14, label %bb7, label %bb12

bb4:                                              ; preds = %bb2
  %_8 = zext i8 %x to i32
  %17 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %_8, ptr %17, align 4
  store i32 1, ptr %_0, align 4
  br label %bb13

bb12:                                             ; preds = %bb11, %bb5
  %_27 = load i32, ptr %ch, align 4, !noundef !3
  %18 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %_27, ptr %18, align 4
  store i32 1, ptr %_0, align 4
  br label %bb13

bb7:                                              ; preds = %bb5
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %19 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcae68254e9640bb1E"(ptr align 8 %bytes)
  store ptr %19, ptr %self2, align 8
  %20 = load ptr, ptr %self2, align 8, !noundef !3
  %21 = ptrtoint ptr %20 to i64
  %22 = icmp eq i64 %21, 0
  %_38 = select i1 %22, i64 0, i64 1
  %_39 = icmp eq i64 %_38, 1
  call void @llvm.assume(i1 %_39)
  %val6 = load ptr, ptr %self2, align 8, !nonnull !3, !align !4, !noundef !3
  %z = load i8, ptr %val6, align 1, !noundef !3
  %_40 = shl i32 %ch5, 6
  %_42 = and i8 %z, 63
  %_41 = zext i8 %_42 to i32
  %y_z = or i32 %_40, %_41
  %_19 = shl i32 %init, 12
  %23 = or i32 %_19, %y_z
  store i32 %23, ptr %ch, align 4
  %_20 = icmp uge i8 %x, -16
  br i1 %_20, label %bb9, label %bb11

bb11:                                             ; preds = %bb9, %bb7
  br label %bb12

bb9:                                              ; preds = %bb7
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %24 = call align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcae68254e9640bb1E"(ptr align 8 %bytes)
  store ptr %24, ptr %self3, align 8
  %25 = load ptr, ptr %self3, align 8, !noundef !3
  %26 = ptrtoint ptr %25 to i64
  %27 = icmp eq i64 %26, 0
  %_44 = select i1 %27, i64 0, i64 1
  %_45 = icmp eq i64 %_44, 1
  call void @llvm.assume(i1 %_45)
  %val7 = load ptr, ptr %self3, align 8, !nonnull !3, !align !4, !noundef !3
  %w = load i8, ptr %val7, align 1, !noundef !3
  %_25 = and i32 %init, 7
  %_24 = shl i32 %_25, 18
  %_46 = shl i32 %y_z, 6
  %_48 = and i8 %w, 63
  %_47 = zext i8 %_48 to i32
  %_26 = or i32 %_46, %_47
  %28 = or i32 %_24, %_26
  store i32 %28, ptr %ch, align 4
  br label %bb11

bb13:                                             ; preds = %bb3, %bb4, %bb12
  %29 = load i32, ptr %_0, align 4, !range !6, !noundef !3
  %30 = getelementptr inbounds i8, ptr %_0, i64 4
  %31 = load i32, ptr %30, align 4
  %32 = insertvalue { i32, i32 } poison, i32 %29, 0
  %33 = insertvalue { i32, i32 } %32, i32 %31, 1
  ret { i32, i32 } %33

bb17:                                             ; No predecessors!
  unreachable
}

; core::str::validations::next_code_point_reverse
; Function Attrs: inlinehint nonlazybind uwtable
define { i32, i32 } @_ZN4core3str11validations23next_code_point_reverse17hd45be90669842939E(ptr align 8 %bytes) unnamed_addr #0 {
start:
  %self3 = alloca ptr, align 8
  %self2 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %ch = alloca i32, align 4
  %self = alloca ptr, align 8
  %_2 = alloca ptr, align 8
  %_0 = alloca %"core::option::Option<u32>", align 4
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %0 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h5e976689df65285bE"(ptr align 8 %bytes)
  store ptr %0, ptr %self, align 8
  %1 = load ptr, ptr %self, align 8, !noundef !3
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_31 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_31, 0
  br i1 %4, label %bb18, label %bb19

bb18:                                             ; preds = %start
  store ptr null, ptr %_2, align 8
  br label %bb17

bb19:                                             ; preds = %start
  %v = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  store ptr %v, ptr %_2, align 8
  br label %bb17

bb17:                                             ; preds = %bb19, %bb18
  %5 = load ptr, ptr %_2, align 8, !noundef !3
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_4 = select i1 %7, i64 1, i64 0
  %8 = icmp eq i64 %_4, 0
  br i1 %8, label %bb2, label %bb3

bb2:                                              ; preds = %bb17
  %val = load ptr, ptr %_2, align 8, !nonnull !3, !align !4, !noundef !3
  %w = load i8, ptr %val, align 1, !noundef !3
  %_6 = icmp ult i8 %w, -128
  br i1 %_6, label %bb4, label %bb5

bb3:                                              ; preds = %bb17
  %9 = load i32, ptr @3, align 4, !range !6, !noundef !3
  %10 = load i32, ptr getelementptr inbounds (i8, ptr @3, i64 4), align 4
  store i32 %9, ptr %_0, align 4
  %11 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %10, ptr %11, align 4
  br label %bb15

bb5:                                              ; preds = %bb2
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %12 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h5e976689df65285bE"(ptr align 8 %bytes)
  store ptr %12, ptr %self1, align 8
  %13 = load ptr, ptr %self1, align 8, !noundef !3
  %14 = ptrtoint ptr %13 to i64
  %15 = icmp eq i64 %14, 0
  %_34 = select i1 %15, i64 0, i64 1
  %_35 = icmp eq i64 %_34, 1
  call void @llvm.assume(i1 %_35)
  %val4 = load ptr, ptr %self1, align 8, !nonnull !3, !align !4, !noundef !3
  %z = load i8, ptr %val4, align 1, !noundef !3
  %_36 = and i8 %z, 31
  %_13 = zext i8 %_36 to i32
  store i32 %_13, ptr %ch, align 4
  %_14 = icmp slt i8 %z, -64
  br i1 %_14, label %bb7, label %bb13

bb4:                                              ; preds = %bb2
  %_8 = zext i8 %w to i32
  %16 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %_8, ptr %16, align 4
  store i32 1, ptr %_0, align 4
  br label %bb15

bb13:                                             ; preds = %bb5
  br label %bb14

bb7:                                              ; preds = %bb5
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %17 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h5e976689df65285bE"(ptr align 8 %bytes)
  store ptr %17, ptr %self2, align 8
  %18 = load ptr, ptr %self2, align 8, !noundef !3
  %19 = ptrtoint ptr %18 to i64
  %20 = icmp eq i64 %19, 0
  %_39 = select i1 %20, i64 0, i64 1
  %_40 = icmp eq i64 %_39, 1
  call void @llvm.assume(i1 %_40)
  %val5 = load ptr, ptr %self2, align 8, !nonnull !3, !align !4, !noundef !3
  %y = load i8, ptr %val5, align 1, !noundef !3
  %_41 = and i8 %y, 15
  %_18 = zext i8 %_41 to i32
  store i32 %_18, ptr %ch, align 4
  %_19 = icmp slt i8 %y, -64
  br i1 %_19, label %bb9, label %bb11

bb14:                                             ; preds = %bb12, %bb13
  %ch9 = load i32, ptr %ch, align 4, !noundef !3
  %_53 = shl i32 %ch9, 6
  %_55 = and i8 %w, 63
  %_54 = zext i8 %_55 to i32
  %_28 = or i32 %_53, %_54
  store i32 %_28, ptr %ch, align 4
  %_30 = load i32, ptr %ch, align 4, !noundef !3
  %21 = getelementptr inbounds i8, ptr %_0, i64 4
  store i32 %_30, ptr %21, align 4
  store i32 1, ptr %_0, align 4
  br label %bb16

bb11:                                             ; preds = %bb7
  br label %bb12

bb9:                                              ; preds = %bb7
; call <core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back
  %22 = call align 1 ptr @"_ZN106_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..double_ended..DoubleEndedIterator$GT$9next_back17h5e976689df65285bE"(ptr align 8 %bytes)
  store ptr %22, ptr %self3, align 8
  %23 = load ptr, ptr %self3, align 8, !noundef !3
  %24 = ptrtoint ptr %23 to i64
  %25 = icmp eq i64 %24, 0
  %_44 = select i1 %25, i64 0, i64 1
  %_45 = icmp eq i64 %_44, 1
  call void @llvm.assume(i1 %_45)
  %val6 = load ptr, ptr %self3, align 8, !nonnull !3, !align !4, !noundef !3
  %x = load i8, ptr %val6, align 1, !noundef !3
  %_46 = and i8 %x, 7
  %_23 = zext i8 %_46 to i32
  store i32 %_23, ptr %ch, align 4
  %ch7 = load i32, ptr %ch, align 4, !noundef !3
  %_47 = shl i32 %ch7, 6
  %_49 = and i8 %y, 63
  %_48 = zext i8 %_49 to i32
  %_24 = or i32 %_47, %_48
  store i32 %_24, ptr %ch, align 4
  br label %bb12

bb12:                                             ; preds = %bb9, %bb11
  %ch8 = load i32, ptr %ch, align 4, !noundef !3
  %_50 = shl i32 %ch8, 6
  %_52 = and i8 %z, 63
  %_51 = zext i8 %_52 to i32
  %_26 = or i32 %_50, %_51
  store i32 %_26, ptr %ch, align 4
  br label %bb14

bb16:                                             ; preds = %bb15, %bb14
  %26 = load i32, ptr %_0, align 4, !range !6, !noundef !3
  %27 = getelementptr inbounds i8, ptr %_0, i64 4
  %28 = load i32, ptr %27, align 4
  %29 = insertvalue { i32, i32 } poison, i32 %26, 0
  %30 = insertvalue { i32, i32 } %29, i32 %28, 1
  ret { i32, i32 } %30

bb15:                                             ; preds = %bb3, %bb4
  br label %bb16

bb20:                                             ; No predecessors!
  unreachable
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h2b55c0e217167ca8E"(ptr align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #1 {
start:
; call <char as core::str::pattern::Pattern>::is_prefix_of
  %_0 = call zeroext i1 @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h58296c97f1093a73E"(i32 %pat, ptr align 1 %self.0, i64 %self.1)
  ret i1 %_0
}

; core::str::<impl str>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h54bd2905953ff258E"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %pat.0, i64 %pat.1) unnamed_addr #1 {
start:
; call <&str as core::str::pattern::Pattern>::is_prefix_of
  %_0 = call zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h493306a219920e61E"(ptr align 1 %pat.0, i64 %pat.1, ptr align 1 %self.0, i64 %self.1)
  ret i1 %_0
}

; core::str::<impl str>::trim_matches
; Function Attrs: nonlazybind uwtable
define { ptr, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$12trim_matches17h2bafacef18a30bc3E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_27 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_26 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_11 = alloca %"core::option::Option<(usize, usize)>", align 8
  %_6 = alloca %"core::option::Option<(usize, usize)>", align 8
  %matcher = alloca %"core::str::pattern::CharPredicateSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>", align 8
  %j = alloca i64, align 8
  %i = alloca i64, align 8
  store i64 0, ptr %i, align 8
  store i64 0, ptr %j, align 8
; call <F as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17he7b155c277f39cdbE"(ptr sret(%"core::str::pattern::CharPredicateSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>") align 8 %matcher, ptr align 1 %self.0, i64 %self.1)
; invoke <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_reject
  invoke void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$11next_reject17h36703f93ad8dc2d2E"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_6, ptr align 8 %matcher)
          to label %bb2 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  %1 = load ptr, ptr %0, align 8, !noundef !3
  %2 = getelementptr inbounds i8, ptr %0, i64 8
  %3 = load i32, ptr %2, align 8, !noundef !3
  %4 = insertvalue { ptr, i32 } poison, ptr %1, 0
  %5 = insertvalue { ptr, i32 } %4, i32 %3, 1
  resume { ptr, i32 } %5

cleanup:                                          ; preds = %bb4, %start
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb9

bb2:                                              ; preds = %start
  %_8 = load i64, ptr %_6, align 8, !range !9, !noundef !3
  %10 = icmp eq i64 %_8, 1
  br i1 %10, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %11 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %_6, i32 0, i32 1
  %a = load i64, ptr %11, align 8, !noundef !3
  %12 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %_6, i32 0, i32 1
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  %b = load i64, ptr %13, align 8, !noundef !3
  store i64 %a, ptr %i, align 8
  store i64 %b, ptr %j, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
; invoke <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::ReverseSearcher>::next_reject_back
  invoke void @"_ZN106_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$16next_reject_back17h3376e1ac492a1c95E"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_11, ptr align 8 %matcher)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %_13 = load i64, ptr %_11, align 8, !range !9, !noundef !3
  %14 = icmp eq i64 %_13, 1
  br i1 %14, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %15 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %_11, i32 0, i32 1
  %16 = getelementptr inbounds i8, ptr %15, i64 8
  %b1 = load i64, ptr %16, align 8, !noundef !3
  store i64 %b1, ptr %j, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %i2 = load i64, ptr %i, align 8, !noundef !3
  %i3 = load i64, ptr %j, align 8, !noundef !3
  %ptr = getelementptr inbounds i8, ptr %self.0, i64 %i2
  %len = sub i64 %i3, %i2
  store ptr %ptr, ptr %_27, align 8
  %17 = getelementptr inbounds i8, ptr %_27, i64 8
  store i64 %len, ptr %17, align 8
  %18 = load ptr, ptr %_27, align 8, !noundef !3
  %19 = getelementptr inbounds i8, ptr %_27, i64 8
  %20 = load i64, ptr %19, align 8, !noundef !3
  store ptr %18, ptr %_26, align 8
  %21 = getelementptr inbounds i8, ptr %_26, i64 8
  store i64 %20, ptr %21, align 8
  %_24.0 = load ptr, ptr %_26, align 8, !noundef !3
  %22 = getelementptr inbounds i8, ptr %_26, i64 8
  %_24.1 = load i64, ptr %22, align 8, !noundef !3
  %23 = insertvalue { ptr, i64 } poison, ptr %_24.0, 0
  %24 = insertvalue { ptr, i64 } %23, i64 %_24.1, 1
  ret { ptr, i64 } %24
}

; core::str::<impl str>::is_char_boundary
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hfa18a7820c8f7afbE"(ptr align 1 %self.0, i64 %self.1, i64 %index) unnamed_addr #0 {
start:
  %_17 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_3 = alloca ptr, align 8
  %_0 = alloca i8, align 1
  %0 = icmp eq i64 %index, 0
  br i1 %0, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb6

bb2:                                              ; preds = %start
  %_8 = icmp ult i64 %index, %self.1
  br i1 %_8, label %bb7, label %bb8

bb6:                                              ; preds = %bb5, %bb1
  %1 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %2 = trunc i8 %1 to i1
  ret i1 %2

bb8:                                              ; preds = %bb2
  store ptr null, ptr %_3, align 8
  br label %bb9

bb7:                                              ; preds = %bb2
  store ptr %self.0, ptr %_17, align 8
  %3 = getelementptr inbounds i8, ptr %_17, i64 8
  store i64 %self.1, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %_17, i64 8
  %_15 = load i64, ptr %4, align 8, !noundef !3
  %cond = icmp ult i64 %index, %_15
  call void @llvm.assume(i1 %cond)
  %_11 = getelementptr inbounds i8, ptr %self.0, i64 %index
  store ptr %_11, ptr %_3, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %5 = load ptr, ptr %_3, align 8, !noundef !3
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_5 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_5, 0
  br i1 %8, label %bb4, label %bb3

bb4:                                              ; preds = %bb9
  %9 = icmp eq i64 %index, %self.1
  %10 = zext i1 %9 to i8
  store i8 %10, ptr %_0, align 1
  br label %bb5

bb3:                                              ; preds = %bb9
  %_7 = load ptr, ptr %_3, align 8, !nonnull !3, !align !4, !noundef !3
  %b = load i8, ptr %_7, align 1, !noundef !3
  %11 = icmp sge i8 %b, -64
  %12 = zext i1 %11 to i8
  store i8 %12, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  br label %bb6

bb10:                                             ; No predecessors!
  unreachable
}

; core::str::<impl str>::trim_end_matches
; Function Attrs: nonlazybind uwtable
define { ptr, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$16trim_end_matches17hc90b49ec94e0cba7E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_18 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_5 = alloca %"core::option::Option<(usize, usize)>", align 8
  %matcher = alloca %"core::str::pattern::CharPredicateSearcher<'_, {closure@core::str::<impl str>::trim_end::{closure#0}}>", align 8
  %j = alloca i64, align 8
  store i64 0, ptr %j, align 8
; call <F as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN49_$LT$F$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17hfff62ee2d6cc40edE"(ptr sret(%"core::str::pattern::CharPredicateSearcher<'_, {closure@core::str::<impl str>::trim_end::{closure#0}}>") align 8 %matcher, ptr align 1 %self.0, i64 %self.1)
; invoke <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::ReverseSearcher>::next_reject_back
  invoke void @"_ZN106_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..ReverseSearcher$GT$16next_reject_back17ha0db35aa86a92dadE"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_5, ptr align 8 %matcher)
          to label %bb2 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  %1 = load ptr, ptr %0, align 8, !noundef !3
  %2 = getelementptr inbounds i8, ptr %0, i64 8
  %3 = load i32, ptr %2, align 8, !noundef !3
  %4 = insertvalue { ptr, i32 } poison, ptr %1, 0
  %5 = insertvalue { ptr, i32 } %4, i32 %3, 1
  resume { ptr, i32 } %5

cleanup:                                          ; preds = %start
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb6

bb2:                                              ; preds = %start
  %_7 = load i64, ptr %_5, align 8, !range !9, !noundef !3
  %10 = icmp eq i64 %_7, 1
  br i1 %10, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %11 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %_5, i32 0, i32 1
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  %b = load i64, ptr %12, align 8, !noundef !3
  store i64 %b, ptr %j, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %i = load i64, ptr %j, align 8, !noundef !3
  store ptr %self.0, ptr %_18, align 8
  %13 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %i, ptr %13, align 8
  %14 = load ptr, ptr %_18, align 8, !noundef !3
  %15 = getelementptr inbounds i8, ptr %_18, i64 8
  %16 = load i64, ptr %15, align 8, !noundef !3
  store ptr %14, ptr %_17, align 8
  %17 = getelementptr inbounds i8, ptr %_17, i64 8
  store i64 %16, ptr %17, align 8
  %_15.0 = load ptr, ptr %_17, align 8, !noundef !3
  %18 = getelementptr inbounds i8, ptr %_17, i64 8
  %_15.1 = load i64, ptr %18, align 8, !noundef !3
  %19 = insertvalue { ptr, i64 } poison, ptr %_15.0, 0
  %20 = insertvalue { ptr, i64 } %19, i64 %_15.1, 1
  ret { ptr, i64 } %20
}

; core::str::<impl str>::len
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha361409a4077a273E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  ret i64 %self.1
}

; core::str::<impl str>::trim
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4trim17had31dd0927350be9E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::str::<impl str>::trim_matches
  %0 = call { ptr, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$12trim_matches17h2bafacef18a30bc3E"(ptr align 1 %self.0, i64 %self.1)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; core::str::<impl str>::trim::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$4trim28_$u7b$$u7b$closure$u7d$$u7d$17hc8ed5d16a2f2a261E"(ptr align 1 %_1, i32 %c) unnamed_addr #0 {
start:
  %_0 = alloca i8, align 1
  %0 = icmp eq i32 %c, 32
  br i1 %0, label %bb5, label %bb2

bb5:                                              ; preds = %bb4, %start
  store i8 1, ptr %_0, align 1
  br label %bb1

bb2:                                              ; preds = %start
  %_3 = icmp ule i32 9, %c
  br i1 %_3, label %bb4, label %bb3

bb3:                                              ; preds = %bb4, %bb2
  %_5 = icmp ugt i32 %c, 127
  br i1 %_5, label %bb6, label %bb7

bb4:                                              ; preds = %bb2
  %_4 = icmp ule i32 %c, 13
  br i1 %_4, label %bb5, label %bb3

bb7:                                              ; preds = %bb3
  store i8 0, ptr %_0, align 1
  br label %bb8

bb6:                                              ; preds = %bb3
; call core::unicode::unicode_data::white_space::lookup
  %1 = call zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17he11dd75850b02fadE(i32 %c)
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_0, align 1
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  br label %bb1

bb1:                                              ; preds = %bb5, %bb8
  %3 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; core::str::<impl str>::chars
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4fe91a739e15aab7E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_8 = alloca ptr, align 8
  %_2 = alloca %"core::slice::iter::Iter<'_, u8>", align 8
  %_0 = alloca %"core::str::iter::Chars<'_>", align 8
  %end_or_len = getelementptr inbounds i8, ptr %self.0, i64 %self.1
  store ptr %self.0, ptr %_8, align 8
  %0 = load ptr, ptr %_8, align 8, !nonnull !3, !noundef !3
  store ptr %0, ptr %_2, align 8
  %1 = getelementptr inbounds i8, ptr %_2, i64 8
  store ptr %end_or_len, ptr %1, align 8
  %2 = load ptr, ptr %_2, align 8, !nonnull !3, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_2, i64 8
  %4 = load ptr, ptr %3, align 8, !noundef !3
  store ptr %2, ptr %_0, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %4, ptr %5, align 8
  %6 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  %8 = load ptr, ptr %7, align 8, !noundef !3
  %9 = insertvalue { ptr, ptr } poison, ptr %6, 0
  %10 = insertvalue { ptr, ptr } %9, ptr %8, 1
  ret { ptr, ptr } %10
}

; core::str::<impl str>::lines
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN4core3str21_$LT$impl$u20$str$GT$5lines17h0e2af5859472f117E"(ptr sret(%"core::str::iter::Lines<'_>") align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_13 = alloca [4 x i8], align 1
  %utf8_encoded = alloca [4 x i8], align 1
  %_6 = alloca %"core::str::pattern::CharSearcher<'_>", align 8
  %_4 = alloca %"core::str::iter::SplitInternal<'_, char>", align 8
  %self = alloca %"core::str::iter::SplitInclusive<'_, char>", align 8
  %_2 = alloca %"core::iter::adapters::map::Map<core::str::iter::SplitInclusive<'_, char>, core::str::LinesMap>", align 8
  %0 = getelementptr inbounds [4 x i8], ptr %utf8_encoded, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 1 %0, i8 0, i64 4, i1 false)
; call core::char::methods::encode_utf8_raw
  %1 = call { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17hce4a0e0468f969f6E(i32 10, ptr align 1 %utf8_encoded, i64 4)
  %v.0 = extractvalue { ptr, i64 } %1, 0
  %v.1 = extractvalue { ptr, i64 } %1, 1
  %2 = load <4 x i8>, ptr %utf8_encoded, align 1
  store <4 x i8> %2, ptr %_13, align 1
  store ptr %self.0, ptr %_6, align 8
  %3 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 %self.1, ptr %3, align 8
  %4 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %_6, i32 0, i32 1
  store i64 0, ptr %4, align 8
  %5 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %_6, i32 0, i32 2
  store i64 %self.1, ptr %5, align 8
  %6 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %_6, i32 0, i32 5
  store i32 10, ptr %6, align 4
  %7 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %_6, i32 0, i32 3
  store i64 %v.1, ptr %7, align 8
  %8 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %_6, i32 0, i32 4
  %9 = load <4 x i8>, ptr %_13, align 1
  store <4 x i8> %9, ptr %8, align 8
  store i64 0, ptr %_4, align 8
  %10 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %_4, i32 0, i32 1
  store i64 %self.1, ptr %10, align 8
  %11 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %_4, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %_6, i64 48, i1 false)
  %12 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %_4, i32 0, i32 3
  store i8 0, ptr %12, align 8
  %13 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %_4, i32 0, i32 4
  store i8 0, ptr %13, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_4, i64 72, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %self, i64 72, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 72, i1 false)
  ret void
}

; core::str::<impl str>::split
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h37b7a3ae21cc6b09E"(ptr sret(%"core::str::iter::Split<'_, char>") align 8 %_0, ptr align 1 %self.0, i64 %self.1, i32 %pat) unnamed_addr #0 {
start:
  %_5 = alloca %"core::str::pattern::CharSearcher<'_>", align 8
  %_3 = alloca %"core::str::iter::SplitInternal<'_, char>", align 8
; call <char as core::str::pattern::Pattern>::into_searcher
  call void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17ha3f4776e4e43d4aaE"(ptr sret(%"core::str::pattern::CharSearcher<'_>") align 8 %_5, i32 %pat, ptr align 1 %self.0, i64 %self.1)
  store i64 0, ptr %_3, align 8
  %0 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %_3, i32 0, i32 1
  store i64 %self.1, ptr %0, align 8
  %1 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %_3, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %_5, i64 48, i1 false)
  %2 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %_3, i32 0, i32 3
  store i8 1, ptr %2, align 8
  %3 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %_3, i32 0, i32 4
  store i8 0, ptr %3, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_3, i64 72, i1 false)
  ret void
}

; core::str::<impl str>::contains
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17h96cf28c8d8071c26E"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %pat.0, i64 %pat.1) unnamed_addr #0 {
start:
; call <&str as core::str::pattern::Pattern>::is_contained_in
  %_0 = call zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$15is_contained_in17he1b5843eb38218afE"(ptr align 1 %pat.0, i64 %pat.1, ptr align 1 %self.0, i64 %self.1)
  ret i1 %_0
}

; core::str::<impl str>::is_empty
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17hc637ac30946ea802E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_0 = icmp eq i64 %self.1, 0
  ret i1 %_0
}

; core::str::<impl str>::trim_end
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$8trim_end17h0b4b87c8961b498aE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call core::str::<impl str>::trim_end_matches
  %0 = call { ptr, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$16trim_end_matches17hc90b49ec94e0cba7E"(ptr align 1 %self.0, i64 %self.1)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; core::str::<impl str>::trim_end::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8trim_end28_$u7b$$u7b$closure$u7d$$u7d$17hd4d4c4ab8e2c5c27E"(ptr align 1 %_1, i32 %c) unnamed_addr #0 {
start:
  %_0 = alloca i8, align 1
  %0 = icmp eq i32 %c, 32
  br i1 %0, label %bb5, label %bb2

bb5:                                              ; preds = %bb4, %start
  store i8 1, ptr %_0, align 1
  br label %bb1

bb2:                                              ; preds = %start
  %_3 = icmp ule i32 9, %c
  br i1 %_3, label %bb4, label %bb3

bb3:                                              ; preds = %bb4, %bb2
  %_5 = icmp ugt i32 %c, 127
  br i1 %_5, label %bb6, label %bb7

bb4:                                              ; preds = %bb2
  %_4 = icmp ule i32 %c, 13
  br i1 %_4, label %bb5, label %bb3

bb7:                                              ; preds = %bb3
  store i8 0, ptr %_0, align 1
  br label %bb8

bb6:                                              ; preds = %bb3
; call core::unicode::unicode_data::white_space::lookup
  %1 = call zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17he11dd75850b02fadE(i32 %c)
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_0, align 1
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  br label %bb1

bb1:                                              ; preds = %bb5, %bb8
  %3 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %4 = trunc i8 %3 to i1
  ret i1 %4
}

; core::str::<impl str>::ends_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$9ends_with17h8451fd61f1ec561dE"(ptr align 1 %self.0, i64 %self.1, ptr align 8 %pat) unnamed_addr #1 {
start:
; call <&&str as core::str::pattern::Pattern>::is_suffix_of
  %_0 = call zeroext i1 @"_ZN59_$LT$$RF$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_suffix_of17h1f0d3a33fb5e965fE"(ptr align 8 %pat, ptr align 1 %self.0, i64 %self.1)
  ret i1 %_0
}

; core::str::iter::SplitInternal<P>::next_inclusive
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$14next_inclusive17hcea748b7cfe582e4E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_21 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_20 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_5 = alloca %"core::option::Option<(usize, usize)>", align 8
  %_0 = alloca %"core::option::Option<&str>", align 8
  %0 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %self, i32 0, i32 4
  %1 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_2 = trunc i8 %1 to i1
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_4 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %self, i32 0, i32 2
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %2 = call { ptr, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17he1deb599f4fa24a1E"(ptr align 8 %_4)
  %haystack.0 = extractvalue { ptr, i64 } %2, 0
  %haystack.1 = extractvalue { ptr, i64 } %2, 1
  %_6 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %self, i32 0, i32 2
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
  call void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h18939037b139c541E"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_5, ptr align 8 %_6)
  %_7 = load i64, ptr %_5, align 8, !range !9, !noundef !3
  %3 = icmp eq i64 %_7, 0
  br i1 %3, label %bb5, label %bb6

bb1:                                              ; preds = %start
  %4 = load ptr, ptr @1, align 8, !align !4, !noundef !3
  %5 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %4, ptr %_0, align 8
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %5, ptr %6, align 8
  br label %bb8

bb5:                                              ; preds = %bb2
; call core::str::iter::SplitInternal<P>::get_end
  %7 = call { ptr, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h412752760e16cd70E"(ptr align 8 %self)
  %8 = extractvalue { ptr, i64 } %7, 0
  %9 = extractvalue { ptr, i64 } %7, 1
  store ptr %8, ptr %_0, align 8
  %10 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %9, ptr %10, align 8
  br label %bb7

bb6:                                              ; preds = %bb2
  %11 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %_5, i32 0, i32 1
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  %b = load i64, ptr %12, align 8, !noundef !3
  %i = load i64, ptr %self, align 8, !noundef !3
  %ptr = getelementptr inbounds i8, ptr %haystack.0, i64 %i
  %len = sub i64 %b, %i
  store ptr %ptr, ptr %_21, align 8
  %13 = getelementptr inbounds i8, ptr %_21, i64 8
  store i64 %len, ptr %13, align 8
  %14 = load ptr, ptr %_21, align 8, !noundef !3
  %15 = getelementptr inbounds i8, ptr %_21, i64 8
  %16 = load i64, ptr %15, align 8, !noundef !3
  store ptr %14, ptr %_20, align 8
  %17 = getelementptr inbounds i8, ptr %_20, i64 8
  store i64 %16, ptr %17, align 8
  %_18.0 = load ptr, ptr %_20, align 8, !noundef !3
  %18 = getelementptr inbounds i8, ptr %_20, i64 8
  %_18.1 = load i64, ptr %18, align 8, !noundef !3
  store i64 %b, ptr %self, align 8
  store ptr %_18.0, ptr %_0, align 8
  %19 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_18.1, ptr %19, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  br label %bb8

bb8:                                              ; preds = %bb1, %bb7
  %20 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %21 = getelementptr inbounds i8, ptr %_0, i64 8
  %22 = load i64, ptr %21, align 8
  %23 = insertvalue { ptr, i64 } poison, ptr %20, 0
  %24 = insertvalue { ptr, i64 } %23, i64 %22, 1
  ret { ptr, i64 } %24

bb9:                                              ; No predecessors!
  unreachable
}

; core::str::iter::SplitInternal<P>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17ha8e4d857a9a726a7E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_22 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_21 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_5 = alloca %"core::option::Option<(usize, usize)>", align 8
  %_0 = alloca %"core::option::Option<&str>", align 8
  %0 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %self, i32 0, i32 4
  %1 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_2 = trunc i8 %1 to i1
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %_4 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %self, i32 0, i32 2
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %2 = call { ptr, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17he1deb599f4fa24a1E"(ptr align 8 %_4)
  %haystack.0 = extractvalue { ptr, i64 } %2, 0
  %haystack.1 = extractvalue { ptr, i64 } %2, 1
  %_6 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %self, i32 0, i32 2
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
  call void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h18939037b139c541E"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_5, ptr align 8 %_6)
  %_7 = load i64, ptr %_5, align 8, !range !9, !noundef !3
  %3 = icmp eq i64 %_7, 0
  br i1 %3, label %bb5, label %bb6

bb1:                                              ; preds = %start
  %4 = load ptr, ptr @1, align 8, !align !4, !noundef !3
  %5 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %4, ptr %_0, align 8
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %5, ptr %6, align 8
  br label %bb8

bb5:                                              ; preds = %bb2
; call core::str::iter::SplitInternal<P>::get_end
  %7 = call { ptr, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h412752760e16cd70E"(ptr align 8 %self)
  %8 = extractvalue { ptr, i64 } %7, 0
  %9 = extractvalue { ptr, i64 } %7, 1
  store ptr %8, ptr %_0, align 8
  %10 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %9, ptr %10, align 8
  br label %bb7

bb6:                                              ; preds = %bb2
  %11 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %_5, i32 0, i32 1
  %a = load i64, ptr %11, align 8, !noundef !3
  %12 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %_5, i32 0, i32 1
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  %b = load i64, ptr %13, align 8, !noundef !3
  %i = load i64, ptr %self, align 8, !noundef !3
  %ptr = getelementptr inbounds i8, ptr %haystack.0, i64 %i
  %len = sub i64 %a, %i
  store ptr %ptr, ptr %_22, align 8
  %14 = getelementptr inbounds i8, ptr %_22, i64 8
  store i64 %len, ptr %14, align 8
  %15 = load ptr, ptr %_22, align 8, !noundef !3
  %16 = getelementptr inbounds i8, ptr %_22, i64 8
  %17 = load i64, ptr %16, align 8, !noundef !3
  store ptr %15, ptr %_21, align 8
  %18 = getelementptr inbounds i8, ptr %_21, i64 8
  store i64 %17, ptr %18, align 8
  %_19.0 = load ptr, ptr %_21, align 8, !noundef !3
  %19 = getelementptr inbounds i8, ptr %_21, i64 8
  %_19.1 = load i64, ptr %19, align 8, !noundef !3
  store i64 %b, ptr %self, align 8
  store ptr %_19.0, ptr %_0, align 8
  %20 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_19.1, ptr %20, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  br label %bb8

bb8:                                              ; preds = %bb1, %bb7
  %21 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %22 = getelementptr inbounds i8, ptr %_0, i64 8
  %23 = load i64, ptr %22, align 8
  %24 = insertvalue { ptr, i64 } poison, ptr %21, 0
  %25 = insertvalue { ptr, i64 } %24, i64 %23, 1
  ret { ptr, i64 } %25

bb9:                                              ; No predecessors!
  unreachable
}

; core::str::iter::SplitInternal<P>::get_end
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$7get_end17h412752760e16cd70E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_23 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_22 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_0 = alloca %"core::option::Option<&str>", align 8
  %0 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %self, i32 0, i32 4
  %1 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_2 = trunc i8 %1 to i1
  br i1 %_2, label %bb6, label %bb1

bb1:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %self, i32 0, i32 4
  store i8 1, ptr %2, align 1
  %3 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %self, i32 0, i32 3
  %4 = load i8, ptr %3, align 8, !range !10, !noundef !3
  %_3 = trunc i8 %4 to i1
  br i1 %_3, label %bb3, label %bb2

bb6:                                              ; preds = %bb5, %start
  %5 = load ptr, ptr @1, align 8, !align !4, !noundef !3
  %6 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %5, ptr %_0, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %6, ptr %7, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %8 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %self, i32 0, i32 1
  %_6 = load i64, ptr %8, align 8, !noundef !3
  %_7 = load i64, ptr %self, align 8, !noundef !3
  %_5 = sub i64 %_6, %_7
  %_4 = icmp ugt i64 %_5, 0
  br i1 %_4, label %bb3, label %bb5

bb3:                                              ; preds = %bb2, %bb1
  %_9 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %self, i32 0, i32 2
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %9 = call { ptr, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17he1deb599f4fa24a1E"(ptr align 8 %_9)
  %self.0 = extractvalue { ptr, i64 } %9, 0
  %self.1 = extractvalue { ptr, i64 } %9, 1
  %i = load i64, ptr %self, align 8, !noundef !3
  %10 = getelementptr inbounds %"core::str::iter::SplitInternal<'_, char>", ptr %self, i32 0, i32 1
  %i1 = load i64, ptr %10, align 8, !noundef !3
  %ptr = getelementptr inbounds i8, ptr %self.0, i64 %i
  %len = sub i64 %i1, %i
  store ptr %ptr, ptr %_23, align 8
  %11 = getelementptr inbounds i8, ptr %_23, i64 8
  store i64 %len, ptr %11, align 8
  %12 = load ptr, ptr %_23, align 8, !noundef !3
  %13 = getelementptr inbounds i8, ptr %_23, i64 8
  %14 = load i64, ptr %13, align 8, !noundef !3
  store ptr %12, ptr %_22, align 8
  %15 = getelementptr inbounds i8, ptr %_22, i64 8
  store i64 %14, ptr %15, align 8
  %_20.0 = load ptr, ptr %_22, align 8, !noundef !3
  %16 = getelementptr inbounds i8, ptr %_22, i64 8
  %_20.1 = load i64, ptr %16, align 8, !noundef !3
  store ptr %_20.0, ptr %_0, align 8
  %17 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_20.1, ptr %17, align 8
  br label %bb7

bb5:                                              ; preds = %bb2
  br label %bb6

bb7:                                              ; preds = %bb6, %bb3
  %18 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %19 = getelementptr inbounds i8, ptr %_0, i64 8
  %20 = load i64, ptr %19, align 8
  %21 = insertvalue { ptr, i64 } poison, ptr %18, 0
  %22 = insertvalue { ptr, i64 } %21, i64 %20, 1
  ret { ptr, i64 } %22
}

; core::str::iter::MatchIndicesInternal<P>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core3str4iter29MatchIndicesInternal$LT$P$GT$4next17he92a6f5be4a5f6abE"(ptr sret(%"core::option::Option<(usize, &str)>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_19 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_18 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_6 = alloca { i64, { ptr, i64 } }, align 8
  %self1 = alloca %"core::option::Option<(usize, usize)>", align 8
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
  call void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h18939037b139c541E"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %self1, ptr align 8 %self)
  %_5 = load i64, ptr %self1, align 8, !range !9, !noundef !3
  %0 = icmp eq i64 %_5, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds %"core::option::Option<(usize, &str)>", ptr %_0, i32 0, i32 1
  store ptr null, ptr %1, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %self1, i32 0, i32 1
  %x = load i64, ptr %2, align 8, !noundef !3
  %3 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %self1, i32 0, i32 1
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  %x2 = load i64, ptr %4, align 8, !noundef !3
; call <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
  %5 = call { ptr, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17he1deb599f4fa24a1E"(ptr align 8 %self)
  %self.0 = extractvalue { ptr, i64 } %5, 0
  %self.1 = extractvalue { ptr, i64 } %5, 1
  %ptr = getelementptr inbounds i8, ptr %self.0, i64 %x
  %len = sub i64 %x2, %x
  store ptr %ptr, ptr %_19, align 8
  %6 = getelementptr inbounds i8, ptr %_19, i64 8
  store i64 %len, ptr %6, align 8
  %7 = load ptr, ptr %_19, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_19, i64 8
  %9 = load i64, ptr %8, align 8, !noundef !3
  store ptr %7, ptr %_18, align 8
  %10 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %9, ptr %10, align 8
  %_16.0 = load ptr, ptr %_18, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_18, i64 8
  %_16.1 = load i64, ptr %11, align 8, !noundef !3
  store i64 %x, ptr %_6, align 8
  %12 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_6, i32 0, i32 1
  store ptr %_16.0, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  store i64 %_16.1, ptr %13, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_6, i64 24, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  ret void

bb6:                                              ; No predecessors!
  unreachable
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::Range<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN4core3str6traits108_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..Range$LT$usize$GT$$GT$3get17ha61b41e035c178e2E"(i64 %self.0, i64 %self.1, ptr align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_19 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_18 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_0 = alloca %"core::option::Option<&str>", align 8
  %_3 = icmp ule i64 %self.0, %self.1
  br i1 %_3, label %bb1, label %bb6

bb6:                                              ; preds = %bb3, %bb1, %start
  %0 = load ptr, ptr @1, align 8, !align !4, !noundef !3
  %1 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %0, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %1, ptr %2, align 8
  br label %bb7

bb1:                                              ; preds = %start
; call core::str::<impl str>::is_char_boundary
  %_6 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hfa18a7820c8f7afbE"(ptr align 1 %slice.0, i64 %slice.1, i64 %self.0)
  br i1 %_6, label %bb3, label %bb6

bb3:                                              ; preds = %bb1
; call core::str::<impl str>::is_char_boundary
  %_7 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hfa18a7820c8f7afbE"(ptr align 1 %slice.0, i64 %slice.1, i64 %self.1)
  br i1 %_7, label %bb5, label %bb6

bb5:                                              ; preds = %bb3
  %ptr = getelementptr inbounds i8, ptr %slice.0, i64 %self.0
  %len = sub i64 %self.1, %self.0
  store ptr %ptr, ptr %_19, align 8
  %3 = getelementptr inbounds i8, ptr %_19, i64 8
  store i64 %len, ptr %3, align 8
  %4 = load ptr, ptr %_19, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_19, i64 8
  %6 = load i64, ptr %5, align 8, !noundef !3
  store ptr %4, ptr %_18, align 8
  %7 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %6, ptr %7, align 8
  %_16.0 = load ptr, ptr %_18, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_18, i64 8
  %_16.1 = load i64, ptr %8, align 8, !noundef !3
  store ptr %_16.0, ptr %_0, align 8
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_16.1, ptr %9, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  %10 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  %12 = load i64, ptr %11, align 8
  %13 = insertvalue { ptr, i64 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1
  ret { ptr, i64 } %14
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$3get17h879bd9a7fb4449b9E"(i64 %self, ptr align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_14 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_13 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_0 = alloca %"core::option::Option<&str>", align 8
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hfa18a7820c8f7afbE"(ptr align 1 %slice.0, i64 %slice.1, i64 %self)
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %start
  %0 = load ptr, ptr @1, align 8, !align !4, !noundef !3
  %1 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %0, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %1, ptr %2, align 8
  br label %bb4

bb2:                                              ; preds = %start
  store ptr %slice.0, ptr %_14, align 8
  %3 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %self, ptr %3, align 8
  %4 = load ptr, ptr %_14, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_14, i64 8
  %6 = load i64, ptr %5, align 8, !noundef !3
  store ptr %4, ptr %_13, align 8
  %7 = getelementptr inbounds i8, ptr %_13, i64 8
  store i64 %6, ptr %7, align 8
  %_11.0 = load ptr, ptr %_13, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_13, i64 8
  %_11.1 = load i64, ptr %8, align 8, !noundef !3
  store ptr %_11.0, ptr %_0, align 8
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_11.1, ptr %9, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %10 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  %12 = load i64, ptr %11, align 8
  %13 = insertvalue { ptr, i64 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1
  ret { ptr, i64 } %14
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$5index17he4262381ec1a26b5E"(i64 %self, ptr align 1 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 {
start:
  %_4 = alloca %"core::option::Option<&str>", align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::get
  %1 = call { ptr, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$3get17h879bd9a7fb4449b9E"(i64 %self, ptr align 1 %slice.0, i64 %slice.1)
  %2 = extractvalue { ptr, i64 } %1, 0
  %3 = extractvalue { ptr, i64 } %1, 1
  store ptr %2, ptr %_4, align 8
  %4 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %3, ptr %4, align 8
  %5 = load ptr, ptr %_4, align 8, !noundef !3
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_5 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_5, 0
  br i1 %8, label %bb2, label %bb3

bb2:                                              ; preds = %start
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h9c5d67f5de864a44E(ptr align 1 %slice.0, i64 %slice.1, i64 0, i64 %self, ptr align 8 %0) #27
  unreachable

bb3:                                              ; preds = %start
  %s.0 = load ptr, ptr %_4, align 8, !nonnull !3, !align !4, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_4, i64 8
  %s.1 = load i64, ptr %9, align 8, !noundef !3
  %10 = insertvalue { ptr, i64 } poison, ptr %s.0, 0
  %11 = insertvalue { ptr, i64 } %10, i64 %s.1, 1
  ret { ptr, i64 } %11

bb4:                                              ; No predecessors!
  unreachable
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17ha14e1e946f0efbd3E"(i64 %self, ptr align 1 %slice.0, i64 %slice.1) unnamed_addr #0 {
start:
  %_18 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_0 = alloca %"core::option::Option<&str>", align 8
; call core::str::<impl str>::is_char_boundary
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hfa18a7820c8f7afbE"(ptr align 1 %slice.0, i64 %slice.1, i64 %self)
  br i1 %_3, label %bb2, label %bb3

bb3:                                              ; preds = %start
  %0 = load ptr, ptr @1, align 8, !align !4, !noundef !3
  %1 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %0, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %1, ptr %2, align 8
  br label %bb4

bb2:                                              ; preds = %start
  store ptr %slice.0, ptr %_10, align 8
  %3 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %slice.1, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %_10, i64 8
  %len = load i64, ptr %4, align 8, !noundef !3
  %ptr = getelementptr inbounds i8, ptr %slice.0, i64 %self
  %len1 = sub i64 %len, %self
  store ptr %ptr, ptr %_18, align 8
  %5 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %len1, ptr %5, align 8
  %6 = load ptr, ptr %_18, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_18, i64 8
  %8 = load i64, ptr %7, align 8, !noundef !3
  store ptr %6, ptr %_17, align 8
  %9 = getelementptr inbounds i8, ptr %_17, i64 8
  store i64 %8, ptr %9, align 8
  %_15.0 = load ptr, ptr %_17, align 8, !noundef !3
  %10 = getelementptr inbounds i8, ptr %_17, i64 8
  %_15.1 = load i64, ptr %10, align 8, !noundef !3
  store ptr %_15.0, ptr %_0, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_15.1, ptr %11, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %12 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %13 = getelementptr inbounds i8, ptr %_0, i64 8
  %14 = load i64, ptr %13, align 8
  %15 = insertvalue { ptr, i64 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i64 } %15, i64 %14, 1
  ret { ptr, i64 } %16
}

; core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17ha673f3ce110abe9dE"(i64 %self, ptr align 1 %slice.0, i64 %slice.1, ptr align 8 %0) unnamed_addr #0 {
start:
  %_5 = alloca %"core::option::Option<&str>", align 8
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
  %1 = call { ptr, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17ha14e1e946f0efbd3E"(i64 %self, ptr align 1 %slice.0, i64 %slice.1)
  %2 = extractvalue { ptr, i64 } %1, 0
  %3 = extractvalue { ptr, i64 } %1, 1
  store ptr %2, ptr %_5, align 8
  %4 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %3, ptr %4, align 8
  %5 = load ptr, ptr %_5, align 8, !noundef !3
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_6 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_6, 0
  br i1 %8, label %bb2, label %bb3

bb2:                                              ; preds = %start
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h9c5d67f5de864a44E(ptr align 1 %slice.0, i64 %slice.1, i64 %self, i64 %slice.1, ptr align 8 %0) #27
  unreachable

bb3:                                              ; preds = %start
  %s.0 = load ptr, ptr %_5, align 8, !nonnull !3, !align !4, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_5, i64 8
  %s.1 = load i64, ptr %9, align 8, !noundef !3
  %10 = insertvalue { ptr, i64 } poison, ptr %s.0, 0
  %11 = insertvalue { ptr, i64 } %10, i64 %s.1, 1
  ret { ptr, i64 } %11

bb4:                                              ; No predecessors!
  unreachable
}

; core::str::traits::<impl core::cmp::PartialEq for str>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h6d0ba1924bcb9aebE"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %other.0, i64 %other.1) unnamed_addr #0 {
start:
  %_6 = alloca { ptr, i64 }, align 8
  %_4 = alloca { ptr, i64 }, align 8
  store ptr %self.0, ptr %_4, align 8
  %0 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %self.1, ptr %0, align 8
  store ptr %other.0, ptr %_6, align 8
  %1 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 %other.1, ptr %1, align 8
  %self.01 = load ptr, ptr %_4, align 8, !nonnull !3, !align !4, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_4, i64 8
  %self.12 = load i64, ptr %2, align 8, !noundef !3
  %other.03 = load ptr, ptr %_6, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_6, i64 8
  %other.14 = load i64, ptr %3, align 8, !noundef !3
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %_0 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17hf2d9586e25ea8362E"(ptr align 1 %self.01, i64 %self.12, ptr align 1 %other.03, i64 %other.14)
  ret i1 %_0
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17ha35a8822df1161d4E"(ptr align 1 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index
  %1 = call { ptr, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$5index17ha673f3ce110abe9dE"(i64 %index, ptr align 1 %self.0, i64 %self.1, ptr align 8 %0)
  %_0.0 = extractvalue { ptr, i64 } %1, 0
  %_0.1 = extractvalue { ptr, i64 } %1, 1
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1
  ret { ptr, i64 } %3
}

; core::str::traits::<impl core::ops::index::Index<I> for str>::index
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hbb717183a362dcaaE"(ptr align 1 %self.0, i64 %self.1, i64 %index, ptr align 8 %0) unnamed_addr #0 {
start:
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::index
  %1 = call { ptr, i64 } @"_ZN4core3str6traits110_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeTo$LT$usize$GT$$GT$5index17he4262381ec1a26b5E"(i64 %index, ptr align 1 %self.0, i64 %self.1, ptr align 8 %0)
  %_0.0 = extractvalue { ptr, i64 } %1, 0
  %_0.1 = extractvalue { ptr, i64 } %1, 1
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1
  ret { ptr, i64 } %3
}

; core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17he21c76dc9236a822E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, i64 } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, i64 } %0, i64 %self.1, 1
  ret { ptr, i64 } %1
}

; core::str::pattern::simd_contains
; Function Attrs: inlinehint nonlazybind uwtable
define internal i8 @_ZN4core3str7pattern13simd_contains17hdb5b94c41ec2d3bcE(ptr align 1 %needle.0, i64 %needle.1, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %_153 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_152 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_146 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %tmp7 = alloca <1 x i8>, align 1
  %array6 = alloca [1 x i8], align 1
  %array5 = alloca [1 x i8], align 1
  %tmp = alloca <1 x i8>, align 1
  %array4 = alloca [1 x i8], align 1
  %array = alloca [1 x i8], align 1
  %_121 = alloca ptr, align 8
  %_120 = alloca i8, align 1
  %_116 = alloca i64, align 8
  %self3 = alloca i64, align 8
  %_110 = alloca %"{closure@core::iter::traits::double_ended::DoubleEndedIterator::rfind::check<usize, {closure@core::str::pattern::simd_contains::{closure#0}}>::{closure#0}}", align 8
  %self = alloca %"core::ops::control_flow::ControlFlow<usize>", align 8
  %_106 = alloca { i64, i16, i8, [5 x i8] }, align 8
  %_103 = alloca i64, align 8
  %_96 = alloca { i64, i16, i8, [5 x i8] }, align 8
  %_92 = alloca i64, align 8
  %_80 = alloca { i64, i16, i8, [5 x i8] }, align 8
  %_72 = alloca %"core::option::Option<usize>", align 8
  %iter2 = alloca %"core::ops::range::Range<usize>", align 8
  %_66 = alloca i64, align 8
  %_60 = alloca %"core::option::Option<usize>", align 8
  %iter = alloca %"core::ops::range::Range<usize>", align 8
  %masks = alloca [4 x i16], align 2
  %result = alloca i8, align 1
  %i = alloca i64, align 8
  %test_chunk = alloca %"{closure@core::str::pattern::simd_contains::{closure#3}}", align 8
  %check_mask = alloca %"{closure@core::str::pattern::simd_contains::{closure#2}}", align 8
  %second_probe = alloca <16 x i8>, align 16
  %first_probe1 = alloca <16 x i8>, align 16
  %f = alloca ptr, align 8
  %_32 = alloca %"core::slice::iter::Windows<'_, u8>", align 8
  %predicate = alloca %"{closure@core::str::pattern::simd_contains::{closure#0}}", align 8
  %_17 = alloca %"core::ops::range::Range<usize>", align 8
  %_15 = alloca %"core::option::Option<usize>", align 8
  %second_probe_offset = alloca i64, align 8
  %first_probe = alloca i8, align 1
  %needle = alloca { ptr, i64 }, align 8
  %_0 = alloca i8, align 1
  store ptr %needle.0, ptr %needle, align 8
  %1 = getelementptr inbounds i8, ptr %needle, i64 8
  store i64 %needle.1, ptr %1, align 8
  %2 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds i8, ptr %needle, i64 8
  %_6 = load i64, ptr %3, align 8, !noundef !3
  %_7 = icmp ult i64 0, %_6
  %4 = call i1 @llvm.expect.i1(i1 %_7, i1 true)
  br i1 %4, label %bb1, label %panic

bb1:                                              ; preds = %start
  %5 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %6 = getelementptr inbounds i8, ptr %needle, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
  %8 = getelementptr inbounds [0 x i8], ptr %5, i64 0, i64 0
  %9 = load i8, ptr %8, align 1, !noundef !3
  store i8 %9, ptr %first_probe, align 1
  %_10.0 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds i8, ptr %needle, i64 8
  %_10.1 = load i64, ptr %10, align 8, !noundef !3
  %last_byte_offset = sub i64 %_10.1, 1
  %_13.0 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %11 = getelementptr inbounds i8, ptr %needle, i64 8
  %_13.1 = load i64, ptr %11, align 8, !noundef !3
  %12 = icmp eq i64 %_13.1, 2
  br i1 %12, label %bb2, label %bb3

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 0, i64 %_6, ptr align 8 @alloc_3c6ac0fe3dd6734d2c8240f89aa476d6) #27
  unreachable

bb2:                                              ; preds = %bb1
  store i64 1, ptr %second_probe_offset, align 8
  br label %bb6

bb3:                                              ; preds = %bb1
  %_20.0 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %13 = getelementptr inbounds i8, ptr %needle, i64 8
  %_20.1 = load i64, ptr %13, align 8, !noundef !3
  %14 = call i64 @llvm.usub.sat.i64(i64 %_20.1, i64 4)
  store i64 %14, ptr %0, align 8
  %_18 = load i64, ptr %0, align 8, !noundef !3
  %_22.0 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %15 = getelementptr inbounds i8, ptr %needle, i64 8
  %_22.1 = load i64, ptr %15, align 8, !noundef !3
  store i64 %_18, ptr %_17, align 8
  %16 = getelementptr inbounds i8, ptr %_17, i64 8
  store i64 %_22.1, ptr %16, align 8
  %_24.0 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %17 = getelementptr inbounds i8, ptr %needle, i64 8
  %_24.1 = load i64, ptr %17, align 8, !noundef !3
  store ptr %_24.0, ptr %predicate, align 8
  %18 = getelementptr inbounds i8, ptr %predicate, i64 8
  store i64 %_24.1, ptr %18, align 8
  %19 = getelementptr inbounds %"{closure@core::str::pattern::simd_contains::{closure#0}}", ptr %predicate, i32 0, i32 1
  store ptr %first_probe, ptr %19, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_110, ptr align 8 %predicate, i64 24, i1 false)
; call core::iter::traits::double_ended::DoubleEndedIterator::try_rfold
  %20 = call { i64, i64 } @_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17hfbe21eb0e6e1eecbE(ptr align 8 %_17, ptr align 8 %_110)
  %21 = extractvalue { i64, i64 } %20, 0
  %22 = extractvalue { i64, i64 } %20, 1
  store i64 %21, ptr %self, align 8
  %23 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %22, ptr %23, align 8
  %_111 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %24 = icmp eq i64 %_111, 0
  br i1 %24, label %bb45, label %bb44

bb6:                                              ; preds = %bb4, %bb2
  %_29 = add i64 16, %last_byte_offset
  %_27 = icmp ult i64 %haystack.1, %_29
  br i1 %_27, label %bb7, label %bb8

bb45:                                             ; preds = %bb3
  %25 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %26 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %25, ptr %_15, align 8
  %27 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %26, ptr %27, align 8
  br label %bb46

bb44:                                             ; preds = %bb3
  %28 = getelementptr inbounds i8, ptr %self, i64 8
  %x = load i64, ptr %28, align 8, !noundef !3
  %29 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %x, ptr %29, align 8
  store i64 1, ptr %_15, align 8
  br label %bb46

bb46:                                             ; preds = %bb44, %bb45
  %_26 = load i64, ptr %_15, align 8, !range !9, !noundef !3
  %30 = icmp eq i64 %_26, 1
  br i1 %30, label %bb4, label %bb5

bb4:                                              ; preds = %bb46
  %31 = getelementptr inbounds i8, ptr %_15, i64 8
  %second_probe_offset8 = load i64, ptr %31, align 8, !noundef !3
  store i64 %second_probe_offset8, ptr %second_probe_offset, align 8
  br label %bb6

bb5:                                              ; preds = %bb46
  store i8 2, ptr %_0, align 1
  br label %bb40

bb8:                                              ; preds = %bb6
  %value = load i8, ptr %first_probe, align 1, !noundef !3
  %32 = getelementptr inbounds [1 x i8], ptr %array, i64 0, i64 0
  store i8 %value, ptr %32, align 1
  %33 = load i8, ptr %array, align 1
  store i8 %33, ptr %array4, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp, ptr align 1 %array4, i64 1, i1 false)
  %self9 = load <1 x i8>, ptr %tmp, align 1
  %34 = shufflevector <1 x i8> %self9, <1 x i8> %self9, <16 x i32> zeroinitializer
  store <16 x i8> %34, ptr %first_probe1, align 16
  %_41 = load i64, ptr %second_probe_offset, align 8, !noundef !3
  %35 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %36 = getelementptr inbounds i8, ptr %needle, i64 8
  %_42 = load i64, ptr %36, align 8, !noundef !3
  %_43 = icmp ult i64 %_41, %_42
  %37 = call i1 @llvm.expect.i1(i1 %_43, i1 true)
  br i1 %37, label %bb9, label %panic10

bb7:                                              ; preds = %bb6
  %_34.0 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %38 = getelementptr inbounds i8, ptr %needle, i64 8
  %_34.1 = load i64, ptr %38, align 8, !noundef !3
  %39 = icmp eq i64 %_34.1, 0
  br i1 %39, label %bb49, label %bb48

bb9:                                              ; preds = %bb8
  %40 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %41 = getelementptr inbounds i8, ptr %needle, i64 8
  %42 = load i64, ptr %41, align 8, !noundef !3
  %43 = getelementptr inbounds [0 x i8], ptr %40, i64 0, i64 %_41
  %value11 = load i8, ptr %43, align 1, !noundef !3
  %44 = getelementptr inbounds [1 x i8], ptr %array5, i64 0, i64 0
  store i8 %value11, ptr %44, align 1
  %45 = load i8, ptr %array5, align 1
  store i8 %45, ptr %array6, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp7, ptr align 1 %array6, i64 1, i1 false)
  %self12 = load <1 x i8>, ptr %tmp7, align 1
  %46 = shufflevector <1 x i8> %self12, <1 x i8> %self12, <16 x i32> zeroinitializer
  store <16 x i8> %46, ptr %second_probe, align 16
  %self.0 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %47 = getelementptr inbounds i8, ptr %needle, i64 8
  %self.1 = load i64, ptr %47, align 8, !noundef !3
  %_140 = icmp ugt i64 1, %self.1
  br i1 %_140, label %bb56, label %bb57

panic10:                                          ; preds = %bb8
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %_41, i64 %_42, ptr align 8 @alloc_fdd0e0624533660c537b92012853bf17) #27
  unreachable

bb57:                                             ; preds = %bb9
  store ptr %self.0, ptr %_146, align 8
  %48 = getelementptr inbounds i8, ptr %_146, i64 8
  store i64 %self.1, ptr %48, align 8
  %49 = getelementptr inbounds i8, ptr %_146, i64 8
  %self13 = load i64, ptr %49, align 8, !noundef !3
  %new_len = sub nuw i64 %self13, 1
  %data = getelementptr inbounds i8, ptr %self.0, i64 1
  store ptr %data, ptr %_153, align 8
  %50 = getelementptr inbounds i8, ptr %_153, i64 8
  store i64 %new_len, ptr %50, align 8
  %51 = load ptr, ptr %_153, align 8, !noundef !3
  %52 = getelementptr inbounds i8, ptr %_153, i64 8
  %53 = load i64, ptr %52, align 8, !noundef !3
  store ptr %51, ptr %_152, align 8
  %54 = getelementptr inbounds i8, ptr %_152, i64 8
  store i64 %53, ptr %54, align 8
  %trimmed_needle.0 = load ptr, ptr %_152, align 8, !noundef !3
  %55 = getelementptr inbounds i8, ptr %_152, i64 8
  %trimmed_needle.1 = load i64, ptr %55, align 8, !noundef !3
  store ptr %haystack.0, ptr %check_mask, align 8
  %56 = getelementptr inbounds i8, ptr %check_mask, i64 8
  store i64 %haystack.1, ptr %56, align 8
  %57 = getelementptr inbounds %"{closure@core::str::pattern::simd_contains::{closure#2}}", ptr %check_mask, i32 0, i32 1
  store ptr %trimmed_needle.0, ptr %57, align 8
  %58 = getelementptr inbounds i8, ptr %57, i64 8
  store i64 %trimmed_needle.1, ptr %58, align 8
  store ptr %haystack.0, ptr %test_chunk, align 8
  %59 = getelementptr inbounds i8, ptr %test_chunk, i64 8
  store i64 %haystack.1, ptr %59, align 8
  %60 = getelementptr inbounds %"{closure@core::str::pattern::simd_contains::{closure#3}}", ptr %test_chunk, i32 0, i32 1
  store ptr %second_probe_offset, ptr %60, align 8
  %61 = getelementptr inbounds %"{closure@core::str::pattern::simd_contains::{closure#3}}", ptr %test_chunk, i32 0, i32 2
  store ptr %first_probe1, ptr %61, align 8
  %62 = getelementptr inbounds %"{closure@core::str::pattern::simd_contains::{closure#3}}", ptr %test_chunk, i32 0, i32 3
  store ptr %second_probe, ptr %62, align 8
  store i64 0, ptr %i, align 8
  store i8 0, ptr %result, align 1
  br label %bb10

bb56:                                             ; preds = %bb9
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17hd7aab39f3024a402E(i64 1, i64 %self.1, ptr align 8 @alloc_23feb004cdb0c8c8b491a13830156679) #27
  unreachable

bb10:                                             ; preds = %bb20, %bb57
  %_56 = load i64, ptr %i, align 8, !noundef !3
  %_55 = add i64 %_56, %last_byte_offset
  %_54 = add i64 %_55, 64
  %_53 = icmp ult i64 %_54, %haystack.1
  br i1 %_53, label %bb11, label %bb25

bb25:                                             ; preds = %bb10
  br label %bb26

bb11:                                             ; preds = %bb10
  %63 = load i8, ptr %result, align 1, !range !10, !noundef !3
  %_57 = trunc i8 %63 to i1
  br i1 %_57, label %bb26, label %bb12

bb26:                                             ; preds = %bb11, %bb25
  br label %bb27

bb12:                                             ; preds = %bb11
  %64 = getelementptr inbounds [4 x i16], ptr %masks, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 2 %64, i8 0, i64 8, i1 false)
  store i64 0, ptr %iter, align 8
  %65 = getelementptr inbounds i8, ptr %iter, i64 8
  store i64 4, ptr %65, align 8
  br label %bb13

bb13:                                             ; preds = %bb17, %bb12
  %other = getelementptr inbounds i8, ptr %iter, i64 8
  %_159 = load i64, ptr %iter, align 8, !noundef !3
  %66 = getelementptr inbounds i8, ptr %iter, i64 8
  %_160 = load i64, ptr %66, align 8, !noundef !3
  %_154 = icmp ult i64 %_159, %_160
  br i1 %_154, label %bb58, label %bb60

bb60:                                             ; preds = %bb13
  %67 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %68 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %67, ptr %_60, align 8
  %69 = getelementptr inbounds i8, ptr %_60, i64 8
  store i64 %68, ptr %69, align 8
  br label %bb61

bb58:                                             ; preds = %bb13
  %old = load i64, ptr %iter, align 8, !noundef !3
; call <usize as core::iter::range::Step>::forward_unchecked
  %_158 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hfc82dfa8f57a0e81E"(i64 %old, i64 1)
  store i64 %_158, ptr %iter, align 8
  %70 = getelementptr inbounds i8, ptr %_60, i64 8
  store i64 %old, ptr %70, align 8
  store i64 1, ptr %_60, align 8
  br label %bb61

bb61:                                             ; preds = %bb58, %bb60
  %_62 = load i64, ptr %_60, align 8, !range !9, !noundef !3
  %71 = icmp eq i64 %_62, 0
  br i1 %71, label %bb15, label %bb14

bb15:                                             ; preds = %bb61
  store i64 0, ptr %iter2, align 8
  %72 = getelementptr inbounds i8, ptr %iter2, i64 8
  store i64 4, ptr %72, align 8
  br label %bb18

bb14:                                             ; preds = %bb61
  %73 = getelementptr inbounds i8, ptr %_60, i64 8
  %j17 = load i64, ptr %73, align 8, !noundef !3
  %_68 = load i64, ptr %i, align 8, !noundef !3
  %_69 = mul i64 %j17, 16
  %_67 = add i64 %_68, %_69
  store i64 %_67, ptr %_66, align 8
  %74 = load i64, ptr %_66, align 8, !noundef !3
; call core::str::pattern::simd_contains::{{closure}}
  %_64 = call i16 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h6dbc51088baf12efE"(ptr align 8 %test_chunk, i64 %74)
  %_70 = icmp ult i64 %j17, 4
  %75 = call i1 @llvm.expect.i1(i1 %_70, i1 true)
  br i1 %75, label %bb17, label %panic18

bb18:                                             ; preds = %bb24, %bb15
  %other14 = getelementptr inbounds i8, ptr %iter2, i64 8
  %_166 = load i64, ptr %iter2, align 8, !noundef !3
  %76 = getelementptr inbounds i8, ptr %iter2, i64 8
  %_167 = load i64, ptr %76, align 8, !noundef !3
  %_161 = icmp ult i64 %_166, %_167
  br i1 %_161, label %bb62, label %bb64

bb64:                                             ; preds = %bb18
  %77 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %78 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %77, ptr %_72, align 8
  %79 = getelementptr inbounds i8, ptr %_72, i64 8
  store i64 %78, ptr %79, align 8
  br label %bb65

bb62:                                             ; preds = %bb18
  %old15 = load i64, ptr %iter2, align 8, !noundef !3
; call <usize as core::iter::range::Step>::forward_unchecked
  %_165 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hfc82dfa8f57a0e81E"(i64 %old15, i64 1)
  store i64 %_165, ptr %iter2, align 8
  %80 = getelementptr inbounds i8, ptr %_72, i64 8
  store i64 %old15, ptr %80, align 8
  store i64 1, ptr %_72, align 8
  br label %bb65

bb65:                                             ; preds = %bb62, %bb64
  %_74 = load i64, ptr %_72, align 8, !range !9, !noundef !3
  %81 = icmp eq i64 %_74, 0
  br i1 %81, label %bb20, label %bb19

bb20:                                             ; preds = %bb65
  %82 = load i64, ptr %i, align 8, !noundef !3
  %83 = add i64 %82, 64
  store i64 %83, ptr %i, align 8
  br label %bb10

bb19:                                             ; preds = %bb65
  %84 = getelementptr inbounds i8, ptr %_72, i64 8
  %j = load i64, ptr %84, align 8, !noundef !3
  %_77 = icmp ult i64 %j, 4
  %85 = call i1 @llvm.expect.i1(i1 %_77, i1 true)
  br i1 %85, label %bb21, label %panic16

bb21:                                             ; preds = %bb19
  %86 = getelementptr inbounds [4 x i16], ptr %masks, i64 0, i64 %j
  %mask = load i16, ptr %86, align 2, !noundef !3
  %87 = icmp eq i16 %mask, 0
  br i1 %87, label %bb24, label %bb22

panic16:                                          ; preds = %bb19
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %j, i64 4, ptr align 8 @alloc_3f514259b7ac91311602ece356074d5c) #27
  unreachable

bb24:                                             ; preds = %bb22, %bb21
  br label %bb18

bb22:                                             ; preds = %bb21
  %_82 = load i64, ptr %i, align 8, !noundef !3
  %_83 = mul i64 %j, 16
  %_81 = add i64 %_82, %_83
  %88 = load i8, ptr %result, align 1, !range !10, !noundef !3
  %_84 = trunc i8 %88 to i1
  store i64 %_81, ptr %_80, align 8
  %89 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, ptr %_80, i32 0, i32 1
  store i16 %mask, ptr %89, align 8
  %90 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, ptr %_80, i32 0, i32 2
  %91 = zext i1 %_84 to i8
  store i8 %91, ptr %90, align 2
  %92 = load i64, ptr %_80, align 8, !noundef !3
  %93 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, ptr %_80, i32 0, i32 1
  %94 = load i16, ptr %93, align 8, !noundef !3
  %95 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, ptr %_80, i32 0, i32 2
  %96 = load i8, ptr %95, align 2, !range !10, !noundef !3
  %97 = trunc i8 %96 to i1
; call core::str::pattern::simd_contains::{{closure}}
  %_78 = call zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17hbaa9513d223fb317E"(ptr align 8 %check_mask, i64 %92, i16 %94, i1 zeroext %97)
  %98 = load i8, ptr %result, align 1, !range !10, !noundef !3
  %99 = trunc i8 %98 to i1
  %100 = or i1 %99, %_78
  %101 = zext i1 %100 to i8
  store i8 %101, ptr %result, align 1
  br label %bb24

bb17:                                             ; preds = %bb14
  %102 = getelementptr inbounds [4 x i16], ptr %masks, i64 0, i64 %j17
  store i16 %_64, ptr %102, align 2
  br label %bb13

panic18:                                          ; preds = %bb14
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %j17, i64 4, ptr align 8 @alloc_bbfb1b4c5e9ec71166cc885cd62b50a8) #27
  unreachable

bb27:                                             ; preds = %bb33, %bb26
  %_88 = load i64, ptr %i, align 8, !noundef !3
  %_87 = add i64 %_88, %last_byte_offset
  %_86 = add i64 %_87, 16
  %_85 = icmp ult i64 %_86, %haystack.1
  br i1 %_85, label %bb28, label %bb34

bb34:                                             ; preds = %bb27
  br label %bb35

bb28:                                             ; preds = %bb27
  %103 = load i8, ptr %result, align 1, !range !10, !noundef !3
  %_89 = trunc i8 %103 to i1
  br i1 %_89, label %bb35, label %bb29

bb35:                                             ; preds = %bb28, %bb34
  %_100 = sub i64 %haystack.1, %last_byte_offset
  %i20 = sub i64 %_100, 16
  store i64 %i20, ptr %_103, align 8
  %104 = load i64, ptr %_103, align 8, !noundef !3
; call core::str::pattern::simd_contains::{{closure}}
  %mask21 = call i16 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h6dbc51088baf12efE"(ptr align 8 %test_chunk, i64 %104)
  %105 = icmp eq i16 %mask21, 0
  br i1 %105, label %bb39, label %bb37

bb29:                                             ; preds = %bb28
  %_93 = load i64, ptr %i, align 8, !noundef !3
  store i64 %_93, ptr %_92, align 8
  %106 = load i64, ptr %_92, align 8, !noundef !3
; call core::str::pattern::simd_contains::{{closure}}
  %mask19 = call i16 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h6dbc51088baf12efE"(ptr align 8 %test_chunk, i64 %106)
  %107 = icmp eq i16 %mask19, 0
  br i1 %107, label %bb33, label %bb31

bb33:                                             ; preds = %bb31, %bb29
  %108 = load i64, ptr %i, align 8, !noundef !3
  %109 = add i64 %108, 16
  store i64 %109, ptr %i, align 8
  br label %bb27

bb31:                                             ; preds = %bb29
  %_97 = load i64, ptr %i, align 8, !noundef !3
  %110 = load i8, ptr %result, align 1, !range !10, !noundef !3
  %_98 = trunc i8 %110 to i1
  store i64 %_97, ptr %_96, align 8
  %111 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, ptr %_96, i32 0, i32 1
  store i16 %mask19, ptr %111, align 8
  %112 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, ptr %_96, i32 0, i32 2
  %113 = zext i1 %_98 to i8
  store i8 %113, ptr %112, align 2
  %114 = load i64, ptr %_96, align 8, !noundef !3
  %115 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, ptr %_96, i32 0, i32 1
  %116 = load i16, ptr %115, align 8, !noundef !3
  %117 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, ptr %_96, i32 0, i32 2
  %118 = load i8, ptr %117, align 2, !range !10, !noundef !3
  %119 = trunc i8 %118 to i1
; call core::str::pattern::simd_contains::{{closure}}
  %_94 = call zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17hbaa9513d223fb317E"(ptr align 8 %check_mask, i64 %114, i16 %116, i1 zeroext %119)
  %120 = load i8, ptr %result, align 1, !range !10, !noundef !3
  %121 = trunc i8 %120 to i1
  %122 = or i1 %121, %_94
  %123 = zext i1 %122 to i8
  store i8 %123, ptr %result, align 1
  br label %bb33

bb39:                                             ; preds = %bb37, %bb35
  %124 = load i8, ptr %result, align 1, !range !10, !noundef !3
  %_108 = trunc i8 %124 to i1
  %125 = zext i1 %_108 to i8
  store i8 %125, ptr %_0, align 1
  br label %bb41

bb37:                                             ; preds = %bb35
  %126 = load i8, ptr %result, align 1, !range !10, !noundef !3
  %_107 = trunc i8 %126 to i1
  store i64 %i20, ptr %_106, align 8
  %127 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, ptr %_106, i32 0, i32 1
  store i16 %mask21, ptr %127, align 8
  %128 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, ptr %_106, i32 0, i32 2
  %129 = zext i1 %_107 to i8
  store i8 %129, ptr %128, align 2
  %130 = load i64, ptr %_106, align 8, !noundef !3
  %131 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, ptr %_106, i32 0, i32 1
  %132 = load i16, ptr %131, align 8, !noundef !3
  %133 = getelementptr inbounds { i64, i16, i8, [5 x i8] }, ptr %_106, i32 0, i32 2
  %134 = load i8, ptr %133, align 2, !range !10, !noundef !3
  %135 = trunc i8 %134 to i1
; call core::str::pattern::simd_contains::{{closure}}
  %_104 = call zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17hbaa9513d223fb317E"(ptr align 8 %check_mask, i64 %130, i16 %132, i1 zeroext %135)
  %136 = load i8, ptr %result, align 1, !range !10, !noundef !3
  %137 = trunc i8 %136 to i1
  %138 = or i1 %137, %_104
  %139 = zext i1 %138 to i8
  store i8 %139, ptr %result, align 1
  br label %bb39

bb41:                                             ; preds = %bb40, %bb39
  %140 = load i8, ptr %_0, align 1, !range !18, !noundef !3
  ret i8 %140

bb49:                                             ; preds = %bb7
  store i64 0, ptr %self3, align 8
  br label %bb47

bb48:                                             ; preds = %bb7
  store i64 %_34.1, ptr %_116, align 8
  %141 = load i64, ptr %_116, align 8, !range !24, !noundef !3
  store i64 %141, ptr %self3, align 8
  br label %bb47

bb47:                                             ; preds = %bb48, %bb49
  %142 = load i64, ptr %self3, align 8, !noundef !3
  %143 = icmp eq i64 %142, 0
  %_117 = select i1 %143, i64 0, i64 1
  %144 = icmp eq i64 %_117, 0
  br i1 %144, label %bb50, label %bb51

bb50:                                             ; preds = %bb47
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17h465b3d6aa69dcb6dE(ptr align 1 @alloc_d0b5540d38aa67683bd942cb6db4a43b, i64 28, ptr align 8 @alloc_6b2fe0d37a3e165ae1d6770c41c53574) #27
  unreachable

bb51:                                             ; preds = %bb47
  %size = load i64, ptr %self3, align 8, !range !24, !noundef !3
  store ptr %haystack.0, ptr %_32, align 8
  %145 = getelementptr inbounds i8, ptr %_32, i64 8
  store i64 %haystack.1, ptr %145, align 8
  %146 = getelementptr inbounds %"core::slice::iter::Windows<'_, u8>", ptr %_32, i32 0, i32 1
  store i64 %size, ptr %146, align 8
  store ptr %needle, ptr %f, align 8
  %147 = load ptr, ptr %f, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %147, ptr %_121, align 8
  %148 = load ptr, ptr %_121, align 8, !nonnull !3, !align !5, !noundef !3
; call core::iter::traits::iterator::Iterator::try_fold
  %149 = call zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hec297bc4d19a340cE(ptr align 8 %_32, ptr align 8 %148)
  %150 = zext i1 %149 to i8
  store i8 %150, ptr %_120, align 1
; call <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
  %_30 = call zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf62ef10f6dfb7828E"(ptr align 1 %_120, ptr align 1 @alloc_8821998f047ca62cad40e6bc4e4d87c4)
  %151 = zext i1 %_30 to i8
  store i8 %151, ptr %_0, align 1
  br label %bb40

bb40:                                             ; preds = %bb5, %bb51
  br label %bb41

bb66:                                             ; No predecessors!
  unreachable
}

; core::str::pattern::simd_contains::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h535e8ecb57e06f3cE"(ptr align 8 %_1, ptr align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %c = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %c, align 8
  %2 = getelementptr inbounds i8, ptr %c, i64 8
  store i64 %1, ptr %2, align 8
  %other = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  %self.0 = load ptr, ptr %c, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds i8, ptr %c, i64 8
  %self.1 = load i64, ptr %3, align 8, !noundef !3
  %other.0 = load ptr, ptr %other, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %other, i64 8
  %other.1 = load i64, ptr %4, align 8, !noundef !3
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %_0 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17hf2d9586e25ea8362E"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %other.0, i64 %other.1)
  ret i1 %_0
}

; core::str::pattern::simd_contains::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i16 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h6dbc51088baf12efE"(ptr align 8 %_1, i64 %idx) unnamed_addr #0 {
start:
  %0 = alloca <16 x i8>, align 16
  %1 = alloca <16 x i8>, align 16
  %2 = alloca <16 x i8>, align 16
  %3 = alloca <16 x i8>, align 16
  %both = alloca <16 x i8>, align 16
  %tmp1 = alloca <16 x i8>, align 16
  %tmp = alloca <16 x i8>, align 16
  %self.0 = load ptr, ptr %_1, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_1, i64 8
  %self.1 = load i64, ptr %4, align 8, !noundef !3
  %self = getelementptr inbounds i8, ptr %self.0, i64 %idx
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp, ptr align 1 %self, i64 16, i1 false)
  %self2 = load <16 x i8>, ptr %tmp, align 16
  %self3 = getelementptr inbounds i8, ptr %self.0, i64 %idx
  %5 = getelementptr inbounds %"{closure@core::str::pattern::simd_contains::{closure#3}}", ptr %_1, i32 0, i32 1
  %_15 = load ptr, ptr %5, align 8, !nonnull !3, !align !5, !noundef !3
  %count = load i64, ptr %_15, align 8, !noundef !3
  %self4 = getelementptr inbounds i8, ptr %self3, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp1, ptr align 1 %self4, i64 16, i1 false)
  %self5 = load <16 x i8>, ptr %tmp1, align 16
  %6 = getelementptr inbounds %"{closure@core::str::pattern::simd_contains::{closure#3}}", ptr %_1, i32 0, i32 2
  %_16 = load ptr, ptr %6, align 8, !nonnull !3, !align !25, !noundef !3
  %other = load <16 x i8>, ptr %_16, align 16
  %7 = icmp eq <16 x i8> %self2, %other
  %8 = sext <16 x i1> %7 to <16 x i8>
  store <16 x i8> %8, ptr %3, align 16
  %eq_first = load <16 x i8>, ptr %3, align 16
  %9 = getelementptr inbounds %"{closure@core::str::pattern::simd_contains::{closure#3}}", ptr %_1, i32 0, i32 3
  %_17 = load ptr, ptr %9, align 8, !nonnull !3, !align !25, !noundef !3
  %other6 = load <16 x i8>, ptr %_17, align 16
  %10 = icmp eq <16 x i8> %self5, %other6
  %11 = sext <16 x i1> %10 to <16 x i8>
  store <16 x i8> %11, ptr %2, align 16
  %eq_last = load <16 x i8>, ptr %2, align 16
  %12 = and <16 x i8> %eq_first, %eq_last
  store <16 x i8> %12, ptr %1, align 16
  %_37 = load <16 x i8>, ptr %1, align 16
  store <16 x i8> %_37, ptr %both, align 16
  %13 = load <16 x i8>, ptr %both, align 16
  store <16 x i8> %13, ptr %0, align 16
; call core::core_simd::masks::mask_impl::Mask<T,_>::to_bitmask_integer
  %_13 = call i64 @"_ZN4core9core_simd5masks9mask_impl17Mask$LT$T$C$_$GT$18to_bitmask_integer17h16ca57d3c768a93dE"(ptr align 16 %0)
  %mask = trunc i64 %_13 to i16
  ret i16 %mask
}

; core::str::pattern::simd_contains::{{closure}}
; Function Attrs: cold inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17hbaa9513d223fb317E"(ptr align 8 %_1, i64 %idx, i16 %mask, i1 zeroext %skip) unnamed_addr #7 {
start:
  %0 = alloca i16, align 2
  %_38 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_37 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_29 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_23 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %mask1 = alloca i16, align 2
  %_0 = alloca i8, align 1
  br i1 %skip, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i16 %mask, ptr %mask1, align 2
  br label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb10

bb3:                                              ; preds = %bb7, %bb2
  %_6 = load i16, ptr %mask1, align 2, !noundef !3
  %1 = icmp eq i16 %_6, 0
  br i1 %1, label %bb8, label %bb4

bb8:                                              ; preds = %bb3
  store i8 0, ptr %_0, align 1
  br label %bb9

bb4:                                              ; preds = %bb3
  %self = load i16, ptr %mask1, align 2, !noundef !3
  %2 = call i16 @llvm.cttz.i16(i16 %self, i1 false)
  store i16 %2, ptr %0, align 2
  %_19 = load i16, ptr %0, align 2, !noundef !3
  %trailing = zext i16 %_19 to i32
  %_11 = zext i32 %trailing to i64
  %_10 = add i64 %idx, %_11
  %offset = add i64 %_10, 1
  %self.0 = load ptr, ptr %_1, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_1, i64 8
  %self.1 = load i64, ptr %3, align 8, !noundef !3
  store ptr %self.0, ptr %_23, align 8
  %4 = getelementptr inbounds i8, ptr %_23, i64 8
  store i64 %self.1, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_23, i64 8
  %self2 = load i64, ptr %5, align 8, !noundef !3
  %new_len = sub nuw i64 %self2, %offset
  %data = getelementptr inbounds i8, ptr %self.0, i64 %offset
  store ptr %data, ptr %_30, align 8
  %6 = getelementptr inbounds i8, ptr %_30, i64 8
  store i64 %new_len, ptr %6, align 8
  %7 = load ptr, ptr %_30, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_30, i64 8
  %9 = load i64, ptr %8, align 8, !noundef !3
  store ptr %7, ptr %_29, align 8
  %10 = getelementptr inbounds i8, ptr %_29, i64 8
  store i64 %9, ptr %10, align 8
  %self.03 = load ptr, ptr %_29, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_29, i64 8
  %self.14 = load i64, ptr %11, align 8, !noundef !3
  %12 = getelementptr inbounds %"{closure@core::str::pattern::simd_contains::{closure#2}}", ptr %_1, i32 0, i32 1
  %_18.0 = load ptr, ptr %12, align 8, !nonnull !3, !align !4, !noundef !3
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  %_18.1 = load i64, ptr %13, align 8, !noundef !3
  %new_len5 = sub nuw i64 %_18.1, 0
  store ptr %self.03, ptr %_38, align 8
  %14 = getelementptr inbounds i8, ptr %_38, i64 8
  store i64 %new_len5, ptr %14, align 8
  %15 = load ptr, ptr %_38, align 8, !noundef !3
  %16 = getelementptr inbounds i8, ptr %_38, i64 8
  %17 = load i64, ptr %16, align 8, !noundef !3
  store ptr %15, ptr %_37, align 8
  %18 = getelementptr inbounds i8, ptr %_37, i64 8
  store i64 %17, ptr %18, align 8
  %sub.0 = load ptr, ptr %_37, align 8, !noundef !3
  %19 = getelementptr inbounds i8, ptr %_37, i64 8
  %sub.1 = load i64, ptr %19, align 8, !noundef !3
; call core::str::pattern::small_slice_eq
  %_13 = call zeroext i1 @_ZN4core3str7pattern14small_slice_eq17h43887858594f9c75E(ptr align 1 %sub.0, i64 %sub.1, ptr align 1 %_18.0, i64 %_18.1)
  br i1 %_13, label %bb6, label %bb7

bb9:                                              ; preds = %bb6, %bb8
  br label %bb10

bb7:                                              ; preds = %bb4
  %20 = trunc i32 %trailing to i16
  %21 = and i16 %20, 15
  %_16 = shl i16 1, %21
  %_15 = xor i16 %_16, -1
  %22 = load i16, ptr %mask1, align 2, !noundef !3
  %23 = and i16 %22, %_15
  store i16 %23, ptr %mask1, align 2
  br label %bb3

bb6:                                              ; preds = %bb4
  store i8 1, ptr %_0, align 1
  br label %bb9

bb10:                                             ; preds = %bb1, %bb9
  %24 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %25 = trunc i8 %24 to i1
  ret i1 %25
}

; core::str::pattern::simd_contains::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17hc67dc936aaa00ffcE"(ptr align 8 %_1, ptr align 8 %_2) unnamed_addr #0 {
start:
  %idx = load i64, ptr %_2, align 8, !noundef !3
  %_8.0 = load ptr, ptr %_1, align 8, !nonnull !3, !align !4, !noundef !3
  %0 = getelementptr inbounds i8, ptr %_1, i64 8
  %_8.1 = load i64, ptr %0, align 8, !noundef !3
  %_6 = icmp ult i64 %idx, %_8.1
  %1 = call i1 @llvm.expect.i1(i1 %_6, i1 true)
  br i1 %1, label %bb1, label %panic

bb1:                                              ; preds = %start
  %_9.0 = load ptr, ptr %_1, align 8, !nonnull !3, !align !4, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_1, i64 8
  %_9.1 = load i64, ptr %2, align 8, !noundef !3
  %3 = getelementptr inbounds [0 x i8], ptr %_9.0, i64 0, i64 %idx
  %_4 = load i8, ptr %3, align 1, !noundef !3
  %4 = getelementptr inbounds %"{closure@core::str::pattern::simd_contains::{closure#0}}", ptr %_1, i32 0, i32 1
  %_10 = load ptr, ptr %4, align 8, !nonnull !3, !align !4, !noundef !3
  %_7 = load i8, ptr %_10, align 1, !noundef !3
  %_0 = icmp ne i8 %_4, %_7
  ret i1 %_0

panic:                                            ; preds = %start
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %idx, i64 %_8.1, ptr align 8 @alloc_4c5c515d410238309323d0807579fcf6) #27
  unreachable
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern14TwoWaySearcher4next17h24e5d5ba5981a663E(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_0, ptr align 8 %self, ptr align 1 %haystack.0, i64 %haystack.1, ptr align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #0 {
start:
  %_69 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_44 = alloca %"core::option::Option<usize>", align 8
  %iter6 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>", align 8
  %self5 = alloca %"core::ops::range::Range<usize>", align 8
  %self4 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>", align 8
  %start3 = alloca i64, align 8
  %_24 = alloca %"core::option::Option<usize>", align 8
  %iter = alloca %"core::ops::range::Range<usize>", align 8
  %self2 = alloca %"core::ops::range::Range<usize>", align 8
  %start1 = alloca i64, align 8
  %_8 = alloca ptr, align 8
  %0 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %old_pos = load i64, ptr %0, align 8, !noundef !3
  %needle_last = sub i64 %needle.1, 1
  br label %bb1

bb1:                                              ; preds = %bb43, %start
  %1 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %_10 = load i64, ptr %1, align 8, !noundef !3
  %index = add i64 %_10, %needle_last
  %_60 = icmp ult i64 %index, %haystack.1
  br i1 %_60, label %bb45, label %bb46

bb46:                                             ; preds = %bb1
  store ptr null, ptr %_8, align 8
  br label %bb47

bb45:                                             ; preds = %bb1
  store ptr %haystack.0, ptr %_69, align 8
  %2 = getelementptr inbounds i8, ptr %_69, i64 8
  store i64 %haystack.1, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %_69, i64 8
  %_67 = load i64, ptr %3, align 8, !noundef !3
  %cond = icmp ult i64 %index, %_67
  call void @llvm.assume(i1 %cond)
  %_63 = getelementptr inbounds i8, ptr %haystack.0, i64 %index
  store ptr %_63, ptr %_8, align 8
  br label %bb47

bb47:                                             ; preds = %bb45, %bb46
  %4 = load ptr, ptr %_8, align 8, !noundef !3
  %5 = ptrtoint ptr %4 to i64
  %6 = icmp eq i64 %5, 0
  %_11 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_11, 0
  br i1 %7, label %bb2, label %bb3

bb2:                                              ; preds = %bb47
  %8 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  store i64 %haystack.1, ptr %8, align 8
  %9 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %_13 = load i64, ptr %9, align 8, !noundef !3
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hef60b80cf46bac51E"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_0, i64 %old_pos, i64 %_13)
  br label %bb44

bb3:                                              ; preds = %bb47
  %_59 = load ptr, ptr %_8, align 8, !nonnull !3, !align !4, !noundef !3
  %tail_byte = load i8, ptr %_59, align 1, !noundef !3
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_14 = call zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h3b53a318bcdd5331E"()
  br i1 %_14, label %bb6, label %bb10

bb44:                                             ; preds = %bb7, %bb40, %bb2
  ret void

bb10:                                             ; preds = %bb9, %bb3
  %10 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 3
  %_73 = load i64, ptr %10, align 8, !noundef !3
  %_75 = and i8 %tail_byte, 63
  %_74 = zext i8 %_75 to i64
  %11 = and i64 %_74, 63
  %_72 = lshr i64 %_73, %11
  %_71 = and i64 %_72, 1
  %12 = icmp eq i64 %_71, 0
  br i1 %12, label %bb12, label %bb11

bb6:                                              ; preds = %bb3
  %13 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %_16 = load i64, ptr %13, align 8, !noundef !3
  %_15 = icmp ne i64 %old_pos, %_16
  br i1 %_15, label %bb7, label %bb9

bb9:                                              ; preds = %bb6
  br label %bb10

bb7:                                              ; preds = %bb6
  %14 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %_17 = load i64, ptr %14, align 8, !noundef !3
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hef60b80cf46bac51E"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_0, i64 %old_pos, i64 %_17)
  br label %bb44

bb12:                                             ; preds = %bb10
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %16 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %17 = load i64, ptr %16, align 8, !noundef !3
  %18 = add i64 %17, %needle.1
  store i64 %18, ptr %15, align 8
  br i1 %long_period, label %bb14, label %bb13

bb11:                                             ; preds = %bb10
  br i1 %long_period, label %bb15, label %bb16

bb13:                                             ; preds = %bb12
  %19 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 6
  store i64 0, ptr %19, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  br label %bb43

bb43:                                             ; preds = %bb42, %bb14
  br label %bb1

bb16:                                             ; preds = %bb11
  %v1 = load i64, ptr %self, align 8, !noundef !3
  %20 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 6
  %v2 = load i64, ptr %20, align 8, !noundef !3
; call core::cmp::max_by
  %21 = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 %v1, i64 %v2)
  store i64 %21, ptr %start1, align 8
  br label %bb17

bb15:                                             ; preds = %bb11
  %22 = load i64, ptr %self, align 8, !noundef !3
  store i64 %22, ptr %start1, align 8
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  %_22 = load i64, ptr %start1, align 8, !noundef !3
  store i64 %_22, ptr %self2, align 8
  %23 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %needle.1, ptr %23, align 8
  %24 = load i64, ptr %self2, align 8, !noundef !3
  %25 = getelementptr inbounds i8, ptr %self2, i64 8
  %26 = load i64, ptr %25, align 8, !noundef !3
  store i64 %24, ptr %iter, align 8
  %27 = getelementptr inbounds i8, ptr %iter, i64 8
  store i64 %26, ptr %27, align 8
  br label %bb18

bb18:                                             ; preds = %bb26, %bb17
  %other = getelementptr inbounds i8, ptr %iter, i64 8
  %_81 = load i64, ptr %iter, align 8, !noundef !3
  %28 = getelementptr inbounds i8, ptr %iter, i64 8
  %_82 = load i64, ptr %28, align 8, !noundef !3
  %_76 = icmp ult i64 %_81, %_82
  br i1 %_76, label %bb49, label %bb51

bb51:                                             ; preds = %bb18
  %29 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %30 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %29, ptr %_24, align 8
  %31 = getelementptr inbounds i8, ptr %_24, i64 8
  store i64 %30, ptr %31, align 8
  br label %bb52

bb49:                                             ; preds = %bb18
  %old = load i64, ptr %iter, align 8, !noundef !3
; call <usize as core::iter::range::Step>::forward_unchecked
  %_80 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hfc82dfa8f57a0e81E"(i64 %old, i64 1)
  store i64 %_80, ptr %iter, align 8
  %32 = getelementptr inbounds i8, ptr %_24, i64 8
  store i64 %old, ptr %32, align 8
  store i64 1, ptr %_24, align 8
  br label %bb52

bb52:                                             ; preds = %bb49, %bb51
  %_26 = load i64, ptr %_24, align 8, !range !9, !noundef !3
  %33 = icmp eq i64 %_26, 0
  br i1 %33, label %bb20, label %bb19

bb20:                                             ; preds = %bb52
  br i1 %long_period, label %bb27, label %bb28

bb19:                                             ; preds = %bb52
  %34 = getelementptr inbounds i8, ptr %_24, i64 8
  %i8 = load i64, ptr %34, align 8, !noundef !3
  %_30 = icmp ult i64 %i8, %needle.1
  %35 = call i1 @llvm.expect.i1(i1 %_30, i1 true)
  br i1 %35, label %bb21, label %panic9

bb28:                                             ; preds = %bb20
  %36 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 6
  %37 = load i64, ptr %36, align 8, !noundef !3
  store i64 %37, ptr %start3, align 8
  br label %bb29

bb27:                                             ; preds = %bb20
  store i64 0, ptr %start3, align 8
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %_41 = load i64, ptr %start3, align 8, !noundef !3
  %_42 = load i64, ptr %self, align 8, !noundef !3
  store i64 %_41, ptr %self5, align 8
  %38 = getelementptr inbounds i8, ptr %self5, i64 8
  store i64 %_42, ptr %38, align 8
  %39 = load i64, ptr %self5, align 8, !noundef !3
  %40 = getelementptr inbounds i8, ptr %self5, i64 8
  %41 = load i64, ptr %40, align 8, !noundef !3
  store i64 %39, ptr %self4, align 8
  %42 = getelementptr inbounds i8, ptr %self4, i64 8
  store i64 %41, ptr %42, align 8
  %43 = load i64, ptr %self4, align 8, !noundef !3
  %44 = getelementptr inbounds i8, ptr %self4, i64 8
  %45 = load i64, ptr %44, align 8, !noundef !3
  store i64 %43, ptr %iter6, align 8
  %46 = getelementptr inbounds i8, ptr %iter6, i64 8
  store i64 %45, ptr %46, align 8
  br label %bb30

bb30:                                             ; preds = %bb38, %bb29
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %47 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17hff9c671eaed9b48fE"(ptr align 8 %iter6)
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = extractvalue { i64, i64 } %47, 1
  store i64 %48, ptr %_44, align 8
  %50 = getelementptr inbounds i8, ptr %_44, i64 8
  store i64 %49, ptr %50, align 8
  %_46 = load i64, ptr %_44, align 8, !range !9, !noundef !3
  %51 = icmp eq i64 %_46, 0
  br i1 %51, label %bb32, label %bb31

bb32:                                             ; preds = %bb30
  %52 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %match_pos = load i64, ptr %52, align 8, !noundef !3
  %53 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %54 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %55 = load i64, ptr %54, align 8, !noundef !3
  %56 = add i64 %55, %needle.1
  store i64 %56, ptr %53, align 8
  br i1 %long_period, label %bb40, label %bb39

bb31:                                             ; preds = %bb30
  %57 = getelementptr inbounds i8, ptr %_44, i64 8
  %i = load i64, ptr %57, align 8, !noundef !3
  %_50 = icmp ult i64 %i, %needle.1
  %58 = call i1 @llvm.expect.i1(i1 %_50, i1 true)
  br i1 %58, label %bb33, label %panic

bb39:                                             ; preds = %bb32
  %59 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 6
  store i64 0, ptr %59, align 8
  br label %bb40

bb40:                                             ; preds = %bb39, %bb32
  %_58 = add i64 %match_pos, %needle.1
; call <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17hb250a879796ae40eE"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_0, i64 %match_pos, i64 %_58)
  br label %bb44

bb33:                                             ; preds = %bb31
  %60 = getelementptr inbounds [0 x i8], ptr %needle.0, i64 0, i64 %i
  %_49 = load i8, ptr %60, align 1, !noundef !3
  %61 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %_53 = load i64, ptr %61, align 8, !noundef !3
  %_52 = add i64 %_53, %i
  %_54 = icmp ult i64 %_52, %haystack.1
  %62 = call i1 @llvm.expect.i1(i1 %_54, i1 true)
  br i1 %62, label %bb34, label %panic7

panic:                                            ; preds = %bb31
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %i, i64 %needle.1, ptr align 8 @alloc_431a25c37b04d3a86cc1e8847750a060) #27
  unreachable

bb34:                                             ; preds = %bb33
  %63 = getelementptr inbounds [0 x i8], ptr %haystack.0, i64 0, i64 %_52
  %_51 = load i8, ptr %63, align 1, !noundef !3
  %_48 = icmp ne i8 %_49, %_51
  br i1 %_48, label %bb35, label %bb38

panic7:                                           ; preds = %bb33
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %_52, i64 %haystack.1, ptr align 8 @alloc_1d819d3ea5ccb7e4567b456d9e9d2d76) #27
  unreachable

bb38:                                             ; preds = %bb34
  br label %bb30

bb35:                                             ; preds = %bb34
  %64 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 2
  %_55 = load i64, ptr %64, align 8, !noundef !3
  %65 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %66 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %67 = load i64, ptr %66, align 8, !noundef !3
  %68 = add i64 %67, %_55
  store i64 %68, ptr %65, align 8
  br i1 %long_period, label %bb37, label %bb36

bb36:                                             ; preds = %bb35
  %69 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 2
  %_56 = load i64, ptr %69, align 8, !noundef !3
  %70 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 6
  %71 = sub i64 %needle.1, %_56
  store i64 %71, ptr %70, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb35
  br label %bb42

bb42:                                             ; preds = %bb25, %bb37
  br label %bb43

bb21:                                             ; preds = %bb19
  %72 = getelementptr inbounds [0 x i8], ptr %needle.0, i64 0, i64 %i8
  %_29 = load i8, ptr %72, align 1, !noundef !3
  %73 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %_33 = load i64, ptr %73, align 8, !noundef !3
  %_32 = add i64 %_33, %i8
  %_34 = icmp ult i64 %_32, %haystack.1
  %74 = call i1 @llvm.expect.i1(i1 %_34, i1 true)
  br i1 %74, label %bb22, label %panic10

panic9:                                           ; preds = %bb19
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %i8, i64 %needle.1, ptr align 8 @alloc_346e11278cee0995e897cbfcb1eebf7f) #27
  unreachable

bb22:                                             ; preds = %bb21
  %75 = getelementptr inbounds [0 x i8], ptr %haystack.0, i64 0, i64 %_32
  %_31 = load i8, ptr %75, align 1, !noundef !3
  %_28 = icmp ne i8 %_29, %_31
  br i1 %_28, label %bb23, label %bb26

panic10:                                          ; preds = %bb21
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %_32, i64 %haystack.1, ptr align 8 @alloc_2497922004129e7ba28f93adc78f2331) #27
  unreachable

bb26:                                             ; preds = %bb22
  br label %bb18

bb23:                                             ; preds = %bb22
  %_37 = load i64, ptr %self, align 8, !noundef !3
  %_36 = sub i64 %i8, %_37
  %_35 = add i64 %_36, 1
  %76 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %77 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %78 = load i64, ptr %77, align 8, !noundef !3
  %79 = add i64 %78, %_35
  store i64 %79, ptr %76, align 8
  br i1 %long_period, label %bb25, label %bb24

bb24:                                             ; preds = %bb23
  %80 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 6
  store i64 0, ptr %80, align 8
  br label %bb25

bb25:                                             ; preds = %bb24, %bb23
  br label %bb42

bb54:                                             ; No predecessors!
  unreachable
}

; core::str::pattern::TwoWaySearcher::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core3str7pattern14TwoWaySearcher4next17h69f2ae0fda8ddec9E(ptr sret(%"core::str::pattern::SearchStep") align 8 %_0, ptr align 8 %self, ptr align 1 %haystack.0, i64 %haystack.1, ptr align 1 %needle.0, i64 %needle.1, i1 zeroext %long_period) unnamed_addr #0 {
start:
  %_69 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_44 = alloca %"core::option::Option<usize>", align 8
  %iter6 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>", align 8
  %self5 = alloca %"core::ops::range::Range<usize>", align 8
  %self4 = alloca %"core::iter::adapters::rev::Rev<core::ops::range::Range<usize>>", align 8
  %start3 = alloca i64, align 8
  %_24 = alloca %"core::option::Option<usize>", align 8
  %iter = alloca %"core::ops::range::Range<usize>", align 8
  %self2 = alloca %"core::ops::range::Range<usize>", align 8
  %start1 = alloca i64, align 8
  %_8 = alloca ptr, align 8
  %0 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %old_pos = load i64, ptr %0, align 8, !noundef !3
  %needle_last = sub i64 %needle.1, 1
  br label %bb1

bb1:                                              ; preds = %bb43, %start
  %1 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %_10 = load i64, ptr %1, align 8, !noundef !3
  %index = add i64 %_10, %needle_last
  %_60 = icmp ult i64 %index, %haystack.1
  br i1 %_60, label %bb45, label %bb46

bb46:                                             ; preds = %bb1
  store ptr null, ptr %_8, align 8
  br label %bb47

bb45:                                             ; preds = %bb1
  store ptr %haystack.0, ptr %_69, align 8
  %2 = getelementptr inbounds i8, ptr %_69, i64 8
  store i64 %haystack.1, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %_69, i64 8
  %_67 = load i64, ptr %3, align 8, !noundef !3
  %cond = icmp ult i64 %index, %_67
  call void @llvm.assume(i1 %cond)
  %_63 = getelementptr inbounds i8, ptr %haystack.0, i64 %index
  store ptr %_63, ptr %_8, align 8
  br label %bb47

bb47:                                             ; preds = %bb45, %bb46
  %4 = load ptr, ptr %_8, align 8, !noundef !3
  %5 = ptrtoint ptr %4 to i64
  %6 = icmp eq i64 %5, 0
  %_11 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_11, 0
  br i1 %7, label %bb2, label %bb3

bb2:                                              ; preds = %bb47
  %8 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  store i64 %haystack.1, ptr %8, align 8
  %9 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %_13 = load i64, ptr %9, align 8, !noundef !3
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hfb1d85daa5354553E"(ptr sret(%"core::str::pattern::SearchStep") align 8 %_0, i64 %old_pos, i64 %_13)
  br label %bb44

bb3:                                              ; preds = %bb47
  %_59 = load ptr, ptr %_8, align 8, !nonnull !3, !align !4, !noundef !3
  %tail_byte = load i8, ptr %_59, align 1, !noundef !3
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
  %_14 = call zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h78243f5fba1cc480E"()
  br i1 %_14, label %bb6, label %bb10

bb44:                                             ; preds = %bb7, %bb40, %bb2
  ret void

bb10:                                             ; preds = %bb9, %bb3
  %10 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 3
  %_73 = load i64, ptr %10, align 8, !noundef !3
  %_75 = and i8 %tail_byte, 63
  %_74 = zext i8 %_75 to i64
  %11 = and i64 %_74, 63
  %_72 = lshr i64 %_73, %11
  %_71 = and i64 %_72, 1
  %12 = icmp eq i64 %_71, 0
  br i1 %12, label %bb12, label %bb11

bb6:                                              ; preds = %bb3
  %13 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %_16 = load i64, ptr %13, align 8, !noundef !3
  %_15 = icmp ne i64 %old_pos, %_16
  br i1 %_15, label %bb7, label %bb9

bb9:                                              ; preds = %bb6
  br label %bb10

bb7:                                              ; preds = %bb6
  %14 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %_17 = load i64, ptr %14, align 8, !noundef !3
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hfb1d85daa5354553E"(ptr sret(%"core::str::pattern::SearchStep") align 8 %_0, i64 %old_pos, i64 %_17)
  br label %bb44

bb12:                                             ; preds = %bb10
  %15 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %16 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %17 = load i64, ptr %16, align 8, !noundef !3
  %18 = add i64 %17, %needle.1
  store i64 %18, ptr %15, align 8
  br i1 %long_period, label %bb14, label %bb13

bb11:                                             ; preds = %bb10
  br i1 %long_period, label %bb15, label %bb16

bb13:                                             ; preds = %bb12
  %19 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 6
  store i64 0, ptr %19, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  br label %bb43

bb43:                                             ; preds = %bb42, %bb14
  br label %bb1

bb16:                                             ; preds = %bb11
  %v1 = load i64, ptr %self, align 8, !noundef !3
  %20 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 6
  %v2 = load i64, ptr %20, align 8, !noundef !3
; call core::cmp::max_by
  %21 = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 %v1, i64 %v2)
  store i64 %21, ptr %start1, align 8
  br label %bb17

bb15:                                             ; preds = %bb11
  %22 = load i64, ptr %self, align 8, !noundef !3
  store i64 %22, ptr %start1, align 8
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  %_22 = load i64, ptr %start1, align 8, !noundef !3
  store i64 %_22, ptr %self2, align 8
  %23 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %needle.1, ptr %23, align 8
  %24 = load i64, ptr %self2, align 8, !noundef !3
  %25 = getelementptr inbounds i8, ptr %self2, i64 8
  %26 = load i64, ptr %25, align 8, !noundef !3
  store i64 %24, ptr %iter, align 8
  %27 = getelementptr inbounds i8, ptr %iter, i64 8
  store i64 %26, ptr %27, align 8
  br label %bb18

bb18:                                             ; preds = %bb26, %bb17
  %other = getelementptr inbounds i8, ptr %iter, i64 8
  %_81 = load i64, ptr %iter, align 8, !noundef !3
  %28 = getelementptr inbounds i8, ptr %iter, i64 8
  %_82 = load i64, ptr %28, align 8, !noundef !3
  %_76 = icmp ult i64 %_81, %_82
  br i1 %_76, label %bb49, label %bb51

bb51:                                             ; preds = %bb18
  %29 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %30 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %29, ptr %_24, align 8
  %31 = getelementptr inbounds i8, ptr %_24, i64 8
  store i64 %30, ptr %31, align 8
  br label %bb52

bb49:                                             ; preds = %bb18
  %old = load i64, ptr %iter, align 8, !noundef !3
; call <usize as core::iter::range::Step>::forward_unchecked
  %_80 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hfc82dfa8f57a0e81E"(i64 %old, i64 1)
  store i64 %_80, ptr %iter, align 8
  %32 = getelementptr inbounds i8, ptr %_24, i64 8
  store i64 %old, ptr %32, align 8
  store i64 1, ptr %_24, align 8
  br label %bb52

bb52:                                             ; preds = %bb49, %bb51
  %_26 = load i64, ptr %_24, align 8, !range !9, !noundef !3
  %33 = icmp eq i64 %_26, 0
  br i1 %33, label %bb20, label %bb19

bb20:                                             ; preds = %bb52
  br i1 %long_period, label %bb27, label %bb28

bb19:                                             ; preds = %bb52
  %34 = getelementptr inbounds i8, ptr %_24, i64 8
  %i8 = load i64, ptr %34, align 8, !noundef !3
  %_30 = icmp ult i64 %i8, %needle.1
  %35 = call i1 @llvm.expect.i1(i1 %_30, i1 true)
  br i1 %35, label %bb21, label %panic9

bb28:                                             ; preds = %bb20
  %36 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 6
  %37 = load i64, ptr %36, align 8, !noundef !3
  store i64 %37, ptr %start3, align 8
  br label %bb29

bb27:                                             ; preds = %bb20
  store i64 0, ptr %start3, align 8
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %_41 = load i64, ptr %start3, align 8, !noundef !3
  %_42 = load i64, ptr %self, align 8, !noundef !3
  store i64 %_41, ptr %self5, align 8
  %38 = getelementptr inbounds i8, ptr %self5, i64 8
  store i64 %_42, ptr %38, align 8
  %39 = load i64, ptr %self5, align 8, !noundef !3
  %40 = getelementptr inbounds i8, ptr %self5, i64 8
  %41 = load i64, ptr %40, align 8, !noundef !3
  store i64 %39, ptr %self4, align 8
  %42 = getelementptr inbounds i8, ptr %self4, i64 8
  store i64 %41, ptr %42, align 8
  %43 = load i64, ptr %self4, align 8, !noundef !3
  %44 = getelementptr inbounds i8, ptr %self4, i64 8
  %45 = load i64, ptr %44, align 8, !noundef !3
  store i64 %43, ptr %iter6, align 8
  %46 = getelementptr inbounds i8, ptr %iter6, i64 8
  store i64 %45, ptr %46, align 8
  br label %bb30

bb30:                                             ; preds = %bb38, %bb29
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %47 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17hff9c671eaed9b48fE"(ptr align 8 %iter6)
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = extractvalue { i64, i64 } %47, 1
  store i64 %48, ptr %_44, align 8
  %50 = getelementptr inbounds i8, ptr %_44, i64 8
  store i64 %49, ptr %50, align 8
  %_46 = load i64, ptr %_44, align 8, !range !9, !noundef !3
  %51 = icmp eq i64 %_46, 0
  br i1 %51, label %bb32, label %bb31

bb32:                                             ; preds = %bb30
  %52 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %match_pos = load i64, ptr %52, align 8, !noundef !3
  %53 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %54 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %55 = load i64, ptr %54, align 8, !noundef !3
  %56 = add i64 %55, %needle.1
  store i64 %56, ptr %53, align 8
  br i1 %long_period, label %bb40, label %bb39

bb31:                                             ; preds = %bb30
  %57 = getelementptr inbounds i8, ptr %_44, i64 8
  %i = load i64, ptr %57, align 8, !noundef !3
  %_50 = icmp ult i64 %i, %needle.1
  %58 = call i1 @llvm.expect.i1(i1 %_50, i1 true)
  br i1 %58, label %bb33, label %panic

bb39:                                             ; preds = %bb32
  %59 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 6
  store i64 0, ptr %59, align 8
  br label %bb40

bb40:                                             ; preds = %bb39, %bb32
  %_58 = add i64 %match_pos, %needle.1
; call <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
  call void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h1c29df2ddb8ce6c9E"(ptr sret(%"core::str::pattern::SearchStep") align 8 %_0, i64 %match_pos, i64 %_58)
  br label %bb44

bb33:                                             ; preds = %bb31
  %60 = getelementptr inbounds [0 x i8], ptr %needle.0, i64 0, i64 %i
  %_49 = load i8, ptr %60, align 1, !noundef !3
  %61 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %_53 = load i64, ptr %61, align 8, !noundef !3
  %_52 = add i64 %_53, %i
  %_54 = icmp ult i64 %_52, %haystack.1
  %62 = call i1 @llvm.expect.i1(i1 %_54, i1 true)
  br i1 %62, label %bb34, label %panic7

panic:                                            ; preds = %bb31
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %i, i64 %needle.1, ptr align 8 @alloc_431a25c37b04d3a86cc1e8847750a060) #27
  unreachable

bb34:                                             ; preds = %bb33
  %63 = getelementptr inbounds [0 x i8], ptr %haystack.0, i64 0, i64 %_52
  %_51 = load i8, ptr %63, align 1, !noundef !3
  %_48 = icmp ne i8 %_49, %_51
  br i1 %_48, label %bb35, label %bb38

panic7:                                           ; preds = %bb33
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %_52, i64 %haystack.1, ptr align 8 @alloc_1d819d3ea5ccb7e4567b456d9e9d2d76) #27
  unreachable

bb38:                                             ; preds = %bb34
  br label %bb30

bb35:                                             ; preds = %bb34
  %64 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 2
  %_55 = load i64, ptr %64, align 8, !noundef !3
  %65 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %66 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %67 = load i64, ptr %66, align 8, !noundef !3
  %68 = add i64 %67, %_55
  store i64 %68, ptr %65, align 8
  br i1 %long_period, label %bb37, label %bb36

bb36:                                             ; preds = %bb35
  %69 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 2
  %_56 = load i64, ptr %69, align 8, !noundef !3
  %70 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 6
  %71 = sub i64 %needle.1, %_56
  store i64 %71, ptr %70, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb35
  br label %bb42

bb42:                                             ; preds = %bb25, %bb37
  br label %bb43

bb21:                                             ; preds = %bb19
  %72 = getelementptr inbounds [0 x i8], ptr %needle.0, i64 0, i64 %i8
  %_29 = load i8, ptr %72, align 1, !noundef !3
  %73 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %_33 = load i64, ptr %73, align 8, !noundef !3
  %_32 = add i64 %_33, %i8
  %_34 = icmp ult i64 %_32, %haystack.1
  %74 = call i1 @llvm.expect.i1(i1 %_34, i1 true)
  br i1 %74, label %bb22, label %panic10

panic9:                                           ; preds = %bb19
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %i8, i64 %needle.1, ptr align 8 @alloc_346e11278cee0995e897cbfcb1eebf7f) #27
  unreachable

bb22:                                             ; preds = %bb21
  %75 = getelementptr inbounds [0 x i8], ptr %haystack.0, i64 0, i64 %_32
  %_31 = load i8, ptr %75, align 1, !noundef !3
  %_28 = icmp ne i8 %_29, %_31
  br i1 %_28, label %bb23, label %bb26

panic10:                                          ; preds = %bb21
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %_32, i64 %haystack.1, ptr align 8 @alloc_2497922004129e7ba28f93adc78f2331) #27
  unreachable

bb26:                                             ; preds = %bb22
  br label %bb18

bb23:                                             ; preds = %bb22
  %_37 = load i64, ptr %self, align 8, !noundef !3
  %_36 = sub i64 %i8, %_37
  %_35 = add i64 %_36, 1
  %76 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %77 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 4
  %78 = load i64, ptr %77, align 8, !noundef !3
  %79 = add i64 %78, %_35
  store i64 %79, ptr %76, align 8
  br i1 %long_period, label %bb25, label %bb24

bb24:                                             ; preds = %bb23
  %80 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %self, i32 0, i32 6
  store i64 0, ptr %80, align 8
  br label %bb25

bb25:                                             ; preds = %bb24, %bb23
  br label %bb42

bb54:                                             ; No predecessors!
  unreachable
}

; core::str::pattern::small_slice_eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core3str7pattern14small_slice_eq17h43887858594f9c75E(ptr align 1 %x.0, i64 %x.1, ptr align 1 %y.0, i64 %y.1) unnamed_addr #0 {
start:
  %tmp3 = alloca i32, align 4
  %tmp2 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_45 = alloca ptr, align 8
  %py = alloca ptr, align 8
  %px = alloca ptr, align 8
  %_10 = alloca %"core::option::Option<(&u8, &u8)>", align 8
  %iter = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", align 8
  %_8 = alloca %"core::slice::iter::Iter<'_, u8>", align 8
  %self = alloca %"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>", align 8
  %_0 = alloca i8, align 1
  %_5 = icmp ult i64 %x.1, 4
  br i1 %_5, label %bb1, label %bb8

bb8:                                              ; preds = %start
  store ptr %x.0, ptr %px, align 8
  store ptr %y.0, ptr %py, align 8
  %self4 = load ptr, ptr %px, align 8, !noundef !3
  %count = sub i64 %x.1, 4
  %pxend = getelementptr inbounds i8, ptr %self4, i64 %count
  %self5 = load ptr, ptr %py, align 8, !noundef !3
  %count6 = sub i64 %y.1, 4
  %pyend = getelementptr inbounds i8, ptr %self5, i64 %count6
  br label %bb9

bb1:                                              ; preds = %start
  %end_or_len = getelementptr inbounds i8, ptr %x.0, i64 %x.1
  store ptr %x.0, ptr %_45, align 8
  %0 = load ptr, ptr %_45, align 8, !nonnull !3, !noundef !3
  store ptr %0, ptr %_8, align 8
  %1 = getelementptr inbounds i8, ptr %_8, i64 8
  store ptr %end_or_len, ptr %1, align 8
  %2 = load ptr, ptr %_8, align 8, !nonnull !3, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_8, i64 8
  %4 = load ptr, ptr %3, align 8, !noundef !3
; call core::iter::traits::iterator::Iterator::zip
  call void @_ZN4core4iter6traits8iterator8Iterator3zip17hdcf01643cc885968E(ptr sret(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>") align 8 %self, ptr %2, ptr %4, ptr align 1 %y.0, i64 %y.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %self, i64 56, i1 false)
  br label %bb3

bb9:                                              ; preds = %bb12, %bb8
  %_28 = load ptr, ptr %px, align 8, !noundef !3
  %_27 = icmp ult ptr %_28, %pxend
  br i1 %_27, label %bb10, label %bb13

bb13:                                             ; preds = %bb9
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp2, ptr align 1 %pxend, i64 4, i1 false)
  %self7 = load i32, ptr %tmp2, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp3, ptr align 1 %pyend, i64 4, i1 false)
  %self8 = load i32, ptr %tmp3, align 4
  %5 = icmp eq i32 %self7, %self8
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb15

bb10:                                             ; preds = %bb9
  %_30 = load ptr, ptr %px, align 8, !noundef !3
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp, ptr align 1 %_30, i64 4, i1 false)
  %self9 = load i32, ptr %tmp, align 4
  %_32 = load ptr, ptr %py, align 8, !noundef !3
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp1, ptr align 1 %_32, i64 4, i1 false)
  %self10 = load i32, ptr %tmp1, align 4
  %_33 = icmp ne i32 %self9, %self10
  br i1 %_33, label %bb11, label %bb12

bb15:                                             ; preds = %bb14, %bb11, %bb13
  %7 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %8 = trunc i8 %7 to i1
  ret i1 %8

bb12:                                             ; preds = %bb10
  %self11 = load ptr, ptr %px, align 8, !noundef !3
  %_34 = getelementptr inbounds i8, ptr %self11, i64 4
  store ptr %_34, ptr %px, align 8
  %self12 = load ptr, ptr %py, align 8, !noundef !3
  %_36 = getelementptr inbounds i8, ptr %self12, i64 4
  store ptr %_36, ptr %py, align 8
  br label %bb9

bb11:                                             ; preds = %bb10
  store i8 0, ptr %_0, align 1
  br label %bb15

bb3:                                              ; preds = %bb7, %bb1
; call <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::next
  %9 = call { ptr, ptr } @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$4next17h66ed670bb52ca302E"(ptr align 8 %iter)
  %10 = extractvalue { ptr, ptr } %9, 0
  %11 = extractvalue { ptr, ptr } %9, 1
  store ptr %10, ptr %_10, align 8
  %12 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr %11, ptr %12, align 8
  %13 = load ptr, ptr %_10, align 8, !noundef !3
  %14 = ptrtoint ptr %13 to i64
  %15 = icmp eq i64 %14, 0
  %_12 = select i1 %15, i64 0, i64 1
  %16 = icmp eq i64 %_12, 0
  br i1 %16, label %bb5, label %bb4

bb5:                                              ; preds = %bb3
  store i8 1, ptr %_0, align 1
  br label %bb14

bb4:                                              ; preds = %bb3
  %_40 = load ptr, ptr %_10, align 8, !nonnull !3, !align !4, !noundef !3
  %b1 = load i8, ptr %_40, align 1, !noundef !3
  %17 = getelementptr inbounds i8, ptr %_10, i64 8
  %_41 = load ptr, ptr %17, align 8, !nonnull !3, !align !4, !noundef !3
  %b2 = load i8, ptr %_41, align 1, !noundef !3
  %_15 = icmp ne i8 %b1, %b2
  br i1 %_15, label %bb6, label %bb7

bb14:                                             ; preds = %bb6, %bb5
  br label %bb15

bb7:                                              ; preds = %bb4
  br label %bb3

bb6:                                              ; preds = %bb4
  store i8 0, ptr %_0, align 1
  br label %bb14

bb17:                                             ; No predecessors!
  unreachable
}

; core::char::methods::encode_utf8_raw
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17hce4a0e0468f969f6E(i32 %0, ptr align 1 %dst.0, i64 %dst.1) unnamed_addr #0 {
start:
  %_84 = alloca %"core::ops::range::Range<usize>", align 8
  %_70 = alloca i64, align 8
  %_68 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_66 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_64 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_63 = alloca [3 x %"core::fmt::rt::Argument<'_>"], align 8
  %_59 = alloca %"core::fmt::Arguments<'_>", align 8
  %len = alloca i64, align 8
  %code = alloca i32, align 4
  store i32 %0, ptr %code, align 4
  %code1 = load i32, ptr %code, align 4, !noundef !3
  %_72 = icmp ult i32 %code1, 128
  br i1 %_72, label %bb12, label %bb13

bb13:                                             ; preds = %start
  %_73 = icmp ult i32 %code1, 2048
  br i1 %_73, label %bb14, label %bb15

bb12:                                             ; preds = %start
  store i64 1, ptr %len, align 8
  br label %bb20

bb15:                                             ; preds = %bb13
  %_74 = icmp ult i32 %code1, 65536
  br i1 %_74, label %bb16, label %bb17

bb14:                                             ; preds = %bb13
  store i64 2, ptr %len, align 8
  br label %bb19

bb17:                                             ; preds = %bb15
  store i64 4, ptr %len, align 8
  br label %bb18

bb16:                                             ; preds = %bb15
  store i64 3, ptr %len, align 8
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
  br label %bb19

bb19:                                             ; preds = %bb14, %bb18
  br label %bb20

bb20:                                             ; preds = %bb12, %bb19
  %_5 = load i64, ptr %len, align 8, !noundef !3
  switch i64 %_5, label %bb2 [
    i64 1, label %bb1
    i64 2, label %bb3
    i64 3, label %bb4
    i64 4, label %bb5
  ]

bb2:                                              ; preds = %bb5, %bb4, %bb3, %bb1, %bb20
  store ptr %len, ptr %_64, align 8
  %1 = getelementptr inbounds i8, ptr %_64, i64 8
  store ptr @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h7bbbd896a38dcccaE", ptr %1, align 8
  store ptr %code, ptr %_66, align 8
  %2 = getelementptr inbounds i8, ptr %_66, i64 8
  store ptr @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h79f4c0ef1dfa4c73E", ptr %2, align 8
  store i64 %dst.1, ptr %_70, align 8
  store ptr %_70, ptr %_68, align 8
  %3 = getelementptr inbounds i8, ptr %_68, i64 8
  store ptr @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h7bbbd896a38dcccaE", ptr %3, align 8
  %4 = load ptr, ptr %_64, align 8, !nonnull !3, !align !4, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_64, i64 8
  %6 = load ptr, ptr %5, align 8, !nonnull !3, !noundef !3
  %7 = getelementptr inbounds [3 x %"core::fmt::rt::Argument<'_>"], ptr %_63, i64 0, i64 0
  store ptr %4, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 8
  store ptr %6, ptr %8, align 8
  %9 = load ptr, ptr %_66, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds i8, ptr %_66, i64 8
  %11 = load ptr, ptr %10, align 8, !nonnull !3, !noundef !3
  %12 = getelementptr inbounds [3 x %"core::fmt::rt::Argument<'_>"], ptr %_63, i64 0, i64 1
  store ptr %9, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  store ptr %11, ptr %13, align 8
  %14 = load ptr, ptr %_68, align 8, !nonnull !3, !align !4, !noundef !3
  %15 = getelementptr inbounds i8, ptr %_68, i64 8
  %16 = load ptr, ptr %15, align 8, !nonnull !3, !noundef !3
  %17 = getelementptr inbounds [3 x %"core::fmt::rt::Argument<'_>"], ptr %_63, i64 0, i64 2
  store ptr %14, ptr %17, align 8
  %18 = getelementptr inbounds i8, ptr %17, i64 8
  store ptr %16, ptr %18, align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_59, ptr align 8 @alloc_d51214f097f67314513b76e97e13aa6b, i64 3, ptr align 8 %_63, i64 3)
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_59, ptr align 8 @alloc_9cd042eb6cb0d992fdeb8ae2db92c748) #27
  unreachable

bb1:                                              ; preds = %bb20
  %_7 = icmp uge i64 %dst.1, 1
  br i1 %_7, label %bb6, label %bb2

bb3:                                              ; preds = %bb20
  %_9 = icmp uge i64 %dst.1, 2
  br i1 %_9, label %bb7, label %bb2

bb4:                                              ; preds = %bb20
  %_11 = icmp uge i64 %dst.1, 3
  br i1 %_11, label %bb8, label %bb2

bb5:                                              ; preds = %bb20
  %_13 = icmp uge i64 %dst.1, 4
  br i1 %_13, label %bb9, label %bb2

bb6:                                              ; preds = %bb1
  %a = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %_15 = load i32, ptr %code, align 4, !noundef !3
  %19 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %20 = trunc i32 %_15 to i8
  store i8 %20, ptr %19, align 1
  br label %bb11

bb11:                                             ; preds = %bb9, %bb8, %bb7, %bb6
  %index = load i64, ptr %len, align 8, !noundef !3
  store i64 0, ptr %_84, align 8
  %21 = getelementptr inbounds i8, ptr %_84, i64 8
  store i64 %index, ptr %21, align 8
  %22 = load i64, ptr %_84, align 8, !noundef !3
  %23 = getelementptr inbounds i8, ptr %_84, i64 8
  %24 = load i64, ptr %23, align 8, !noundef !3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index_mut
  %25 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$9index_mut17h1ee5d670878f4680E"(i64 %22, i64 %24, ptr align 1 %dst.0, i64 %dst.1, ptr align 8 @alloc_7a7f897cbce61fe5aefd1aacce65247e)
  %_0.0 = extractvalue { ptr, i64 } %25, 0
  %_0.1 = extractvalue { ptr, i64 } %25, 1
  %26 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %27 = insertvalue { ptr, i64 } %26, i64 %_0.1, 1
  ret { ptr, i64 } %27

bb7:                                              ; preds = %bb3
  %a2 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %b = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 1
  %_21 = load i32, ptr %code, align 4, !noundef !3
  %_20 = lshr i32 %_21, 6
  %_19 = and i32 %_20, 31
  %_18 = trunc i32 %_19 to i8
  %28 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %29 = or i8 %_18, -64
  store i8 %29, ptr %28, align 1
  %_24 = load i32, ptr %code, align 4, !noundef !3
  %_23 = and i32 %_24, 63
  %_22 = trunc i32 %_23 to i8
  %30 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 1
  %31 = or i8 %_22, -128
  store i8 %31, ptr %30, align 1
  br label %bb11

bb8:                                              ; preds = %bb4
  %a3 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %b4 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 1
  %c = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 2
  %_31 = load i32, ptr %code, align 4, !noundef !3
  %_30 = lshr i32 %_31, 12
  %_29 = and i32 %_30, 15
  %_28 = trunc i32 %_29 to i8
  %32 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %33 = or i8 %_28, -32
  store i8 %33, ptr %32, align 1
  %_35 = load i32, ptr %code, align 4, !noundef !3
  %_34 = lshr i32 %_35, 6
  %_33 = and i32 %_34, 63
  %_32 = trunc i32 %_33 to i8
  %34 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 1
  %35 = or i8 %_32, -128
  store i8 %35, ptr %34, align 1
  %_38 = load i32, ptr %code, align 4, !noundef !3
  %_37 = and i32 %_38, 63
  %_36 = trunc i32 %_37 to i8
  %36 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 2
  %37 = or i8 %_36, -128
  store i8 %37, ptr %36, align 1
  br label %bb11

bb9:                                              ; preds = %bb5
  %a5 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %b6 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 1
  %c7 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 2
  %d = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 3
  %_46 = load i32, ptr %code, align 4, !noundef !3
  %_45 = lshr i32 %_46, 18
  %_44 = and i32 %_45, 7
  %_43 = trunc i32 %_44 to i8
  %38 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 0
  %39 = or i8 %_43, -16
  store i8 %39, ptr %38, align 1
  %_50 = load i32, ptr %code, align 4, !noundef !3
  %_49 = lshr i32 %_50, 12
  %_48 = and i32 %_49, 63
  %_47 = trunc i32 %_48 to i8
  %40 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 1
  %41 = or i8 %_47, -128
  store i8 %41, ptr %40, align 1
  %_54 = load i32, ptr %code, align 4, !noundef !3
  %_53 = lshr i32 %_54, 6
  %_52 = and i32 %_53, 63
  %_51 = trunc i32 %_52 to i8
  %42 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 2
  %43 = or i8 %_51, -128
  store i8 %43, ptr %42, align 1
  %_57 = load i32, ptr %code, align 4, !noundef !3
  %_56 = and i32 %_57, 63
  %_55 = trunc i32 %_56 to i8
  %44 = getelementptr inbounds [0 x i8], ptr %dst.0, i64 0, i64 3
  %45 = or i8 %_55, -128
  store i8 %45, ptr %44, align 1
  br label %bb11
}

; core::char::methods::<impl char>::to_ascii_uppercase
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18to_ascii_uppercase17h05040899095491d3E"(ptr align 4 %self) unnamed_addr #0 {
start:
  %_5 = alloca i8, align 1
  %_2 = alloca i8, align 1
  %_0 = alloca i32, align 4
  %0 = load i32, ptr %self, align 4, !range !8, !noundef !3
  %_7 = icmp ule i32 97, %0
  br i1 %_7, label %bb6, label %bb5

bb5:                                              ; preds = %start
  store i8 0, ptr %_2, align 1
  br label %bb4

bb6:                                              ; preds = %start
  %1 = load i32, ptr %self, align 4, !range !8, !noundef !3
  %_8 = icmp ule i32 %1, 122
  %2 = zext i1 %_8 to i8
  store i8 %2, ptr %_2, align 1
  br label %bb4

bb4:                                              ; preds = %bb6, %bb5
  %3 = load i8, ptr %_2, align 1, !range !10, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb1, label %bb2

bb2:                                              ; preds = %bb4
  %5 = load i32, ptr %self, align 4, !range !8, !noundef !3
  store i32 %5, ptr %_0, align 4
  br label %bb3

bb1:                                              ; preds = %bb4
  %_6 = load i32, ptr %self, align 4, !range !8, !noundef !3
  %6 = trunc i32 %_6 to i8
  store i8 %6, ptr %_5, align 1
  %_9 = load i8, ptr %_5, align 1, !noundef !3
  %_3 = xor i8 %_9, 32
  %7 = zext i8 %_3 to i32
  store i32 %7, ptr %_0, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %8 = load i32, ptr %_0, align 4, !range !8, !noundef !3
  ret i32 %8
}

; core::hash::BuildHasher::hash_one
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core4hash11BuildHasher8hash_one17he58ada0dd0f33080E(ptr align 8 %self, ptr align 8 %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %hasher = alloca %"std::hash::random::DefaultHasher", align 8
  %x = alloca ptr, align 8
  store ptr %0, ptr %x, align 8
; invoke <std::hash::random::RandomState as core::hash::BuildHasher>::build_hasher
  invoke void @"_ZN74_$LT$std..hash..random..RandomState$u20$as$u20$core..hash..BuildHasher$GT$12build_hasher17h6312fb19187fc8e9E"(ptr sret(%"std::hash::random::DefaultHasher") align 8 %hasher, ptr align 8 %self)
          to label %bb1 unwind label %cleanup

bb7:                                              ; preds = %bb6, %cleanup
  %2 = load ptr, ptr %1, align 8, !noundef !3
  %3 = getelementptr inbounds i8, ptr %1, i64 8
  %4 = load i32, ptr %3, align 8, !noundef !3
  %5 = insertvalue { ptr, i32 } poison, ptr %2, 0
  %6 = insertvalue { ptr, i32 } %5, i32 %4, 1
  resume { ptr, i32 } %6

cleanup:                                          ; preds = %start
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %1, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb7

bb1:                                              ; preds = %start
; invoke core::hash::impls::<impl core::hash::Hash for &T>::hash
  invoke void @"_ZN4core4hash5impls52_$LT$impl$u20$core..hash..Hash$u20$for$u20$$RF$T$GT$4hash17h0290e0d65b8db707E"(ptr align 8 %x, ptr align 8 %hasher)
          to label %bb2 unwind label %cleanup1

bb6:                                              ; preds = %cleanup1
  br label %bb7

cleanup1:                                         ; preds = %bb2, %bb1
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
  store ptr %12, ptr %1, align 8
  %14 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %13, ptr %14, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
; invoke <std::hash::random::DefaultHasher as core::hash::Hasher>::finish
  %_0 = invoke i64 @"_ZN71_$LT$std..hash..random..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$6finish17h5e72f7077416374fE"(ptr align 8 %hasher)
          to label %bb3 unwind label %cleanup1

bb3:                                              ; preds = %bb2
  br label %bb4

bb4:                                              ; preds = %bb3
  ret i64 %_0
}

; core::hash::sip::u8to64_le
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN4core4hash3sip9u8to64_le17h1fda4fd4cddb1152E(ptr align 1 %buf.0, i64 %buf.1, i64 %start1, i64 %len) unnamed_addr #0 {
start:
  %_49 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %data2 = alloca i16, align 2
  %data = alloca i32, align 4
  %out = alloca i64, align 8
  %i = alloca i64, align 8
  store i64 0, ptr %i, align 8
  store i64 0, ptr %out, align 8
  %_8 = load i64, ptr %i, align 8, !noundef !3
  %_7 = add i64 %_8, 3
  %_6 = icmp ult i64 %_7, %len
  br i1 %_6, label %bb1, label %bb2

bb2:                                              ; preds = %start
  br label %bb3

bb1:                                              ; preds = %start
  store i32 0, ptr %data, align 4
  %_13 = load i64, ptr %i, align 8, !noundef !3
  %count = add i64 %start1, %_13
  %src = getelementptr inbounds i8, ptr %buf.0, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %data, ptr align 1 %src, i64 4, i1 false)
  %self = load i32, ptr %data, align 4, !noundef !3
  %0 = zext i32 %self to i64
  store i64 %0, ptr %out, align 8
  %1 = load i64, ptr %i, align 8, !noundef !3
  %2 = add i64 %1, 4
  store i64 %2, ptr %i, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %_19 = load i64, ptr %i, align 8, !noundef !3
  %_18 = add i64 %_19, 1
  %_17 = icmp ult i64 %_18, %len
  br i1 %_17, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  br label %bb6

bb4:                                              ; preds = %bb3
  store i16 0, ptr %data2, align 2
  %_26 = load i64, ptr %i, align 8, !noundef !3
  %count3 = add i64 %start1, %_26
  %src4 = getelementptr inbounds i8, ptr %buf.0, i64 %count3
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %data2, ptr align 1 %src4, i64 2, i1 false)
  %self5 = load i16, ptr %data2, align 2, !noundef !3
  %_21 = zext i16 %self5 to i64
  %_31 = load i64, ptr %i, align 8, !noundef !3
  %_30 = mul i64 %_31, 8
  %3 = and i64 %_30, 63
  %_20 = shl i64 %_21, %3
  %4 = load i64, ptr %out, align 8, !noundef !3
  %5 = or i64 %4, %_20
  store i64 %5, ptr %out, align 8
  %6 = load i64, ptr %i, align 8, !noundef !3
  %7 = add i64 %6, 2
  store i64 %7, ptr %i, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %_33 = load i64, ptr %i, align 8, !noundef !3
  %_32 = icmp ult i64 %_33, %len
  br i1 %_32, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  br label %bb9

bb7:                                              ; preds = %bb6
  %_38 = load i64, ptr %i, align 8, !noundef !3
  %index = add i64 %start1, %_38
  store ptr %buf.0, ptr %_49, align 8
  %8 = getelementptr inbounds i8, ptr %_49, i64 8
  store i64 %buf.1, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %_49, i64 8
  %_47 = load i64, ptr %9, align 8, !noundef !3
  %cond = icmp ult i64 %index, %_47
  call void @llvm.assume(i1 %cond)
  %_43 = getelementptr inbounds i8, ptr %buf.0, i64 %index
  %_36 = load i8, ptr %_43, align 1, !noundef !3
  %_35 = zext i8 %_36 to i64
  %_40 = load i64, ptr %i, align 8, !noundef !3
  %_39 = mul i64 %_40, 8
  %10 = and i64 %_39, 63
  %_34 = shl i64 %_35, %10
  %11 = load i64, ptr %out, align 8, !noundef !3
  %12 = or i64 %11, %_34
  store i64 %12, ptr %out, align 8
  %13 = load i64, ptr %i, align 8, !noundef !3
  %14 = add i64 %13, 1
  store i64 %14, ptr %i, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %_0 = load i64, ptr %out, align 8, !noundef !3
  ret i64 %_0
}

; core::hash::impls::<impl core::hash::Hash for &T>::hash
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4hash5impls52_$LT$impl$u20$core..hash..Hash$u20$for$u20$$RF$T$GT$4hash17h0290e0d65b8db707E"(ptr align 8 %self, ptr align 8 %state) unnamed_addr #0 {
start:
  %_4 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call <alloc::string::String as core::hash::Hash>::hash
  call void @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..hash..Hash$GT$4hash17h5cd18bba84a7ec0fE"(ptr align 8 %_4, ptr align 8 %state)
  ret void
}

; core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter5range101_$LT$impl$u20$core..iter..traits..iterator..Iterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9size_hint17h87d8fd2584c87018E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_8 = alloca i64, align 8
  %hint = alloca %"core::option::Option<usize>", align 8
  %_4 = getelementptr inbounds i8, ptr %self, i64 8
  %_3.i = load i64, ptr %self, align 8, !noundef !3
  %_4.i = load i64, ptr %_4, align 8, !noundef !3
  %_0.i = icmp ult i64 %_3.i, %_4.i
  br i1 %_0.i, label %bb2, label %bb4

bb4:                                              ; preds = %start
  store i64 0, ptr %_0, align 8
  %0 = load i64, ptr @4, align 8, !range !9, !noundef !3
  %1 = load i64, ptr getelementptr inbounds (i8, ptr @4, i64 8), align 8
  %2 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_0, i32 0, i32 1
  store i64 %0, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 8
  store i64 %1, ptr %3, align 8
  br label %bb5

bb2:                                              ; preds = %start
  %_7 = getelementptr inbounds i8, ptr %self, i64 8
; call <usize as core::iter::range::Step>::steps_between
  %4 = call { i64, i64 } @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$13steps_between17h6a2da8b2b72a1e3bE"(ptr align 8 %self, ptr align 8 %_7)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  store i64 %5, ptr %hint, align 8
  %7 = getelementptr inbounds i8, ptr %hint, i64 8
  store i64 %6, ptr %7, align 8
  %_9 = load i64, ptr %hint, align 8, !range !9, !noundef !3
  %8 = icmp eq i64 %_9, 0
  br i1 %8, label %bb6, label %bb7

bb5:                                              ; preds = %bb8, %bb4
  ret void

bb6:                                              ; preds = %bb2
  store i64 -1, ptr %_8, align 8
  br label %bb8

bb7:                                              ; preds = %bb2
  %9 = getelementptr inbounds i8, ptr %hint, i64 8
  %x = load i64, ptr %9, align 8, !noundef !3
  store i64 %x, ptr %_8, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %10 = load i64, ptr %_8, align 8, !noundef !3
  store i64 %10, ptr %_0, align 8
  %11 = load i64, ptr %hint, align 8, !range !9, !noundef !3
  %12 = getelementptr inbounds i8, ptr %hint, i64 8
  %13 = load i64, ptr %12, align 8
  %14 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_0, i32 0, i32 1
  store i64 %11, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %14, i64 8
  store i64 %13, ptr %15, align 8
  br label %bb5

bb9:                                              ; No predecessors!
  unreachable
}

; core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h1b676ecbfd226c73E"(ptr align 8 %self) unnamed_addr #0 {
start:
; call <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
  %0 = call { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17hff9c671eaed9b48fE"(ptr align 8 %self)
  %_0.0 = extractvalue { i64, i64 } %0, 0
  %_0.1 = extractvalue { i64, i64 } %0, 1
  %1 = insertvalue { i64, i64 } poison, i64 %_0.0, 0
  %2 = insertvalue { i64, i64 } %1, i64 %_0.1, 1
  ret { i64, i64 } %2
}

; core::iter::traits::exact_size::ExactSizeIterator::len
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17hcc9996744452a691E(ptr align 8 %self) unnamed_addr #0 {
start:
  %_9 = alloca %"core::option::Option<core::fmt::Arguments<'_>>", align 8
  %_7 = alloca i8, align 1
  %_6 = alloca %"core::option::Option<usize>", align 8
  %_3 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %upper = alloca %"core::option::Option<usize>", align 8
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hdb069d32563ecc02E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_3, ptr align 8 %self)
  %lower = load i64, ptr %_3, align 8, !noundef !3
  %0 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_3, i32 0, i32 1
  %1 = load i64, ptr %0, align 8, !range !9, !noundef !3
  %2 = getelementptr inbounds i8, ptr %0, i64 8
  %3 = load i64, ptr %2, align 8
  store i64 %1, ptr %upper, align 8
  %4 = getelementptr inbounds i8, ptr %upper, i64 8
  store i64 %3, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 %lower, ptr %5, align 8
  store i64 1, ptr %_6, align 8
  %_12 = load i64, ptr %upper, align 8, !range !9, !noundef !3
  %6 = icmp eq i64 %_12, 0
  br i1 %6, label %bb5, label %bb7

bb5:                                              ; preds = %start
  %_10 = load i64, ptr %_6, align 8, !range !9, !noundef !3
  %7 = icmp eq i64 %_10, 0
  %8 = zext i1 %7 to i8
  store i8 %8, ptr %_7, align 1
  br label %bb4

bb7:                                              ; preds = %start
  %_11 = load i64, ptr %_6, align 8, !range !9, !noundef !3
  %9 = icmp eq i64 %_11, 1
  br i1 %9, label %bb8, label %bb6

bb4:                                              ; preds = %bb6, %bb8, %bb5
  %10 = load i8, ptr %_7, align 1, !range !10, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb2, label %bb3

bb8:                                              ; preds = %bb7
  %l = getelementptr inbounds i8, ptr %upper, i64 8
  %r = getelementptr inbounds i8, ptr %_6, i64 8
  %self1 = getelementptr inbounds i8, ptr %upper, i64 8
  %other = getelementptr inbounds i8, ptr %_6, i64 8
  %12 = getelementptr inbounds i8, ptr %upper, i64 8
  %_17 = load i64, ptr %12, align 8, !noundef !3
  %13 = getelementptr inbounds i8, ptr %_6, i64 8
  %_18 = load i64, ptr %13, align 8, !noundef !3
  %14 = icmp eq i64 %_17, %_18
  %15 = zext i1 %14 to i8
  store i8 %15, ptr %_7, align 1
  br label %bb4

bb6:                                              ; preds = %bb7
  store i8 0, ptr %_7, align 1
  br label %bb4

bb3:                                              ; preds = %bb4
  store ptr null, ptr %_9, align 8
; call core::panicking::assert_failed
  call void @_ZN4core9panicking13assert_failed17h8beae701c790fce2E(i8 0, ptr align 8 %upper, ptr align 8 %_6, ptr align 8 %_9, ptr align 8 @alloc_84d3063f56750eac8df834d2832862a3) #27
  unreachable

bb2:                                              ; preds = %bb4
  ret i64 %lower

bb9:                                              ; No predecessors!
  unreachable
}

; core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check28_$u7b$$u7b$closure$u7d$$u7d$17h92321a25625bcd82E"(ptr align 8 %_1, i64 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_9 = alloca i8, align 1
  %_6 = alloca ptr, align 8
  %_0 = alloca %"core::ops::control_flow::ControlFlow<usize>", align 8
  %x = alloca i64, align 8
  store i64 %0, ptr %x, align 8
  store i8 1, ptr %_9, align 1
  store ptr %x, ptr %_6, align 8
  %2 = load ptr, ptr %_6, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::str::pattern::simd_contains::{{closure}}
  %_4 = invoke zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17hc67dc936aaa00ffcE"(ptr align 8 %_1, ptr align 8 %2)
          to label %bb1 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  %3 = load ptr, ptr %1, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8, !noundef !3
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %start
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb6

bb1:                                              ; preds = %start
  br i1 %_4, label %bb2, label %bb3

bb3:                                              ; preds = %bb1
  store i64 0, ptr %_0, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  store i8 0, ptr %_9, align 1
  %_8 = load i64, ptr %x, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_8, ptr %12, align 8
  store i64 1, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %13 = load i8, ptr %_9, align 1, !range !10, !noundef !3
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb8, label %bb5

bb5:                                              ; preds = %bb8, %bb4
  %15 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %16 = getelementptr inbounds i8, ptr %_0, i64 8
  %17 = load i64, ptr %16, align 8
  %18 = insertvalue { i64, i64 } poison, i64 %15, 0
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1
  ret { i64, i64 } %19

bb8:                                              ; preds = %bb4
  br label %bb5
}

; core::iter::traits::double_ended::DoubleEndedIterator::try_rfold
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits12double_ended19DoubleEndedIterator9try_rfold17hfbe21eb0e6e1eecbE(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_17 = alloca i8, align 1
  %_11 = alloca i64, align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>>", align 8
  %_5 = alloca %"core::option::Option<usize>", align 8
  %_0 = alloca %"core::ops::control_flow::ControlFlow<usize>", align 8
  store i8 1, ptr %_17, align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke core::iter::range::<impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range<A>>::next_back
  %1 = invoke { i64, i64 } @"_ZN4core4iter5range116_$LT$impl$u20$core..iter..traits..double_ended..DoubleEndedIterator$u20$for$u20$core..ops..range..Range$LT$A$GT$$GT$9next_back17h1b676ecbfd226c73E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb17:                                             ; preds = %cleanup
  %2 = load i8, ptr %_17, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb16, label %bb14

cleanup:                                          ; preds = %bb11, %bb8, %bb4, %bb3, %bb1
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb17

bb2:                                              ; preds = %bb1
  %8 = extractvalue { i64, i64 } %1, 0
  %9 = extractvalue { i64, i64 } %1, 1
  store i64 %8, ptr %_5, align 8
  %10 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %9, ptr %10, align 8
  %_6 = load i64, ptr %_5, align 8, !range !9, !noundef !3
  %11 = icmp eq i64 %_6, 1
  br i1 %11, label %bb3, label %bb10

bb3:                                              ; preds = %bb2
  %12 = getelementptr inbounds i8, ptr %_5, i64 8
  %x = load i64, ptr %12, align 8, !noundef !3
  store i8 0, ptr %_17, align 1
  store i64 %x, ptr %_11, align 8
  %13 = load i64, ptr %_11, align 8, !noundef !3
; invoke core::iter::traits::double_ended::DoubleEndedIterator::rfind::check::{{closure}}
  %14 = invoke { i64, i64 } @"_ZN4core4iter6traits12double_ended19DoubleEndedIterator5rfind5check28_$u7b$$u7b$closure$u7d$$u7d$17h92321a25625bcd82E"(ptr align 8 %f, i64 %13)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb4:                                              ; preds = %bb3
  %_9.0 = extractvalue { i64, i64 } %14, 0
  %_9.1 = extractvalue { i64, i64 } %14, 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %15 = invoke { i64, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h46bb841108471f95E"(i64 %_9.0, i64 %_9.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = extractvalue { i64, i64 } %15, 1
  store i64 %16, ptr %_8, align 8
  %18 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %17, ptr %18, align 8
  %_13 = load i64, ptr %_8, align 8, !range !9, !noundef !3
  %19 = icmp eq i64 %_13, 0
  br i1 %19, label %bb6, label %bb8

bb6:                                              ; preds = %bb5
  store i8 1, ptr %_17, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
  %20 = getelementptr inbounds i8, ptr %_8, i64 8
  %residual = load i64, ptr %20, align 8, !noundef !3
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %21 = invoke { i64, i64 } @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h00a8837916e6f78fE"(i64 %residual)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  store i64 %22, ptr %_0, align 8
  %24 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %23, ptr %24, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb9
  %25 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %26 = getelementptr inbounds i8, ptr %_0, i64 8
  %27 = load i64, ptr %26, align 8
  %28 = insertvalue { i64, i64 } poison, i64 %25, 0
  %29 = insertvalue { i64, i64 } %28, i64 %27, 1
  ret { i64, i64 } %29

bb7:                                              ; No predecessors!
  unreachable

bb11:                                             ; preds = %bb10
  store i8 0, ptr %_17, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %30 = invoke { i64, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hb07594878107dab7E"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %31 = extractvalue { i64, i64 } %30, 0
  %32 = extractvalue { i64, i64 } %30, 1
  store i64 %31, ptr %_0, align 8
  %33 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %32, ptr %33, align 8
  br label %bb13

bb14:                                             ; preds = %bb16, %bb17
  %34 = load ptr, ptr %0, align 8, !noundef !3
  %35 = getelementptr inbounds i8, ptr %0, i64 8
  %36 = load i32, ptr %35, align 8, !noundef !3
  %37 = insertvalue { ptr, i32 } poison, ptr %34, 0
  %38 = insertvalue { ptr, i32 } %37, i32 %36, 1
  resume { ptr, i32 } %38

bb16:                                             ; preds = %bb17
  br label %bb14
}

; core::iter::traits::iterator::Iterator::any::check::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17he59ed53d41a020d5E"(ptr align 8 %_1, ptr align 1 %x.0, i64 %x.1) unnamed_addr #0 {
start:
  %_6 = alloca { { ptr, i64 } }, align 8
  %_0 = alloca i8, align 1
  store ptr %x.0, ptr %_6, align 8
  %0 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 %x.1, ptr %0, align 8
  %1 = load ptr, ptr %_6, align 8, !nonnull !3, !align !4, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_6, i64 8
  %3 = load i64, ptr %2, align 8, !noundef !3
; call core::str::pattern::simd_contains::{{closure}}
  %_4 = call zeroext i1 @"_ZN4core3str7pattern13simd_contains28_$u7b$$u7b$closure$u7d$$u7d$17h535e8ecb57e06f3cE"(ptr align 8 %_1, ptr align 1 %1, i64 %3)
  br i1 %_4, label %bb2, label %bb3

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb4

bb2:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %4 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  ret i1 %5
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h3342aeadf0490bb0E(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %_0 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>", align 8
  store ptr %self.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %self.1, ptr %0, align 8
  %1 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  %3 = load ptr, ptr %2, align 8, !noundef !3
  %4 = insertvalue { ptr, ptr } poison, ptr %1, 0
  %5 = insertvalue { ptr, ptr } %4, ptr %3, 1
  ret { ptr, ptr } %5
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3map17h6594f285465e76b6E(ptr sret(%"core::iter::adapters::map::Map<core::str::iter::Split<'_, char>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:372:38: 372:44}>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 72, i1 false)
  ret void
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h94dcafea3865d658E(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %_0 = alloca %"core::iter::adapters::map::Map<core::str::iter::Chars<'_>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1032:14: 1032:17}>", align 8
  store ptr %self.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %self.1, ptr %0, align 8
  %1 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  %3 = load ptr, ptr %2, align 8, !noundef !3
  %4 = insertvalue { ptr, ptr } poison, ptr %1, 0
  %5 = insertvalue { ptr, ptr } %4, ptr %3, 1
  ret { ptr, ptr } %5
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17ha0442d39fbb13c62E(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %_0 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>", align 8
  store ptr %self.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %self.1, ptr %0, align 8
  %1 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  %3 = load ptr, ptr %2, align 8, !noundef !3
  %4 = insertvalue { ptr, ptr } poison, ptr %1, 0
  %5 = insertvalue { ptr, ptr } %4, ptr %3, 1
  ret { ptr, ptr } %5
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3map17ha175b8935e57b4d1E(ptr sret(%"core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 32, i1 false)
  ret void
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17ha22f492291821f06E(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %_0 = alloca %"core::iter::adapters::map::Map<core::iter::adapters::filter::Filter<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:885:21: 885:24}>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:886:18: 886:23}>", align 8
  store ptr %self.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %self.1, ptr %0, align 8
  %1 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  %3 = load ptr, ptr %2, align 8, !noundef !3
  %4 = insertvalue { ptr, ptr } poison, ptr %1, 0
  %5 = insertvalue { ptr, ptr } %4, ptr %3, 1
  ret { ptr, ptr } %5
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17haef9593dfd7347c5E(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %_0 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>", align 8
  store ptr %self.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %self.1, ptr %0, align 8
  %1 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  %3 = load ptr, ptr %2, align 8, !noundef !3
  %4 = insertvalue { ptr, ptr } poison, ptr %1, 0
  %5 = insertvalue { ptr, ptr } %4, ptr %3, 1
  ret { ptr, ptr } %5
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17hddd951801fe1695cE(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %_0 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>", align 8
  store ptr %self.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %self.1, ptr %0, align 8
  %1 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  %3 = load ptr, ptr %2, align 8, !noundef !3
  %4 = insertvalue { ptr, ptr } poison, ptr %1, 0
  %5 = insertvalue { ptr, ptr } %4, ptr %3, 1
  ret { ptr, ptr } %5
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17hf48e383d41007984E(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %_0 = alloca %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::str::iter::Chars<'_>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1032:14: 1032:17}>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1033:14: 1033:17}>", align 8
  store ptr %self.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %self.1, ptr %0, align 8
  %1 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  %3 = load ptr, ptr %2, align 8, !noundef !3
  %4 = insertvalue { ptr, ptr } poison, ptr %1, 0
  %5 = insertvalue { ptr, ptr } %4, ptr %3, 1
  ret { ptr, ptr } %5
}

; core::iter::traits::iterator::Iterator::map
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17hf8d29c6f78a9b0dbE(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %_0 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>", align 8
  store ptr %self.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %self.1, ptr %0, align 8
  %1 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  %3 = load ptr, ptr %2, align 8, !noundef !3
  %4 = insertvalue { ptr, ptr } poison, ptr %1, 0
  %5 = insertvalue { ptr, ptr } %4, ptr %3, 1
  ret { ptr, ptr } %5
}

; core::iter::traits::iterator::Iterator::zip
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator3zip17hdcf01643cc885968E(ptr sret(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>") align 8 %_0, ptr %self.0, ptr %self.1, ptr align 1 %other.0, i64 %other.1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_5 = alloca i8, align 1
  store i8 1, ptr %_5, align 1
; invoke core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %1 = invoke { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h8f87b9c981928abfE"(ptr align 1 %other.0, i64 %other.1)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %2 = load i8, ptr %_5, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb3, label %bb2

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %b.0 = extractvalue { ptr, ptr } %1, 0
  %b.1 = extractvalue { ptr, ptr } %1, 1
  store i8 0, ptr %_5, align 1
; invoke <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::new
  invoke void @"_ZN111_$LT$core..iter..adapters..zip..Zip$LT$A$C$B$GT$$u20$as$u20$core..iter..adapters..zip..ZipImpl$LT$A$C$B$GT$$GT$3new17h43f6d1ea2f1c8ebdE"(ptr sret(%"core::iter::adapters::zip::Zip<core::slice::iter::Iter<'_, u8>, core::slice::iter::Iter<'_, u8>>") align 8 %_0, ptr %self.0, ptr %self.1, ptr %b.0, ptr %b.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb1
  ret void

bb2:                                              ; preds = %bb3, %bb4
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12

bb3:                                              ; preds = %bb4
  br label %bb2
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator4fold17h78950c0723ad1f69E(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_13 = alloca i8, align 1
  %_11 = alloca { {}, { ptr, i64 } }, align 8
  %_5 = alloca %"core::option::Option<&str>", align 8
  store i8 1, ptr %_13, align 1
  br label %bb1

bb1:                                              ; preds = %bb4, %start
; invoke <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::next
  %1 = invoke { ptr, i64 } @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h1c76a7541460ed07E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb13:                                             ; preds = %cleanup
  %2 = load i8, ptr %_13, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb12, label %bb9

cleanup:                                          ; preds = %bb3, %bb1
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb13

bb2:                                              ; preds = %bb1
  %8 = extractvalue { ptr, i64 } %1, 0
  %9 = extractvalue { ptr, i64 } %1, 1
  store ptr %8, ptr %_5, align 8
  %10 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %9, ptr %10, align 8
  %11 = load ptr, ptr %_5, align 8, !noundef !3
  %12 = ptrtoint ptr %11 to i64
  %13 = icmp eq i64 %12, 0
  %_7 = select i1 %13, i64 0, i64 1
  %14 = icmp eq i64 %_7, 1
  br i1 %14, label %bb3, label %bb5

bb3:                                              ; preds = %bb2
  %x.0 = load ptr, ptr %_5, align 8, !nonnull !3, !align !4, !noundef !3
  %15 = getelementptr inbounds i8, ptr %_5, i64 8
  %x.1 = load i64, ptr %15, align 8, !noundef !3
  store i8 0, ptr %_13, align 1
  store ptr %x.0, ptr %_11, align 8
  %16 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %x.1, ptr %16, align 8
  %17 = load ptr, ptr %_11, align 8, !nonnull !3, !align !4, !noundef !3
  %18 = getelementptr inbounds i8, ptr %_11, i64 8
  %19 = load i64, ptr %18, align 8, !noundef !3
; invoke core::iter::adapters::map::map_fold::{{closure}}
  invoke void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h587fc4d14c89aea0E"(ptr align 8 %f, ptr align 1 %17, i64 %19)
          to label %bb4 unwind label %cleanup

bb5:                                              ; preds = %bb2
  br label %bb6

bb4:                                              ; preds = %bb3
  store i8 1, ptr %_13, align 1
  br label %bb1

bb6:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&str,alloc::string::String,(),<alloc::string::String as core::convert::From<&str>>::from,core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>,<alloc::string::String as core::convert::From<&str>>::from>>::{{closure}}>::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr602drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$str$C$alloc..string..String$C$$LP$$RP$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$C$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h7351bbd5631c9cb1E"(ptr align 8 %f)
          to label %bb7 unwind label %cleanup1

bb10:                                             ; preds = %bb9, %cleanup1
; invoke core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<&str>>
  invoke void @"_ZN4core3ptr67drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$17haa0704467833df80E"(ptr align 8 %self) #28
          to label %bb11 unwind label %terminate

cleanup1:                                         ; preds = %bb6
  %20 = landingpad { ptr, i32 }
          cleanup
  %21 = extractvalue { ptr, i32 } %20, 0
  %22 = extractvalue { ptr, i32 } %20, 1
  store ptr %21, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %22, ptr %23, align 8
  br label %bb10

bb7:                                              ; preds = %bb6
; call core::ptr::drop_in_place<alloc::vec::into_iter::IntoIter<&str>>
  call void @"_ZN4core3ptr67drop_in_place$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$17haa0704467833df80E"(ptr align 8 %self)
  ret void

bb9:                                              ; preds = %bb12, %bb13
; invoke core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&str,alloc::string::String,(),<alloc::string::String as core::convert::From<&str>>::from,core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>,<alloc::string::String as core::convert::From<&str>>::from>>::{{closure}}>::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr602drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$str$C$alloc..string..String$C$$LP$$RP$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$C$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h7351bbd5631c9cb1E"(ptr align 8 %f) #28
          to label %bb10 unwind label %terminate

bb12:                                             ; preds = %bb13
  br label %bb9

terminate:                                        ; preds = %bb10, %bb9
  %24 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %25 = extractvalue { ptr, i32 } %24, 0
  %26 = extractvalue { ptr, i32 } %24, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb11:                                             ; preds = %bb10
  %27 = load ptr, ptr %0, align 8, !noundef !3
  %28 = getelementptr inbounds i8, ptr %0, i64 8
  %29 = load i32, ptr %28, align 8, !noundef !3
  %30 = insertvalue { ptr, i32 } poison, ptr %27, 0
  %31 = insertvalue { ptr, i32 } %30, i32 %29, 1
  resume { ptr, i32 } %31
}

; core::iter::traits::iterator::Iterator::fold
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator4fold17ha8c904dc0075731eE(ptr %0, ptr %1, ptr align 8 %2) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %3 = alloca { ptr, i32, [1 x i32] }, align 8
  %_13 = alloca i8, align 1
  %_11 = alloca i32, align 4
  %_5 = alloca i32, align 4
  %f = alloca ptr, align 8
  %self = alloca %"core::str::iter::Chars<'_>", align 8
  store ptr %0, ptr %self, align 8
  %4 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %1, ptr %4, align 8
  store ptr %2, ptr %f, align 8
  store i8 1, ptr %_13, align 1
  br label %bb1

bb1:                                              ; preds = %bb4, %start
; invoke <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
  %5 = invoke i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h098f681c7a009a98E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup, !range !7

bb13:                                             ; preds = %cleanup
  %6 = load i8, ptr %_13, align 1, !range !10, !noundef !3
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb12, label %bb9

cleanup:                                          ; preds = %bb3, %bb1
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %3, align 8
  %11 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb13

bb2:                                              ; preds = %bb1
  store i32 %5, ptr %_5, align 4
  %12 = load i32, ptr %_5, align 4, !range !7, !noundef !3
  %13 = icmp eq i32 %12, 1114112
  %_7 = select i1 %13, i64 0, i64 1
  %14 = icmp eq i64 %_7, 1
  br i1 %14, label %bb3, label %bb5

bb3:                                              ; preds = %bb2
  %x = load i32, ptr %_5, align 4, !range !8, !noundef !3
  store i8 0, ptr %_13, align 1
  store i32 %x, ptr %_11, align 4
  %15 = load i32, ptr %_11, align 4, !range !8, !noundef !3
; invoke core::iter::adapters::map::map_fold::{{closure}}
  invoke void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hd1a05866582e4a4aE"(ptr align 8 %f, i32 %15)
          to label %bb4 unwind label %cleanup

bb5:                                              ; preds = %bb2
  br label %bb6

bb4:                                              ; preds = %bb3
  store i8 1, ptr %_13, align 1
  br label %bb1

bb6:                                              ; preds = %bb5
  br label %bb7

bb7:                                              ; preds = %bb6
  ret void

bb9:                                              ; preds = %bb12, %bb13
  br label %bb10

bb12:                                             ; preds = %bb13
  br label %bb9

bb10:                                             ; preds = %bb9
  %16 = load ptr, ptr %3, align 8, !noundef !3
  %17 = getelementptr inbounds i8, ptr %3, i64 8
  %18 = load i32, ptr %17, align 8, !noundef !3
  %19 = insertvalue { ptr, i32 } poison, ptr %16, 0
  %20 = insertvalue { ptr, i32 } %19, i32 %18, 1
  resume { ptr, i32 } %20
}

; core::iter::traits::iterator::Iterator::filter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6filter17h6b8bed99a7f0449dE(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %_0 = alloca %"core::iter::adapters::filter::Filter<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:999:50: 999:55}>", align 8
  store ptr %self.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %self.1, ptr %0, align 8
  %1 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  %3 = load ptr, ptr %2, align 8, !noundef !3
  %4 = insertvalue { ptr, ptr } poison, ptr %1, 0
  %5 = insertvalue { ptr, ptr } %4, ptr %3, 1
  ret { ptr, ptr } %5
}

; core::iter::traits::iterator::Iterator::filter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6filter17heb89e890a1f43fd6E(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %_0 = alloca %"core::iter::adapters::filter::Filter<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:885:21: 885:24}>", align 8
  store ptr %self.0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %self.1, ptr %0, align 8
  %1 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  %3 = load ptr, ptr %2, align 8, !noundef !3
  %4 = insertvalue { ptr, ptr } poison, ptr %1, 0
  %5 = insertvalue { ptr, ptr } %4, ptr %3, 1
  ret { ptr, ptr } %5
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator7collect17h22dfae07877a7444E(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
; call <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
  call void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h24f476f892424a52E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %self)
  ret void
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator7collect17h3d0da1055e954de6E(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
; call <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
  call void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h9a5047d828fe7605E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr %self.0, ptr %self.1)
  ret void
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator7collect17h643c76494ad516aaE(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
; call <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
  call void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h8c42a4777c1ece21E"(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 8 %self)
  ret void
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator7collect17ha20c52372ef8d074E(ptr sret(%"alloc::string::String") align 8 %_0, ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
; call <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
  call void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17h28e19a76a7303037E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr %self.0, ptr %self.1)
  ret void
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator7collect17he786b47e156240eaE(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
; call <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
  call void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h749bf32decee7bb8E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %self)
  ret void
}

; core::iter::traits::iterator::Iterator::collect
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator7collect17hfc775d10ed801bebE(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
; call <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
  call void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h726e8ccc3d1e06dbE"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr %self.0, ptr %self.1)
  ret void
}

; core::iter::traits::iterator::Iterator::flat_map
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8flat_map17hb5253756e1508b91E(ptr sret(%"core::iter::adapters::flatten::FlatMap<core::slice::iter::Iter<'_, alloc::string::String>, alloc::vec::Vec<&str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>") align 8 %_0, ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %_7 = alloca %"core::option::Option<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>>", align 8
  %_6 = alloca %"core::option::Option<alloc::vec::into_iter::IntoIter<&str>>", align 8
  %_5 = alloca %"core::iter::adapters::fuse::Fuse<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>>", align 8
  %_3 = alloca %"core::iter::adapters::flatten::FlattenCompat<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>, alloc::vec::into_iter::IntoIter<&str>>", align 8
; call core::iter::traits::iterator::Iterator::map
  %0 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17ha0442d39fbb13c62E(ptr %self.0, ptr %self.1)
  %iter.0 = extractvalue { ptr, ptr } %0, 0
  %iter.1 = extractvalue { ptr, ptr } %0, 1
  store ptr %iter.0, ptr %_7, align 8
  %1 = getelementptr inbounds i8, ptr %_7, i64 8
  store ptr %iter.1, ptr %1, align 8
  %2 = load ptr, ptr %_7, align 8, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_7, i64 8
  %4 = load ptr, ptr %3, align 8
  store ptr %2, ptr %_5, align 8
  %5 = getelementptr inbounds i8, ptr %_5, i64 8
  store ptr %4, ptr %5, align 8
  store ptr null, ptr %_6, align 8
  %6 = load ptr, ptr %_5, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_5, i64 8
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds %"core::iter::adapters::flatten::FlattenCompat<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>, alloc::vec::into_iter::IntoIter<&str>>", ptr %_3, i32 0, i32 2
  store ptr %6, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  store ptr %8, ptr %10, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %_6, i64 32, i1 false)
  %11 = getelementptr inbounds %"core::iter::adapters::flatten::FlattenCompat<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>, alloc::vec::into_iter::IntoIter<&str>>", ptr %_3, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %_6, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_3, i64 80, i1 false)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8for_each17h2637e927dded38b1E(ptr %self.0, ptr %self.1, ptr align 8 %f) unnamed_addr #0 {
start:
  %_4 = alloca %"{closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>>::{closure#0}}>::{closure#0}}", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %f, i64 24, i1 false)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9ee17655676718f4E"(ptr %self.0, ptr %self.1, ptr align 8 %_4)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8for_each17h2e6d558b066195b3E(ptr %self.0, ptr %self.1, ptr align 8 %f) unnamed_addr #0 {
start:
  %_4 = alloca %"{closure@core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString, {closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}>::{closure#0}}", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %f, i64 24, i1 false)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hfec6113d7ed1e02bE"(ptr %self.0, ptr %self.1, ptr align 8 %_4)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8for_each17h5f4b02a9121871a2E(ptr %self.0, ptr %self.1, ptr align 8 %f) unnamed_addr #0 {
start:
  %_4 = alloca %"{closure@core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString, {closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}>::{closure#0}}", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %f, i64 24, i1 false)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h4642582ed18eb4beE"(ptr %self.0, ptr %self.1, ptr align 8 %_4)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8for_each17h703528618cf53600E(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %_4 = alloca %"{closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>>::{closure#0}}>::{closure#0}}", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %f, i64 24, i1 false)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h34583d1c44990ad5E"(ptr align 8 %self, ptr align 8 %_4)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8for_each17h900cf0b3f8edd3eeE(ptr %self.0, ptr %self.1, ptr align 8 %f) unnamed_addr #0 {
start:
  %_4 = alloca %"{closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>>::{closure#0}}>::{closure#0}}", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %f, i64 24, i1 false)
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17hb3709301ba9826cdE"(ptr %self.0, ptr %self.1, ptr align 8 %_4)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator8for_each17hf5e2ad6063a780e5E(ptr %self.0, ptr %self.1, ptr align 8 %f) unnamed_addr #0 {
start:
  %_4 = alloca ptr, align 8
  store ptr %f, ptr %_4, align 8
  %0 = load ptr, ptr %_4, align 8, !nonnull !3, !align !5, !noundef !3
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h2811b9ffdd2cc4a6E"(ptr %self.0, ptr %self.1, ptr align 8 %0)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h0a0efb71045cef3aE"(ptr align 8 %_1, ptr align 8 %item) unnamed_addr #0 {
start:
  %_5 = alloca { %"alloc::string::String" }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %item, i64 24, i1 false)
; call alloc::vec::Vec<T,A>::extend_trusted::{{closure}}
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted28_$u7b$$u7b$closure$u7d$$u7d$17hc217f6865f223163E"(ptr align 8 %_1, ptr align 8 %_5)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h87affc62794b80ccE"(ptr align 8 %_1, ptr align 8 %item) unnamed_addr #0 {
start:
  %_5 = alloca { %"alloc::string::String" }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %item, i64 24, i1 false)
; call alloc::vec::Vec<T,A>::extend_trusted::{{closure}}
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted28_$u7b$$u7b$closure$u7d$$u7d$17hb2220676ca50560bE"(ptr align 8 %_1, ptr align 8 %_5)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h8d34aa2ddcae9d2dE"(ptr align 8 %_1, ptr align 8 %item) unnamed_addr #0 {
start:
  %_5 = alloca { %"alloc::string::String" }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %item, i64 24, i1 false)
; call alloc::vec::Vec<T,A>::extend_trusted::{{closure}}
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted28_$u7b$$u7b$closure$u7d$$u7d$17h8a3cfba5c47f70e4E"(ptr align 8 %_1, ptr align 8 %_5)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h99c4570e14642e9dE"(ptr align 8 %_1, ptr align 8 %item) unnamed_addr #0 {
start:
  %_5 = alloca { %"std::ffi::os_str::OsString" }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %item, i64 24, i1 false)
; call alloc::vec::Vec<T,A>::extend_trusted::{{closure}}
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted28_$u7b$$u7b$closure$u7d$$u7d$17h31bb52ffff08d917E"(ptr align 8 %_1, ptr align 8 %_5)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h9ffe1a635ed6cce9E"(ptr align 8 %_1, i32 %item) unnamed_addr #0 {
start:
  %_5 = alloca i32, align 4
  store i32 %item, ptr %_5, align 4
  %0 = load i32, ptr %_5, align 4, !range !8, !noundef !3
; call <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
  call void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h71bd49155108cbabE"(ptr align 8 %_1, i32 %0)
  ret void
}

; core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17ha5f916372d3e1500E"(ptr align 8 %_1, ptr align 8 %item) unnamed_addr #0 {
start:
  %_5 = alloca { %"std::ffi::os_str::OsString" }, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %item, i64 24, i1 false)
; call alloc::vec::Vec<T,A>::extend_trusted::{{closure}}
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted28_$u7b$$u7b$closure$u7d$$u7d$17h1f23e05e11a50a00E"(ptr align 8 %_1, ptr align 8 %_5)
  ret void
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator8try_fold17h4245fc9ba6424fb4E(ptr align 8 %self, i64 %init, ptr align 1 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_17 = alloca i8, align 1
  %_11 = alloca { i64, ptr }, align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>", align 8
  %_5 = alloca ptr, align 8
  %accum = alloca i64, align 8
  %_0 = alloca %"core::option::Option<usize>", align 8
  %f = alloca ptr, align 8
  store ptr %0, ptr %f, align 8
  store i8 1, ptr %_17, align 1
  store i64 %init, ptr %accum, align 8
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8cba68a285d0a8e1E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb17:                                             ; preds = %cleanup
  %3 = load i8, ptr %_17, align 1, !range !10, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb16, label %bb14

cleanup:                                          ; preds = %bb11, %bb8, %bb4, %bb3, %bb1
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %1, align 8
  %8 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb17

bb2:                                              ; preds = %bb1
  store ptr %2, ptr %_5, align 8
  %9 = load ptr, ptr %_5, align 8, !noundef !3
  %10 = ptrtoint ptr %9 to i64
  %11 = icmp eq i64 %10, 0
  %_6 = select i1 %11, i64 0, i64 1
  %12 = icmp eq i64 %_6, 1
  br i1 %12, label %bb3, label %bb10

bb3:                                              ; preds = %bb2
  %x = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
  store i8 0, ptr %_17, align 1
  %_12 = load i64, ptr %accum, align 8, !noundef !3
  store i64 %_12, ptr %_11, align 8
  %13 = getelementptr inbounds i8, ptr %_11, i64 8
  store ptr %x, ptr %13, align 8
  %14 = load i64, ptr %_11, align 8, !noundef !3
  %15 = getelementptr inbounds i8, ptr %_11, i64 8
  %16 = load ptr, ptr %15, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::iter::adapters::map::map_try_fold::{{closure}}
  %17 = invoke { i64, i64 } @"_ZN4core4iter8adapters3map12map_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17he4b6e8f557dbed89E"(ptr align 8 %f, i64 %14, ptr align 8 %16)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb4:                                              ; preds = %bb3
  %_9.0 = extractvalue { i64, i64 } %17, 0
  %_9.1 = extractvalue { i64, i64 } %17, 1
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %18 = invoke { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h84932a33c096221eE"(i64 %_9.0, i64 %_9.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = extractvalue { i64, i64 } %18, 1
  store i64 %19, ptr %_8, align 8
  %21 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %20, ptr %21, align 8
  %_13 = load i64, ptr %_8, align 8, !range !9, !noundef !3
  %22 = icmp eq i64 %_13, 0
  br i1 %22, label %bb6, label %bb8

bb6:                                              ; preds = %bb5
  %23 = getelementptr inbounds i8, ptr %_8, i64 8
  %val = load i64, ptr %23, align 8, !noundef !3
  store i8 1, ptr %_17, align 1
  store i64 %val, ptr %accum, align 8
  br label %bb1

bb8:                                              ; preds = %bb5
; invoke <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %24 = invoke { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha3c359b751cf9c63E"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %25 = extractvalue { i64, i64 } %24, 0
  %26 = extractvalue { i64, i64 } %24, 1
  store i64 %25, ptr %_0, align 8
  %27 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %26, ptr %27, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb9
  %28 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %29 = getelementptr inbounds i8, ptr %_0, i64 8
  %30 = load i64, ptr %29, align 8
  %31 = insertvalue { i64, i64 } poison, i64 %28, 0
  %32 = insertvalue { i64, i64 } %31, i64 %30, 1
  ret { i64, i64 } %32

bb7:                                              ; No predecessors!
  unreachable

bb11:                                             ; preds = %bb10
  store i8 0, ptr %_17, align 1
  %_16 = load i64, ptr %accum, align 8, !noundef !3
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::from_output
  %33 = invoke { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h46e9161d433cd730E"(i64 %_16)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %34 = extractvalue { i64, i64 } %33, 0
  %35 = extractvalue { i64, i64 } %33, 1
  store i64 %34, ptr %_0, align 8
  %36 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %35, ptr %36, align 8
  br label %bb13

bb14:                                             ; preds = %bb16, %bb17
  %37 = load ptr, ptr %1, align 8, !noundef !3
  %38 = getelementptr inbounds i8, ptr %1, i64 8
  %39 = load i32, ptr %38, align 8, !noundef !3
  %40 = insertvalue { ptr, i32 } poison, ptr %37, 0
  %41 = insertvalue { ptr, i32 } %40, i32 %39, 1
  resume { ptr, i32 } %41

bb16:                                             ; preds = %bb17
  br label %bb14
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator8try_fold17h50eb73f9c6b70769E(ptr align 8 %self, i64 %init, ptr align 1 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_17 = alloca i8, align 1
  %_11 = alloca { i64, ptr }, align 8
  %_8 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>", align 8
  %_5 = alloca ptr, align 8
  %accum = alloca i64, align 8
  %_0 = alloca %"core::option::Option<usize>", align 8
  %f = alloca ptr, align 8
  store ptr %0, ptr %f, align 8
  store i8 1, ptr %_17, align 1
  store i64 %init, ptr %accum, align 8
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9cd2dfb86b854212E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb17:                                             ; preds = %cleanup
  %3 = load i8, ptr %_17, align 1, !range !10, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb16, label %bb14

cleanup:                                          ; preds = %bb11, %bb8, %bb4, %bb3, %bb1
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %1, align 8
  %8 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb17

bb2:                                              ; preds = %bb1
  store ptr %2, ptr %_5, align 8
  %9 = load ptr, ptr %_5, align 8, !noundef !3
  %10 = ptrtoint ptr %9 to i64
  %11 = icmp eq i64 %10, 0
  %_6 = select i1 %11, i64 0, i64 1
  %12 = icmp eq i64 %_6, 1
  br i1 %12, label %bb3, label %bb10

bb3:                                              ; preds = %bb2
  %x = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
  store i8 0, ptr %_17, align 1
  %_12 = load i64, ptr %accum, align 8, !noundef !3
  store i64 %_12, ptr %_11, align 8
  %13 = getelementptr inbounds i8, ptr %_11, i64 8
  store ptr %x, ptr %13, align 8
  %14 = load i64, ptr %_11, align 8, !noundef !3
  %15 = getelementptr inbounds i8, ptr %_11, i64 8
  %16 = load ptr, ptr %15, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::iter::adapters::map::map_try_fold::{{closure}}
  %17 = invoke { i64, i64 } @"_ZN4core4iter8adapters3map12map_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h88b1c4bdc784234fE"(ptr align 8 %f, i64 %14, ptr align 8 %16)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb4:                                              ; preds = %bb3
  %_9.0 = extractvalue { i64, i64 } %17, 0
  %_9.1 = extractvalue { i64, i64 } %17, 1
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::branch
  %18 = invoke { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h84932a33c096221eE"(i64 %_9.0, i64 %_9.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = extractvalue { i64, i64 } %18, 1
  store i64 %19, ptr %_8, align 8
  %21 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %20, ptr %21, align 8
  %_13 = load i64, ptr %_8, align 8, !range !9, !noundef !3
  %22 = icmp eq i64 %_13, 0
  br i1 %22, label %bb6, label %bb8

bb6:                                              ; preds = %bb5
  %23 = getelementptr inbounds i8, ptr %_8, i64 8
  %val = load i64, ptr %23, align 8, !noundef !3
  store i8 1, ptr %_17, align 1
  store i64 %val, ptr %accum, align 8
  br label %bb1

bb8:                                              ; preds = %bb5
; invoke <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
  %24 = invoke { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha3c359b751cf9c63E"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %25 = extractvalue { i64, i64 } %24, 0
  %26 = extractvalue { i64, i64 } %24, 1
  store i64 %25, ptr %_0, align 8
  %27 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %26, ptr %27, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb9
  %28 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %29 = getelementptr inbounds i8, ptr %_0, i64 8
  %30 = load i64, ptr %29, align 8
  %31 = insertvalue { i64, i64 } poison, i64 %28, 0
  %32 = insertvalue { i64, i64 } %31, i64 %30, 1
  ret { i64, i64 } %32

bb7:                                              ; No predecessors!
  unreachable

bb11:                                             ; preds = %bb10
  store i8 0, ptr %_17, align 1
  %_16 = load i64, ptr %accum, align 8, !noundef !3
; invoke <core::option::Option<T> as core::ops::try_trait::Try>::from_output
  %33 = invoke { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h46e9161d433cd730E"(i64 %_16)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %34 = extractvalue { i64, i64 } %33, 0
  %35 = extractvalue { i64, i64 } %33, 1
  store i64 %34, ptr %_0, align 8
  %36 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %35, ptr %36, align 8
  br label %bb13

bb14:                                             ; preds = %bb16, %bb17
  %37 = load ptr, ptr %1, align 8, !noundef !3
  %38 = getelementptr inbounds i8, ptr %1, i64 8
  %39 = load i32, ptr %38, align 8, !noundef !3
  %40 = insertvalue { ptr, i32 } poison, ptr %37, 0
  %41 = insertvalue { ptr, i32 } %40, i32 %39, 1
  resume { ptr, i32 } %41

bb16:                                             ; preds = %bb17
  br label %bb14
}

; core::iter::traits::iterator::Iterator::try_fold
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @_ZN4core4iter6traits8iterator8Iterator8try_fold17hec297bc4d19a340cE(ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_17 = alloca i8, align 1
  %_11 = alloca { {}, { ptr, i64 } }, align 8
  %_8 = alloca i8, align 1
  %_5 = alloca %"core::option::Option<&[u8]>", align 8
  %_0 = alloca i8, align 1
  %f = alloca ptr, align 8
  store ptr %0, ptr %f, align 8
  store i8 1, ptr %_17, align 1
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Windows<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke { ptr, i64 } @"_ZN94_$LT$core..slice..iter..Windows$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2a20eba02417e047E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb17:                                             ; preds = %cleanup
  %3 = load i8, ptr %_17, align 1, !range !10, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb16, label %bb14

cleanup:                                          ; preds = %bb11, %bb8, %bb4, %bb3, %bb1
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %1, align 8
  %8 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb17

bb2:                                              ; preds = %bb1
  %9 = extractvalue { ptr, i64 } %2, 0
  %10 = extractvalue { ptr, i64 } %2, 1
  store ptr %9, ptr %_5, align 8
  %11 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %10, ptr %11, align 8
  %12 = load ptr, ptr %_5, align 8, !noundef !3
  %13 = ptrtoint ptr %12 to i64
  %14 = icmp eq i64 %13, 0
  %_6 = select i1 %14, i64 0, i64 1
  %15 = icmp eq i64 %_6, 1
  br i1 %15, label %bb3, label %bb10

bb3:                                              ; preds = %bb2
  %x.0 = load ptr, ptr %_5, align 8, !nonnull !3, !align !4, !noundef !3
  %16 = getelementptr inbounds i8, ptr %_5, i64 8
  %x.1 = load i64, ptr %16, align 8, !noundef !3
  store i8 0, ptr %_17, align 1
  store ptr %x.0, ptr %_11, align 8
  %17 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %x.1, ptr %17, align 8
  %18 = load ptr, ptr %_11, align 8, !nonnull !3, !align !4, !noundef !3
  %19 = getelementptr inbounds i8, ptr %_11, i64 8
  %20 = load i64, ptr %19, align 8, !noundef !3
; invoke core::iter::traits::iterator::Iterator::any::check::{{closure}}
  %_9 = invoke zeroext i1 @"_ZN4core4iter6traits8iterator8Iterator3any5check28_$u7b$$u7b$closure$u7d$$u7d$17he59ed53d41a020d5E"(ptr align 8 %f, ptr align 1 %18, i64 %20)
          to label %bb4 unwind label %cleanup

bb10:                                             ; preds = %bb2
  br label %bb11

bb4:                                              ; preds = %bb3
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
  %21 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc1923e2a87ed3b15E"(i1 zeroext %_9)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %22 = zext i1 %21 to i8
  store i8 %22, ptr %_8, align 1
  %23 = load i8, ptr %_8, align 1, !range !10, !noundef !3
  %24 = trunc i8 %23 to i1
  %_13 = zext i1 %24 to i64
  %25 = icmp eq i64 %_13, 0
  br i1 %25, label %bb6, label %bb8

bb6:                                              ; preds = %bb5
  store i8 1, ptr %_17, align 1
  br label %bb1

bb8:                                              ; preds = %bb5
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::FromResidual>::from_residual
  %26 = invoke zeroext i1 @"_ZN104_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17h574976ef0243ca0fE"()
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %27 = zext i1 %26 to i8
  store i8 %27, ptr %_0, align 1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb9
  %28 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %29 = trunc i8 %28 to i1
  ret i1 %29

bb7:                                              ; No predecessors!
  unreachable

bb11:                                             ; preds = %bb10
  store i8 0, ptr %_17, align 1
; invoke <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
  %30 = invoke zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hb6a9d9105c393883E"()
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb11
  %31 = zext i1 %30 to i8
  store i8 %31, ptr %_0, align 1
  br label %bb13

bb14:                                             ; preds = %bb16, %bb17
  %32 = load ptr, ptr %1, align 8, !noundef !3
  %33 = getelementptr inbounds i8, ptr %1, i64 8
  %34 = load i32, ptr %33, align 8, !noundef !3
  %35 = insertvalue { ptr, i32 } poison, ptr %32, 0
  %36 = insertvalue { ptr, i32 } %35, i32 %34, 1
  resume { ptr, i32 } %36

bb16:                                             ; preds = %bb17
  br label %bb14
}

; core::iter::traits::iterator::Iterator::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core4iter6traits8iterator8Iterator9size_hint17h3b653c5f4a3b742bE(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  store i64 0, ptr %_0, align 8
  %0 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %1 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %2 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_0, i32 0, i32 1
  store i64 %0, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %2, i64 8
  store i64 %1, ptr %3, align 8
  ret void
}

; core::iter::adapters::map::map_try_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3map12map_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17h88b1c4bdc784234fE"(ptr align 8 %_1, i64 %acc, ptr align 8 %elt) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca i8, align 1
  %_8 = alloca ptr, align 8
  %_5 = alloca { i64, i64 }, align 8
  %_4 = getelementptr i8, ptr %_1, i64 8
  store i8 1, ptr %_10, align 1
  %_9 = load ptr, ptr %_1, align 8, !nonnull !3, !align !4, !noundef !3
  store ptr %elt, ptr %_8, align 8
  %1 = load ptr, ptr %_8, align 8, !nonnull !3, !align !5, !noundef !3
; invoke alloc::str::join_generic_copy::{{closure}}::{{closure}}
  %_7 = invoke i64 @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h71a136d86f0be180E"(ptr align 1 %_9, ptr align 8 %1)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, ptr %_10, align 1
  store i64 %acc, ptr %_5, align 8
  %8 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %_7, ptr %8, align 8
  %9 = load i64, ptr %_5, align 8, !noundef !3
  %10 = getelementptr inbounds i8, ptr %_5, i64 8
  %11 = load i64, ptr %10, align 8, !noundef !3
; invoke core::ops::function::FnMut::call_mut
  %12 = invoke { i64, i64 } @_ZN4core3ops8function5FnMut8call_mut17h9830006f205e19b3E(ptr align 1 %_4, i64 %9, i64 %11)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_0.0 = extractvalue { i64, i64 } %12, 0
  %_0.1 = extractvalue { i64, i64 } %12, 1
  %13 = insertvalue { i64, i64 } poison, i64 %_0.0, 0
  %14 = insertvalue { i64, i64 } %13, i64 %_0.1, 1
  ret { i64, i64 } %14

bb3:                                              ; preds = %bb4, %bb5
  %15 = load ptr, ptr %0, align 8, !noundef !3
  %16 = getelementptr inbounds i8, ptr %0, i64 8
  %17 = load i32, ptr %16, align 8, !noundef !3
  %18 = insertvalue { ptr, i32 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i32 } %18, i32 %17, 1
  resume { ptr, i32 } %19

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::adapters::map::map_try_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core4iter8adapters3map12map_try_fold28_$u7b$$u7b$closure$u7d$$u7d$17he4b6e8f557dbed89E"(ptr align 8 %_1, i64 %acc, ptr align 8 %elt) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca i8, align 1
  %_8 = alloca ptr, align 8
  %_5 = alloca { i64, i64 }, align 8
  %_4 = getelementptr i8, ptr %_1, i64 8
  store i8 1, ptr %_10, align 1
  %_9 = load ptr, ptr %_1, align 8, !nonnull !3, !align !4, !noundef !3
  store ptr %elt, ptr %_8, align 8
  %1 = load ptr, ptr %_8, align 8, !nonnull !3, !align !5, !noundef !3
; invoke alloc::str::join_generic_copy::{{closure}}::{{closure}}
  %_7 = invoke i64 @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h8a0e033de6fda2a8E"(ptr align 1 %_9, ptr align 8 %1)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, ptr %_10, align 1
  store i64 %acc, ptr %_5, align 8
  %8 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %_7, ptr %8, align 8
  %9 = load i64, ptr %_5, align 8, !noundef !3
  %10 = getelementptr inbounds i8, ptr %_5, i64 8
  %11 = load i64, ptr %10, align 8, !noundef !3
; invoke core::ops::function::FnMut::call_mut
  %12 = invoke { i64, i64 } @_ZN4core3ops8function5FnMut8call_mut17h9830006f205e19b3E(ptr align 1 %_4, i64 %9, i64 %11)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_0.0 = extractvalue { i64, i64 } %12, 0
  %_0.1 = extractvalue { i64, i64 } %12, 1
  %13 = insertvalue { i64, i64 } poison, i64 %_0.0, 0
  %14 = insertvalue { i64, i64 } %13, i64 %_0.1, 1
  ret { i64, i64 } %14

bb3:                                              ; preds = %bb4, %bb5
  %15 = load ptr, ptr %0, align 8, !noundef !3
  %16 = getelementptr inbounds i8, ptr %0, i64 8
  %17 = load i32, ptr %16, align 8, !noundef !3
  %18 = insertvalue { ptr, i32 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i32 } %18, i32 %17, 1
  resume { ptr, i32 } %19

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h020f7469564c4560E"(ptr align 8 %_1, ptr align 8 %elt) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca ptr, align 8
  %_7 = alloca %"std::ffi::os_str::OsString", align 8
  %_5 = alloca { {}, %"std::ffi::os_str::OsString" }, align 8
  store i8 1, ptr %_10, align 1
  %_8 = getelementptr inbounds %"{closure@core::iter::adapters::map::map_fold<&std::ffi::os_str::OsString, std::ffi::os_str::OsString, (), {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}, {closure@core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString, {closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 1
  store ptr %elt, ptr %_9, align 8
  %1 = load ptr, ptr %_9, align 8, !nonnull !3, !align !5, !noundef !3
; invoke pkg_config::WrappedCommand::args::{{closure}}
  invoke void @"_ZN10pkg_config14WrappedCommand4args28_$u7b$$u7b$closure$u7d$$u7d$17he17fb00896ed542dE"(ptr sret(%"std::ffi::os_str::OsString") align 8 %_7, ptr align 1 %_8, ptr align 8 %1)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, ptr %_10, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %_7, i64 24, i1 false)
; invoke core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  invoke void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17ha5f916372d3e1500E"(ptr align 8 %_1, ptr align 8 %_5)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h399e2510ede9aa8bE"(ptr align 8 %_1, ptr align 8 %elt) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca ptr, align 8
  %_7 = alloca %"alloc::string::String", align 8
  %_5 = alloca { {}, %"alloc::string::String" }, align 8
  store i8 1, ptr %_10, align 1
  %_8 = getelementptr inbounds %"{closure@core::iter::adapters::map::map_fold<&(std::ffi::os_str::OsString, std::ffi::os_str::OsString), alloc::string::String, (), {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}, {closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>>::{closure#0}}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 1
  store ptr %elt, ptr %_9, align 8
  %1 = load ptr, ptr %_9, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}
  invoke void @"_ZN65_$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h54c9c29748754e8aE"(ptr sret(%"alloc::string::String") align 8 %_7, ptr align 1 %_8, ptr align 8 %1)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, ptr %_10, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %_7, i64 24, i1 false)
; invoke core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  invoke void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h0a0efb71045cef3aE"(ptr align 8 %_1, ptr align 8 %_5)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h587fc4d14c89aea0E"(ptr align 8 %_1, ptr align 1 %elt.0, i64 %elt.1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca { { ptr, i64 } }, align 8
  %_7 = alloca %"alloc::string::String", align 8
  %_5 = alloca { {}, %"alloc::string::String" }, align 8
  store i8 1, ptr %_10, align 1
  %_8 = getelementptr inbounds %"{closure@core::iter::adapters::map::map_fold<&str, alloc::string::String, (), fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}, {closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>>::{closure#0}}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 1
  store ptr %elt.0, ptr %_9, align 8
  %1 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %elt.1, ptr %1, align 8
  %2 = load ptr, ptr %_9, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_9, i64 8
  %4 = load i64, ptr %3, align 8, !noundef !3
; invoke core::ops::function::FnMut::call_mut
  invoke void @_ZN4core3ops8function5FnMut8call_mut17h8f9aa82af1e27c21E(ptr sret(%"alloc::string::String") align 8 %_7, ptr align 1 %_8, ptr align 1 %2, i64 %4)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %5 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %0, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, ptr %_10, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %_7, i64 24, i1 false)
; invoke core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  invoke void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h87affc62794b80ccE"(ptr align 8 %_1, ptr align 8 %_5)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %11 = load ptr, ptr %0, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  %13 = load i32, ptr %12, align 8, !noundef !3
  %14 = insertvalue { ptr, i32 } poison, ptr %11, 0
  %15 = insertvalue { ptr, i32 } %14, i32 %13, 1
  resume { ptr, i32 } %15

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hd1a05866582e4a4aE"(ptr align 8 %_1, i32 %elt) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca i32, align 4
  %_5 = alloca i32, align 4
  store i8 1, ptr %_10, align 1
  %_8 = getelementptr i8, ptr %_1, i64 8
  store i32 %elt, ptr %_9, align 4
  %1 = load i32, ptr %_9, align 4, !range !8, !noundef !3
; invoke pkg_config::envify::{{closure}}
  %_7 = invoke i32 @"_ZN10pkg_config6envify28_$u7b$$u7b$closure$u7d$$u7d$17h288d09a4104bde75E"(ptr align 1 %_8, i32 %1)
          to label %bb1 unwind label %cleanup, !range !8

bb5:                                              ; preds = %cleanup
  %2 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, ptr %_10, align 1
  store i32 %_7, ptr %_5, align 4
  %8 = load i32, ptr %_5, align 4, !range !8, !noundef !3
; invoke core::iter::adapters::map::map_fold::{{closure}}
  invoke void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hf5bd133c226e7a4bE"(ptr align 8 %_1, i32 %8)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %9 = load ptr, ptr %0, align 8, !noundef !3
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  %11 = load i32, ptr %10, align 8, !noundef !3
  %12 = insertvalue { ptr, i32 } poison, ptr %9, 0
  %13 = insertvalue { ptr, i32 } %12, i32 %11, 1
  resume { ptr, i32 } %13

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17he3379851e85982c2E"(ptr align 8 %_1, ptr align 8 %elt) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca ptr, align 8
  %_7 = alloca %"std::ffi::os_str::OsString", align 8
  %_5 = alloca { {}, %"std::ffi::os_str::OsString" }, align 8
  store i8 1, ptr %_10, align 1
  %_8 = getelementptr inbounds %"{closure@core::iter::adapters::map::map_fold<&&str, std::ffi::os_str::OsString, (), {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}, {closure@core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString, {closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 1
  store ptr %elt, ptr %_9, align 8
  %1 = load ptr, ptr %_9, align 8, !nonnull !3, !align !5, !noundef !3
; invoke pkg_config::WrappedCommand::args::{{closure}}
  invoke void @"_ZN10pkg_config14WrappedCommand4args28_$u7b$$u7b$closure$u7d$$u7d$17hbe86a674087bf527E"(ptr sret(%"std::ffi::os_str::OsString") align 8 %_7, ptr align 1 %_8, ptr align 8 %1)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, ptr %_10, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %_7, i64 24, i1 false)
; invoke core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  invoke void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h99c4570e14642e9dE"(ptr align 8 %_1, ptr align 8 %_5)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hed146b6de3032fafE"(ptr align 8 %_1, ptr align 8 %elt) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca ptr, align 8
  %_7 = alloca %"alloc::string::String", align 8
  %_5 = alloca { {}, %"alloc::string::String" }, align 8
  store i8 1, ptr %_10, align 1
  %_8 = getelementptr inbounds %"{closure@core::iter::adapters::map::map_fold<&std::ffi::os_str::OsString, alloc::string::String, (), {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}, {closure@core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String, {closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>>::{closure#0}}>::{closure#0}}>::{closure#0}}", ptr %_1, i32 0, i32 1
  store ptr %elt, ptr %_9, align 8
  %1 = load ptr, ptr %_9, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}
  invoke void @"_ZN65_$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h820fe77023d49542E"(ptr sret(%"alloc::string::String") align 8 %_7, ptr align 1 %_8, ptr align 8 %1)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %2 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, ptr %_10, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %_7, i64 24, i1 false)
; invoke core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  invoke void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h8d34aa2ddcae9d2dE"(ptr align 8 %_1, ptr align 8 %_5)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::adapters::map::map_fold::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hf5bd133c226e7a4bE"(ptr align 8 %_1, i32 %elt) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca i32, align 4
  %_5 = alloca i32, align 4
  store i8 1, ptr %_10, align 1
  %_8 = getelementptr i8, ptr %_1, i64 8
  store i32 %elt, ptr %_9, align 4
  %1 = load i32, ptr %_9, align 4, !range !8, !noundef !3
; invoke pkg_config::envify::{{closure}}
  %_7 = invoke i32 @"_ZN10pkg_config6envify28_$u7b$$u7b$closure$u7d$$u7d$17hcae50e12f20d25a4E"(ptr align 1 %_8, i32 %1)
          to label %bb1 unwind label %cleanup, !range !8

bb5:                                              ; preds = %cleanup
  %2 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb4, label %bb3

cleanup:                                          ; preds = %bb1, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb5

bb1:                                              ; preds = %start
  store i8 0, ptr %_10, align 1
  store i32 %_7, ptr %_5, align 4
  %8 = load i32, ptr %_5, align 4, !range !8, !noundef !3
; invoke core::iter::traits::iterator::Iterator::for_each::call::{{closure}}
  invoke void @"_ZN4core4iter6traits8iterator8Iterator8for_each4call28_$u7b$$u7b$closure$u7d$$u7d$17h9ffe1a635ed6cce9E"(ptr align 8 %_1, i32 %8)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret void

bb3:                                              ; preds = %bb4, %bb5
  %9 = load ptr, ptr %0, align 8, !noundef !3
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  %11 = load i32, ptr %10, align 8, !noundef !3
  %12 = insertvalue { ptr, i32 } poison, ptr %9, 0
  %13 = insertvalue { ptr, i32 } %12, i32 %11, 1
  resume { ptr, i32 } %13

bb4:                                              ; preds = %bb5
  br label %bb3
}

; core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h65f65e456bf3a40dE(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca { i64, %"core::option::Option<usize>" }, align 8
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h18471fb3af8f3228E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_2, ptr align 8 %self)
  %_0 = load i64, ptr %_2, align 8, !noundef !3
  ret i64 %_0
}

; core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
; Function Attrs: nonlazybind uwtable
define i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17hf914ea3fcbab55d7E(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca { i64, %"core::option::Option<usize>" }, align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
  call void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hb90bafba762f574eE"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_2, ptr align 8 %self)
  %_0 = load i64, ptr %_2, align 8, !noundef !3
  ret i64 %_0
}

; core::iter::adapters::flatten::and_then_or_clear
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @_ZN4core4iter8adapters7flatten17and_then_or_clear17hd5d151cdc3c95050E(ptr align 8 %opt) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_12 = alloca %"core::option::Option<alloc::vec::into_iter::IntoIter<&str>>", align 8
  %self = alloca ptr, align 8
  %_6 = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  %x = alloca %"core::option::Option<&str>", align 8
  %_0 = alloca %"core::option::Option<&str>", align 8
  %1 = load ptr, ptr %opt, align 8, !noundef !3
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_13 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_13, 0
  br i1 %4, label %bb14, label %bb15

bb14:                                             ; preds = %start
  store ptr null, ptr %self, align 8
  br label %bb13

bb15:                                             ; preds = %start
  store ptr %opt, ptr %self, align 8
  br label %bb13

bb13:                                             ; preds = %bb15, %bb14
  %5 = load ptr, ptr %self, align 8, !noundef !3
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_16 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_16, 0
  br i1 %8, label %bb17, label %bb18

bb17:                                             ; preds = %bb13
  store ptr null, ptr %_6, align 8
  br label %bb16

bb18:                                             ; preds = %bb13
  %v = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %v, ptr %_6, align 8
  br label %bb16

bb16:                                             ; preds = %bb18, %bb17
  %9 = load ptr, ptr %_6, align 8, !noundef !3
  %10 = ptrtoint ptr %9 to i64
  %11 = icmp eq i64 %10, 0
  %_8 = select i1 %11, i64 1, i64 0
  %12 = icmp eq i64 %_8, 0
  br i1 %12, label %bb1, label %bb3

bb1:                                              ; preds = %bb16
  %val = load ptr, ptr %_6, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %val, ptr %_5, align 8
  %13 = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
; call core::ops::function::FnOnce::call_once
  %14 = call { ptr, i64 } @_ZN4core3ops8function6FnOnce9call_once17h0e04a48104de7052E(ptr align 8 %13)
  %15 = extractvalue { ptr, i64 } %14, 0
  %16 = extractvalue { ptr, i64 } %14, 1
  store ptr %15, ptr %x, align 8
  %17 = getelementptr inbounds i8, ptr %x, i64 8
  store i64 %16, ptr %17, align 8
  %18 = load ptr, ptr %x, align 8, !noundef !3
  %19 = ptrtoint ptr %18 to i64
  %20 = icmp eq i64 %19, 0
  %_19 = select i1 %20, i64 0, i64 1
  %_18 = icmp eq i64 %_19, 1
  %_10 = xor i1 %_18, true
  br i1 %_10, label %bb5, label %bb8

bb3:                                              ; preds = %bb16
  store ptr null, ptr %_0, align 8
  br label %bb11

bb8:                                              ; preds = %bb1
  br label %bb9

bb5:                                              ; preds = %bb1
  store ptr null, ptr %_12, align 8
; invoke core::ptr::drop_in_place<core::option::Option<alloc::vec::into_iter::IntoIter<&str>>>
  invoke void @"_ZN4core3ptr95drop_in_place$LT$core..option..Option$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$GT$$GT$17h75209443e728ad1dE"(ptr align 8 %opt)
          to label %bb6 unwind label %cleanup

bb9:                                              ; preds = %bb6, %bb8
  %21 = load ptr, ptr %x, align 8, !align !4, !noundef !3
  %22 = getelementptr inbounds i8, ptr %x, i64 8
  %23 = load i64, ptr %22, align 8
  store ptr %21, ptr %_0, align 8
  %24 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %23, ptr %24, align 8
  br label %bb11

bb7:                                              ; preds = %cleanup
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %opt, ptr align 8 %_12, i64 32, i1 false)
  %25 = load ptr, ptr %0, align 8, !noundef !3
  %26 = getelementptr inbounds i8, ptr %0, i64 8
  %27 = load i32, ptr %26, align 8, !noundef !3
  %28 = insertvalue { ptr, i32 } poison, ptr %25, 0
  %29 = insertvalue { ptr, i32 } %28, i32 %27, 1
  resume { ptr, i32 } %29

cleanup:                                          ; preds = %bb5
  %30 = landingpad { ptr, i32 }
          cleanup
  %31 = extractvalue { ptr, i32 } %30, 0
  %32 = extractvalue { ptr, i32 } %30, 1
  store ptr %31, ptr %0, align 8
  %33 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %32, ptr %33, align 8
  br label %bb7

bb6:                                              ; preds = %bb5
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %opt, ptr align 8 %_12, i64 32, i1 false)
  br label %bb9

bb11:                                             ; preds = %bb3, %bb9
  %34 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %35 = getelementptr inbounds i8, ptr %_0, i64 8
  %36 = load i64, ptr %35, align 8
  %37 = insertvalue { ptr, i64 } poison, ptr %34, 0
  %38 = insertvalue { ptr, i64 } %37, i64 %36, 1
  ret { ptr, i64 } %38

bb2:                                              ; No predecessors!
  unreachable
}

; core::iter::adapters::step_by::StepBy<I>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core4iter8adapters7step_by15StepBy$LT$I$GT$3new17h12e77c4fdde7c810E"(ptr sret(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>") align 8 %_0, i64 %iter.0, i64 %iter.1, i64 %step) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_7 = alloca i8, align 1
  store i8 1, ptr %_7, align 1
  %1 = icmp eq i64 %step, 0
  br i1 %1, label %bb2, label %bb1

bb2:                                              ; preds = %start
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @alloc_4aead6e2018a46d0df208d5729447de7, i64 27, ptr align 8 @alloc_e87194fea27ecc24370873e5a0a182f2) #27
          to label %unreachable unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, ptr %_7, align 1
; invoke <core::ops::range::Range<usize> as core::iter::adapters::step_by::SpecRangeSetup<core::ops::range::Range<usize>>>::setup
  %2 = invoke { i64, i64 } @"_ZN146_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..iter..adapters..step_by..SpecRangeSetup$LT$core..ops..range..Range$LT$usize$GT$$GT$$GT$5setup17h5e70928bd34d0b30E"(i64 %iter.0, i64 %iter.1, i64 %step)
          to label %bb3 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  %3 = load i8, ptr %_7, align 1, !range !10, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb5, label %bb4

cleanup:                                          ; preds = %bb1, %bb2
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %0, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb6

unreachable:                                      ; preds = %bb2
  unreachable

bb3:                                              ; preds = %bb1
  %iter.01 = extractvalue { i64, i64 } %2, 0
  %iter.12 = extractvalue { i64, i64 } %2, 1
  %_6 = sub i64 %step, 1
  store i64 %iter.01, ptr %_0, align 8
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %iter.12, ptr %9, align 8
  %10 = getelementptr inbounds %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>", ptr %_0, i32 0, i32 1
  store i64 %_6, ptr %10, align 8
  %11 = getelementptr inbounds %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>", ptr %_0, i32 0, i32 2
  store i8 1, ptr %11, align 8
  ret void

bb4:                                              ; preds = %bb5, %bb6
  %12 = load ptr, ptr %0, align 8, !noundef !3
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  %14 = load i32, ptr %13, align 8, !noundef !3
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1
  resume { ptr, i32 } %16

bb5:                                              ; preds = %bb6
  br label %bb4
}

; core::alloc::layout::Layout::array::inner
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17h7b4b019e487e1690E(i64 %element_size, i64 %align, i64 %n) unnamed_addr #0 {
start:
  %_18 = alloca i64, align 8
  %_13 = alloca i64, align 8
  %_9 = alloca %"core::alloc::layout::Layout", align 8
  %_0 = alloca %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", align 8
  %0 = icmp eq i64 %element_size, 0
  br i1 %0, label %bb5, label %bb1

bb5:                                              ; preds = %bb4, %start
  %array_size = mul nuw i64 %element_size, %n
  store i64 %align, ptr %_18, align 8
  %_19 = load i64, ptr %_18, align 8, !range !26, !noundef !3
  %_20 = icmp uge i64 %_19, 1
  %_21 = icmp ule i64 %_19, -9223372036854775808
  %_22 = and i1 %_20, %_21
  call void @llvm.assume(i1 %_22)
  %1 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %array_size, ptr %1, align 8
  store i64 %_19, ptr %_9, align 8
  %2 = load i64, ptr %_9, align 8, !range !26, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_9, i64 8
  %4 = load i64, ptr %3, align 8, !noundef !3
  store i64 %2, ptr %_0, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %4, ptr %5, align 8
  br label %bb6

bb1:                                              ; preds = %start
  store i64 %align, ptr %_13, align 8
  %_14 = load i64, ptr %_13, align 8, !range !26, !noundef !3
  %_15 = icmp uge i64 %_14, 1
  %_16 = icmp ule i64 %_14, -9223372036854775808
  %_17 = and i1 %_15, %_16
  call void @llvm.assume(i1 %_17)
  %_11 = sub i64 %_14, 1
  %_6 = sub i64 9223372036854775807, %_11
  %_7 = icmp eq i64 %element_size, 0
  %6 = call i1 @llvm.expect.i1(i1 %_7, i1 false)
  br i1 %6, label %panic, label %bb2

bb2:                                              ; preds = %bb1
  %_5 = udiv i64 %_6, %element_size
  %_4 = icmp ugt i64 %n, %_5
  br i1 %_4, label %bb3, label %bb4

panic:                                            ; preds = %bb1
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @str.5, i64 25, ptr align 8 @alloc_37f08cc86d215bcabda8bef18acdfc7b) #27
  unreachable

bb4:                                              ; preds = %bb2
  br label %bb5

bb3:                                              ; preds = %bb2
  %7 = load i64, ptr @1, align 8, !range !12, !noundef !3
  %8 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %7, ptr %_0, align 8
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %8, ptr %9, align 8
  br label %bb6

bb6:                                              ; preds = %bb3, %bb5
  %10 = load i64, ptr %_0, align 8, !range !12, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  %12 = load i64, ptr %11, align 8
  %13 = insertvalue { i64, i64 } poison, i64 %10, 0
  %14 = insertvalue { i64, i64 } %13, i64 %12, 1
  ret { i64, i64 } %14
}

; core::slice::<impl [T]>::starts_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h2b8874751c4fcbe3E"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_11 = alloca %"core::ops::range::Range<usize>", align 8
  %_9 = alloca { ptr, i64 }, align 8
  %_0 = alloca i8, align 1
  %needle = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %needle, align 8
  %2 = getelementptr inbounds i8, ptr %needle, i64 8
  store i64 %1, ptr %2, align 8
  %_4.0 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds i8, ptr %needle, i64 8
  %_4.1 = load i64, ptr %3, align 8, !noundef !3
  %_5 = icmp uge i64 %self.1, %_4.1
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  store i64 0, ptr %_11, align 8
  %4 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %_4.1, ptr %4, align 8
  %5 = load i64, ptr %_11, align 8, !noundef !3
  %6 = getelementptr inbounds i8, ptr %_11, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %8 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h2d503f3440bc826bE"(i64 %5, i64 %7, ptr align 1 %self.0, i64 %self.1, ptr align 8 @alloc_18fdfadcbcf6e2d76e399d12cf4a970b)
  %_10.0 = extractvalue { ptr, i64 } %8, 0
  %_10.1 = extractvalue { ptr, i64 } %8, 1
  store ptr %_10.0, ptr %_9, align 8
  %9 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %_10.1, ptr %9, align 8
  %self.01 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds i8, ptr %needle, i64 8
  %self.12 = load i64, ptr %10, align 8, !noundef !3
  %other.0 = load ptr, ptr %_9, align 8, !nonnull !3, !align !4, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_9, i64 8
  %other.1 = load i64, ptr %11, align 8, !noundef !3
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %12 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17hf2d9586e25ea8362E"(ptr align 1 %self.01, i64 %self.12, ptr align 1 %other.0, i64 %other.1)
  %13 = zext i1 %12 to i8
  store i8 %13, ptr %_0, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %14 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %15 = trunc i8 %14 to i1
  ret i1 %15
}

; core::slice::<impl [T]>::split_at_mut
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %pair, ptr align 1 %self.0, i64 %self.1, i64 %mid, ptr align 8 %0) unnamed_addr #0 {
start:
  %_11 = alloca %"core::fmt::Arguments<'_>", align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  %_3 = alloca %"core::option::Option<(&mut [core::mem::maybe_uninit::MaybeUninit<u8>], &mut [core::mem::maybe_uninit::MaybeUninit<u8>])>", align 8
; call core::slice::<impl [T]>::split_at_mut_checked
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$20split_at_mut_checked17he6332476a809730fE"(ptr sret(%"core::option::Option<(&mut [core::mem::maybe_uninit::MaybeUninit<u8>], &mut [core::mem::maybe_uninit::MaybeUninit<u8>])>") align 8 %_3, ptr align 1 %self.0, i64 %self.1, i64 %mid)
  %1 = load ptr, ptr %_3, align 8, !noundef !3
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_4 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_4, 0
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %start
  br i1 false, label %bb4, label %bb6

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %pair, ptr align 8 %_3, i64 32, i1 false)
  ret void

bb6:                                              ; preds = %bb2
  store ptr @alloc_2b3e40161faa82f936e1f97ea2aea002, ptr %_6, align 8
  %5 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 1, ptr %5, align 8
  %6 = load ptr, ptr @1, align 8, !align !5, !noundef !3
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %8 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_6, i32 0, i32 2
  store ptr %6, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %7, ptr %9, align 8
  %10 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_6, i32 0, i32 1
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %10, align 8
  %11 = getelementptr inbounds i8, ptr %10, i64 8
  store i64 0, ptr %11, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_6, ptr align 8 %0) #27
  unreachable

bb4:                                              ; preds = %bb2
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_11, ptr align 8 @alloc_af99043bc04c419363a7f04d23183506, i64 1)
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_11, ptr align 8 @alloc_b1c9b46fd6543b9e0f93a51d745efa2a) #27
  unreachable

bb7:                                              ; No predecessors!
  unreachable
}

; core::slice::<impl [T]>::copy_from_slice
; Function Attrs: nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %src.0, i64 %src.1, ptr align 8 %0) unnamed_addr #1 {
start:
  %_3 = icmp ne i64 %self.1, %src.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %1 = mul i64 %self.1, 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %self.0, ptr align 1 %src.0, i64 %1, i1 false)
  ret void

bb1:                                              ; preds = %start
; call core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail
  call void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17len_mismatch_fail17h91356e456d8f3056E"(i64 %self.1, i64 %src.1, ptr align 8 %0) #27
  unreachable
}

; core::slice::<impl [T]>::split_at_mut_checked
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$20split_at_mut_checked17he6332476a809730fE"(ptr sret(%"core::option::Option<(&mut [core::mem::maybe_uninit::MaybeUninit<u8>], &mut [core::mem::maybe_uninit::MaybeUninit<u8>])>") align 8 %_0, ptr align 1 %self.0, i64 %self.1, i64 %mid) unnamed_addr #0 {
start:
  %_22 = alloca %"core::ptr::metadata::PtrComponents<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_21 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrComponents<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_16 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_5 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_3 = icmp ule i64 %mid, %self.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb3

bb1:                                              ; preds = %start
  store ptr %self.0, ptr %_17, align 8
  %0 = getelementptr inbounds i8, ptr %_17, i64 8
  store i64 %mid, ptr %0, align 8
  %1 = load ptr, ptr %_17, align 8, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_17, i64 8
  %3 = load i64, ptr %2, align 8, !noundef !3
  store ptr %1, ptr %_16, align 8
  %4 = getelementptr inbounds i8, ptr %_16, i64 8
  store i64 %3, ptr %4, align 8
  %_14.0 = load ptr, ptr %_16, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_16, i64 8
  %_14.1 = load i64, ptr %5, align 8, !noundef !3
  %data = getelementptr inbounds i8, ptr %self.0, i64 %mid
  %len = sub i64 %self.1, %mid
  store ptr %data, ptr %_22, align 8
  %6 = getelementptr inbounds i8, ptr %_22, i64 8
  store i64 %len, ptr %6, align 8
  %7 = load ptr, ptr %_22, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_22, i64 8
  %9 = load i64, ptr %8, align 8, !noundef !3
  store ptr %7, ptr %_21, align 8
  %10 = getelementptr inbounds i8, ptr %_21, i64 8
  store i64 %9, ptr %10, align 8
  %_19.0 = load ptr, ptr %_21, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_21, i64 8
  %_19.1 = load i64, ptr %11, align 8, !noundef !3
  store ptr %_14.0, ptr %_5, align 8
  %12 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %_14.1, ptr %12, align 8
  %13 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_5, i32 0, i32 1
  store ptr %_19.0, ptr %13, align 8
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  store i64 %_19.1, ptr %14, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_5, i64 32, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  ret void
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h08517165ed133461E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_7 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %_0 = alloca %"core::slice::iter::Iter<'_, std::ffi::os_str::OsString>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds %"std::ffi::os_str::OsString", ptr %self.0, i64 %self.1
  store ptr %0, ptr %end_or_len, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %1 = inttoptr i64 %self.1 to ptr
  store ptr %1, ptr %end_or_len, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  store ptr %self.0, ptr %_7, align 8
  %_9 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %2 = load ptr, ptr %_7, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_9, ptr %3, align 8
  %4 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  %6 = load ptr, ptr %5, align 8, !noundef !3
  %7 = insertvalue { ptr, ptr } poison, ptr %4, 0
  %8 = insertvalue { ptr, ptr } %7, ptr %6, 1
  ret { ptr, ptr } %8
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h0b2dd7033a7b2ee6E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_7 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %_0 = alloca %"core::slice::iter::Iter<'_, alloc::string::String>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::string::String", ptr %self.0, i64 %self.1
  store ptr %0, ptr %end_or_len, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %1 = inttoptr i64 %self.1 to ptr
  store ptr %1, ptr %end_or_len, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  store ptr %self.0, ptr %_7, align 8
  %_9 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %2 = load ptr, ptr %_7, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_9, ptr %3, align 8
  %4 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  %6 = load ptr, ptr %5, align 8, !noundef !3
  %7 = insertvalue { ptr, ptr } poison, ptr %4, 0
  %8 = insertvalue { ptr, ptr } %7, ptr %6, 1
  ret { ptr, ptr } %8
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17ha3e94b864b5188c9E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_7 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %_0 = alloca %"core::slice::iter::Iter<'_, &str>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.0, i64 %self.1
  store ptr %0, ptr %end_or_len, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %1 = inttoptr i64 %self.1 to ptr
  store ptr %1, ptr %end_or_len, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  store ptr %self.0, ptr %_7, align 8
  %_9 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %2 = load ptr, ptr %_7, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_9, ptr %3, align 8
  %4 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  %6 = load ptr, ptr %5, align 8, !noundef !3
  %7 = insertvalue { ptr, ptr } poison, ptr %4, 0
  %8 = insertvalue { ptr, ptr } %7, ptr %6, 1
  ret { ptr, ptr } %8
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hc569e5d5155bd400E"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_7 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %_0 = alloca %"core::slice::iter::Iter<'_, std::path::PathBuf>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds %"std::path::PathBuf", ptr %self.0, i64 %self.1
  store ptr %0, ptr %end_or_len, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %1 = inttoptr i64 %self.1 to ptr
  store ptr %1, ptr %end_or_len, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  store ptr %self.0, ptr %_7, align 8
  %_9 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %2 = load ptr, ptr %_7, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_9, ptr %3, align 8
  %4 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  %6 = load ptr, ptr %5, align 8, !noundef !3
  %7 = insertvalue { ptr, ptr } poison, ptr %4, 0
  %8 = insertvalue { ptr, ptr } %7, ptr %6, 1
  ret { ptr, ptr } %8
}

; core::slice::<impl [T]>::iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hd9ee3801c8c4209bE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %_7 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %_0 = alloca %"core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds { %"std::ffi::os_str::OsString", %"std::ffi::os_str::OsString" }, ptr %self.0, i64 %self.1
  store ptr %0, ptr %end_or_len, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %1 = inttoptr i64 %self.1 to ptr
  store ptr %1, ptr %end_or_len, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  store ptr %self.0, ptr %_7, align 8
  %_9 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %2 = load ptr, ptr %_7, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_9, ptr %3, align 8
  %4 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  %6 = load ptr, ptr %5, align 8, !noundef !3
  %7 = insertvalue { ptr, ptr } poison, ptr %4, 0
  %8 = insertvalue { ptr, ptr } %7, ptr %6, 1
  ret { ptr, ptr } %8
}

; core::slice::<impl [T]>::contains
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8contains17hae3153edb422aa01E"(ptr align 8 %self.0, i64 %self.1, ptr align 8 %x) unnamed_addr #0 {
start:
; call <T as core::slice::cmp::SliceContains>::slice_contains
  %_0 = call zeroext i1 @"_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains17h079d4dd8c06118ddE"(ptr align 8 %x, ptr align 8 %self.0, i64 %self.1)
  ret i1 %_0
}

; core::slice::<impl [T]>::ends_with
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9ends_with17hbfef65dd11623226E"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_25 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_24 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_18 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_9 = alloca { ptr, i64 }, align 8
  %_0 = alloca i8, align 1
  %needle = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %needle, align 8
  %2 = getelementptr inbounds i8, ptr %needle, i64 8
  store i64 %1, ptr %2, align 8
  %_5.0 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds i8, ptr %needle, i64 8
  %_5.1 = load i64, ptr %3, align 8, !noundef !3
  %_6 = icmp uge i64 %self.1, %_5.1
  br i1 %_6, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb3

bb1:                                              ; preds = %start
  %index = sub i64 %self.1, %_5.1
  %_11 = icmp ugt i64 %index, %self.1
  br i1 %_11, label %bb4, label %bb5

bb3:                                              ; preds = %bb5, %bb2
  %4 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  ret i1 %5

bb5:                                              ; preds = %bb1
  store ptr %self.0, ptr %_18, align 8
  %6 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %self.1, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %_18, i64 8
  %self = load i64, ptr %7, align 8, !noundef !3
  %new_len = sub nuw i64 %self, %index
  %data = getelementptr inbounds i8, ptr %self.0, i64 %index
  store ptr %data, ptr %_25, align 8
  %8 = getelementptr inbounds i8, ptr %_25, i64 8
  store i64 %new_len, ptr %8, align 8
  %9 = load ptr, ptr %_25, align 8, !noundef !3
  %10 = getelementptr inbounds i8, ptr %_25, i64 8
  %11 = load i64, ptr %10, align 8, !noundef !3
  store ptr %9, ptr %_24, align 8
  %12 = getelementptr inbounds i8, ptr %_24, i64 8
  store i64 %11, ptr %12, align 8
  %_15.0 = load ptr, ptr %_24, align 8, !noundef !3
  %13 = getelementptr inbounds i8, ptr %_24, i64 8
  %_15.1 = load i64, ptr %13, align 8, !noundef !3
  store ptr %_15.0, ptr %_9, align 8
  %14 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %_15.1, ptr %14, align 8
  %self.01 = load ptr, ptr %needle, align 8, !nonnull !3, !align !4, !noundef !3
  %15 = getelementptr inbounds i8, ptr %needle, i64 8
  %self.12 = load i64, ptr %15, align 8, !noundef !3
  %other.0 = load ptr, ptr %_9, align 8, !nonnull !3, !align !4, !noundef !3
  %16 = getelementptr inbounds i8, ptr %_9, i64 8
  %other.1 = load i64, ptr %16, align 8, !noundef !3
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %17 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17hf2d9586e25ea8362E"(ptr align 1 %self.01, i64 %self.12, ptr align 1 %other.0, i64 %other.1)
  %18 = zext i1 %17 to i8
  store i8 %18, ptr %_0, align 1
  br label %bb3

bb4:                                              ; preds = %bb1
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17hd7aab39f3024a402E(i64 %index, i64 %self.1, ptr align 8 @alloc_0836c4ff1e66de805ca08181e7554aa0) #27
  unreachable
}

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: nonlazybind uwtable
define { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h821f41eb1e65071fE"(ptr align 8 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %_7 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %_0 = alloca %"core::slice::iter::Iter<'_, &str>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds { ptr, i64 }, ptr %self.0, i64 %self.1
  store ptr %0, ptr %end_or_len, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %1 = inttoptr i64 %self.1 to ptr
  store ptr %1, ptr %end_or_len, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  store ptr %self.0, ptr %_7, align 8
  %_9 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %2 = load ptr, ptr %_7, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_9, ptr %3, align 8
  %4 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  %6 = load ptr, ptr %5, align 8, !noundef !3
  %7 = insertvalue { ptr, ptr } poison, ptr %4, 0
  %8 = insertvalue { ptr, ptr } %7, ptr %6, 1
  ret { ptr, ptr } %8
}

; core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
; Function Attrs: nonlazybind uwtable
define { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h8f87b9c981928abfE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #1 {
start:
  %_7 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %_0 = alloca %"core::slice::iter::Iter<'_, u8>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %self.0, i64 %self.1
  store ptr %0, ptr %end_or_len, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %1 = inttoptr i64 %self.1 to ptr
  store ptr %1, ptr %end_or_len, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  store ptr %self.0, ptr %_7, align 8
  %_9 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %2 = load ptr, ptr %_7, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_9, ptr %3, align 8
  %4 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  %6 = load ptr, ptr %5, align 8, !noundef !3
  %7 = insertvalue { ptr, ptr } poison, ptr %4, 0
  %8 = insertvalue { ptr, ptr } %7, ptr %6, 1
  ret { ptr, ptr } %8
}

; core::slice::memchr::memchr_naive
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN4core5slice6memchr12memchr_naive17h0ed90e9383abf351E(i8 %x, ptr align 1 %text.0, i64 %text.1) unnamed_addr #0 {
start:
  %i = alloca i64, align 8
  %_0 = alloca %"core::option::Option<usize>", align 8
  store i64 0, ptr %i, align 8
  br label %bb1

bb1:                                              ; preds = %bb5, %start
  %_5 = load i64, ptr %i, align 8, !noundef !3
  %_4 = icmp ult i64 %_5, %text.1
  br i1 %_4, label %bb2, label %bb6

bb6:                                              ; preds = %bb1
  %0 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %1 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %0, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %1, ptr %2, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
  %_9 = load i64, ptr %i, align 8, !noundef !3
  %_10 = icmp ult i64 %_9, %text.1
  %3 = call i1 @llvm.expect.i1(i1 %_10, i1 true)
  br i1 %3, label %bb3, label %panic

bb7:                                              ; preds = %bb4, %bb6
  %4 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  %6 = load i64, ptr %5, align 8
  %7 = insertvalue { i64, i64 } poison, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds [0 x i8], ptr %text.0, i64 0, i64 %_9
  %_8 = load i8, ptr %9, align 1, !noundef !3
  %_7 = icmp eq i8 %_8, %x
  br i1 %_7, label %bb4, label %bb5

panic:                                            ; preds = %bb2
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %_9, i64 %text.1, ptr align 8 @alloc_fd72864725e1c47897c83be58a9099d6) #27
  unreachable

bb5:                                              ; preds = %bb3
  %10 = load i64, ptr %i, align 8, !noundef !3
  %11 = add i64 %10, 1
  store i64 %11, ptr %i, align 8
  br label %bb1

bb4:                                              ; preds = %bb3
  %_11 = load i64, ptr %i, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_11, ptr %12, align 8
  store i64 1, ptr %_0, align 8
  br label %bb7
}

; core::option::Option<T>::map_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$11map_or_else17h9164fe0091180affE"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %0, i64 %1, ptr align 8 %default) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca i8, align 1
  %_9 = alloca i8, align 1
  %_7 = alloca { { ptr, i64 } }, align 8
  %self = alloca %"core::option::Option<&str>", align 8
  store ptr %0, ptr %self, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %3, align 8
  store i8 1, ptr %_10, align 1
  store i8 1, ptr %_9, align 1
  %4 = load ptr, ptr %self, align 8, !noundef !3
  %5 = ptrtoint ptr %4 to i64
  %6 = icmp eq i64 %5, 0
  %_4 = select i1 %6, i64 0, i64 1
  %7 = icmp eq i64 %_4, 0
  br i1 %7, label %bb1, label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_10, align 1
; invoke alloc::fmt::format::{{closure}}
  invoke void @"_ZN5alloc3fmt6format28_$u7b$$u7b$closure$u7d$$u7d$17hc13ba4c926c2d456E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %default)
          to label %bb5 unwind label %cleanup

bb3:                                              ; preds = %start
  %t.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %8 = getelementptr inbounds i8, ptr %self, i64 8
  %t.1 = load i64, ptr %8, align 8, !noundef !3
  store i8 0, ptr %_9, align 1
  store ptr %t.0, ptr %_7, align 8
  %9 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %t.1, ptr %9, align 8
  %10 = load ptr, ptr %_7, align 8, !nonnull !3, !align !4, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_7, i64 8
  %12 = load i64, ptr %11, align 8, !noundef !3
; invoke core::ops::function::FnOnce::call_once
  invoke void @_ZN4core3ops8function6FnOnce9call_once17h314810b39c0269bbE(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %10, i64 %12)
          to label %bb4 unwind label %cleanup

bb14:                                             ; preds = %cleanup
  %13 = load i8, ptr %_9, align 1, !range !10, !noundef !3
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb13, label %bb8

cleanup:                                          ; preds = %bb3, %bb1
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %2, align 8
  %18 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb14

bb5:                                              ; preds = %bb1
  br label %bb11

bb11:                                             ; preds = %bb4, %bb5
  %19 = load i8, ptr %_9, align 1, !range !10, !noundef !3
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb10, label %bb6

bb4:                                              ; preds = %bb3
  br label %bb11

bb6:                                              ; preds = %bb10, %bb11
  %21 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb12, label %bb7

bb10:                                             ; preds = %bb11
  br label %bb6

bb7:                                              ; preds = %bb12, %bb6
  ret void

bb12:                                             ; preds = %bb6
  br label %bb7

bb8:                                              ; preds = %bb13, %bb14
  %23 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %24 = trunc i8 %23 to i1
  br i1 %24, label %bb15, label %bb9

bb13:                                             ; preds = %bb14
  br label %bb8

bb9:                                              ; preds = %bb15, %bb8
  %25 = load ptr, ptr %2, align 8, !noundef !3
  %26 = getelementptr inbounds i8, ptr %2, i64 8
  %27 = load i32, ptr %26, align 8, !noundef !3
  %28 = insertvalue { ptr, i32 } poison, ptr %25, 0
  %29 = insertvalue { ptr, i32 } %28, i32 %27, 1
  resume { ptr, i32 } %29

bb15:                                             ; preds = %bb8
  br label %bb9

bb2:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h40ba57506cb3d2fbE"(i8 %0, ptr align 8 %f.0, ptr align 8 %f.1, ptr align 8 %1) unnamed_addr #0 {
start:
  %_6 = alloca i8, align 1
  %_0 = alloca i8, align 1
  %self = alloca i8, align 1
  store i8 %0, ptr %self, align 1
  store i8 1, ptr %_6, align 1
  %2 = load i8, ptr %self, align 1, !range !18, !noundef !3
  %3 = icmp eq i8 %2, 2
  %_3 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_3, 0
  br i1 %4, label %bb1, label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_6, align 1
; call pkg_config::Config::is_static::{{closure}}
  %5 = call zeroext i1 @"_ZN10pkg_config6Config9is_static28_$u7b$$u7b$closure$u7d$$u7d$17h378d7b903a74387eE"(ptr align 8 %f.0, ptr align 8 %f.1)
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb7

bb3:                                              ; preds = %start
  %7 = load i8, ptr %self, align 1, !range !10, !noundef !3
  %x = trunc i8 %7 to i1
  %8 = zext i1 %x to i8
  store i8 %8, ptr %_0, align 1
  br label %bb7

bb7:                                              ; preds = %bb3, %bb1
  %9 = load i8, ptr %_6, align 1, !range !10, !noundef !3
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %11 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %12 = trunc i8 %11 to i1
  ret i1 %12

bb6:                                              ; preds = %bb7
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hb3088f3a29cd326cE"(ptr sret(%"std::ffi::os_str::OsString") align 8 %_0, ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 {
start:
  %_6 = alloca i8, align 1
  %x = alloca %"std::ffi::os_str::OsString", align 8
  store i8 1, ptr %_6, align 1
  %1 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, -9223372036854775808
  %_3 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb1, label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_6, align 1
; call pkg_config::Config::run::{{closure}}
  call void @"_ZN10pkg_config6Config3run28_$u7b$$u7b$closure$u7d$$u7d$17ha19dc70d8da719a3E"(ptr sret(%"std::ffi::os_str::OsString") align 8 %_0)
  br label %bb7

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %self, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %x, i64 24, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb3, %bb1
  %4 = load i8, ptr %_6, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::unwrap_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hc0720a185d7583e8E"(ptr sret(%"std::path::PathBuf") align 8 %_0, ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 {
start:
  %_6 = alloca i8, align 1
  %x = alloca %"std::path::PathBuf", align 8
  store i8 1, ptr %_6, align 1
  %1 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, -9223372036854775808
  %_3 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb1, label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_6, align 1
; call pkg_config::Library::parse_libs_cflags::{{closure}}
  call void @"_ZN10pkg_config7Library17parse_libs_cflags28_$u7b$$u7b$closure$u7d$$u7d$17h4f3ed1af3b78865dE"(ptr sret(%"std::path::PathBuf") align 8 %_0)
  br label %bb7

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %self, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %x, i64 24, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb3, %bb1
  %4 = load i8, ptr %_6, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::unwrap_or_default
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$17unwrap_or_default17h20f52db60fa28612E"(ptr sret(%"std::ffi::os_str::OsString") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %x = alloca %"std::ffi::os_str::OsString", align 8
  %0 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb1, label %bb3

bb1:                                              ; preds = %start
; call <std::ffi::os_str::OsString as core::default::Default>::default
  call void @"_ZN69_$LT$std..ffi..os_str..OsString$u20$as$u20$core..default..Default$GT$7default17h4413335316fa2d9dE"(ptr sret(%"std::ffi::os_str::OsString") align 8 %_0)
  br label %bb4

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %self, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %x, i64 24, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  ret void

bb2:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$3map17h7c83fa309a2e1838E"(ptr sret(%"core::option::Option<alloc::string::String>") align 8 %_0, ptr align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_8 = alloca i8, align 1
  %_7 = alloca { { ptr, i64 } }, align 8
  %_5 = alloca %"alloc::string::String", align 8
  %self = alloca %"core::option::Option<&str>", align 8
  store ptr %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
  store i8 1, ptr %_8, align 1
  %3 = load ptr, ptr %self, align 8, !noundef !3
  %4 = ptrtoint ptr %3 to i64
  %5 = icmp eq i64 %4, 0
  %_3 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_3, 0
  br i1 %6, label %bb1, label %bb3

bb1:                                              ; preds = %start
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb7

bb3:                                              ; preds = %start
  %x.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %7 = getelementptr inbounds i8, ptr %self, i64 8
  %x.1 = load i64, ptr %7, align 8, !noundef !3
  store i8 0, ptr %_8, align 1
  store ptr %x.0, ptr %_7, align 8
  %8 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %x.1, ptr %8, align 8
  %9 = load ptr, ptr %_7, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds i8, ptr %_7, i64 8
  %11 = load i64, ptr %10, align 8, !noundef !3
; call pkg_config::Library::parse_libs_cflags::{{closure}}
  call void @"_ZN10pkg_config7Library17parse_libs_cflags28_$u7b$$u7b$closure$u7d$$u7d$17h408390c6aadb4495E"(ptr sret(%"alloc::string::String") align 8 %_5, ptr align 1 %9, i64 %11)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_5, i64 24, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb3, %bb1
  %12 = load i8, ptr %_8, align 1, !range !10, !noundef !3
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$3map17ha5b37c1b1154353eE"(ptr sret(%"core::option::Option<std::path::PathBuf>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_8 = alloca i8, align 1
  %_7 = alloca { %"std::ffi::os_str::OsString" }, align 8
  %_5 = alloca %"std::path::PathBuf", align 8
  %x = alloca %"std::ffi::os_str::OsString", align 8
  store i8 1, ptr %_8, align 1
  %0 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %1 = icmp eq i64 %0, -9223372036854775808
  %_3 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb1, label %bb3

bb1:                                              ; preds = %start
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb7

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %self, i64 24, i1 false)
  store i8 0, ptr %_8, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %x, i64 24, i1 false)
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17hfc1966382206bc7dE(ptr sret(%"std::path::PathBuf") align 8 %_5, ptr align 8 %_7)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_5, i64 24, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb3, %bb1
  %3 = load i8, ptr %_8, align 1, !range !10, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::is_none
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h9904170c10c49a7eE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %1 = icmp eq i64 %0, -9223372036854775808
  %_3 = select i1 %1, i64 0, i64 1
  %_2 = icmp eq i64 %_3, 1
  %_0 = xor i1 %_2, true
  ret i1 %_0
}

; core::option::Option<T>::is_some
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h948e570adf1e4d88E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %1 = icmp eq i64 %0, -9223372036854775808
  %_2 = select i1 %1, i64 0, i64 1
  %_0 = icmp eq i64 %_2, 1
  ret i1 %_0
}

; core::option::Option<T>::or_else
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$7or_else17h4cc006aa5d17d478E"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca i8, align 1
  %_5 = alloca %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:628:30: 628:32}", align 8
  %x = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  store i8 1, ptr %_7, align 1
  store i8 1, ptr %_6, align 1
  %1 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, -9223372036854775808
  %_3 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb1, label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_6, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %f, i64 24, i1 false)
; invoke pkg_config::Config::targeted_env_var::{{closure}}
  invoke void @"_ZN10pkg_config6Config16targeted_env_var28_$u7b$$u7b$closure$u7d$$u7d$17h3aa28d7287adb83fE"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %_5)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %start
  store i8 0, ptr %_7, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %self, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %x, i64 24, i1 false)
  br label %bb9

bb12:                                             ; preds = %cleanup
  %4 = load i8, ptr %_7, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb11, label %bb7

cleanup:                                          ; preds = %bb1
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb12

bb4:                                              ; preds = %bb1
  br label %bb9

bb9:                                              ; preds = %bb3, %bb4
  %10 = load i8, ptr %_6, align 1, !range !10, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb8, label %bb5

bb5:                                              ; preds = %bb8, %bb9
  %12 = load i8, ptr %_7, align 1, !range !10, !noundef !3
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb10, label %bb6

bb8:                                              ; preds = %bb9
  br label %bb5

bb6:                                              ; preds = %bb10, %bb5
  ret void

bb10:                                             ; preds = %bb5
; call core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  call void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %self)
  br label %bb6

bb7:                                              ; preds = %bb11, %bb12
  %14 = load ptr, ptr %0, align 8, !noundef !3
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  %16 = load i32, ptr %15, align 8, !noundef !3
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1
  resume { ptr, i32 } %18

bb11:                                             ; preds = %bb12
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %self) #28
          to label %bb7 unwind label %terminate

terminate:                                        ; preds = %bb11
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::or_else
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$7or_else17h63c0b99bbc7e94a4E"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %self, ptr align 8 %f.0, ptr align 8 %f.1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca i8, align 1
  %x = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  store i8 1, ptr %_7, align 1
  store i8 1, ptr %_6, align 1
  %1 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, -9223372036854775808
  %_3 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb1, label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_6, align 1
; invoke pkg_config::Config::targeted_env_var::{{closure}}
  invoke void @"_ZN10pkg_config6Config16targeted_env_var28_$u7b$$u7b$closure$u7d$$u7d$17h2160a87f8b697854E"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %f.0, ptr align 8 %f.1)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %start
  store i8 0, ptr %_7, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %self, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %x, i64 24, i1 false)
  br label %bb9

bb12:                                             ; preds = %cleanup
  %4 = load i8, ptr %_7, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb11, label %bb7

cleanup:                                          ; preds = %bb1
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb12

bb4:                                              ; preds = %bb1
  br label %bb9

bb9:                                              ; preds = %bb3, %bb4
  %10 = load i8, ptr %_6, align 1, !range !10, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb8, label %bb5

bb5:                                              ; preds = %bb8, %bb9
  %12 = load i8, ptr %_7, align 1, !range !10, !noundef !3
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb10, label %bb6

bb8:                                              ; preds = %bb9
  br label %bb5

bb6:                                              ; preds = %bb10, %bb5
  ret void

bb10:                                             ; preds = %bb5
; call core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  call void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %self)
  br label %bb6

bb7:                                              ; preds = %bb11, %bb12
  %14 = load ptr, ptr %0, align 8, !noundef !3
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  %16 = load i32, ptr %15, align 8, !noundef !3
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1
  resume { ptr, i32 } %18

bb11:                                             ; preds = %bb12
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %self) #28
          to label %bb7 unwind label %terminate

terminate:                                        ; preds = %bb11
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::or_else
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$7or_else17h998376b08282b91aE"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca i8, align 1
  %x = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  store i8 1, ptr %_7, align 1
  store i8 1, ptr %_6, align 1
  %1 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, -9223372036854775808
  %_3 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb1, label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_6, align 1
; invoke pkg_config::Library::parse_libs_cflags::{{closure}}
  invoke void @"_ZN10pkg_config7Library17parse_libs_cflags28_$u7b$$u7b$closure$u7d$$u7d$17h839b6d0fc656a5a7E"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %f)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %start
  store i8 0, ptr %_7, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %self, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %x, i64 24, i1 false)
  br label %bb9

bb12:                                             ; preds = %cleanup
  %4 = load i8, ptr %_7, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb11, label %bb7

cleanup:                                          ; preds = %bb1
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb12

bb4:                                              ; preds = %bb1
  br label %bb9

bb9:                                              ; preds = %bb3, %bb4
  %10 = load i8, ptr %_6, align 1, !range !10, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb8, label %bb5

bb5:                                              ; preds = %bb8, %bb9
  %12 = load i8, ptr %_7, align 1, !range !10, !noundef !3
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb10, label %bb6

bb8:                                              ; preds = %bb9
  br label %bb5

bb6:                                              ; preds = %bb10, %bb5
  ret void

bb10:                                             ; preds = %bb5
; call core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  call void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %self)
  br label %bb6

bb7:                                              ; preds = %bb11, %bb12
  %14 = load ptr, ptr %0, align 8, !noundef !3
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  %16 = load i32, ptr %15, align 8, !noundef !3
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1
  resume { ptr, i32 } %18

bb11:                                             ; preds = %bb12
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %self) #28
          to label %bb7 unwind label %terminate

terminate:                                        ; preds = %bb11
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; core::option::Option<T>::or_else
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6option15Option$LT$T$GT$7or_else17ha730540e393fa8aaE"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_7 = alloca i8, align 1
  %_6 = alloca i8, align 1
  %_5 = alloca %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:629:30: 629:32}", align 8
  %x = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  store i8 1, ptr %_7, align 1
  store i8 1, ptr %_6, align 1
  %1 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, -9223372036854775808
  %_3 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_3, 0
  br i1 %3, label %bb1, label %bb3

bb1:                                              ; preds = %start
  store i8 0, ptr %_6, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %f, i64 24, i1 false)
; invoke pkg_config::Config::targeted_env_var::{{closure}}
  invoke void @"_ZN10pkg_config6Config16targeted_env_var28_$u7b$$u7b$closure$u7d$$u7d$17h69db9b0e066999a1E"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %_5)
          to label %bb4 unwind label %cleanup

bb3:                                              ; preds = %start
  store i8 0, ptr %_7, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %self, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %x, i64 24, i1 false)
  br label %bb9

bb12:                                             ; preds = %cleanup
  %4 = load i8, ptr %_7, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb11, label %bb7

cleanup:                                          ; preds = %bb1
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb12

bb4:                                              ; preds = %bb1
  br label %bb9

bb9:                                              ; preds = %bb3, %bb4
  %10 = load i8, ptr %_6, align 1, !range !10, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb8, label %bb5

bb5:                                              ; preds = %bb8, %bb9
  %12 = load i8, ptr %_7, align 1, !range !10, !noundef !3
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb10, label %bb6

bb8:                                              ; preds = %bb9
  br label %bb5

bb6:                                              ; preds = %bb10, %bb5
  ret void

bb10:                                             ; preds = %bb5
; call core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  call void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %self)
  br label %bb6

bb7:                                              ; preds = %bb11, %bb12
  %14 = load ptr, ptr %0, align 8, !noundef !3
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  %16 = load i32, ptr %15, align 8, !noundef !3
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1
  resume { ptr, i32 } %18

bb11:                                             ; preds = %bb12
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %self) #28
          to label %bb7 unwind label %terminate

terminate:                                        ; preds = %bb11
  %19 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::unwrap_or_else
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h480ec13e6c91d578E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 {
start:
  %_8 = alloca i8, align 1
  %_7 = alloca { %"std::env::VarError" }, align 8
  %e = alloca %"std::env::VarError", align 8
  %t = alloca %"alloc::string::String", align 8
  store i8 1, ptr %_8, align 1
  %_3 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %1 = icmp eq i64 %_3, 0
  br i1 %1, label %bb3, label %bb1

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", ptr %self, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %2, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %t, i64 24, i1 false)
  br label %bb7

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %self, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e, ptr align 8 %3, i64 24, i1 false)
  store i8 0, ptr %_8, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %e, i64 24, i1 false)
; call <pkg_config::Error as core::fmt::Display>::fmt::{{closure}}
  call void @"_ZN56_$LT$pkg_config..Error$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h069419cb3e7ea8fdE"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %_7)
  br label %bb7

bb7:                                              ; preds = %bb1, %bb3
  %4 = load i8, ptr %_8, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::map
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$3map17h887dfb7c4a182c3eE"(ptr sret(%"core::result::Result<std::fs::Metadata, std::io::error::Error>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_7 = alloca { %"std::sys::pal::unix::fs::FileAttr" }, align 8
  %_5 = alloca %"std::fs::Metadata", align 8
  %t = alloca %"std::sys::pal::unix::fs::FileAttr", align 8
  store i8 1, ptr %_9, align 1
  %0 = load i64, ptr %self, align 8, !range !11, !noundef !3
  %1 = icmp eq i64 %0, 2
  %_3 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb1

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %self, i64 176, i1 false)
  store i8 0, ptr %_9, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %t, i64 176, i1 false)
; call core::ops::function::FnOnce::call_once
  call void @_ZN4core3ops8function6FnOnce9call_once17h353d424dd2fe7d50E(ptr sret(%"std::fs::Metadata") align 8 %_5, ptr align 8 %_7)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_5, i64 176, i1 false)
  br label %bb7

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::result::Result<std::sys::pal::unix::fs::FileAttr, std::io::error::Error>::Err", ptr %self, i32 0, i32 1
  %e = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds %"core::result::Result<std::fs::Metadata, std::io::error::Error>::Err", ptr %_0, i32 0, i32 1
  store ptr %e, ptr %4, align 8
  store i64 2, ptr %_0, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb3
  %5 = load i8, ptr %_9, align 1, !range !10, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17h25a945615cfc4e89E"(ptr align 8 %self, ptr align 1 %msg.0, i64 %msg.1, ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %e = alloca %"std::thread::local::AccessError", align 1
  %_3 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb1

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::result::Result<std::hash::random::RandomState, std::thread::local::AccessError>::Ok", ptr %self, i32 0, i32 1
  %t.0 = load i64, ptr %3, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  %t.1 = load i64, ptr %4, align 8, !noundef !3
  %5 = insertvalue { i64, i64 } poison, i64 %t.0, 0
  %6 = insertvalue { i64, i64 } %5, i64 %t.1, 1
  ret { i64, i64 } %6

bb1:                                              ; preds = %start
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h1356562ef8bc898cE(ptr align 1 %msg.0, i64 %msg.1, ptr align 1 %e, ptr align 8 @vtable.7, ptr align 8 %0) #27
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %7 = load ptr, ptr %1, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %1, i64 8
  %9 = load i32, ptr %8, align 8, !noundef !3
  %10 = insertvalue { ptr, i32 } poison, ptr %7, 0
  %11 = insertvalue { ptr, i32 } %10, i32 %9, 1
  resume { ptr, i32 } %11

cleanup:                                          ; preds = %bb1
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %1, align 8
  %15 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::expect
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$6expect17hd6cc5aca259a4640E"(i1 zeroext %0, ptr align 1 %msg.0, i64 %msg.1, ptr align 8 %1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %e = alloca %"core::fmt::Error", align 1
  %self = alloca i8, align 1
  %3 = zext i1 %0 to i8
  store i8 %3, ptr %self, align 1
  %4 = load i8, ptr %self, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  %_3 = zext i1 %5 to i64
  %6 = icmp eq i64 %_3, 0
  br i1 %6, label %bb3, label %bb1

bb3:                                              ; preds = %start
  ret void

bb1:                                              ; preds = %start
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h1356562ef8bc898cE(ptr align 1 %msg.0, i64 %msg.1, ptr align 1 %e, ptr align 8 @vtable.8, ptr align 8 %1) #27
          to label %unreachable unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %7 = load ptr, ptr %2, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %2, i64 8
  %9 = load i32, ptr %8, align 8, !noundef !3
  %10 = insertvalue { ptr, i32 } poison, ptr %7, 0
  %11 = insertvalue { ptr, i32 } %10, i32 %9, 1
  resume { ptr, i32 } %11

cleanup:                                          ; preds = %bb1
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %2, align 8
  %15 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb4

unreachable:                                      ; preds = %bb1
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1313b8ff9a2cb481E"(ptr sret(%"core::result::Result<Library, alloc::string::String>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_8 = alloca { %Error }, align 8
  %_6 = alloca %"alloc::string::String", align 8
  %e = alloca %Error, align 8
  %t = alloca %Library, align 8
  store i8 1, ptr %_9, align 1
  %0 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %1 = icmp eq i64 %0, -9223372036854775808
  %_3 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb1

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %self, i64 240, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %t, i64 240, i1 false)
  br label %bb7

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::result::Result<Library, Error>::Err", ptr %self, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e, ptr align 8 %3, i64 112, i1 false)
  store i8 0, ptr %_9, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_8, ptr align 8 %e, i64 112, i1 false)
; call pkg_config::Config::find::{{closure}}
  call void @"_ZN10pkg_config6Config4find28_$u7b$$u7b$closure$u7d$$u7d$17hc0e338ff8a092f5bE"(ptr sret(%"alloc::string::String") align 8 %_6, ptr align 8 %_8)
  %4 = getelementptr inbounds %"core::result::Result<Library, alloc::string::String>::Err", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_6, i64 24, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb3
  %5 = load i8, ptr %_9, align 1, !range !10, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h2987816cf1c0b2d7E"(ptr sret(%"core::result::Result<alloc::vec::Vec<u8>, Error>") align 8 %_0, ptr align 8 %self, ptr align 8 %op) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_8 = alloca { %Error }, align 8
  %_6 = alloca %Error, align 8
  %e = alloca %Error, align 8
  %t = alloca %"alloc::vec::Vec<u8>", align 8
  store i8 1, ptr %_9, align 1
  %0 = load i64, ptr %self, align 8, !range !27, !noundef !3
  %1 = icmp eq i64 %0, 6
  %_3 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb1

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::result::Result<alloc::vec::Vec<u8>, Error>::Ok", ptr %self, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %3, i64 24, i1 false)
  %4 = getelementptr inbounds %"core::result::Result<alloc::vec::Vec<u8>, Error>::Ok", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %t, i64 24, i1 false)
  store i64 6, ptr %_0, align 8
  br label %bb7

bb1:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e, ptr align 8 %self, i64 112, i1 false)
  store i8 0, ptr %_9, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_8, ptr align 8 %e, i64 112, i1 false)
; call pkg_config::Config::probe::{{closure}}
  call void @"_ZN10pkg_config6Config5probe28_$u7b$$u7b$closure$u7d$$u7d$17h0d6af54fee0bf1edE"(ptr sret(%Error) align 8 %_6, ptr align 8 %op, ptr align 8 %_8)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_6, i64 112, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb1, %bb3
  %5 = load i8, ptr %_9, align 1, !range !10, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h34c96332661aaa7fE"(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") align 8 %_0, ptr %0, i64 %1, ptr align 8 %op) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %self = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", align 8
  store ptr %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
  store i8 1, ptr %_9, align 1
  %3 = load ptr, ptr %self, align 8, !noundef !3
  %4 = ptrtoint ptr %3 to i64
  %5 = icmp eq i64 %4, 0
  %_3 = select i1 %5, i64 1, i64 0
  %6 = icmp eq i64 %_3, 0
  br i1 %6, label %bb3, label %bb1

bb3:                                              ; preds = %start
  %t.0 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %7 = getelementptr inbounds i8, ptr %self, i64 8
  %t.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", ptr %_0, i32 0, i32 1
  store ptr %t.0, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %t.1, ptr %9, align 8
  store i64 0, ptr %_0, align 8
  br label %bb7

bb1:                                              ; preds = %start
  store i8 0, ptr %_9, align 1
; call alloc::raw_vec::finish_grow::{{closure}}
  %10 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h53c7041ba978ccb5E"(ptr align 8 %op)
  %_6.0 = extractvalue { i64, i64 } %10, 0
  %_6.1 = extractvalue { i64, i64 } %10, 1
  %11 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", ptr %_0, i32 0, i32 1
  store i64 %_6.0, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %_6.1, ptr %12, align 8
  store i64 1, ptr %_0, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb3
  %13 = load i8, ptr %_9, align 1, !range !10, !noundef !3
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h658c16fcda7cc85dE"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_8 = alloca { %"alloc::collections::TryReserveError" }, align 8
  %_0 = alloca %"core::result::Result<(), alloc::collections::TryReserveErrorKind>", align 8
  %self = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
  store i8 1, ptr %_9, align 1
  %3 = load i64, ptr %self, align 8, !range !23, !noundef !3
  %4 = icmp eq i64 %3, -9223372036854775807
  %_3 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_3, 0
  br i1 %5, label %bb3, label %bb1

bb3:                                              ; preds = %start
  store i64 -9223372036854775807, ptr %_0, align 8
  br label %bb7

bb1:                                              ; preds = %start
  %e.0 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %6 = getelementptr inbounds i8, ptr %self, i64 8
  %e.1 = load i64, ptr %6, align 8
  store i8 0, ptr %_9, align 1
  store i64 %e.0, ptr %_8, align 8
  %7 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %e.1, ptr %7, align 8
  %8 = load i64, ptr %_8, align 8, !range !12, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_8, i64 8
  %10 = load i64, ptr %9, align 8
; call alloc::raw_vec::handle_reserve::{{closure}}
  %11 = call { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17had53668212210393E"(i64 %8, i64 %10)
  %_6.0 = extractvalue { i64, i64 } %11, 0
  %_6.1 = extractvalue { i64, i64 } %11, 1
  store i64 %_6.0, ptr %_0, align 8
  %12 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_6.1, ptr %12, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb3
  %13 = load i8, ptr %_9, align 1, !range !10, !noundef !3
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %15 = load i64, ptr %_0, align 8, !range !23, !noundef !3
  %16 = getelementptr inbounds i8, ptr %_0, i64 8
  %17 = load i64, ptr %16, align 8
  %18 = insertvalue { i64, i64 } poison, i64 %15, 0
  %19 = insertvalue { i64, i64 } %18, i64 %17, 1
  ret { i64, i64 } %19

bb6:                                              ; preds = %bb7
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h96f0fa8616b1d341E"(ptr sret(%"core::result::Result<alloc::string::String, alloc::string::String>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_8 = alloca { %Error }, align 8
  %_6 = alloca %"alloc::string::String", align 8
  %e = alloca %Error, align 8
  %t = alloca %"alloc::string::String", align 8
  store i8 1, ptr %_9, align 1
  %0 = load i64, ptr %self, align 8, !range !27, !noundef !3
  %1 = icmp eq i64 %0, 6
  %_3 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb1

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::result::Result<alloc::string::String, Error>::Ok", ptr %self, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %3, i64 24, i1 false)
  %4 = getelementptr inbounds %"core::result::Result<alloc::string::String, alloc::string::String>::Ok", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %t, i64 24, i1 false)
  store i64 0, ptr %_0, align 8
  br label %bb7

bb1:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e, ptr align 8 %self, i64 112, i1 false)
  store i8 0, ptr %_9, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_8, ptr align 8 %e, i64 112, i1 false)
; call pkg_config::Config::get_variable::{{closure}}
  call void @"_ZN10pkg_config6Config12get_variable28_$u7b$$u7b$closure$u7d$$u7d$17h0e38f385f18678feE"(ptr sret(%"alloc::string::String") align 8 %_6, ptr align 8 %_8)
  %5 = getelementptr inbounds %"core::result::Result<alloc::string::String, alloc::string::String>::Err", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %_6, i64 24, i1 false)
  store i64 1, ptr %_0, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb3
  %6 = load i8, ptr %_9, align 1, !range !10, !noundef !3
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hb3219775ef73406dE"(ptr sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") align 8 %_0, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %self = alloca %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
  store i8 1, ptr %_9, align 1
  %3 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %4 = icmp eq i64 %3, 0
  %_3 = select i1 %4, i64 1, i64 0
  %5 = icmp eq i64 %_3, 0
  br i1 %5, label %bb3, label %bb1

bb3:                                              ; preds = %start
  %t.0 = load i64, ptr %self, align 8, !range !26, !noundef !3
  %6 = getelementptr inbounds i8, ptr %self, i64 8
  %t.1 = load i64, ptr %6, align 8, !noundef !3
  %7 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", ptr %_0, i32 0, i32 1
  store i64 %t.0, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 8
  store i64 %t.1, ptr %8, align 8
  store i64 0, ptr %_0, align 8
  br label %bb7

bb1:                                              ; preds = %start
  store i8 0, ptr %_9, align 1
; call alloc::raw_vec::finish_grow::{{closure}}
  %9 = call { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h3709c0d647af5674E"()
  %_6.0 = extractvalue { i64, i64 } %9, 0
  %_6.1 = extractvalue { i64, i64 } %9, 1
  %10 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", ptr %_0, i32 0, i32 1
  store i64 %_6.0, ptr %10, align 8
  %11 = getelementptr inbounds i8, ptr %10, i64 8
  store i64 %_6.1, ptr %11, align 8
  store i64 1, ptr %_0, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb3
  %12 = load i8, ptr %_9, align 1, !range !10, !noundef !3
  %13 = trunc i8 %12 to i1
  br i1 %13, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::map_err
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hfbca20b711fd5e05E"(ptr sret(%"core::result::Result<Library, alloc::string::String>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_9 = alloca i8, align 1
  %_8 = alloca { %Error }, align 8
  %_6 = alloca %"alloc::string::String", align 8
  %e = alloca %Error, align 8
  %t = alloca %Library, align 8
  store i8 1, ptr %_9, align 1
  %0 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %1 = icmp eq i64 %0, -9223372036854775808
  %_3 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb1

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %self, i64 240, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %t, i64 240, i1 false)
  br label %bb7

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::result::Result<Library, Error>::Err", ptr %self, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e, ptr align 8 %3, i64 112, i1 false)
  store i8 0, ptr %_9, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_8, ptr align 8 %e, i64 112, i1 false)
; call pkg_config::find_library::{{closure}}
  call void @"_ZN10pkg_config12find_library28_$u7b$$u7b$closure$u7d$$u7d$17h79fcc70b2afe8940E"(ptr sret(%"alloc::string::String") align 8 %_6, ptr align 8 %_8)
  %4 = getelementptr inbounds %"core::result::Result<Library, alloc::string::String>::Err", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %_6, i64 24, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb7

bb7:                                              ; preds = %bb1, %bb3
  %5 = load i8, ptr %_9, align 1, !range !10, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::or_else
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$7or_else17h82280b7ee0153875E"(ptr sret(%"core::result::Result<std::process::Output, std::io::error::Error>") align 8 %_0, ptr align 8 %self, ptr align 8 %op) unnamed_addr #0 {
start:
  %_8 = alloca i8, align 1
  %_7 = alloca ptr, align 8
  %_6 = alloca %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:666:36: 666:39}", align 8
  %t = alloca %"std::process::Output", align 8
  store i8 1, ptr %_8, align 1
  %0 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %1 = icmp eq i64 %0, -9223372036854775808
  %_3 = select i1 %1, i64 1, i64 0
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb1

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %self, i64 56, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %t, i64 56, i1 false)
  br label %bb7

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::result::Result<std::process::Output, std::io::error::Error>::Err", ptr %self, i32 0, i32 1
  %e = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  store i8 0, ptr %_8, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %op, i64 48, i1 false)
  store ptr %e, ptr %_7, align 8
  %4 = load ptr, ptr %_7, align 8, !nonnull !3, !noundef !3
; call pkg_config::Config::run::{{closure}}
  call void @"_ZN10pkg_config6Config3run28_$u7b$$u7b$closure$u7d$$u7d$17he5b6e4dc358715c3E"(ptr sret(%"core::result::Result<std::process::Output, std::io::error::Error>") align 8 %_0, ptr align 8 %_6, ptr %4)
  br label %bb7

bb7:                                              ; preds = %bb1, %bb3
  %5 = load i8, ptr %_8, align 1, !range !10, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb6, label %bb5

bb5:                                              ; preds = %bb6, %bb7
  ret void

bb6:                                              ; preds = %bb7
; call core::ptr::drop_in_place<pkg_config::Config::run::{{closure}}>
  call void @"_ZN4core3ptr73drop_in_place$LT$pkg_config..Config..run..$u7b$$u7b$closure$u7d$$u7d$$GT$17hd52fcd5c5ae901afE"(ptr align 8 %op)
  br label %bb5

bb2:                                              ; No predecessors!
  unreachable
}

; core::result::Result<T,E>::unwrap_or
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN4core6result19Result$LT$T$C$E$GT$9unwrap_or17h7ae1be008e48cc02E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %self, ptr align 8 %default) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_5 = alloca i8, align 1
  %t = alloca %"alloc::string::String", align 8
  store i8 1, ptr %_5, align 1
  %_3 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %1 = icmp eq i64 %_3, 0
  br i1 %1, label %bb3, label %bb1

bb3:                                              ; preds = %start
  %2 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", ptr %self, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %t, ptr align 8 %2, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %t, i64 24, i1 false)
  br label %bb8

bb1:                                              ; preds = %start
  store i8 0, ptr %_5, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %default, i64 24, i1 false)
  br label %bb8

bb8:                                              ; preds = %bb1, %bb3
  %3 = load i8, ptr %_5, align 1, !range !10, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb7, label %bb4

bb4:                                              ; preds = %bb7, %bb8
  %_6 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %5 = icmp eq i64 %_6, 0
  br i1 %5, label %bb9, label %bb10

bb7:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %default)
          to label %bb4 unwind label %cleanup

bb5:                                              ; preds = %cleanup
  %_7 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %6 = icmp eq i64 %_7, 0
  br i1 %6, label %bb6, label %bb11

cleanup:                                          ; preds = %bb7
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %0, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb5

bb9:                                              ; preds = %bb10, %bb4
  ret void

bb10:                                             ; preds = %bb4
; call core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  call void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17he3784d90bbaa7c42E"(ptr align 8 %self)
  br label %bb9

bb6:                                              ; preds = %bb11, %bb5
  %11 = load ptr, ptr %0, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  %13 = load i32, ptr %12, align 8, !noundef !3
  %14 = insertvalue { ptr, i32 } poison, ptr %11, 0
  %15 = insertvalue { ptr, i32 } %14, i32 %13, 1
  resume { ptr, i32 } %15

bb11:                                             ; preds = %bb5
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17he3784d90bbaa7c42E"(ptr align 8 %self) #28
          to label %bb6 unwind label %terminate

terminate:                                        ; preds = %bb11
  %16 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %17 = extractvalue { ptr, i32 } %16, 0
  %18 = extractvalue { ptr, i32 } %16, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb2:                                              ; No predecessors!
  unreachable
}

; core::unicode::unicode_data::white_space::lookup
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @_ZN4core7unicode12unicode_data11white_space6lookup17he11dd75850b02fadE(i32 %c) unnamed_addr #0 {
start:
  %_0 = alloca i8, align 1
  %_2 = lshr i32 %c, 8
  switch i32 %_2, label %bb1 [
    i32 0, label %bb2
    i32 22, label %bb4
    i32 32, label %bb5
    i32 48, label %bb7
  ]

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb8

bb2:                                              ; preds = %start
  %_8 = zext i32 %c to i64
  %_7 = and i64 %_8, 255
  %_9 = icmp ult i64 %_7, 256
  %0 = call i1 @llvm.expect.i1(i1 %_9, i1 true)
  br i1 %0, label %bb3, label %panic

bb4:                                              ; preds = %start
  %1 = icmp eq i32 %c, 5760
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_0, align 1
  br label %bb8

bb5:                                              ; preds = %start
  %_14 = zext i32 %c to i64
  %_13 = and i64 %_14, 255
  %_15 = icmp ult i64 %_13, 256
  %3 = call i1 @llvm.expect.i1(i1 %_15, i1 true)
  br i1 %3, label %bb6, label %panic1

bb7:                                              ; preds = %start
  %4 = icmp eq i32 %c, 12288
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_0, align 1
  br label %bb8

bb3:                                              ; preds = %bb2
  %6 = getelementptr inbounds [256 x i8], ptr @_ZN4core7unicode12unicode_data11white_space14WHITESPACE_MAP17h111833e126630f52E, i64 0, i64 %_7
  %_5 = load i8, ptr %6, align 1, !noundef !3
  %_4 = and i8 %_5, 1
  %7 = icmp ne i8 %_4, 0
  %8 = zext i1 %7 to i8
  store i8 %8, ptr %_0, align 1
  br label %bb8

panic:                                            ; preds = %bb2
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %_7, i64 256, ptr align 8 @alloc_4ec9a0893d6c40a3f2ed6f3acf3f1bc5) #27
  unreachable

bb8:                                              ; preds = %bb1, %bb7, %bb6, %bb4, %bb3
  %9 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %10 = trunc i8 %9 to i1
  ret i1 %10

bb6:                                              ; preds = %bb5
  %11 = getelementptr inbounds [256 x i8], ptr @_ZN4core7unicode12unicode_data11white_space14WHITESPACE_MAP17h111833e126630f52E, i64 0, i64 %_13
  %_11 = load i8, ptr %11, align 1, !noundef !3
  %_10 = and i8 %_11, 2
  %12 = icmp ne i8 %_10, 0
  %13 = zext i1 %12 to i8
  store i8 %13, ptr %_0, align 1
  br label %bb8

panic1:                                           ; preds = %bb5
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 %_13, i64 256, ptr align 8 @alloc_87b8c6019d0c28cd94a251b6c9615d90) #27
  unreachable
}

; core::core_arch::x86::sse2::_mm_or_si128
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse212_mm_or_si12817he4d19d33046c2f93E(ptr sret(<2 x i64>) align 16 %_0, ptr align 16 %a, ptr align 16 %b) unnamed_addr #8 {
start:
  %0 = load <2 x i64>, ptr %a, align 16
  %1 = load <2 x i64>, ptr %b, align 16
  %2 = or <2 x i64> %0, %1
  store <2 x i64> %2, ptr %_0, align 16
  ret void
}

; core::core_arch::x86::sse2::_mm_set1_epi8
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse213_mm_set1_epi817ha78ed8defa5638e9E(ptr sret(<2 x i64>) align 16 %_0, i8 %a) unnamed_addr #8 {
start:
  %0 = alloca <16 x i8>, align 16
  store i8 %a, ptr %0, align 16
  %1 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 1
  store i8 %a, ptr %1, align 1
  %2 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 2
  store i8 %a, ptr %2, align 2
  %3 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 3
  store i8 %a, ptr %3, align 1
  %4 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 4
  store i8 %a, ptr %4, align 4
  %5 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 5
  store i8 %a, ptr %5, align 1
  %6 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 6
  store i8 %a, ptr %6, align 2
  %7 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 7
  store i8 %a, ptr %7, align 1
  %8 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 8
  store i8 %a, ptr %8, align 8
  %9 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 9
  store i8 %a, ptr %9, align 1
  %10 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 10
  store i8 %a, ptr %10, align 2
  %11 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 11
  store i8 %a, ptr %11, align 1
  %12 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 12
  store i8 %a, ptr %12, align 4
  %13 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 13
  store i8 %a, ptr %13, align 1
  %14 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 14
  store i8 %a, ptr %14, align 2
  %15 = getelementptr inbounds <16 x i8>, ptr %0, i32 0, i32 15
  store i8 %a, ptr %15, align 1
  %_2 = load <16 x i8>, ptr %0, align 16
  store <16 x i8> %_2, ptr %_0, align 16
  ret void
}

; core::core_arch::x86::sse2::_mm_cmpeq_epi8
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse214_mm_cmpeq_epi817h1a3c97347aef0309E(ptr sret(<2 x i64>) align 16 %_0, ptr align 16 %a, ptr align 16 %b) unnamed_addr #8 {
start:
  %0 = alloca <16 x i8>, align 16
  %1 = alloca <2 x i64>, align 16
  %2 = alloca <16 x i8>, align 16
  %3 = alloca <2 x i64>, align 16
  %4 = alloca <16 x i8>, align 16
  %5 = load <2 x i64>, ptr %a, align 16
  store <2 x i64> %5, ptr %3, align 16
; call core::core_arch::x86::m128iExt::as_i8x16
  call void @_ZN4core9core_arch3x868m128iExt8as_i8x1617h3911586e55218bbfE(ptr sret(<16 x i8>) align 16 %4, ptr align 16 %3)
  %_4 = load <16 x i8>, ptr %4, align 16
  %6 = load <2 x i64>, ptr %b, align 16
  store <2 x i64> %6, ptr %1, align 16
; call core::core_arch::x86::m128iExt::as_i8x16
  call void @_ZN4core9core_arch3x868m128iExt8as_i8x1617h3911586e55218bbfE(ptr sret(<16 x i8>) align 16 %2, ptr align 16 %1)
  %_5 = load <16 x i8>, ptr %2, align 16
  %7 = icmp eq <16 x i8> %_4, %_5
  %8 = sext <16 x i1> %7 to <16 x i8>
  store <16 x i8> %8, ptr %0, align 16
  %_3 = load <16 x i8>, ptr %0, align 16
  store <16 x i8> %_3, ptr %_0, align 16
  ret void
}

; core::core_arch::x86::sse2::_mm_cmpgt_epi8
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse214_mm_cmpgt_epi817h637ccca34b1462cbE(ptr sret(<2 x i64>) align 16 %_0, ptr align 16 %a, ptr align 16 %b) unnamed_addr #8 {
start:
  %0 = alloca <16 x i8>, align 16
  %1 = alloca <2 x i64>, align 16
  %2 = alloca <16 x i8>, align 16
  %3 = alloca <2 x i64>, align 16
  %4 = alloca <16 x i8>, align 16
  %5 = load <2 x i64>, ptr %a, align 16
  store <2 x i64> %5, ptr %3, align 16
; call core::core_arch::x86::m128iExt::as_i8x16
  call void @_ZN4core9core_arch3x868m128iExt8as_i8x1617h3911586e55218bbfE(ptr sret(<16 x i8>) align 16 %4, ptr align 16 %3)
  %_4 = load <16 x i8>, ptr %4, align 16
  %6 = load <2 x i64>, ptr %b, align 16
  store <2 x i64> %6, ptr %1, align 16
; call core::core_arch::x86::m128iExt::as_i8x16
  call void @_ZN4core9core_arch3x868m128iExt8as_i8x1617h3911586e55218bbfE(ptr sret(<16 x i8>) align 16 %2, ptr align 16 %1)
  %_5 = load <16 x i8>, ptr %2, align 16
  %7 = icmp sgt <16 x i8> %_4, %_5
  %8 = sext <16 x i1> %7 to <16 x i8>
  store <16 x i8> %8, ptr %0, align 16
  %_3 = load <16 x i8>, ptr %0, align 16
  store <16 x i8> %_3, ptr %_0, align 16
  ret void
}

; core::core_arch::x86::sse2::_mm_load_si128
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse214_mm_load_si12817h0fff7d8714e4d2bdE(ptr sret(<2 x i64>) align 16 %_0, ptr %mem_addr) unnamed_addr #8 {
start:
  %0 = load <2 x i64>, ptr %mem_addr, align 16
  store <2 x i64> %0, ptr %_0, align 16
  ret void
}

; core::core_arch::x86::sse2::_mm_loadu_si128
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse215_mm_loadu_si12817ha1d2e2bdd862a6b7E(ptr sret(<2 x i64>) align 16 %_0, ptr %mem_addr) unnamed_addr #8 {
start:
  %dst = alloca <2 x i64>, align 16
  store i64 0, ptr %dst, align 16
  %0 = getelementptr inbounds <2 x i64>, ptr %dst, i32 0, i32 1
  store i64 0, ptr %0, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %dst, ptr align 1 %mem_addr, i64 16, i1 false)
  %1 = load <2 x i64>, ptr %dst, align 16
  store <2 x i64> %1, ptr %_0, align 16
  ret void
}

; core::core_arch::x86::sse2::_mm_store_si128
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse215_mm_store_si12817hee68af34262be4d4E(ptr %mem_addr, ptr align 16 %a) unnamed_addr #8 {
start:
  %0 = load <2 x i64>, ptr %a, align 16
  store <2 x i64> %0, ptr %mem_addr, align 16
  ret void
}

; core::core_arch::x86::sse2::_mm_movemask_epi8
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @_ZN4core9core_arch3x864sse217_mm_movemask_epi817h5ebf5ba4849673e8E(ptr align 16 %a) unnamed_addr #8 {
start:
  %0 = alloca i16, align 2
  %1 = alloca <16 x i8>, align 16
  %2 = alloca <2 x i64>, align 16
  %3 = alloca <16 x i8>, align 16
  %4 = alloca <16 x i8>, align 16
  store i8 0, ptr %4, align 16
  %5 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 1
  store i8 0, ptr %5, align 1
  %6 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 2
  store i8 0, ptr %6, align 2
  %7 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 3
  store i8 0, ptr %7, align 1
  %8 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 4
  store i8 0, ptr %8, align 4
  %9 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 5
  store i8 0, ptr %9, align 1
  %10 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 6
  store i8 0, ptr %10, align 2
  %11 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 7
  store i8 0, ptr %11, align 1
  %12 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 8
  store i8 0, ptr %12, align 8
  %13 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 9
  store i8 0, ptr %13, align 1
  %14 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 10
  store i8 0, ptr %14, align 2
  %15 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 11
  store i8 0, ptr %15, align 1
  %16 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 12
  store i8 0, ptr %16, align 4
  %17 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 13
  store i8 0, ptr %17, align 1
  %18 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 14
  store i8 0, ptr %18, align 2
  %19 = getelementptr inbounds <16 x i8>, ptr %4, i32 0, i32 15
  store i8 0, ptr %19, align 1
  %z = load <16 x i8>, ptr %4, align 16
  %20 = load <2 x i64>, ptr %a, align 16
  store <2 x i64> %20, ptr %2, align 16
; call core::core_arch::x86::m128iExt::as_i8x16
  call void @_ZN4core9core_arch3x868m128iExt8as_i8x1617h3911586e55218bbfE(ptr sret(<16 x i8>) align 16 %3, ptr align 16 %2)
  %_4 = load <16 x i8>, ptr %3, align 16
  %21 = icmp slt <16 x i8> %_4, %z
  %22 = sext <16 x i1> %21 to <16 x i8>
  store <16 x i8> %22, ptr %1, align 16
  %m = load <16 x i8>, ptr %1, align 16
  %23 = lshr <16 x i8> %m, <i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7>
  %24 = trunc <16 x i8> %23 to <16 x i1>
  %25 = bitcast <16 x i1> %24 to i16
  store i16 %25, ptr %0, align 2
  %_6 = load i16, ptr %0, align 2, !noundef !3
  %_5 = zext i16 %_6 to i32
  ret i32 %_5
}

; core::core_arch::x86::sse2::_mm_setzero_si128
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN4core9core_arch3x864sse217_mm_setzero_si12817hc3ba67325907e40aE(ptr sret(<2 x i64>) align 16 %_0) unnamed_addr #8 {
start:
  %0 = alloca <2 x i64>, align 16
  store i64 0, ptr %0, align 16
  %1 = getelementptr inbounds <2 x i64>, ptr %0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  %_1 = load <2 x i64>, ptr %0, align 16
  store <2 x i64> %_1, ptr %_0, align 16
  ret void
}

; core::core_arch::x86::m128iExt::as_i8x16
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN4core9core_arch3x868m128iExt8as_i8x1617h3911586e55218bbfE(ptr sret(<16 x i8>) align 16 %_0, ptr align 16 %self) unnamed_addr #0 {
start:
  %0 = alloca <2 x i64>, align 16
  %1 = alloca <2 x i64>, align 16
  %2 = load <2 x i64>, ptr %self, align 16
  store <2 x i64> %2, ptr %0, align 16
; call <core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt>::as_m128i
  call void @"_ZN80_$LT$core..core_arch..x86..__m128i$u20$as$u20$core..core_arch..x86..m128iExt$GT$8as_m128i17hb85a39b590396cc2E"(ptr sret(<2 x i64>) align 16 %1, ptr align 16 %0)
  %_2 = load <2 x i64>, ptr %1, align 16
  store <2 x i64> %_2, ptr %_0, align 16
  ret void
}

; core::core_simd::masks::mask_impl::Mask<T,_>::to_bitmask_integer
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN4core9core_simd5masks9mask_impl17Mask$LT$T$C$_$GT$18to_bitmask_integer17h16ca57d3c768a93dE"(ptr align 16 %self) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = alloca <8 x i8>, align 8
  %2 = alloca <16 x i8>, align 16
  %3 = alloca i16, align 2
  %4 = alloca <16 x i8>, align 16
  %5 = alloca <16 x i8>, align 16
  %6 = alloca i32, align 4
  %7 = alloca <32 x i8>, align 32
  %8 = alloca <16 x i8>, align 16
  %9 = alloca <64 x i8>, align 64
  %10 = alloca <16 x i8>, align 16
  %tmp10 = alloca <1 x i8>, align 1
  %array9 = alloca [1 x i8], align 1
  %array8 = alloca [1 x i8], align 1
  %tmp7 = alloca <1 x i8>, align 1
  %array6 = alloca [1 x i8], align 1
  %array5 = alloca [1 x i8], align 1
  %tmp4 = alloca <1 x i8>, align 1
  %array3 = alloca [1 x i8], align 1
  %array2 = alloca [1 x i8], align 1
  %tmp = alloca <1 x i8>, align 1
  %array1 = alloca [1 x i8], align 1
  %array = alloca [1 x i8], align 1
  %bitmask = alloca i64, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  br i1 true, label %bb3, label %bb4

bb1:                                              ; preds = %start
  %self23 = load <16 x i8>, ptr %self, align 16
  %11 = getelementptr inbounds [1 x i8], ptr %array, i64 0, i64 0
  store i8 0, ptr %11, align 1
  %12 = load i8, ptr %array, align 1
  store i8 %12, ptr %array1, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp, ptr align 1 %array1, i64 1, i1 false)
  %self24 = load <1 x i8>, ptr %tmp, align 1
  %13 = shufflevector <1 x i8> %self24, <1 x i8> %self24, <16 x i32> zeroinitializer
  store <16 x i8> %13, ptr %2, align 16
  %second25 = load <16 x i8>, ptr %2, align 16
  %14 = shufflevector <16 x i8> %self23, <16 x i8> %second25, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  store <8 x i8> %14, ptr %1, align 8
  %resized26 = load <8 x i8>, ptr %1, align 8
  %15 = lshr <8 x i8> %resized26, <i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7>
  %16 = trunc <8 x i8> %15 to <8 x i1>
  %17 = bitcast <8 x i1> %16 to i8
  store i8 %17, ptr %0, align 1
  %bitmask27 = load i8, ptr %0, align 1, !noundef !3
  %18 = zext i8 %bitmask27 to i64
  store i64 %18, ptr %bitmask, align 8
  br label %bb9

bb4:                                              ; preds = %bb2
  br i1 true, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  %self18 = load <16 x i8>, ptr %self, align 16
  %19 = getelementptr inbounds [1 x i8], ptr %array2, i64 0, i64 0
  store i8 0, ptr %19, align 1
  %20 = load i8, ptr %array2, align 1
  store i8 %20, ptr %array3, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp4, ptr align 1 %array3, i64 1, i1 false)
  %self19 = load <1 x i8>, ptr %tmp4, align 1
  %21 = shufflevector <1 x i8> %self19, <1 x i8> %self19, <16 x i32> zeroinitializer
  store <16 x i8> %21, ptr %5, align 16
  %second20 = load <16 x i8>, ptr %5, align 16
  %22 = shufflevector <16 x i8> %self18, <16 x i8> %second20, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15>
  store <16 x i8> %22, ptr %4, align 16
  %resized21 = load <16 x i8>, ptr %4, align 16
  %23 = lshr <16 x i8> %resized21, <i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7>
  %24 = trunc <16 x i8> %23 to <16 x i1>
  %25 = bitcast <16 x i1> %24 to i16
  store i16 %25, ptr %3, align 2
  %bitmask22 = load i16, ptr %3, align 2, !noundef !3
  %26 = zext i16 %bitmask22 to i64
  store i64 %26, ptr %bitmask, align 8
  br label %bb8

bb6:                                              ; preds = %bb4
  %self11 = load <16 x i8>, ptr %self, align 16
  %27 = getelementptr inbounds [1 x i8], ptr %array8, i64 0, i64 0
  store i8 0, ptr %27, align 1
  %28 = load i8, ptr %array8, align 1
  store i8 %28, ptr %array9, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp10, ptr align 1 %array9, i64 1, i1 false)
  %self12 = load <1 x i8>, ptr %tmp10, align 1
  %29 = shufflevector <1 x i8> %self12, <1 x i8> %self12, <16 x i32> zeroinitializer
  store <16 x i8> %29, ptr %10, align 16
  %second = load <16 x i8>, ptr %10, align 16
  %30 = shufflevector <16 x i8> %self11, <16 x i8> %second, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  store <64 x i8> %30, ptr %9, align 64
  %resized = load <64 x i8>, ptr %9, align 64
  %31 = lshr <64 x i8> %resized, <i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7>
  %32 = trunc <64 x i8> %31 to <64 x i1>
  %33 = bitcast <64 x i1> %32 to i64
  store i64 %33, ptr %bitmask, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
  %self13 = load <16 x i8>, ptr %self, align 16
  %34 = getelementptr inbounds [1 x i8], ptr %array5, i64 0, i64 0
  store i8 0, ptr %34, align 1
  %35 = load i8, ptr %array5, align 1
  store i8 %35, ptr %array6, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %tmp7, ptr align 1 %array6, i64 1, i1 false)
  %self14 = load <1 x i8>, ptr %tmp7, align 1
  %36 = shufflevector <1 x i8> %self14, <1 x i8> %self14, <16 x i32> zeroinitializer
  store <16 x i8> %36, ptr %8, align 16
  %second15 = load <16 x i8>, ptr %8, align 16
  %37 = shufflevector <16 x i8> %self13, <16 x i8> %second15, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  store <32 x i8> %37, ptr %7, align 32
  %resized16 = load <32 x i8>, ptr %7, align 32
  %38 = lshr <32 x i8> %resized16, <i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7, i8 7>
  %39 = trunc <32 x i8> %38 to <32 x i1>
  %40 = bitcast <32 x i1> %39 to i32
  store i32 %40, ptr %6, align 4
  %bitmask17 = load i32, ptr %6, align 4, !noundef !3
  %41 = zext i32 %bitmask17 to i64
  store i64 %41, ptr %bitmask, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  br label %bb8

bb8:                                              ; preds = %bb3, %bb7
  br label %bb9

bb9:                                              ; preds = %bb1, %bb8
  %42 = load i64, ptr %bitmask, align 8, !noundef !3
  ret i64 %42
}

; core::panicking::assert_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
define void @_ZN4core9panicking13assert_failed17h8beae701c790fce2E(i8 %kind, ptr align 8 %0, ptr align 8 %1, ptr align 8 %args, ptr align 8 %2) unnamed_addr #4 {
start:
  %right = alloca ptr, align 8
  %left = alloca ptr, align 8
  store ptr %0, ptr %left, align 8
  store ptr %1, ptr %right, align 8
; call core::panicking::assert_failed_inner
  call void @_ZN4core9panicking19assert_failed_inner17he66e930fc360d575E(i8 %kind, ptr align 1 %left, ptr align 8 @vtable.b, ptr align 1 %right, ptr align 8 @vtable.b, ptr align 8 %args, ptr align 8 %2) #27
  unreachable
}

; <T as core::borrow::Borrow<T>>::borrow
; Function Attrs: nonlazybind uwtable
define align 8 ptr @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17he9e9939a9aeaa510E"(ptr align 8 %self) unnamed_addr #1 {
start:
  ret ptr %self
}

; <Q as hashbrown::Equivalent<K>>::equivalent
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN52_$LT$Q$u20$as$u20$hashbrown..Equivalent$LT$K$GT$$GT$10equivalent17h113a5744e374d3d6E"(ptr align 8 %0, ptr align 8 %key) unnamed_addr #1 {
start:
  %_5 = alloca ptr, align 8
  %self = alloca ptr, align 8
  store ptr %0, ptr %self, align 8
; call <T as core::borrow::Borrow<T>>::borrow
  %1 = call align 8 ptr @"_ZN51_$LT$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17he9e9939a9aeaa510E"(ptr align 8 %key)
  store ptr %1, ptr %_5, align 8
  %_6 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
  %_7 = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
; call <alloc::string::String as core::cmp::PartialEq>::eq
  %_0 = call zeroext i1 @"_ZN62_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$GT$2eq17h0fbfccbadab9c0e7E"(ptr align 8 %_6, ptr align 8 %_7)
  ret i1 %_0
}

; <char as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h58296c97f1093a73E"(i32 %self, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %_6 = alloca [4 x i8], align 1
  %0 = getelementptr inbounds [4 x i8], ptr %_6, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 1 %0, i8 0, i64 4, i1 false)
; call core::char::methods::encode_utf8_raw
  %1 = call { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17hce4a0e0468f969f6E(i32 %self, ptr align 1 %_6, i64 4)
  %v.0 = extractvalue { ptr, i64 } %1, 0
  %v.1 = extractvalue { ptr, i64 } %1, 1
; call core::slice::<impl [T]>::starts_with
  %_0 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h2b8874751c4fcbe3E"(ptr align 1 %haystack.0, i64 %haystack.1, ptr align 1 %v.0, i64 %v.1)
  ret i1 %_0
}

; <char as core::str::pattern::Pattern>::into_searcher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17ha3f4776e4e43d4aaE"(ptr sret(%"core::str::pattern::CharSearcher<'_>") align 8 %_0, i32 %self, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %_9 = alloca [4 x i8], align 1
  %utf8_encoded = alloca [4 x i8], align 1
  %0 = getelementptr inbounds [4 x i8], ptr %utf8_encoded, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 1 %0, i8 0, i64 4, i1 false)
; call core::char::methods::encode_utf8_raw
  %1 = call { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17hce4a0e0468f969f6E(i32 %self, ptr align 1 %utf8_encoded, i64 4)
  %v.0 = extractvalue { ptr, i64 } %1, 0
  %v.1 = extractvalue { ptr, i64 } %1, 1
  %2 = load <4 x i8>, ptr %utf8_encoded, align 1
  store <4 x i8> %2, ptr %_9, align 1
  store ptr %haystack.0, ptr %_0, align 8
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %haystack.1, ptr %3, align 8
  %4 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %4, align 8
  %5 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %_0, i32 0, i32 2
  store i64 %haystack.1, ptr %5, align 8
  %6 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %_0, i32 0, i32 5
  store i32 %self, ptr %6, align 4
  %7 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %_0, i32 0, i32 3
  store i64 %v.1, ptr %7, align 8
  %8 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %_0, i32 0, i32 4
  %9 = load <4 x i8>, ptr %_9, align 1
  store <4 x i8> %9, ptr %8, align 8
  ret void
}

; <F as core::str::pattern::MultiCharEq>::matches
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hcf468ef76ba8b27fE"(ptr align 1 %self, i32 %c) unnamed_addr #0 {
start:
  %_3 = alloca i32, align 4
  store i32 %c, ptr %_3, align 4
  %0 = load i32, ptr %_3, align 4, !range !8, !noundef !3
; call core::str::<impl str>::trim_end::{{closure}}
  %_0 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8trim_end28_$u7b$$u7b$closure$u7d$$u7d$17hd4d4c4ab8e2c5c27E"(ptr align 1 %self, i32 %0)
  ret i1 %_0
}

; <F as core::str::pattern::MultiCharEq>::matches
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hee7562c40f4d4452E"(ptr align 1 %self, i32 %c) unnamed_addr #0 {
start:
  %_3 = alloca i32, align 4
  store i32 %c, ptr %_3, align 4
  %0 = load i32, ptr %_3, align 4, !range !8, !noundef !3
; call core::str::<impl str>::trim::{{closure}}
  %_0 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$4trim28_$u7b$$u7b$closure$u7d$$u7d$17hc8ed5d16a2f2a261E"(ptr align 1 %self, i32 %0)
  ret i1 %_0
}

; <T as core::slice::cmp::SliceContains>::slice_contains
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains17h079d4dd8c06118ddE"(ptr align 8 %self, ptr align 8 %x.0, i64 %x.1) unnamed_addr #1 {
start:
  %_11 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %_5 = alloca ptr, align 8
  %_4 = alloca %"core::slice::iter::Iter<'_, &str>", align 8
  br i1 false, label %bb2, label %bb3

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds { ptr, i64 }, ptr %x.0, i64 %x.1
  store ptr %0, ptr %end_or_len, align 8
  br label %bb4

bb2:                                              ; preds = %start
  %1 = inttoptr i64 %x.1 to ptr
  store ptr %1, ptr %end_or_len, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  store ptr %x.0, ptr %_11, align 8
  %_13 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %2 = load ptr, ptr %_11, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %_4, align 8
  %3 = getelementptr inbounds i8, ptr %_4, i64 8
  store ptr %_13, ptr %3, align 8
  store ptr %self, ptr %_5, align 8
  %4 = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
  %_0 = call zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h19dd25b11bc238d1E"(ptr align 8 %_4, ptr align 8 %4)
  ret i1 %_0
}

; <T as core::slice::cmp::SliceContains>::slice_contains::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains28_$u7b$$u7b$closure$u7d$$u7d$17ha68945d2dc69b214E"(ptr align 8 %_1, ptr align 8 %y) unnamed_addr #0 {
start:
  %_3 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
; call core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_0 = call zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h73624e3f33ed922aE"(ptr align 8 %y, ptr align 8 %_3)
  ret i1 %_0
}

; <core::fmt::Error as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h1239501818f84375E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 {
start:
; call core::fmt::Formatter::write_str
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h4bb7c9399e0c7fb5E(ptr align 8 %f, ptr align 1 @alloc_99ac8a81a24cac863217ce4a5cbfabea, i64 5)
  ret i1 %_0
}

; <&T as core::borrow::Borrow<T>>::borrow
; Function Attrs: nonlazybind uwtable
define { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h8cd9e18c1076bd74E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_0.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_0.1 = load i64, ptr %0, align 8, !noundef !3
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h16d8b0056cf983c7E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_2 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call <&T as core::convert::AsRef<U>>::as_ref
  %0 = call { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7bec7ec48adc293eE"(ptr align 8 %_2)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h33c19d34d1e2a592E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_2.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_2.1 = load i64, ptr %0, align 8, !noundef !3
; call <std::path::Path as core::convert::AsRef<std::path::Path>>::as_ref
  %1 = call { ptr, i64 } @"_ZN79_$LT$std..path..Path$u20$as$u20$core..convert..AsRef$LT$std..path..Path$GT$$GT$6as_ref17hb0196d7c6bcc43a8E"(ptr align 1 %_2.0, i64 %_2.1)
  %_0.0 = extractvalue { ptr, i64 } %1, 0
  %_0.1 = extractvalue { ptr, i64 } %1, 1
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1
  ret { ptr, i64 } %3
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h451cc258df51801aE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_2.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_2.1 = load i64, ptr %0, align 8, !noundef !3
; call <std::ffi::os_str::OsStr as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
  %1 = call { ptr, i64 } @"_ZN95_$LT$std..ffi..os_str..OsStr$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17hfb5d85951a93dfeaE"(ptr align 1 %_2.0, i64 %_2.1)
  %_0.0 = extractvalue { ptr, i64 } %1, 0
  %_0.1 = extractvalue { ptr, i64 } %1, 1
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1
  ret { ptr, i64 } %3
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h484923e41e360697E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_2 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call <&T as core::convert::AsRef<U>>::as_ref
  %0 = call { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h57b27233c5cf5df5E"(ptr align 8 %_2)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h57b27233c5cf5df5E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_2 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call std::path::<impl core::convert::AsRef<std::path::Path> for alloc::string::String>::as_ref
  %0 = call { ptr, i64 } @"_ZN3std4path95_$LT$impl$u20$core..convert..AsRef$LT$std..path..Path$GT$$u20$for$u20$alloc..string..String$GT$6as_ref17h39e91aaa03137aefE"(ptr align 8 %_2)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h6691488022164d9bE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_2 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for alloc::string::String>::as_ref
  %0 = call { ptr, i64 } @"_ZN3std3ffi6os_str103_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$alloc..string..String$GT$6as_ref17hcbef83a0e258cc6dE"(ptr align 8 %_2)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h68e39133499e1ee5E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_2 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call <std::path::PathBuf as core::convert::AsRef<std::path::Path>>::as_ref
  %0 = call { ptr, i64 } @"_ZN82_$LT$std..path..PathBuf$u20$as$u20$core..convert..AsRef$LT$std..path..Path$GT$$GT$6as_ref17h7fc5d97eeb749120E"(ptr align 8 %_2)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7bec7ec48adc293eE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_2.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_2.1 = load i64, ptr %0, align 8, !noundef !3
; call std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
  %1 = call { ptr, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h38c339d16ee25205E"(ptr align 1 %_2.0, i64 %_2.1)
  %_0.0 = extractvalue { ptr, i64 } %1, 0
  %_0.1 = extractvalue { ptr, i64 } %1, 1
  %2 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %3 = insertvalue { ptr, i64 } %2, i64 %_0.1, 1
  ret { ptr, i64 } %3
}

; <&T as core::convert::AsRef<U>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7e5b9ab8d4dffa78E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_2 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call <std::ffi::os_str::OsString as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
  %0 = call { ptr, i64 } @"_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17h6fc72231a91e2f9fE"(ptr align 8 %_2)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <&str as core::str::pattern::Pattern>::is_prefix_of
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_prefix_of17h493306a219920e61E"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
; call core::slice::<impl [T]>::starts_with
  %_0 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$11starts_with17h2b8874751c4fcbe3E"(ptr align 1 %haystack.0, i64 %haystack.1, ptr align 1 %self.0, i64 %self.1)
  ret i1 %_0
}

; <&str as core::str::pattern::Pattern>::is_contained_in
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$15is_contained_in17he1b5843eb38218afE"(ptr align 1 %0, i64 %1, ptr align 1 %2, i64 %3) unnamed_addr #0 {
start:
  %_55 = alloca %"core::option::Option<usize>", align 8
  %_50 = alloca { ptr, i64 }, align 8
  %_48 = alloca { ptr, i64 }, align 8
  %_33 = alloca %"core::str::pattern::StrSearcher<'_, '_>", align 8
  %_31 = alloca %"core::option::Option<(usize, usize)>", align 8
  %_25 = alloca i8, align 1
  %_10 = alloca i64, align 8
  %_7 = alloca i64, align 8
  %_5 = alloca i8, align 1
  %_0 = alloca i8, align 1
  %haystack = alloca { ptr, i64 }, align 8
  %self = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %self, align 8
  %4 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %4, align 8
  store ptr %2, ptr %haystack, align 8
  %5 = getelementptr inbounds i8, ptr %haystack, i64 8
  store i64 %3, ptr %5, align 8
  %self.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %6 = getelementptr inbounds i8, ptr %self, i64 8
  %self.1 = load i64, ptr %6, align 8, !noundef !3
  %7 = icmp eq i64 %self.1, 0
  br i1 %7, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb17

bb2:                                              ; preds = %start
  %self.01 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %8 = getelementptr inbounds i8, ptr %self, i64 8
  %self.12 = load i64, ptr %8, align 8, !noundef !3
  store i64 %self.12, ptr %_7, align 8
  %self.03 = load ptr, ptr %haystack, align 8, !nonnull !3, !align !4, !noundef !3
  %9 = getelementptr inbounds i8, ptr %haystack, i64 8
  %self.14 = load i64, ptr %9, align 8, !noundef !3
  store i64 %self.14, ptr %_10, align 8
  %_42 = load i64, ptr %_7, align 8, !noundef !3
  %_43 = load i64, ptr %_10, align 8, !noundef !3
  %_41 = icmp ult i64 %_42, %_43
  br i1 %_41, label %bb18, label %bb19

bb17:                                             ; preds = %bb15, %bb16, %bb1
  %10 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %11 = trunc i8 %10 to i1
  ret i1 %11

bb19:                                             ; preds = %bb2
  %_44 = icmp eq i64 %_42, %_43
  br i1 %_44, label %bb20, label %bb21

bb18:                                             ; preds = %bb2
  store i8 -1, ptr %_5, align 1
  br label %bb23

bb21:                                             ; preds = %bb19
  store i8 1, ptr %_5, align 1
  br label %bb22

bb20:                                             ; preds = %bb19
  store i8 0, ptr %_5, align 1
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  br label %bb23

bb23:                                             ; preds = %bb18, %bb22
  %_12 = load i8, ptr %_5, align 1, !range !19, !noundef !3
  %12 = icmp eq i8 %_12, -1
  br i1 %12, label %bb4, label %bb3

bb4:                                              ; preds = %bb23
  %self.05 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %13 = getelementptr inbounds i8, ptr %self, i64 8
  %self.16 = load i64, ptr %13, align 8, !noundef !3
  %14 = icmp eq i64 %self.16, 1
  br i1 %14, label %bb5, label %bb7

bb3:                                              ; preds = %bb23
  %self.016 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %15 = getelementptr inbounds i8, ptr %self, i64 8
  %self.117 = load i64, ptr %15, align 8, !noundef !3
  %other.0 = load ptr, ptr %haystack, align 8, !nonnull !3, !align !4, !noundef !3
  %16 = getelementptr inbounds i8, ptr %haystack, i64 8
  %other.1 = load i64, ptr %16, align 8, !noundef !3
  store ptr %self.016, ptr %_48, align 8
  %17 = getelementptr inbounds i8, ptr %_48, i64 8
  store i64 %self.117, ptr %17, align 8
  store ptr %other.0, ptr %_50, align 8
  %18 = getelementptr inbounds i8, ptr %_50, i64 8
  store i64 %other.1, ptr %18, align 8
  %self.018 = load ptr, ptr %_48, align 8, !nonnull !3, !align !4, !noundef !3
  %19 = getelementptr inbounds i8, ptr %_48, i64 8
  %self.119 = load i64, ptr %19, align 8, !noundef !3
  %other.020 = load ptr, ptr %_50, align 8, !nonnull !3, !align !4, !noundef !3
  %20 = getelementptr inbounds i8, ptr %_50, i64 8
  %other.121 = load i64, ptr %20, align 8, !noundef !3
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %21 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17hf2d9586e25ea8362E"(ptr align 1 %self.018, i64 %self.119, ptr align 1 %other.020, i64 %other.121)
  %22 = zext i1 %21 to i8
  store i8 %22, ptr %_0, align 1
  br label %bb15

bb5:                                              ; preds = %bb4
  %self.07 = load ptr, ptr %haystack, align 8, !nonnull !3, !align !4, !noundef !3
  %23 = getelementptr inbounds i8, ptr %haystack, i64 8
  %self.18 = load i64, ptr %23, align 8, !noundef !3
  %self.09 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %24 = getelementptr inbounds i8, ptr %self, i64 8
  %self.110 = load i64, ptr %24, align 8, !noundef !3
  %_21 = icmp ult i64 0, %self.110
  %25 = call i1 @llvm.expect.i1(i1 %_21, i1 true)
  br i1 %25, label %bb6, label %panic

bb7:                                              ; preds = %bb4
  %self.012 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %26 = getelementptr inbounds i8, ptr %self, i64 8
  %self.113 = load i64, ptr %26, align 8, !noundef !3
  %_22 = icmp ule i64 %self.113, 32
  br i1 %_22, label %bb8, label %bb12

bb6:                                              ; preds = %bb5
  %x = getelementptr inbounds [0 x i8], ptr %self.09, i64 0, i64 0
  %x11 = load i8, ptr %x, align 1, !noundef !3
  %_57 = icmp ult i64 %self.18, 16
  br i1 %_57, label %bb26, label %bb28

panic:                                            ; preds = %bb5
; call core::panicking::panic_bounds_check
  call void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64 0, i64 %self.110, ptr align 8 @alloc_2178ef8f2220ed0485928da1fdc59a2b) #27
  unreachable

bb28:                                             ; preds = %bb6
; call core::slice::memchr::memchr_aligned
  %27 = call { i64, i64 } @_ZN4core5slice6memchr14memchr_aligned17h2b2455b94ee89b25E(i8 %x11, ptr align 1 %self.07, i64 %self.18)
  %28 = extractvalue { i64, i64 } %27, 0
  %29 = extractvalue { i64, i64 } %27, 1
  store i64 %28, ptr %_55, align 8
  %30 = getelementptr inbounds i8, ptr %_55, i64 8
  store i64 %29, ptr %30, align 8
  br label %bb25

bb26:                                             ; preds = %bb6
; call core::slice::memchr::memchr_naive
  %31 = call { i64, i64 } @_ZN4core5slice6memchr12memchr_naive17h0ed90e9383abf351E(i8 %x11, ptr align 1 %self.07, i64 %self.18)
  %32 = extractvalue { i64, i64 } %31, 0
  %33 = extractvalue { i64, i64 } %31, 1
  store i64 %32, ptr %_55, align 8
  %34 = getelementptr inbounds i8, ptr %_55, i64 8
  store i64 %33, ptr %34, align 8
  br label %bb25

bb25:                                             ; preds = %bb26, %bb28
  %_59 = load i64, ptr %_55, align 8, !range !9, !noundef !3
  %35 = icmp eq i64 %_59, 1
  %36 = zext i1 %35 to i8
  store i8 %36, ptr %_0, align 1
  br label %bb16

bb16:                                             ; preds = %bb10, %bb25
  br label %bb17

bb12:                                             ; preds = %bb7
  br label %bb13

bb8:                                              ; preds = %bb7
  %_26.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %37 = getelementptr inbounds i8, ptr %self, i64 8
  %_26.1 = load i64, ptr %37, align 8, !noundef !3
  %_27.0 = load ptr, ptr %haystack, align 8, !nonnull !3, !align !4, !noundef !3
  %38 = getelementptr inbounds i8, ptr %haystack, i64 8
  %_27.1 = load i64, ptr %38, align 8, !noundef !3
; call core::str::pattern::simd_contains
  %39 = call i8 @_ZN4core3str7pattern13simd_contains17hdb5b94c41ec2d3bcE(ptr align 1 %_26.0, i64 %_26.1, ptr align 1 %_27.0, i64 %_27.1), !range !18
  store i8 %39, ptr %_25, align 1
  %40 = load i8, ptr %_25, align 1, !range !18, !noundef !3
  %41 = icmp eq i8 %40, 2
  %_28 = select i1 %41, i64 0, i64 1
  %42 = icmp eq i64 %_28, 1
  br i1 %42, label %bb10, label %bb11

bb13:                                             ; preds = %bb11, %bb12
  %self.014 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %43 = getelementptr inbounds i8, ptr %self, i64 8
  %self.115 = load i64, ptr %43, align 8, !noundef !3
  %haystack.0 = load ptr, ptr %haystack, align 8, !nonnull !3, !align !4, !noundef !3
  %44 = getelementptr inbounds i8, ptr %haystack, i64 8
  %haystack.1 = load i64, ptr %44, align 8, !noundef !3
; call core::str::pattern::StrSearcher::new
  call void @_ZN4core3str7pattern11StrSearcher3new17h92bc4266e1ec1403E(ptr sret(%"core::str::pattern::StrSearcher<'_, '_>") align 8 %_33, ptr align 1 %haystack.0, i64 %haystack.1, ptr align 1 %self.014, i64 %self.115)
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h53d21f240cc892fcE"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_31, ptr align 8 %_33)
  %_61 = load i64, ptr %_31, align 8, !range !9, !noundef !3
  %45 = icmp eq i64 %_61, 1
  %46 = zext i1 %45 to i8
  store i8 %46, ptr %_0, align 1
  br label %bb15

bb10:                                             ; preds = %bb8
  %47 = load i8, ptr %_25, align 1, !range !10, !noundef !3
  %result = trunc i8 %47 to i1
  %48 = zext i1 %result to i8
  store i8 %48, ptr %_0, align 1
  br label %bb16

bb11:                                             ; preds = %bb8
  br label %bb13

bb15:                                             ; preds = %bb3, %bb13
  br label %bb17
}

; <&str as core::str::pattern::Pattern>::strip_suffix_of
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$15strip_suffix_of17h69de660b1de2e60cE"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %_18 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_0 = alloca %"core::option::Option<&str>", align 8
; call core::slice::<impl [T]>::ends_with
  %_3 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9ends_with17hbfef65dd11623226E"(ptr align 1 %haystack.0, i64 %haystack.1, ptr align 1 %self.0, i64 %self.1)
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %0 = load ptr, ptr @1, align 8, !align !4, !noundef !3
  %1 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %0, ptr %_0, align 8
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %1, ptr %2, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %i = sub i64 %haystack.1, %self.1
  store ptr %haystack.0, ptr %_18, align 8
  %3 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %i, ptr %3, align 8
  %4 = load ptr, ptr %_18, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_18, i64 8
  %6 = load i64, ptr %5, align 8, !noundef !3
  store ptr %4, ptr %_17, align 8
  %7 = getelementptr inbounds i8, ptr %_17, i64 8
  store i64 %6, ptr %7, align 8
  %_15.0 = load ptr, ptr %_17, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_17, i64 8
  %_15.1 = load i64, ptr %8, align 8, !noundef !3
  store ptr %_15.0, ptr %_0, align 8
  %9 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_15.1, ptr %9, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %10 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  %12 = load i64, ptr %11, align 8
  %13 = insertvalue { ptr, i64 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i64 } %13, i64 %12, 1
  ret { ptr, i64 } %14
}

; <alloc::string::String as core::fmt::Write>::write_char
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$10write_char17h977db6aca70d7e40E"(ptr align 8 %self, i32 %c) unnamed_addr #0 {
start:
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h15f1d932223e61d3E(ptr align 8 %self, i32 %c)
  ret i1 false
}

; <alloc::string::String as core::fmt::Write>::write_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..fmt..Write$GT$9write_str17h05503e6cfc98d033E"(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h102f896cdc9c3e1dE"(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1)
  ret i1 false
}

; <alloc::string::String as core::hash::Hash>::hash
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN58_$LT$alloc..string..String$u20$as$u20$core..hash..Hash$GT$4hash17h5cd18bba84a7ec0fE"(ptr align 8 %self, ptr align 8 %hasher) unnamed_addr #0 {
start:
  %_15 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_15, align 8
  %2 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_15, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_15, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_14, align 8
  %6 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %5, ptr %6, align 8
  %v.0 = load ptr, ptr %_14, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_14, i64 8
  %v.1 = load i64, ptr %7, align 8, !noundef !3
; call <std::hash::random::DefaultHasher as core::hash::Hasher>::write_str
  call void @"_ZN71_$LT$std..hash..random..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$9write_str17hc78e34e958b50f9bE"(ptr align 8 %hasher, ptr align 1 %v.0, i64 %v.1)
  ret void
}

; <&&str as core::str::pattern::Pattern>::is_suffix_of
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN59_$LT$$RF$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$12is_suffix_of17h1f0d3a33fb5e965fE"(ptr align 8 %self, ptr align 1 %haystack.0, i64 %haystack.1) unnamed_addr #0 {
start:
  %s.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %s.1 = load i64, ptr %0, align 8, !noundef !3
; call core::slice::<impl [T]>::ends_with
  %_0 = call zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$9ends_with17hbfef65dd11623226E"(ptr align 1 %haystack.0, i64 %haystack.1, ptr align 1 %s.0, i64 %s.1)
  ret i1 %_0
}

; <alloc::alloc::Global as core::clone::Clone>::clone
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h2ee6518c98a2a74dE"(ptr align 1 %self) unnamed_addr #0 {
start:
  ret void
}

; alloc::collections::btree::map::IntoIter<K,V,A>::dying_next
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17he878847a6e2c6d8bE"(ptr sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_7 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %0 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %self, i32 0, i32 1
  %_2 = load i64, ptr %0, align 8, !noundef !3
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb1, label %bb4

bb1:                                              ; preds = %start
  %_6 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %self, i32 0, i32 2
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h2ee6518c98a2a74dE"(ptr align 1 %_6)
; call alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::deallocating_end
  call void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$16deallocating_end17h2bc2700d1e52a063E"(ptr align 8 %self)
  store ptr null, ptr %_0, align 8
  br label %bb7

bb4:                                              ; preds = %start
  %2 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %self, i32 0, i32 1
  %3 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %self, i32 0, i32 1
  %4 = load i64, ptr %3, align 8, !noundef !3
  %5 = sub i64 %4, 1
  store i64 %5, ptr %2, align 8
  %_10 = getelementptr inbounds %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %self, i32 0, i32 2
; call <alloc::alloc::Global as core::clone::Clone>::clone
  call void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h2ee6518c98a2a74dE"(ptr align 1 %_10)
; call alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::deallocating_next_unchecked
  call void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$27deallocating_next_unchecked17habd6152630eb5339E"(ptr sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") align 8 %_7, ptr align 8 %self)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_7, i64 24, i1 false)
  br label %bb7

bb7:                                              ; preds = %bb4, %bb1
  ret void
}

; alloc::collections::btree::mem::replace
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN5alloc11collections5btree3mem7replace17h58d80318b73e5d4bE(ptr sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") align 8 %ret, ptr align 8 %v) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_7 = alloca { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>" }, align 8
  %_6 = alloca { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }, align 8
  %new_value = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %value = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_3 = alloca %"alloc::collections::btree::mem::replace::PanicGuard", align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %value, ptr align 8 %v, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %value, i64 24, i1 false)
; invoke alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::{{closure}}
  invoke void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$27deallocating_next_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17h6ba4bebf93c78b71E"(ptr sret({ %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }) align 8 %_6, ptr align 8 %_7)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::collections::btree::mem::replace::PanicGuard>
  invoke void @"_ZN4core3ptr72drop_in_place$LT$alloc..collections..btree..mem..replace..PanicGuard$GT$17hcac0db49cfa00a6dE"(ptr align 1 %_3) #28
          to label %bb2 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb1:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %new_value, ptr align 8 %_6, i64 24, i1 false)
  %5 = getelementptr inbounds { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }, ptr %_6, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %ret, ptr align 8 %5, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v, ptr align 8 %new_value, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb3
  %6 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb2:                                              ; preds = %bb3
  %9 = load ptr, ptr %0, align 8, !noundef !3
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  %11 = load i32, ptr %10, align 8, !noundef !3
  %12 = insertvalue { ptr, i32 } poison, ptr %9, 0
  %13 = insertvalue { ptr, i32 } %12, i32 %11, 1
  resume { ptr, i32 } %13
}

; alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::deallocate_and_ascend
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17h896abcba34d8101fE"(ptr sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>") align 8 %_0, ptr %self.0, i64 %self.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %x = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_10 = alloca %"core::alloc::layout::Layout", align 8
  %_9 = alloca ptr, align 8
  %self = alloca %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>", align 8
  %ret = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
; invoke alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
  invoke void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h782a3bc414151f6bE"(ptr sret(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>") align 8 %self, ptr %self.0, i64 %self.1)
          to label %bb1 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %1 = load ptr, ptr %0, align 8, !noundef !3
  %2 = getelementptr inbounds i8, ptr %0, i64 8
  %3 = load i32, ptr %2, align 8, !noundef !3
  %4 = insertvalue { ptr, i32 } poison, ptr %1, 0
  %5 = insertvalue { ptr, i32 } %4, i32 %3, 1
  resume { ptr, i32 } %5

cleanup:                                          ; preds = %bb4, %start
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %0, align 8
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb7

bb1:                                              ; preds = %start
  %10 = load ptr, ptr %self, align 8, !noundef !3
  %11 = ptrtoint ptr %10 to i64
  %12 = icmp eq i64 %11, 0
  %_12 = select i1 %12, i64 1, i64 0
  %13 = icmp eq i64 %_12, 0
  br i1 %13, label %bb10, label %bb9

bb10:                                             ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %x, ptr align 8 %self, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %ret, ptr align 8 %x, i64 24, i1 false)
  br label %bb11

bb9:                                              ; preds = %bb1
  store ptr null, ptr %ret, align 8
  br label %bb11

bb11:                                             ; preds = %bb9, %bb10
  store ptr %self.0, ptr %_9, align 8
  %_11 = icmp ugt i64 %self.1, 0
  br i1 %_11, label %bb2, label %bb3

bb3:                                              ; preds = %bb11
  %14 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 544, ptr %14, align 8
  store i64 8, ptr %_10, align 8
  br label %bb4

bb2:                                              ; preds = %bb11
  %15 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 640, ptr %15, align 8
  store i64 8, ptr %_10, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %16 = load ptr, ptr %_9, align 8, !nonnull !3, !noundef !3
  %17 = load i64, ptr %_10, align 8, !range !26, !noundef !3
  %18 = getelementptr inbounds i8, ptr %_10, i64 8
  %19 = load i64, ptr %18, align 8, !noundef !3
; invoke <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  invoke void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %alloc, ptr %16, i64 %17, i64 %19)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %ret, i64 24, i1 false)
  ret void

bb12:                                             ; No predecessors!
  unreachable
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,Type>::force
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc11collections5btree4node145Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$Type$GT$5force17hd39f357db5d3988fE"(ptr sret(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_11 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", align 8
  %_10 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>", align 8
  %_8 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", align 8
  %_5 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", align 8
  %_2 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load i64, ptr %0, align 8, !noundef !3
  %self2 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %1 = icmp eq i64 %self1, 0
  br i1 %1, label %bb5, label %bb6

bb5:                                              ; preds = %start
  %2 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %self1, ptr %2, align 8
  store ptr %self2, ptr %_10, align 8
  %3 = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_10, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  %6 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf", ptr %_2, i32 0, i32 1
  store ptr %3, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  store i64 %5, ptr %7, align 8
  store i64 0, ptr %_2, align 8
  br label %bb4

bb6:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %self1, ptr %8, align 8
  store ptr %self2, ptr %_11, align 8
  %9 = load ptr, ptr %_11, align 8, !nonnull !3, !noundef !3
  %10 = getelementptr inbounds i8, ptr %_11, i64 8
  %11 = load i64, ptr %10, align 8, !noundef !3
  %12 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal", ptr %_2, i32 0, i32 1
  store ptr %9, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  store i64 %11, ptr %13, align 8
  store i64 1, ptr %_2, align 8
  br label %bb4

bb4:                                              ; preds = %bb6, %bb5
  %_3 = load i64, ptr %_2, align 8, !range !9, !noundef !3
  %14 = icmp eq i64 %_3, 0
  br i1 %14, label %bb2, label %bb1

bb2:                                              ; preds = %bb4
  %15 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf", ptr %_2, i32 0, i32 1
  %node.0 = load ptr, ptr %15, align 8, !nonnull !3, !noundef !3
  %16 = getelementptr inbounds i8, ptr %15, i64 8
  %node.1 = load i64, ptr %16, align 8, !noundef !3
  %17 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", ptr %self, i32 0, i32 1
  %_6 = load i64, ptr %17, align 8, !noundef !3
  store ptr %node.0, ptr %_5, align 8
  %18 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %node.1, ptr %18, align 8
  %19 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", ptr %_5, i32 0, i32 1
  store i64 %_6, ptr %19, align 8
  %20 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %_5, i64 24, i1 false)
  store i64 0, ptr %_0, align 8
  br label %bb3

bb1:                                              ; preds = %bb4
  %21 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal", ptr %_2, i32 0, i32 1
  %node.03 = load ptr, ptr %21, align 8, !nonnull !3, !noundef !3
  %22 = getelementptr inbounds i8, ptr %21, i64 8
  %node.14 = load i64, ptr %22, align 8, !noundef !3
  %23 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", ptr %self, i32 0, i32 1
  %_9 = load i64, ptr %23, align 8, !noundef !3
  store ptr %node.03, ptr %_8, align 8
  %24 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %node.14, ptr %24, align 8
  %25 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", ptr %_8, i32 0, i32 1
  store i64 %_9, ptr %25, align 8
  %26 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %26, ptr align 8 %_8, i64 24, i1 false)
  store i64 1, ptr %_0, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  ret void

bb7:                                              ; No predecessors!
  unreachable
}

; alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::drop_key_val
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$12drop_key_val17h6ee72494bcf30979E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %self1 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_6 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %self1, i32 0, i32 1
  %0 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", ptr %self, i32 0, i32 1
  %index = load i64, ptr %0, align 8, !noundef !3
  %self2 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<std::ffi::os_str::OsString>", ptr %_6, i64 %index
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %self2)
  %_10 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %self1, i32 0, i32 2
  %1 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", ptr %self, i32 0, i32 1
  %index3 = load i64, ptr %1, align 8, !noundef !3
  %self4 = getelementptr inbounds %"core::mem::maybe_uninit::MaybeUninit<core::option::Option<std::ffi::os_str::OsString>>", ptr %_10, i64 %index3
; call core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  call void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %self4)
  ret void
}

; alloc::collections::btree::node::NodeRef<BorrowType,K,V,Type>::ascend
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc11collections5btree4node40NodeRef$LT$BorrowType$C$K$C$V$C$Type$GT$6ascend17h782a3bc414151f6bE"(ptr sret(%"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>") align 8 %_0, ptr %0, i64 %1) unnamed_addr #1 {
start:
  %v = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_27 = alloca ptr, align 8
  %_20 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", align 8
  %_19 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_8 = alloca ptr, align 8
  %self2 = alloca ptr, align 8
  %self1 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %leaf_ptr = alloca ptr, align 8
  %self = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  store ptr %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
  %self3 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store ptr %self3, ptr %leaf_ptr, align 8
  %3 = load ptr, ptr %leaf_ptr, align 8, !noundef !3
  %4 = load ptr, ptr %3, align 8, !noundef !3
  store ptr %4, ptr %_8, align 8
  %5 = load ptr, ptr %_8, align 8, !noundef !3
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_14 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_14, 0
  br i1 %8, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store ptr null, ptr %self2, align 8
  br label %bb1

bb3:                                              ; preds = %start
  store ptr %_8, ptr %self2, align 8
  br label %bb1

bb1:                                              ; preds = %bb3, %bb2
  %f = getelementptr inbounds i8, ptr %self, i64 8
  %9 = load ptr, ptr %self2, align 8, !noundef !3
  %10 = ptrtoint ptr %9 to i64
  %11 = icmp eq i64 %10, 0
  %_17 = select i1 %11, i64 0, i64 1
  %12 = icmp eq i64 %_17, 0
  br i1 %12, label %bb4, label %bb5

bb4:                                              ; preds = %bb1
  store ptr null, ptr %self1, align 8
  br label %bb6

bb5:                                              ; preds = %bb1
  %x = load ptr, ptr %self2, align 8, !nonnull !3, !align !5, !noundef !3
  %node = load ptr, ptr %x, align 8, !nonnull !3, !noundef !3
  %_23 = load i64, ptr %f, align 8, !noundef !3
  %height = add i64 %_23, 1
  store ptr %node, ptr %_27, align 8
  %13 = getelementptr inbounds i8, ptr %_20, i64 8
  store i64 %height, ptr %13, align 8
  %14 = load ptr, ptr %_27, align 8, !nonnull !3, !noundef !3
  store ptr %14, ptr %_20, align 8
  %_26 = load ptr, ptr %leaf_ptr, align 8, !noundef !3
  %15 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %_26, i32 0, i32 3
  %self4 = load i16, ptr %15, align 8
  %_24 = zext i16 %self4 to i64
  %16 = load ptr, ptr %_20, align 8, !nonnull !3, !noundef !3
  %17 = getelementptr inbounds i8, ptr %_20, i64 8
  %18 = load i64, ptr %17, align 8, !noundef !3
  store ptr %16, ptr %_19, align 8
  %19 = getelementptr inbounds i8, ptr %_19, i64 8
  store i64 %18, ptr %19, align 8
  %20 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", ptr %_19, i32 0, i32 1
  store i64 %_24, ptr %20, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self1, ptr align 8 %_19, i64 24, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %err.0 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %21 = getelementptr inbounds i8, ptr %self, i64 8
  %err.1 = load i64, ptr %21, align 8, !noundef !3
  %22 = load ptr, ptr %self1, align 8, !noundef !3
  %23 = ptrtoint ptr %22 to i64
  %24 = icmp eq i64 %23, 0
  %_35 = select i1 %24, i64 0, i64 1
  %25 = icmp eq i64 %_35, 0
  br i1 %25, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %26 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>>::Err", ptr %_0, i32 0, i32 1
  store ptr %err.0, ptr %26, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 8
  store i64 %err.1, ptr %27, align 8
  store ptr null, ptr %_0, align 8
  br label %bb9

bb8:                                              ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v, ptr align 8 %self1, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %v, i64 24, i1 false)
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  ret void

bb10:                                             ; No predecessors!
  unreachable
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::first_leaf_edge
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17h40f25de80105267bE"(ptr sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") align 8 %_0, ptr %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %node1 = alloca ptr, align 8
  %node = alloca i64, align 8
  %_32 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>]>", align 8
  %_8 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>", align 8
  %_7 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>", align 8
  %self = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_2 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>", align 8
  store i64 %self.1, ptr %node, align 8
  store ptr %self.0, ptr %node1, align 8
  br label %bb1

bb1:                                              ; preds = %bb2, %start
  %self2 = load i64, ptr %node, align 8, !noundef !3
  %self3 = load ptr, ptr %node1, align 8, !nonnull !3, !noundef !3
  %0 = icmp eq i64 %self2, 0
  br i1 %0, label %bb5, label %bb6

bb5:                                              ; preds = %bb1
  %1 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %self2, ptr %1, align 8
  store ptr %self3, ptr %_7, align 8
  %2 = load ptr, ptr %_7, align 8, !nonnull !3, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_7, i64 8
  %4 = load i64, ptr %3, align 8, !noundef !3
  %5 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf", ptr %_2, i32 0, i32 1
  store ptr %2, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  store i64 %4, ptr %6, align 8
  store i64 0, ptr %_2, align 8
  br label %bb4

bb6:                                              ; preds = %bb1
  %7 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %self2, ptr %7, align 8
  store ptr %self3, ptr %_8, align 8
  %8 = load ptr, ptr %_8, align 8, !nonnull !3, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_8, i64 8
  %10 = load i64, ptr %9, align 8, !noundef !3
  %11 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal", ptr %_2, i32 0, i32 1
  store ptr %8, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  store i64 1, ptr %_2, align 8
  br label %bb4

bb4:                                              ; preds = %bb6, %bb5
  %_3 = load i64, ptr %_2, align 8, !range !9, !noundef !3
  %13 = icmp eq i64 %_3, 0
  br i1 %13, label %bb3, label %bb2

bb3:                                              ; preds = %bb4
  %14 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Leaf", ptr %_2, i32 0, i32 1
  %leaf.0 = load ptr, ptr %14, align 8, !nonnull !3, !noundef !3
  %15 = getelementptr inbounds i8, ptr %14, i64 8
  %leaf.1 = load i64, ptr %15, align 8, !noundef !3
  store ptr %leaf.0, ptr %_0, align 8
  %16 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %leaf.1, ptr %16, align 8
  %17 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %17, align 8
  ret void

bb2:                                              ; preds = %bb4
  %18 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>>::Internal", ptr %_2, i32 0, i32 1
  %internal.0 = load ptr, ptr %18, align 8, !nonnull !3, !noundef !3
  %19 = getelementptr inbounds i8, ptr %18, i64 8
  %internal.1 = load i64, ptr %19, align 8, !noundef !3
  store ptr %internal.0, ptr %self, align 8
  %20 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %internal.1, ptr %20, align 8
  %21 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", ptr %self, i32 0, i32 1
  store i64 0, ptr %21, align 8
  %self4 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_19 = getelementptr inbounds %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %self4, i32 0, i32 1
  %22 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", ptr %self, i32 0, i32 1
  %index = load i64, ptr %22, align 8, !noundef !3
  store ptr %_19, ptr %_32, align 8
  %23 = getelementptr inbounds i8, ptr %_32, i64 8
  store i64 12, ptr %23, align 8
  %24 = getelementptr inbounds i8, ptr %_32, i64 8
  %_30 = load i64, ptr %24, align 8, !noundef !3
  %cond = icmp ult i64 %index, %_30
  call void @llvm.assume(i1 %cond)
  %self5 = getelementptr inbounds ptr, ptr %_19, i64 %index
  %node6 = load ptr, ptr %self5, align 8, !nonnull !3, !noundef !3
  %25 = getelementptr inbounds i8, ptr %self, i64 8
  %_22 = load i64, ptr %25, align 8, !noundef !3
  %_21 = sub i64 %_22, 1
  store i64 %_21, ptr %node, align 8
  store ptr %node6, ptr %node1, align 8
  br label %bb1

bb7:                                              ; No predecessors!
  unreachable
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::next_leaf_edge
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc11collections5btree8navigate235_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$alloc..collections..btree..node..marker..KV$GT$$GT$14next_leaf_edge17hf8eb0f4db65a45b5E"(ptr sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %_32 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<core::ptr::non_null::NonNull<alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>>]>", align 8
  %self1 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_5 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %next_internal_edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_2 = alloca %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>", align 8
; call alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,Type>::force
  call void @"_ZN5alloc11collections5btree4node145Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$Type$GT$5force17hd39f357db5d3988fE"(ptr sret(%"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>") align 8 %_2, ptr align 8 %self)
  %_3 = load i64, ptr %_2, align 8, !range !9, !noundef !3
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %1 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf", ptr %_2, i32 0, i32 1
  %leaf_kv.0 = load ptr, ptr %1, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %1, i64 8
  %leaf_kv.1 = load i64, ptr %2, align 8, !noundef !3
  %3 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Leaf", ptr %_2, i32 0, i32 1
  %4 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>", ptr %3, i32 0, i32 1
  %leaf_kv = load i64, ptr %4, align 8, !noundef !3
  %idx = add i64 %leaf_kv, 1
  store ptr %leaf_kv.0, ptr %_0, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %leaf_kv.1, ptr %5, align 8
  %6 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", ptr %_0, i32 0, i32 1
  store i64 %idx, ptr %6, align 8
  br label %bb5

bb2:                                              ; preds = %start
  %7 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal", ptr %_2, i32 0, i32 1
  %internal_kv.0 = load ptr, ptr %7, align 8, !nonnull !3, !noundef !3
  %8 = getelementptr inbounds i8, ptr %7, i64 8
  %internal_kv.1 = load i64, ptr %8, align 8, !noundef !3
  %9 = getelementptr inbounds %"alloc::collections::btree::node::ForceResult<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>>::Internal", ptr %_2, i32 0, i32 1
  %10 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::KV>", ptr %9, i32 0, i32 1
  %internal_kv = load i64, ptr %10, align 8, !noundef !3
  %idx2 = add i64 %internal_kv, 1
  store ptr %internal_kv.0, ptr %next_internal_edge, align 8
  %11 = getelementptr inbounds i8, ptr %next_internal_edge, i64 8
  store i64 %internal_kv.1, ptr %11, align 8
  %12 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", ptr %next_internal_edge, i32 0, i32 1
  store i64 %idx2, ptr %12, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self1, ptr align 8 %next_internal_edge, i64 24, i1 false)
  %self3 = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  %_19 = getelementptr inbounds %"alloc::collections::btree::node::InternalNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %self3, i32 0, i32 1
  %13 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", ptr %self1, i32 0, i32 1
  %index = load i64, ptr %13, align 8, !noundef !3
  store ptr %_19, ptr %_32, align 8
  %14 = getelementptr inbounds i8, ptr %_32, i64 8
  store i64 12, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %_32, i64 8
  %_30 = load i64, ptr %15, align 8, !noundef !3
  %cond = icmp ult i64 %index, %_30
  call void @llvm.assume(i1 %cond)
  %self4 = getelementptr inbounds ptr, ptr %_19, i64 %index
  %node = load ptr, ptr %self4, align 8, !nonnull !3, !noundef !3
  %16 = getelementptr inbounds i8, ptr %self1, i64 8
  %_22 = load i64, ptr %16, align 8, !noundef !3
  %_21 = sub i64 %_22, 1
  %17 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %_21, ptr %17, align 8
  store ptr %node, ptr %_5, align 8
  %18 = load ptr, ptr %_5, align 8, !nonnull !3, !noundef !3
  %19 = getelementptr inbounds i8, ptr %_5, i64 8
  %20 = load i64, ptr %19, align 8, !noundef !3
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::first_leaf_edge
  call void @"_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17h40f25de80105267bE"(ptr sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") align 8 %_0, ptr %18, i64 %20)
  br label %bb5

bb5:                                              ; preds = %bb2, %bb3
  ret void

bb6:                                              ; No predecessors!
  unreachable
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_end
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$16deallocating_end17hc8fabf07ed3954d7E"(ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %edge2 = alloca i64, align 8
  %edge = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %node1 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %node = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_3 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %self3 = load i64, ptr %1, align 8, !noundef !3
  %self4 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", ptr %self, i32 0, i32 1
  %self5 = load i64, ptr %2, align 8, !noundef !3
  %3 = getelementptr inbounds i8, ptr %node, i64 8
  store i64 %self3, ptr %3, align 8
  store ptr %self4, ptr %node, align 8
  %4 = load ptr, ptr %node, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds i8, ptr %node, i64 8
  %6 = load i64, ptr %5, align 8, !noundef !3
  store ptr %4, ptr %edge, align 8
  %7 = getelementptr inbounds i8, ptr %edge, i64 8
  store i64 %6, ptr %7, align 8
  store i64 %self5, ptr %edge2, align 8
  br label %bb1

bb1:                                              ; preds = %bb4, %start
  %self.0 = load ptr, ptr %edge, align 8, !nonnull !3, !noundef !3
  %8 = getelementptr inbounds i8, ptr %edge, i64 8
  %self.1 = load i64, ptr %8, align 8, !noundef !3
  %self6 = load i64, ptr %edge2, align 8, !noundef !3
; invoke <alloc::alloc::Global as core::clone::Clone>::clone
  invoke void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h2ee6518c98a2a74dE"(ptr align 1 %alloc)
          to label %bb2 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %9 = load ptr, ptr %0, align 8, !noundef !3
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  %11 = load i32, ptr %10, align 8, !noundef !3
  %12 = insertvalue { ptr, i32 } poison, ptr %9, 0
  %13 = insertvalue { ptr, i32 } %12, i32 %11, 1
  resume { ptr, i32 } %13

cleanup:                                          ; preds = %bb2, %bb1
  %14 = landingpad { ptr, i32 }
          cleanup
  %15 = extractvalue { ptr, i32 } %14, 0
  %16 = extractvalue { ptr, i32 } %14, 1
  store ptr %15, ptr %0, align 8
  %17 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %16, ptr %17, align 8
  br label %bb7

bb2:                                              ; preds = %bb1
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::deallocate_and_ascend
  invoke void @"_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17h896abcba34d8101fE"(ptr sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>") align 8 %_3, ptr %self.0, i64 %self.1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %18 = load ptr, ptr %_3, align 8, !noundef !3
  %19 = ptrtoint ptr %18 to i64
  %20 = icmp eq i64 %19, 0
  %_6 = select i1 %20, i64 0, i64 1
  %21 = icmp eq i64 %_6, 1
  br i1 %21, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %22 = getelementptr inbounds i8, ptr %_3, i64 8
  %parent_edge = load i64, ptr %22, align 8, !noundef !3
  %parent_edge7 = load ptr, ptr %_3, align 8, !nonnull !3, !noundef !3
  %23 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", ptr %_3, i32 0, i32 1
  %parent_edge8 = load i64, ptr %23, align 8, !noundef !3
  %24 = getelementptr inbounds i8, ptr %node1, i64 8
  store i64 %parent_edge, ptr %24, align 8
  store ptr %parent_edge7, ptr %node1, align 8
  %25 = load ptr, ptr %node1, align 8, !nonnull !3, !noundef !3
  %26 = getelementptr inbounds i8, ptr %node1, i64 8
  %27 = load i64, ptr %26, align 8, !noundef !3
  store ptr %25, ptr %edge, align 8
  %28 = getelementptr inbounds i8, ptr %edge, i64 8
  store i64 %27, ptr %28, align 8
  store i64 %parent_edge8, ptr %edge2, align 8
  br label %bb1

bb5:                                              ; preds = %bb3
  ret void
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$17deallocating_next17hf51501ccaa2b93f9E"(ptr sret(%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %node2 = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_29 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_26 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %node = alloca %"alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>", align 8
  %_14 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_13 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_11 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_10 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_9 = alloca { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }, align 8
  %kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %self1 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %_5 = alloca %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>", align 8
  %_4 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %self3 = load i64, ptr %1, align 8, !noundef !3
  %self4 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", ptr %self, i32 0, i32 1
  %self5 = load i64, ptr %2, align 8, !noundef !3
  %3 = getelementptr inbounds i8, ptr %node, i64 8
  store i64 %self3, ptr %3, align 8
  store ptr %self4, ptr %node, align 8
  %4 = load ptr, ptr %node, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds i8, ptr %node, i64 8
  %6 = load i64, ptr %5, align 8, !noundef !3
  store ptr %4, ptr %edge, align 8
  %7 = getelementptr inbounds i8, ptr %edge, i64 8
  store i64 %6, ptr %7, align 8
  %8 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", ptr %edge, i32 0, i32 1
  store i64 %self5, ptr %8, align 8
  br label %bb1

bb1:                                              ; preds = %bb8, %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self1, ptr align 8 %edge, i64 24, i1 false)
  %9 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", ptr %self1, i32 0, i32 1
  %_23 = load i64, ptr %9, align 8, !noundef !3
  %self6 = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  %10 = getelementptr inbounds %"alloc::collections::btree::node::LeafNode<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", ptr %self6, i32 0, i32 4
  %small = load i16, ptr %10, align 2, !noundef !3
  %_24 = zext i16 %small to i64
  %_22 = icmp ult i64 %_23, %_24
  br i1 %_22, label %bb13, label %bb14

bb14:                                             ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_29, ptr align 8 %self1, i64 24, i1 false)
  %11 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err", ptr %_5, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %_29, i64 24, i1 false)
  store i64 1, ptr %_5, align 8
  br label %bb15

bb13:                                             ; preds = %bb1
  %node.0 = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  %12 = getelementptr inbounds i8, ptr %self1, i64 8
  %node.1 = load i64, ptr %12, align 8, !noundef !3
  %13 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", ptr %self1, i32 0, i32 1
  %idx = load i64, ptr %13, align 8, !noundef !3
  store ptr %node.0, ptr %_26, align 8
  %14 = getelementptr inbounds i8, ptr %_26, i64 8
  store i64 %node.1, ptr %14, align 8
  %15 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", ptr %_26, i32 0, i32 1
  store i64 %idx, ptr %15, align 8
  %16 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok", ptr %_5, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %_26, i64 24, i1 false)
  store i64 0, ptr %_5, align 8
  br label %bb15

bb15:                                             ; preds = %bb13, %bb14
  %_7 = load i64, ptr %_5, align 8, !range !9, !noundef !3
  %17 = icmp eq i64 %_7, 0
  br i1 %17, label %bb3, label %bb2

bb3:                                              ; preds = %bb15
  %18 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Ok", ptr %_5, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %kv, ptr align 8 %18, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_11, ptr align 8 %kv, i64 24, i1 false)
; invoke alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>,alloc::collections::btree::node::marker::KV>>::next_leaf_edge
  invoke void @"_ZN5alloc11collections5btree8navigate235_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$C$alloc..collections..btree..node..marker..KV$GT$$GT$14next_leaf_edge17hf8eb0f4db65a45b5E"(ptr sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") align 8 %_10, ptr align 8 %_11)
          to label %bb4 unwind label %cleanup

bb2:                                              ; preds = %bb15
  %19 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err", ptr %_5, i32 0, i32 1
  %last_edge.0 = load ptr, ptr %19, align 8, !nonnull !3, !noundef !3
  %20 = getelementptr inbounds i8, ptr %19, i64 8
  %last_edge.1 = load i64, ptr %20, align 8, !noundef !3
  %21 = getelementptr inbounds %"core::result::Result<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>>::Err", ptr %_5, i32 0, i32 1
  %22 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", ptr %21, i32 0, i32 1
  %last_edge = load i64, ptr %22, align 8, !noundef !3
; invoke <alloc::alloc::Global as core::clone::Clone>::clone
  invoke void @"_ZN59_$LT$alloc..alloc..Global$u20$as$u20$core..clone..Clone$GT$5clone17h2ee6518c98a2a74dE"(ptr align 1 %alloc)
          to label %bb5 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %23 = load ptr, ptr %0, align 8, !noundef !3
  %24 = getelementptr inbounds i8, ptr %0, i64 8
  %25 = load i32, ptr %24, align 8, !noundef !3
  %26 = insertvalue { ptr, i32 } poison, ptr %23, 0
  %27 = insertvalue { ptr, i32 } %26, i32 %25, 1
  resume { ptr, i32 } %27

cleanup:                                          ; preds = %bb5, %bb2, %bb3
  %28 = landingpad { ptr, i32 }
          cleanup
  %29 = extractvalue { ptr, i32 } %28, 0
  %30 = extractvalue { ptr, i32 } %28, 1
  store ptr %29, ptr %0, align 8
  %31 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %30, ptr %31, align 8
  br label %bb11

bb4:                                              ; preds = %bb3
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_13, ptr align 8 %kv, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %_10, i64 24, i1 false)
  %32 = getelementptr inbounds { %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }, ptr %_9, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %32, ptr align 8 %_13, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 48, i1 false)
  br label %bb9

bb9:                                              ; preds = %bb7, %bb4
  ret void

bb5:                                              ; preds = %bb2
; invoke alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::deallocate_and_ascend
  invoke void @"_ZN5alloc11collections5btree4node127NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$21deallocate_and_ascend17h896abcba34d8101fE"(ptr sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>>") align 8 %_14, ptr %last_edge.0, i64 %last_edge.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %33 = load ptr, ptr %_14, align 8, !noundef !3
  %34 = ptrtoint ptr %33 to i64
  %35 = icmp eq i64 %34, 0
  %_17 = select i1 %35, i64 0, i64 1
  %36 = icmp eq i64 %_17, 0
  br i1 %36, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store ptr null, ptr %_0, align 8
  br label %bb9

bb8:                                              ; preds = %bb6
  %37 = getelementptr inbounds i8, ptr %_14, i64 8
  %parent_edge = load i64, ptr %37, align 8, !noundef !3
  %parent_edge7 = load ptr, ptr %_14, align 8, !nonnull !3, !noundef !3
  %38 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Internal>, alloc::collections::btree::node::marker::Edge>", ptr %_14, i32 0, i32 1
  %parent_edge8 = load i64, ptr %38, align 8, !noundef !3
  %39 = getelementptr inbounds i8, ptr %node2, i64 8
  store i64 %parent_edge, ptr %39, align 8
  store ptr %parent_edge7, ptr %node2, align 8
  %40 = load ptr, ptr %node2, align 8, !nonnull !3, !noundef !3
  %41 = getelementptr inbounds i8, ptr %node2, i64 8
  %42 = load i64, ptr %41, align 8, !noundef !3
  store ptr %40, ptr %_4, align 8
  %43 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %42, ptr %43, align 8
  %44 = getelementptr inbounds %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::Edge>", ptr %_4, i32 0, i32 1
  store i64 %parent_edge8, ptr %44, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %edge, ptr align 8 %_4, i64 24, i1 false)
  br label %bb1

bb16:                                             ; No predecessors!
  unreachable
}

; alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next_unchecked::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$27deallocating_next_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17h6ba4bebf93c78b71E"(ptr sret({ %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>" }) align 8 %val, ptr align 8 %leaf_edge) unnamed_addr #0 {
start:
  %self = alloca %"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>", align 8
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_next
  call void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$17deallocating_next17hf51501ccaa2b93f9E"(ptr sret(%"core::option::Option<(alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>, alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>)>") align 8 %self, ptr align 8 %leaf_edge)
  %0 = load ptr, ptr %self, align 8, !noundef !3
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_5 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_5, 0
  br i1 %3, label %bb2, label %bb3

bb2:                                              ; preds = %start
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h630ca121a67dc3e4E(ptr align 8 @alloc_462d65656ff0231537c806caec94eab7) #27
  unreachable

bb3:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %self, i64 48, i1 false)
  ret void

bb4:                                              ; No predecessors!
  unreachable
}

; alloc::collections::btree::navigate::LazyLeafRange<BorrowType,K,V>::init_front
; Function Attrs: nonlazybind uwtable
define align 8 ptr @"_ZN5alloc11collections5btree8navigate39LazyLeafRange$LT$BorrowType$C$K$C$V$GT$10init_front17h7d775993b306621dE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_7 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_6 = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_5 = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_0 = alloca ptr, align 8
  %_3 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %0 = icmp eq i64 %_3, 1
  br i1 %0, label %bb1, label %bb4

bb1:                                              ; preds = %start
  %1 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some", ptr %self, i32 0, i32 1
  %2 = load ptr, ptr %1, align 8, !noundef !3
  %3 = ptrtoint ptr %2 to i64
  %4 = icmp eq i64 %3, 0
  %_2 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_2, 0
  br i1 %5, label %bb2, label %bb4

bb4:                                              ; preds = %bb2, %bb1, %start
  %_11 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %6 = icmp eq i64 %_11, 0
  br i1 %6, label %bb6, label %bb5

bb2:                                              ; preds = %bb1
  %7 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some", ptr %self, i32 0, i32 1
  %root = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root", ptr %7, i32 0, i32 1
  %8 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some", ptr %self, i32 0, i32 1
  %src = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root", ptr %8, i32 0, i32 1
  %9 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some", ptr %self, i32 0, i32 1
  %10 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root", ptr %9, i32 0, i32 1
  %_8.0 = load ptr, ptr %10, align 8, !nonnull !3, !noundef !3
  %11 = getelementptr inbounds i8, ptr %10, i64 8
  %_8.1 = load i64, ptr %11, align 8, !noundef !3
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::first_leaf_edge
  call void @"_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17h40f25de80105267bE"(ptr sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") align 8 %_7, ptr %_8.0, i64 %_8.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_7, i64 24, i1 false)
  %12 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some", ptr %_5, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %_6, i64 24, i1 false)
  store i64 1, ptr %_5, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_5, i64 32, i1 false)
  br label %bb4

bb6:                                              ; preds = %bb4
  store ptr null, ptr %_0, align 8
  br label %bb7

bb5:                                              ; preds = %bb4
  %13 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some", ptr %self, i32 0, i32 1
  %14 = load ptr, ptr %13, align 8, !noundef !3
  %15 = ptrtoint ptr %14 to i64
  %16 = icmp eq i64 %15, 0
  %_10 = select i1 %16, i64 0, i64 1
  %_16 = icmp eq i64 %_10, 1
  call void @llvm.assume(i1 %_16)
  %edge = getelementptr inbounds %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some", ptr %self, i32 0, i32 1
  %_13 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some", ptr %self, i32 0, i32 1
  store ptr %_13, ptr %_0, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  %17 = load ptr, ptr %_0, align 8, !align !5, !noundef !3
  ret ptr %17

bb8:                                              ; No predecessors!
  unreachable
}

; alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::take_front
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$10take_front17h32c1f4e134112e11E"(ptr sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %v = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %src = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %edge = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_9 = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %val = alloca %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %result = alloca %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  %_2 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>", align 8
  store i64 0, ptr %src, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %result, ptr align 8 %self, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %src, i64 32, i1 false)
  %_14 = load i64, ptr %result, align 8, !range !9, !noundef !3
  %0 = icmp eq i64 %_14, 0
  br i1 %0, label %bb9, label %bb10

bb9:                                              ; preds = %start
  store i64 1, ptr %_2, align 8
  br label %bb8

bb10:                                             ; preds = %start
  %1 = getelementptr inbounds %"core::option::Option<alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Some", ptr %result, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v, ptr align 8 %1, i64 24, i1 false)
  %2 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Continue", ptr %_2, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %v, i64 24, i1 false)
  store i64 0, ptr %_2, align 8
  br label %bb8

bb8:                                              ; preds = %bb10, %bb9
  %_5 = load i64, ptr %_2, align 8, !range !9, !noundef !3
  %3 = icmp eq i64 %_5, 0
  br i1 %3, label %bb1, label %bb2

bb1:                                              ; preds = %bb8
  %4 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>>::Continue", ptr %_2, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %4, i64 24, i1 false)
  %5 = load ptr, ptr %val, align 8, !noundef !3
  %6 = ptrtoint ptr %5 to i64
  %7 = icmp eq i64 %6, 0
  %_7 = select i1 %7, i64 0, i64 1
  %8 = icmp eq i64 %_7, 0
  br i1 %8, label %bb4, label %bb3

bb2:                                              ; preds = %bb8
  store ptr null, ptr %_0, align 8
  br label %bb7

bb4:                                              ; preds = %bb1
  %9 = getelementptr inbounds %"alloc::collections::btree::navigate::LazyLeafHandle<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>::Root", ptr %val, i32 0, i32 1
  %root.0 = load ptr, ptr %9, align 8, !nonnull !3, !noundef !3
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  %root.1 = load i64, ptr %10, align 8, !noundef !3
; call alloc::collections::btree::navigate::<impl alloc::collections::btree::node::NodeRef<BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal>>::first_leaf_edge
  call void @"_ZN5alloc11collections5btree8navigate142_$LT$impl$u20$alloc..collections..btree..node..NodeRef$LT$BorrowType$C$K$C$V$C$alloc..collections..btree..node..marker..LeafOrInternal$GT$$GT$15first_leaf_edge17h40f25de80105267bE"(ptr sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>") align 8 %_9, ptr %root.0, i64 %root.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb6

bb3:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %edge, ptr align 8 %val, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %edge, i64 24, i1 false)
  br label %bb6

bb6:                                              ; preds = %bb3, %bb4
  br label %bb7

bb7:                                              ; preds = %bb2, %bb6
  ret void

bb11:                                             ; No predecessors!
  unreachable
}

; alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::deallocating_end
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$16deallocating_end17h2bc2700d1e52a063E"(ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_7 = alloca i8, align 1
  %front = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>", align 8
  %_3 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>", align 8
  store i8 1, ptr %_7, align 1
; invoke alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::take_front
  invoke void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$10take_front17h32c1f4e134112e11E"(ptr sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::Leaf>, alloc::collections::btree::node::marker::Edge>>") align 8 %_3, ptr align 8 %self)
          to label %bb1 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  %1 = load i8, ptr %_7, align 1, !range !10, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb8, label %bb6

cleanup:                                          ; preds = %bb2, %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb9

bb1:                                              ; preds = %start
  %7 = load ptr, ptr %_3, align 8, !noundef !3
  %8 = ptrtoint ptr %7 to i64
  %9 = icmp eq i64 %8, 0
  %_4 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_4, 1
  br i1 %10, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %front, ptr align 8 %_3, i64 24, i1 false)
  store i8 0, ptr %_7, align 1
; invoke alloc::collections::btree::navigate::<impl alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>>::deallocating_end
  invoke void @"_ZN5alloc11collections5btree8navigate263_$LT$impl$u20$alloc..collections..btree..node..Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$alloc..collections..btree..node..marker..Leaf$GT$$C$alloc..collections..btree..node..marker..Edge$GT$$GT$16deallocating_end17hc8fabf07ed3954d7E"(ptr align 8 %front)
          to label %bb3 unwind label %cleanup

bb4:                                              ; preds = %bb3, %bb1
  %11 = load i8, ptr %_7, align 1, !range !10, !noundef !3
  %12 = trunc i8 %11 to i1
  br i1 %12, label %bb7, label %bb5

bb3:                                              ; preds = %bb2
  br label %bb4

bb5:                                              ; preds = %bb7, %bb4
  ret void

bb7:                                              ; preds = %bb4
  br label %bb5

bb6:                                              ; preds = %bb8, %bb9
  %13 = load ptr, ptr %0, align 8, !noundef !3
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8, !noundef !3
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17

bb8:                                              ; preds = %bb9
  br label %bb6
}

; alloc::collections::btree::navigate::LazyLeafRange<alloc::collections::btree::node::marker::Dying,K,V>::deallocating_next_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc11collections5btree8navigate75LazyLeafRange$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$GT$27deallocating_next_unchecked17habd6152630eb5339E"(ptr sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_7 = alloca i8, align 1
  %self1 = alloca ptr, align 8
  store i8 1, ptr %_7, align 1
; invoke alloc::collections::btree::navigate::LazyLeafRange<BorrowType,K,V>::init_front
  %1 = invoke align 8 ptr @"_ZN5alloc11collections5btree8navigate39LazyLeafRange$LT$BorrowType$C$K$C$V$GT$10init_front17h7d775993b306621dE"(ptr align 8 %self)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %2 = load i8, ptr %_7, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb3, label %bb2

cleanup:                                          ; preds = %bb6, %bb5, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %0, align 8
  %7 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb4

bb1:                                              ; preds = %start
  store ptr %1, ptr %self1, align 8
  %8 = load ptr, ptr %self1, align 8, !noundef !3
  %9 = ptrtoint ptr %8 to i64
  %10 = icmp eq i64 %9, 0
  %_8 = select i1 %10, i64 0, i64 1
  %11 = icmp eq i64 %_8, 0
  br i1 %11, label %bb5, label %bb6

bb5:                                              ; preds = %bb1
; invoke core::option::unwrap_failed
  invoke void @_ZN4core6option13unwrap_failed17h630ca121a67dc3e4E(ptr align 8 @alloc_ac76f5382bcfae58ca8f35f08d974795) #27
          to label %unreachable unwind label %cleanup

bb6:                                              ; preds = %bb1
  %front = load ptr, ptr %self1, align 8, !nonnull !3, !align !5, !noundef !3
  store i8 0, ptr %_7, align 1
; invoke alloc::collections::btree::mem::replace
  invoke void @_ZN5alloc11collections5btree3mem7replace17h58d80318b73e5d4bE(ptr sret(%"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>") align 8 %_0, ptr align 8 %front)
          to label %bb7 unwind label %cleanup

unreachable:                                      ; preds = %bb5
  unreachable

bb7:                                              ; preds = %bb6
  ret void

bb8:                                              ; No predecessors!
  unreachable

bb2:                                              ; preds = %bb3, %bb4
  %12 = load ptr, ptr %0, align 8, !noundef !3
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  %14 = load i32, ptr %13, align 8, !noundef !3
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1
  resume { ptr, i32 } %16

bb3:                                              ; preds = %bb4
  br label %bb2
}

; alloc::fmt::format
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %args) unnamed_addr #0 {
start:
  %_4 = alloca ptr, align 8
  %_2 = alloca %"core::option::Option<&str>", align 8
  %_6.0 = load ptr, ptr %args, align 8, !nonnull !3, !align !5, !noundef !3
  %0 = getelementptr inbounds i8, ptr %args, i64 8
  %_6.1 = load i64, ptr %0, align 8, !noundef !3
  %1 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %args, i32 0, i32 1
  %_7.0 = load ptr, ptr %1, align 8, !nonnull !3, !align !5, !noundef !3
  %2 = getelementptr inbounds i8, ptr %1, i64 8
  %_7.1 = load i64, ptr %2, align 8, !noundef !3
  %3 = icmp eq i64 %_6.1, 0
  br i1 %3, label %bb3, label %bb5

bb3:                                              ; preds = %start
  %4 = icmp eq i64 %_7.1, 0
  br i1 %4, label %bb7, label %bb4

bb5:                                              ; preds = %start
  %5 = icmp eq i64 %_6.1, 1
  br i1 %5, label %bb6, label %bb4

bb7:                                              ; preds = %bb3
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %_2, align 8
  %6 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 0, ptr %6, align 8
  br label %bb2

bb4:                                              ; preds = %bb6, %bb5, %bb3
  %7 = load ptr, ptr @1, align 8, !align !4, !noundef !3
  %8 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %7, ptr %_2, align 8
  %9 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %8, ptr %9, align 8
  br label %bb2

bb2:                                              ; preds = %bb4, %bb8, %bb7
  store ptr %args, ptr %_4, align 8
  %10 = load ptr, ptr %_2, align 8, !align !4, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_2, i64 8
  %12 = load i64, ptr %11, align 8
  %13 = load ptr, ptr %_4, align 8, !nonnull !3, !align !5, !noundef !3
; call core::option::Option<T>::map_or_else
  call void @"_ZN4core6option15Option$LT$T$GT$11map_or_else17h9164fe0091180affE"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %10, i64 %12, ptr align 8 %13)
  ret void

bb6:                                              ; preds = %bb5
  %14 = icmp eq i64 %_7.1, 0
  br i1 %14, label %bb8, label %bb4

bb8:                                              ; preds = %bb6
  %s = getelementptr inbounds [0 x { ptr, i64 }], ptr %_6.0, i64 0, i64 0
  %15 = getelementptr inbounds [0 x { ptr, i64 }], ptr %_6.0, i64 0, i64 0
  %_13.0 = load ptr, ptr %15, align 8, !nonnull !3, !align !4, !noundef !3
  %16 = getelementptr inbounds i8, ptr %15, i64 8
  %_13.1 = load i64, ptr %16, align 8, !noundef !3
  store ptr %_13.0, ptr %_2, align 8
  %17 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %_13.1, ptr %17, align 8
  br label %bb2
}

; alloc::fmt::format::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3fmt6format28_$u7b$$u7b$closure$u7d$$u7d$17hc13ba4c926c2d456E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %_1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::fmt::Arguments<'_>", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %_1, i64 48, i1 false)
; call alloc::fmt::format::format_inner
  call void @_ZN5alloc3fmt6format12format_inner17h335f7dd944b9a48cE(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %_2)
  ret void
}

; alloc::str::join_generic_copy
; Function Attrs: nonlazybind uwtable
define void @_ZN5alloc3str17join_generic_copy17hd51c74e6706c726bE(ptr sret(%"alloc::vec::Vec<u8>") align 8 %_0, ptr align 8 %slice.0, i64 %slice.1, ptr align 1 %sep.0, i64 %sep.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %_0.i = alloca i64, align 8
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %1 = alloca i8, align 1
  %_189 = alloca %"core::ptr::metadata::PtrComponents<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_188 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_183 = alloca %"core::ptr::metadata::PtrComponents<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_182 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_169 = alloca i64, align 8
  %_152 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %_141 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_134 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_127 = alloca %"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %iter7 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}}>", align 8
  %_123 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_116 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_109 = alloca %"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %iter6 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}}>", align 8
  %_105 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_98 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_91 = alloca %"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %iter5 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}}>", align 8
  %_87 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_80 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_73 = alloca %"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %iter4 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}}>", align 8
  %_69 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_62 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_55 = alloca %"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %iter3 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}}>", align 8
  %_51 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_44 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_37 = alloca %"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %iter2 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}}>", align 8
  %target = alloca { ptr, i64 }, align 8
  %iter_uninit = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#1}}>", align 8
  %result = alloca %"alloc::vec::Vec<u8>", align 8
  %f = alloca %"{closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}}", align 8
  %self1 = alloca %"core::option::Option<usize>", align 8
  %self = alloca %"core::option::Option<usize>", align 8
  %_5 = alloca ptr, align 8
  %iter = alloca %"core::slice::iter::Iter<'_, &str>", align 8
  br i1 false, label %bb66, label %bb67

bb67:                                             ; preds = %start
  %2 = getelementptr inbounds { ptr, i64 }, ptr %slice.0, i64 %slice.1
  store ptr %2, ptr %end_or_len, align 8
  br label %bb68

bb66:                                             ; preds = %start
  %3 = inttoptr i64 %slice.1 to ptr
  store ptr %3, ptr %end_or_len, align 8
  br label %bb68

bb68:                                             ; preds = %bb66, %bb67
  store ptr %slice.0, ptr %_152, align 8
  %_154 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %4 = load ptr, ptr %_152, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %iter, align 8
  %5 = getelementptr inbounds i8, ptr %iter, i64 8
  store ptr %_154, ptr %5, align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %6 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9cd2dfb86b854212E"(ptr align 8 %iter)
  store ptr %6, ptr %_5, align 8
  %7 = load ptr, ptr %_5, align 8, !noundef !3
  %8 = ptrtoint ptr %7 to i64
  %9 = icmp eq i64 %8, 0
  %_7 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_7, 0
  br i1 %10, label %bb69, label %bb2

bb69:                                             ; preds = %bb68
  store i64 0, ptr %_0, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %11, align 8
  %12 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %12, align 8
  br label %bb63

bb2:                                              ; preds = %bb68
  %first = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
  %self1.i = getelementptr inbounds i8, ptr %iter, i64 8
  %end.i = load ptr, ptr %self1.i, align 8, !nonnull !3, !noundef !3
  %subtracted.i = load ptr, ptr %iter, align 8, !nonnull !3, !noundef !3
  %13 = ptrtoint ptr %end.i to i64
  %14 = ptrtoint ptr %subtracted.i to i64
  %15 = sub nuw i64 %13, %14
  %16 = udiv exact i64 %15, 16
  store i64 %16, ptr %_0.i, align 8
  %17 = load i64, ptr %_0.i, align 8, !noundef !3
  %18 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %sep.1, i64 %17)
  %_163.0 = extractvalue { i64, i1 } %18, 0
  %_163.1 = extractvalue { i64, i1 } %18, 1
  %19 = call i1 @llvm.expect.i1(i1 %_163.1, i1 false)
  %20 = zext i1 %19 to i8
  store i8 %20, ptr %1, align 1
  %21 = load i8, ptr %1, align 1, !range !10, !noundef !3
  %_160 = trunc i8 %21 to i1
  br i1 %_160, label %bb71, label %bb72

bb63:                                             ; preds = %bb62, %bb69
  ret void

bb72:                                             ; preds = %bb2
  %22 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %_163.0, ptr %22, align 8
  store i64 1, ptr %self1, align 8
  br label %bb73

bb71:                                             ; preds = %bb2
  %23 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %24 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %23, ptr %self1, align 8
  %25 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %24, ptr %25, align 8
  br label %bb73

bb73:                                             ; preds = %bb71, %bb72
  store ptr %slice.0, ptr %f, align 8
  %26 = getelementptr inbounds i8, ptr %f, i64 8
  store i64 %slice.1, ptr %26, align 8
  %_167 = load i64, ptr %self1, align 8, !range !9, !noundef !3
  %27 = icmp eq i64 %_167, 0
  br i1 %27, label %bb74, label %bb75

bb74:                                             ; preds = %bb73
  %28 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %29 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %28, ptr %self, align 8
  %30 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %29, ptr %30, align 8
  br label %bb77

bb75:                                             ; preds = %bb73
  %31 = getelementptr inbounds i8, ptr %self1, i64 8
  %x = load i64, ptr %31, align 8, !noundef !3
  store i64 %x, ptr %_169, align 8
  %32 = load ptr, ptr %f, align 8, !nonnull !3, !align !5, !noundef !3
  %33 = getelementptr inbounds i8, ptr %f, i64 8
  %34 = load i64, ptr %33, align 8, !noundef !3
  %35 = load i64, ptr %_169, align 8, !noundef !3
; call alloc::str::join_generic_copy::{{closure}}
  %36 = call { i64, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17he0e2fd3e5a3ef3a6E"(ptr align 8 %32, i64 %34, i64 %35)
  %37 = extractvalue { i64, i64 } %36, 0
  %38 = extractvalue { i64, i64 } %36, 1
  store i64 %37, ptr %self, align 8
  %39 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %38, ptr %39, align 8
  br label %bb77

bb77:                                             ; preds = %bb75, %bb74
  %_170 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %40 = icmp eq i64 %_170, 0
  br i1 %40, label %bb78, label %bb79

bb78:                                             ; preds = %bb77
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17h465b3d6aa69dcb6dE(ptr align 1 @alloc_ca673fb95acb8e58af271999e89294ae, i64 53, ptr align 8 @alloc_3068534db64c07883069a5f112d64238) #27
  unreachable

bb79:                                             ; preds = %bb77
  %41 = getelementptr inbounds i8, ptr %self, i64 8
  %reserved_len = load i64, ptr %41, align 8, !noundef !3
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %42 = call { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h332409814013709cE"(i64 %reserved_len, i1 zeroext false)
  %_172.0 = extractvalue { i64, ptr } %42, 0
  %_172.1 = extractvalue { i64, ptr } %42, 1
  store i64 %_172.0, ptr %result, align 8
  %43 = getelementptr inbounds i8, ptr %result, i64 8
  store ptr %_172.1, ptr %43, align 8
  %44 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %result, i32 0, i32 1
  store i64 0, ptr %44, align 8
; invoke <&T as core::borrow::Borrow<T>>::borrow
  %45 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h8cd9e18c1076bd74E"(ptr align 8 %first)
          to label %bb4 unwind label %cleanup

bb64:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %result) #28
          to label %bb65 unwind label %terminate

cleanup:                                          ; preds = %bb60, %bb59, %bb58, %bb56, %bb54, %bb52, %bb51, %bb50, %bb48, %bb46, %bb43, %bb42, %bb41, %bb39, %bb37, %bb34, %bb33, %bb32, %bb30, %bb28, %bb25, %bb24, %bb23, %bb21, %bb19, %bb16, %bb15, %bb14, %bb12, %bb10, %bb6, %bb5, %bb4, %bb79
  %46 = landingpad { ptr, i32 }
          cleanup
  %47 = extractvalue { ptr, i32 } %46, 0
  %48 = extractvalue { ptr, i32 } %46, 1
  store ptr %47, ptr %0, align 8
  %49 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %48, ptr %49, align 8
  br label %bb64

bb4:                                              ; preds = %bb79
  %_21.0 = extractvalue { ptr, i64 } %45, 0
  %_21.1 = extractvalue { ptr, i64 } %45, 1
; invoke core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %50 = invoke { ptr, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17he21c76dc9236a822E"(ptr align 1 %_21.0, i64 %_21.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %_20.0 = extractvalue { ptr, i64 } %50, 0
  %_20.1 = extractvalue { ptr, i64 } %50, 1
; invoke alloc::vec::Vec<T,A>::extend_from_slice
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h102f896cdc9c3e1dE"(ptr align 8 %result, ptr align 1 %_20.0, i64 %_20.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %51 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %result, i32 0, i32 1
  %pos = load i64, ptr %51, align 8, !noundef !3
; invoke alloc::vec::Vec<T,A>::spare_capacity_mut
  %52 = invoke { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h8a9bc6067f576ce8E"(ptr align 8 %result)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %self.0 = extractvalue { ptr, i64 } %52, 0
  %self.1 = extractvalue { ptr, i64 } %52, 1
  %index = sub i64 %reserved_len, %pos
  %new_len = sub nuw i64 %index, 0
  store ptr %self.0, ptr %_183, align 8
  %53 = getelementptr inbounds i8, ptr %_183, i64 8
  store i64 %new_len, ptr %53, align 8
  %54 = load ptr, ptr %_183, align 8, !noundef !3
  %55 = getelementptr inbounds i8, ptr %_183, i64 8
  %56 = load i64, ptr %55, align 8, !noundef !3
  store ptr %54, ptr %_182, align 8
  %57 = getelementptr inbounds i8, ptr %_182, i64 8
  store i64 %56, ptr %57, align 8
  %_174.0 = load ptr, ptr %_182, align 8, !noundef !3
  %58 = getelementptr inbounds i8, ptr %_182, i64 8
  %_174.1 = load i64, ptr %58, align 8, !noundef !3
  store ptr %sep.0, ptr %_189, align 8
  %59 = getelementptr inbounds i8, ptr %_189, i64 8
  store i64 %sep.1, ptr %59, align 8
  %60 = load ptr, ptr %_189, align 8, !noundef !3
  %61 = getelementptr inbounds i8, ptr %_189, i64 8
  %62 = load i64, ptr %61, align 8, !noundef !3
  store ptr %60, ptr %_188, align 8
  %63 = getelementptr inbounds i8, ptr %_188, i64 8
  store i64 %62, ptr %63, align 8
  %sep_uninit.0 = load ptr, ptr %_188, align 8, !noundef !3
  %64 = getelementptr inbounds i8, ptr %_188, i64 8
  %sep_uninit.1 = load i64, ptr %64, align 8, !noundef !3
  %self.08 = load ptr, ptr %iter, align 8, !nonnull !3, !noundef !3
  %65 = getelementptr inbounds i8, ptr %iter, i64 8
  %self.19 = load ptr, ptr %65, align 8, !noundef !3
  store ptr %self.08, ptr %iter_uninit, align 8
  %66 = getelementptr inbounds i8, ptr %iter_uninit, i64 8
  store ptr %self.19, ptr %66, align 8
  store ptr %_174.0, ptr %target, align 8
  %67 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %_174.1, ptr %67, align 8
  switch i64 %sep_uninit.1, label %bb8 [
    i64 0, label %bb9
    i64 1, label %bb18
    i64 2, label %bb27
    i64 3, label %bb36
    i64 4, label %bb45
  ]

bb8:                                              ; preds = %bb7
  %68 = load ptr, ptr %iter_uninit, align 8, !nonnull !3, !noundef !3
  %69 = getelementptr inbounds i8, ptr %iter_uninit, i64 8
  %70 = load ptr, ptr %69, align 8, !noundef !3
  store ptr %68, ptr %iter7, align 8
  %71 = getelementptr inbounds i8, ptr %iter7, i64 8
  store ptr %70, ptr %71, align 8
  br label %bb54

bb9:                                              ; preds = %bb7
  %72 = load ptr, ptr %iter_uninit, align 8, !nonnull !3, !noundef !3
  %73 = getelementptr inbounds i8, ptr %iter_uninit, i64 8
  %74 = load ptr, ptr %73, align 8, !noundef !3
  store ptr %72, ptr %iter2, align 8
  %75 = getelementptr inbounds i8, ptr %iter2, i64 8
  store ptr %74, ptr %75, align 8
  br label %bb10

bb18:                                             ; preds = %bb7
  %76 = load ptr, ptr %iter_uninit, align 8, !nonnull !3, !noundef !3
  %77 = getelementptr inbounds i8, ptr %iter_uninit, i64 8
  %78 = load ptr, ptr %77, align 8, !noundef !3
  store ptr %76, ptr %iter3, align 8
  %79 = getelementptr inbounds i8, ptr %iter3, i64 8
  store ptr %78, ptr %79, align 8
  br label %bb19

bb27:                                             ; preds = %bb7
  %80 = load ptr, ptr %iter_uninit, align 8, !nonnull !3, !noundef !3
  %81 = getelementptr inbounds i8, ptr %iter_uninit, i64 8
  %82 = load ptr, ptr %81, align 8, !noundef !3
  store ptr %80, ptr %iter4, align 8
  %83 = getelementptr inbounds i8, ptr %iter4, i64 8
  store ptr %82, ptr %83, align 8
  br label %bb28

bb36:                                             ; preds = %bb7
  %84 = load ptr, ptr %iter_uninit, align 8, !nonnull !3, !noundef !3
  %85 = getelementptr inbounds i8, ptr %iter_uninit, i64 8
  %86 = load ptr, ptr %85, align 8, !noundef !3
  store ptr %84, ptr %iter5, align 8
  %87 = getelementptr inbounds i8, ptr %iter5, i64 8
  store ptr %86, ptr %87, align 8
  br label %bb37

bb45:                                             ; preds = %bb7
  %88 = load ptr, ptr %iter_uninit, align 8, !nonnull !3, !noundef !3
  %89 = getelementptr inbounds i8, ptr %iter_uninit, i64 8
  %90 = load ptr, ptr %89, align 8, !noundef !3
  store ptr %88, ptr %iter6, align 8
  %91 = getelementptr inbounds i8, ptr %iter6, i64 8
  store ptr %90, ptr %91, align 8
  br label %bb46

bb10:                                             ; preds = %bb17, %bb9
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %92 = invoke { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha0bae12a5d1ec3a8E"(ptr align 8 %iter2)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10
  %93 = extractvalue { ptr, i64 } %92, 0
  %94 = extractvalue { ptr, i64 } %92, 1
  store ptr %93, ptr %_37, align 8
  %95 = getelementptr inbounds i8, ptr %_37, i64 8
  store i64 %94, ptr %95, align 8
  %96 = load ptr, ptr %_37, align 8, !noundef !3
  %97 = ptrtoint ptr %96 to i64
  %98 = icmp eq i64 %97, 0
  %_39 = select i1 %98, i64 0, i64 1
  %99 = icmp eq i64 %_39, 0
  br i1 %99, label %bb13, label %bb12

bb13:                                             ; preds = %bb11
  br label %bb62

bb12:                                             ; preds = %bb11
  %s.0 = load ptr, ptr %_37, align 8, !nonnull !3, !align !4, !noundef !3
  %100 = getelementptr inbounds i8, ptr %_37, i64 8
  %s.1 = load i64, ptr %100, align 8, !noundef !3
  %_45.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %101 = getelementptr inbounds i8, ptr %target, i64 8
  %_45.1 = load i64, ptr %101, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_44, ptr align 1 %_45.0, i64 %_45.1, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb14 unwind label %cleanup

bb62:                                             ; preds = %bb57, %bb49, %bb40, %bb31, %bb22, %bb13
  %remain.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %102 = getelementptr inbounds i8, ptr %target, i64 8
  %remain.1 = load i64, ptr %102, align 8, !noundef !3
  %result_len = sub i64 %reserved_len, %remain.1
  %103 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %result, i32 0, i32 1
  store i64 %result_len, ptr %103, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %result, i64 24, i1 false)
  br label %bb63

bb14:                                             ; preds = %bb12
  %head.0 = load ptr, ptr %_44, align 8, !nonnull !3, !align !4, !noundef !3
  %104 = getelementptr inbounds i8, ptr %_44, i64 8
  %head.1 = load i64, ptr %104, align 8, !noundef !3
  %105 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_44, i32 0, i32 1
  %tail.0 = load ptr, ptr %105, align 8, !nonnull !3, !align !4, !noundef !3
  %106 = getelementptr inbounds i8, ptr %105, i64 8
  %tail.1 = load i64, ptr %106, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.0, i64 %head.1, ptr align 1 %sep_uninit.0, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  store ptr %tail.0, ptr %target, align 8
  %107 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.1, ptr %107, align 8
  %_52.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %108 = getelementptr inbounds i8, ptr %target, i64 8
  %_52.1 = load i64, ptr %108, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_51, ptr align 1 %_52.0, i64 %_52.1, i64 %s.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb16 unwind label %cleanup

bb16:                                             ; preds = %bb15
  %head.010 = load ptr, ptr %_51, align 8, !nonnull !3, !align !4, !noundef !3
  %109 = getelementptr inbounds i8, ptr %_51, i64 8
  %head.111 = load i64, ptr %109, align 8, !noundef !3
  %110 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_51, i32 0, i32 1
  %tail.012 = load ptr, ptr %110, align 8, !nonnull !3, !align !4, !noundef !3
  %111 = getelementptr inbounds i8, ptr %110, i64 8
  %tail.113 = load i64, ptr %111, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.010, i64 %head.111, ptr align 1 %s.0, i64 %s.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb17 unwind label %cleanup

bb17:                                             ; preds = %bb16
  store ptr %tail.012, ptr %target, align 8
  %112 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.113, ptr %112, align 8
  br label %bb10

bb19:                                             ; preds = %bb26, %bb18
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %113 = invoke { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha0bae12a5d1ec3a8E"(ptr align 8 %iter3)
          to label %bb20 unwind label %cleanup

bb20:                                             ; preds = %bb19
  %114 = extractvalue { ptr, i64 } %113, 0
  %115 = extractvalue { ptr, i64 } %113, 1
  store ptr %114, ptr %_55, align 8
  %116 = getelementptr inbounds i8, ptr %_55, i64 8
  store i64 %115, ptr %116, align 8
  %117 = load ptr, ptr %_55, align 8, !noundef !3
  %118 = ptrtoint ptr %117 to i64
  %119 = icmp eq i64 %118, 0
  %_57 = select i1 %119, i64 0, i64 1
  %120 = icmp eq i64 %_57, 0
  br i1 %120, label %bb22, label %bb21

bb22:                                             ; preds = %bb20
  br label %bb62

bb21:                                             ; preds = %bb20
  %s.014 = load ptr, ptr %_55, align 8, !nonnull !3, !align !4, !noundef !3
  %121 = getelementptr inbounds i8, ptr %_55, i64 8
  %s.115 = load i64, ptr %121, align 8, !noundef !3
  %_63.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %122 = getelementptr inbounds i8, ptr %target, i64 8
  %_63.1 = load i64, ptr %122, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_62, ptr align 1 %_63.0, i64 %_63.1, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb23 unwind label %cleanup

bb23:                                             ; preds = %bb21
  %head.016 = load ptr, ptr %_62, align 8, !nonnull !3, !align !4, !noundef !3
  %123 = getelementptr inbounds i8, ptr %_62, i64 8
  %head.117 = load i64, ptr %123, align 8, !noundef !3
  %124 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_62, i32 0, i32 1
  %tail.018 = load ptr, ptr %124, align 8, !nonnull !3, !align !4, !noundef !3
  %125 = getelementptr inbounds i8, ptr %124, i64 8
  %tail.119 = load i64, ptr %125, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.016, i64 %head.117, ptr align 1 %sep_uninit.0, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb23
  store ptr %tail.018, ptr %target, align 8
  %126 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.119, ptr %126, align 8
  %_70.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %127 = getelementptr inbounds i8, ptr %target, i64 8
  %_70.1 = load i64, ptr %127, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_69, ptr align 1 %_70.0, i64 %_70.1, i64 %s.115, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
  %head.020 = load ptr, ptr %_69, align 8, !nonnull !3, !align !4, !noundef !3
  %128 = getelementptr inbounds i8, ptr %_69, i64 8
  %head.121 = load i64, ptr %128, align 8, !noundef !3
  %129 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_69, i32 0, i32 1
  %tail.022 = load ptr, ptr %129, align 8, !nonnull !3, !align !4, !noundef !3
  %130 = getelementptr inbounds i8, ptr %129, i64 8
  %tail.123 = load i64, ptr %130, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.020, i64 %head.121, ptr align 1 %s.014, i64 %s.115, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
  store ptr %tail.022, ptr %target, align 8
  %131 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.123, ptr %131, align 8
  br label %bb19

bb28:                                             ; preds = %bb35, %bb27
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %132 = invoke { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha0bae12a5d1ec3a8E"(ptr align 8 %iter4)
          to label %bb29 unwind label %cleanup

bb29:                                             ; preds = %bb28
  %133 = extractvalue { ptr, i64 } %132, 0
  %134 = extractvalue { ptr, i64 } %132, 1
  store ptr %133, ptr %_73, align 8
  %135 = getelementptr inbounds i8, ptr %_73, i64 8
  store i64 %134, ptr %135, align 8
  %136 = load ptr, ptr %_73, align 8, !noundef !3
  %137 = ptrtoint ptr %136 to i64
  %138 = icmp eq i64 %137, 0
  %_75 = select i1 %138, i64 0, i64 1
  %139 = icmp eq i64 %_75, 0
  br i1 %139, label %bb31, label %bb30

bb31:                                             ; preds = %bb29
  br label %bb62

bb30:                                             ; preds = %bb29
  %s.024 = load ptr, ptr %_73, align 8, !nonnull !3, !align !4, !noundef !3
  %140 = getelementptr inbounds i8, ptr %_73, i64 8
  %s.125 = load i64, ptr %140, align 8, !noundef !3
  %_81.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %141 = getelementptr inbounds i8, ptr %target, i64 8
  %_81.1 = load i64, ptr %141, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_80, ptr align 1 %_81.0, i64 %_81.1, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb32 unwind label %cleanup

bb32:                                             ; preds = %bb30
  %head.026 = load ptr, ptr %_80, align 8, !nonnull !3, !align !4, !noundef !3
  %142 = getelementptr inbounds i8, ptr %_80, i64 8
  %head.127 = load i64, ptr %142, align 8, !noundef !3
  %143 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_80, i32 0, i32 1
  %tail.028 = load ptr, ptr %143, align 8, !nonnull !3, !align !4, !noundef !3
  %144 = getelementptr inbounds i8, ptr %143, i64 8
  %tail.129 = load i64, ptr %144, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.026, i64 %head.127, ptr align 1 %sep_uninit.0, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb33 unwind label %cleanup

bb33:                                             ; preds = %bb32
  store ptr %tail.028, ptr %target, align 8
  %145 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.129, ptr %145, align 8
  %_88.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %146 = getelementptr inbounds i8, ptr %target, i64 8
  %_88.1 = load i64, ptr %146, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_87, ptr align 1 %_88.0, i64 %_88.1, i64 %s.125, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb34 unwind label %cleanup

bb34:                                             ; preds = %bb33
  %head.030 = load ptr, ptr %_87, align 8, !nonnull !3, !align !4, !noundef !3
  %147 = getelementptr inbounds i8, ptr %_87, i64 8
  %head.131 = load i64, ptr %147, align 8, !noundef !3
  %148 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_87, i32 0, i32 1
  %tail.032 = load ptr, ptr %148, align 8, !nonnull !3, !align !4, !noundef !3
  %149 = getelementptr inbounds i8, ptr %148, i64 8
  %tail.133 = load i64, ptr %149, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.030, i64 %head.131, ptr align 1 %s.024, i64 %s.125, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb35 unwind label %cleanup

bb35:                                             ; preds = %bb34
  store ptr %tail.032, ptr %target, align 8
  %150 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.133, ptr %150, align 8
  br label %bb28

bb37:                                             ; preds = %bb44, %bb36
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %151 = invoke { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha0bae12a5d1ec3a8E"(ptr align 8 %iter5)
          to label %bb38 unwind label %cleanup

bb38:                                             ; preds = %bb37
  %152 = extractvalue { ptr, i64 } %151, 0
  %153 = extractvalue { ptr, i64 } %151, 1
  store ptr %152, ptr %_91, align 8
  %154 = getelementptr inbounds i8, ptr %_91, i64 8
  store i64 %153, ptr %154, align 8
  %155 = load ptr, ptr %_91, align 8, !noundef !3
  %156 = ptrtoint ptr %155 to i64
  %157 = icmp eq i64 %156, 0
  %_93 = select i1 %157, i64 0, i64 1
  %158 = icmp eq i64 %_93, 0
  br i1 %158, label %bb40, label %bb39

bb40:                                             ; preds = %bb38
  br label %bb62

bb39:                                             ; preds = %bb38
  %s.034 = load ptr, ptr %_91, align 8, !nonnull !3, !align !4, !noundef !3
  %159 = getelementptr inbounds i8, ptr %_91, i64 8
  %s.135 = load i64, ptr %159, align 8, !noundef !3
  %_99.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %160 = getelementptr inbounds i8, ptr %target, i64 8
  %_99.1 = load i64, ptr %160, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_98, ptr align 1 %_99.0, i64 %_99.1, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb41 unwind label %cleanup

bb41:                                             ; preds = %bb39
  %head.036 = load ptr, ptr %_98, align 8, !nonnull !3, !align !4, !noundef !3
  %161 = getelementptr inbounds i8, ptr %_98, i64 8
  %head.137 = load i64, ptr %161, align 8, !noundef !3
  %162 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_98, i32 0, i32 1
  %tail.038 = load ptr, ptr %162, align 8, !nonnull !3, !align !4, !noundef !3
  %163 = getelementptr inbounds i8, ptr %162, i64 8
  %tail.139 = load i64, ptr %163, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.036, i64 %head.137, ptr align 1 %sep_uninit.0, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb42 unwind label %cleanup

bb42:                                             ; preds = %bb41
  store ptr %tail.038, ptr %target, align 8
  %164 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.139, ptr %164, align 8
  %_106.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %165 = getelementptr inbounds i8, ptr %target, i64 8
  %_106.1 = load i64, ptr %165, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_105, ptr align 1 %_106.0, i64 %_106.1, i64 %s.135, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb43 unwind label %cleanup

bb43:                                             ; preds = %bb42
  %head.040 = load ptr, ptr %_105, align 8, !nonnull !3, !align !4, !noundef !3
  %166 = getelementptr inbounds i8, ptr %_105, i64 8
  %head.141 = load i64, ptr %166, align 8, !noundef !3
  %167 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_105, i32 0, i32 1
  %tail.042 = load ptr, ptr %167, align 8, !nonnull !3, !align !4, !noundef !3
  %168 = getelementptr inbounds i8, ptr %167, i64 8
  %tail.143 = load i64, ptr %168, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.040, i64 %head.141, ptr align 1 %s.034, i64 %s.135, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb44 unwind label %cleanup

bb44:                                             ; preds = %bb43
  store ptr %tail.042, ptr %target, align 8
  %169 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.143, ptr %169, align 8
  br label %bb37

bb46:                                             ; preds = %bb53, %bb45
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %170 = invoke { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha0bae12a5d1ec3a8E"(ptr align 8 %iter6)
          to label %bb47 unwind label %cleanup

bb47:                                             ; preds = %bb46
  %171 = extractvalue { ptr, i64 } %170, 0
  %172 = extractvalue { ptr, i64 } %170, 1
  store ptr %171, ptr %_109, align 8
  %173 = getelementptr inbounds i8, ptr %_109, i64 8
  store i64 %172, ptr %173, align 8
  %174 = load ptr, ptr %_109, align 8, !noundef !3
  %175 = ptrtoint ptr %174 to i64
  %176 = icmp eq i64 %175, 0
  %_111 = select i1 %176, i64 0, i64 1
  %177 = icmp eq i64 %_111, 0
  br i1 %177, label %bb49, label %bb48

bb49:                                             ; preds = %bb47
  br label %bb62

bb48:                                             ; preds = %bb47
  %s.044 = load ptr, ptr %_109, align 8, !nonnull !3, !align !4, !noundef !3
  %178 = getelementptr inbounds i8, ptr %_109, i64 8
  %s.145 = load i64, ptr %178, align 8, !noundef !3
  %_117.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %179 = getelementptr inbounds i8, ptr %target, i64 8
  %_117.1 = load i64, ptr %179, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_116, ptr align 1 %_117.0, i64 %_117.1, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb50 unwind label %cleanup

bb50:                                             ; preds = %bb48
  %head.046 = load ptr, ptr %_116, align 8, !nonnull !3, !align !4, !noundef !3
  %180 = getelementptr inbounds i8, ptr %_116, i64 8
  %head.147 = load i64, ptr %180, align 8, !noundef !3
  %181 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_116, i32 0, i32 1
  %tail.048 = load ptr, ptr %181, align 8, !nonnull !3, !align !4, !noundef !3
  %182 = getelementptr inbounds i8, ptr %181, i64 8
  %tail.149 = load i64, ptr %182, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.046, i64 %head.147, ptr align 1 %sep_uninit.0, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb51 unwind label %cleanup

bb51:                                             ; preds = %bb50
  store ptr %tail.048, ptr %target, align 8
  %183 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.149, ptr %183, align 8
  %_124.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %184 = getelementptr inbounds i8, ptr %target, i64 8
  %_124.1 = load i64, ptr %184, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_123, ptr align 1 %_124.0, i64 %_124.1, i64 %s.145, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb52 unwind label %cleanup

bb52:                                             ; preds = %bb51
  %head.050 = load ptr, ptr %_123, align 8, !nonnull !3, !align !4, !noundef !3
  %185 = getelementptr inbounds i8, ptr %_123, i64 8
  %head.151 = load i64, ptr %185, align 8, !noundef !3
  %186 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_123, i32 0, i32 1
  %tail.052 = load ptr, ptr %186, align 8, !nonnull !3, !align !4, !noundef !3
  %187 = getelementptr inbounds i8, ptr %186, i64 8
  %tail.153 = load i64, ptr %187, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.050, i64 %head.151, ptr align 1 %s.044, i64 %s.145, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb53 unwind label %cleanup

bb53:                                             ; preds = %bb52
  store ptr %tail.052, ptr %target, align 8
  %188 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.153, ptr %188, align 8
  br label %bb46

bb54:                                             ; preds = %bb61, %bb8
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %189 = invoke { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17ha0bae12a5d1ec3a8E"(ptr align 8 %iter7)
          to label %bb55 unwind label %cleanup

bb55:                                             ; preds = %bb54
  %190 = extractvalue { ptr, i64 } %189, 0
  %191 = extractvalue { ptr, i64 } %189, 1
  store ptr %190, ptr %_127, align 8
  %192 = getelementptr inbounds i8, ptr %_127, i64 8
  store i64 %191, ptr %192, align 8
  %193 = load ptr, ptr %_127, align 8, !noundef !3
  %194 = ptrtoint ptr %193 to i64
  %195 = icmp eq i64 %194, 0
  %_129 = select i1 %195, i64 0, i64 1
  %196 = icmp eq i64 %_129, 0
  br i1 %196, label %bb57, label %bb56

bb57:                                             ; preds = %bb55
  br label %bb62

bb56:                                             ; preds = %bb55
  %s.054 = load ptr, ptr %_127, align 8, !nonnull !3, !align !4, !noundef !3
  %197 = getelementptr inbounds i8, ptr %_127, i64 8
  %s.155 = load i64, ptr %197, align 8, !noundef !3
  %_135.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %198 = getelementptr inbounds i8, ptr %target, i64 8
  %_135.1 = load i64, ptr %198, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_134, ptr align 1 %_135.0, i64 %_135.1, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb58 unwind label %cleanup

bb58:                                             ; preds = %bb56
  %head.056 = load ptr, ptr %_134, align 8, !nonnull !3, !align !4, !noundef !3
  %199 = getelementptr inbounds i8, ptr %_134, i64 8
  %head.157 = load i64, ptr %199, align 8, !noundef !3
  %200 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_134, i32 0, i32 1
  %tail.058 = load ptr, ptr %200, align 8, !nonnull !3, !align !4, !noundef !3
  %201 = getelementptr inbounds i8, ptr %200, i64 8
  %tail.159 = load i64, ptr %201, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.056, i64 %head.157, ptr align 1 %sep_uninit.0, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb59 unwind label %cleanup

bb59:                                             ; preds = %bb58
  store ptr %tail.058, ptr %target, align 8
  %202 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.159, ptr %202, align 8
  %_142.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %203 = getelementptr inbounds i8, ptr %target, i64 8
  %_142.1 = load i64, ptr %203, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_141, ptr align 1 %_142.0, i64 %_142.1, i64 %s.155, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb60 unwind label %cleanup

bb60:                                             ; preds = %bb59
  %head.060 = load ptr, ptr %_141, align 8, !nonnull !3, !align !4, !noundef !3
  %204 = getelementptr inbounds i8, ptr %_141, i64 8
  %head.161 = load i64, ptr %204, align 8, !noundef !3
  %205 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_141, i32 0, i32 1
  %tail.062 = load ptr, ptr %205, align 8, !nonnull !3, !align !4, !noundef !3
  %206 = getelementptr inbounds i8, ptr %205, i64 8
  %tail.163 = load i64, ptr %206, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.060, i64 %head.161, ptr align 1 %s.054, i64 %s.155, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb61 unwind label %cleanup

bb61:                                             ; preds = %bb60
  store ptr %tail.062, ptr %target, align 8
  %207 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.163, ptr %207, align 8
  br label %bb54

terminate:                                        ; preds = %bb64
  %208 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %209 = extractvalue { ptr, i32 } %208, 0
  %210 = extractvalue { ptr, i32 } %208, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb65:                                             ; preds = %bb64
  %211 = load ptr, ptr %0, align 8, !noundef !3
  %212 = getelementptr inbounds i8, ptr %0, i64 8
  %213 = load i32, ptr %212, align 8, !noundef !3
  %214 = insertvalue { ptr, i32 } poison, ptr %211, 0
  %215 = insertvalue { ptr, i32 } %214, i32 %213, 1
  resume { ptr, i32 } %215

bb81:                                             ; No predecessors!
  unreachable
}

; alloc::str::join_generic_copy
; Function Attrs: nonlazybind uwtable
define void @_ZN5alloc3str17join_generic_copy17hf30e6a4b3a3707adE(ptr sret(%"alloc::vec::Vec<u8>") align 8 %_0, ptr align 8 %slice.0, i64 %slice.1, ptr align 1 %sep.0, i64 %sep.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %_0.i = alloca i64, align 8
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %1 = alloca i8, align 1
  %_189 = alloca %"core::ptr::metadata::PtrComponents<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_188 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_183 = alloca %"core::ptr::metadata::PtrComponents<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_182 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_169 = alloca i64, align 8
  %_152 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %_141 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_134 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_127 = alloca %"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %iter7 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#1}}>", align 8
  %_123 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_116 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_109 = alloca %"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %iter6 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#1}}>", align 8
  %_105 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_98 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_91 = alloca %"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %iter5 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#1}}>", align 8
  %_87 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_80 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_73 = alloca %"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %iter4 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#1}}>", align 8
  %_69 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_62 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_55 = alloca %"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %iter3 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#1}}>", align 8
  %_51 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_44 = alloca { { ptr, i64 }, { ptr, i64 } }, align 8
  %_37 = alloca %"core::option::Option<&[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %iter2 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#1}}>", align 8
  %target = alloca { ptr, i64 }, align 8
  %iter_uninit = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#1}}>", align 8
  %result = alloca %"alloc::vec::Vec<u8>", align 8
  %f = alloca %"{closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#0}}", align 8
  %self1 = alloca %"core::option::Option<usize>", align 8
  %self = alloca %"core::option::Option<usize>", align 8
  %_5 = alloca ptr, align 8
  %iter = alloca %"core::slice::iter::Iter<'_, alloc::string::String>", align 8
  br i1 false, label %bb66, label %bb67

bb67:                                             ; preds = %start
  %2 = getelementptr inbounds %"alloc::string::String", ptr %slice.0, i64 %slice.1
  store ptr %2, ptr %end_or_len, align 8
  br label %bb68

bb66:                                             ; preds = %start
  %3 = inttoptr i64 %slice.1 to ptr
  store ptr %3, ptr %end_or_len, align 8
  br label %bb68

bb68:                                             ; preds = %bb66, %bb67
  store ptr %slice.0, ptr %_152, align 8
  %_154 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %4 = load ptr, ptr %_152, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %iter, align 8
  %5 = getelementptr inbounds i8, ptr %iter, i64 8
  store ptr %_154, ptr %5, align 8
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %6 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8cba68a285d0a8e1E"(ptr align 8 %iter)
  store ptr %6, ptr %_5, align 8
  %7 = load ptr, ptr %_5, align 8, !noundef !3
  %8 = ptrtoint ptr %7 to i64
  %9 = icmp eq i64 %8, 0
  %_7 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_7, 0
  br i1 %10, label %bb69, label %bb2

bb69:                                             ; preds = %bb68
  store i64 0, ptr %_0, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %11, align 8
  %12 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %12, align 8
  br label %bb63

bb2:                                              ; preds = %bb68
  %first = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
  %self1.i = getelementptr inbounds i8, ptr %iter, i64 8
  %end.i = load ptr, ptr %self1.i, align 8, !nonnull !3, !noundef !3
  %subtracted.i = load ptr, ptr %iter, align 8, !nonnull !3, !noundef !3
  %13 = ptrtoint ptr %end.i to i64
  %14 = ptrtoint ptr %subtracted.i to i64
  %15 = sub nuw i64 %13, %14
  %16 = udiv exact i64 %15, 24
  store i64 %16, ptr %_0.i, align 8
  %17 = load i64, ptr %_0.i, align 8, !noundef !3
  %18 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %sep.1, i64 %17)
  %_163.0 = extractvalue { i64, i1 } %18, 0
  %_163.1 = extractvalue { i64, i1 } %18, 1
  %19 = call i1 @llvm.expect.i1(i1 %_163.1, i1 false)
  %20 = zext i1 %19 to i8
  store i8 %20, ptr %1, align 1
  %21 = load i8, ptr %1, align 1, !range !10, !noundef !3
  %_160 = trunc i8 %21 to i1
  br i1 %_160, label %bb71, label %bb72

bb63:                                             ; preds = %bb62, %bb69
  ret void

bb72:                                             ; preds = %bb2
  %22 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %_163.0, ptr %22, align 8
  store i64 1, ptr %self1, align 8
  br label %bb73

bb71:                                             ; preds = %bb2
  %23 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %24 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %23, ptr %self1, align 8
  %25 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %24, ptr %25, align 8
  br label %bb73

bb73:                                             ; preds = %bb71, %bb72
  store ptr %slice.0, ptr %f, align 8
  %26 = getelementptr inbounds i8, ptr %f, i64 8
  store i64 %slice.1, ptr %26, align 8
  %_167 = load i64, ptr %self1, align 8, !range !9, !noundef !3
  %27 = icmp eq i64 %_167, 0
  br i1 %27, label %bb74, label %bb75

bb74:                                             ; preds = %bb73
  %28 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %29 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %28, ptr %self, align 8
  %30 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %29, ptr %30, align 8
  br label %bb77

bb75:                                             ; preds = %bb73
  %31 = getelementptr inbounds i8, ptr %self1, i64 8
  %x = load i64, ptr %31, align 8, !noundef !3
  store i64 %x, ptr %_169, align 8
  %32 = load ptr, ptr %f, align 8, !nonnull !3, !align !5, !noundef !3
  %33 = getelementptr inbounds i8, ptr %f, i64 8
  %34 = load i64, ptr %33, align 8, !noundef !3
  %35 = load i64, ptr %_169, align 8, !noundef !3
; call alloc::str::join_generic_copy::{{closure}}
  %36 = call { i64, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17hf4aea0a2a1b87de3E"(ptr align 8 %32, i64 %34, i64 %35)
  %37 = extractvalue { i64, i64 } %36, 0
  %38 = extractvalue { i64, i64 } %36, 1
  store i64 %37, ptr %self, align 8
  %39 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %38, ptr %39, align 8
  br label %bb77

bb77:                                             ; preds = %bb75, %bb74
  %_170 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %40 = icmp eq i64 %_170, 0
  br i1 %40, label %bb78, label %bb79

bb78:                                             ; preds = %bb77
; call core::option::expect_failed
  call void @_ZN4core6option13expect_failed17h465b3d6aa69dcb6dE(ptr align 1 @alloc_ca673fb95acb8e58af271999e89294ae, i64 53, ptr align 8 @alloc_3068534db64c07883069a5f112d64238) #27
  unreachable

bb79:                                             ; preds = %bb77
  %41 = getelementptr inbounds i8, ptr %self, i64 8
  %reserved_len = load i64, ptr %41, align 8, !noundef !3
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %42 = call { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h332409814013709cE"(i64 %reserved_len, i1 zeroext false)
  %_172.0 = extractvalue { i64, ptr } %42, 0
  %_172.1 = extractvalue { i64, ptr } %42, 1
  store i64 %_172.0, ptr %result, align 8
  %43 = getelementptr inbounds i8, ptr %result, i64 8
  store ptr %_172.1, ptr %43, align 8
  %44 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %result, i32 0, i32 1
  store i64 0, ptr %44, align 8
; invoke alloc::str::<impl core::borrow::Borrow<str> for alloc::string::String>::borrow
  %45 = invoke { ptr, i64 } @"_ZN5alloc3str83_$LT$impl$u20$core..borrow..Borrow$LT$str$GT$$u20$for$u20$alloc..string..String$GT$6borrow17hc6f2541ecd6bdf2fE"(ptr align 8 %first)
          to label %bb4 unwind label %cleanup

bb64:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %result) #28
          to label %bb65 unwind label %terminate

cleanup:                                          ; preds = %bb60, %bb59, %bb58, %bb56, %bb54, %bb52, %bb51, %bb50, %bb48, %bb46, %bb43, %bb42, %bb41, %bb39, %bb37, %bb34, %bb33, %bb32, %bb30, %bb28, %bb25, %bb24, %bb23, %bb21, %bb19, %bb16, %bb15, %bb14, %bb12, %bb10, %bb6, %bb5, %bb4, %bb79
  %46 = landingpad { ptr, i32 }
          cleanup
  %47 = extractvalue { ptr, i32 } %46, 0
  %48 = extractvalue { ptr, i32 } %46, 1
  store ptr %47, ptr %0, align 8
  %49 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %48, ptr %49, align 8
  br label %bb64

bb4:                                              ; preds = %bb79
  %_21.0 = extractvalue { ptr, i64 } %45, 0
  %_21.1 = extractvalue { ptr, i64 } %45, 1
; invoke core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %50 = invoke { ptr, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17he21c76dc9236a822E"(ptr align 1 %_21.0, i64 %_21.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %_20.0 = extractvalue { ptr, i64 } %50, 0
  %_20.1 = extractvalue { ptr, i64 } %50, 1
; invoke alloc::vec::Vec<T,A>::extend_from_slice
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h102f896cdc9c3e1dE"(ptr align 8 %result, ptr align 1 %_20.0, i64 %_20.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %51 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %result, i32 0, i32 1
  %pos = load i64, ptr %51, align 8, !noundef !3
; invoke alloc::vec::Vec<T,A>::spare_capacity_mut
  %52 = invoke { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h8a9bc6067f576ce8E"(ptr align 8 %result)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  %self.0 = extractvalue { ptr, i64 } %52, 0
  %self.1 = extractvalue { ptr, i64 } %52, 1
  %index = sub i64 %reserved_len, %pos
  %new_len = sub nuw i64 %index, 0
  store ptr %self.0, ptr %_183, align 8
  %53 = getelementptr inbounds i8, ptr %_183, i64 8
  store i64 %new_len, ptr %53, align 8
  %54 = load ptr, ptr %_183, align 8, !noundef !3
  %55 = getelementptr inbounds i8, ptr %_183, i64 8
  %56 = load i64, ptr %55, align 8, !noundef !3
  store ptr %54, ptr %_182, align 8
  %57 = getelementptr inbounds i8, ptr %_182, i64 8
  store i64 %56, ptr %57, align 8
  %_174.0 = load ptr, ptr %_182, align 8, !noundef !3
  %58 = getelementptr inbounds i8, ptr %_182, i64 8
  %_174.1 = load i64, ptr %58, align 8, !noundef !3
  store ptr %sep.0, ptr %_189, align 8
  %59 = getelementptr inbounds i8, ptr %_189, i64 8
  store i64 %sep.1, ptr %59, align 8
  %60 = load ptr, ptr %_189, align 8, !noundef !3
  %61 = getelementptr inbounds i8, ptr %_189, i64 8
  %62 = load i64, ptr %61, align 8, !noundef !3
  store ptr %60, ptr %_188, align 8
  %63 = getelementptr inbounds i8, ptr %_188, i64 8
  store i64 %62, ptr %63, align 8
  %sep_uninit.0 = load ptr, ptr %_188, align 8, !noundef !3
  %64 = getelementptr inbounds i8, ptr %_188, i64 8
  %sep_uninit.1 = load i64, ptr %64, align 8, !noundef !3
  %self.08 = load ptr, ptr %iter, align 8, !nonnull !3, !noundef !3
  %65 = getelementptr inbounds i8, ptr %iter, i64 8
  %self.19 = load ptr, ptr %65, align 8, !noundef !3
  store ptr %self.08, ptr %iter_uninit, align 8
  %66 = getelementptr inbounds i8, ptr %iter_uninit, i64 8
  store ptr %self.19, ptr %66, align 8
  store ptr %_174.0, ptr %target, align 8
  %67 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %_174.1, ptr %67, align 8
  switch i64 %sep_uninit.1, label %bb8 [
    i64 0, label %bb9
    i64 1, label %bb18
    i64 2, label %bb27
    i64 3, label %bb36
    i64 4, label %bb45
  ]

bb8:                                              ; preds = %bb7
  %68 = load ptr, ptr %iter_uninit, align 8, !nonnull !3, !noundef !3
  %69 = getelementptr inbounds i8, ptr %iter_uninit, i64 8
  %70 = load ptr, ptr %69, align 8, !noundef !3
  store ptr %68, ptr %iter7, align 8
  %71 = getelementptr inbounds i8, ptr %iter7, i64 8
  store ptr %70, ptr %71, align 8
  br label %bb54

bb9:                                              ; preds = %bb7
  %72 = load ptr, ptr %iter_uninit, align 8, !nonnull !3, !noundef !3
  %73 = getelementptr inbounds i8, ptr %iter_uninit, i64 8
  %74 = load ptr, ptr %73, align 8, !noundef !3
  store ptr %72, ptr %iter2, align 8
  %75 = getelementptr inbounds i8, ptr %iter2, i64 8
  store ptr %74, ptr %75, align 8
  br label %bb10

bb18:                                             ; preds = %bb7
  %76 = load ptr, ptr %iter_uninit, align 8, !nonnull !3, !noundef !3
  %77 = getelementptr inbounds i8, ptr %iter_uninit, i64 8
  %78 = load ptr, ptr %77, align 8, !noundef !3
  store ptr %76, ptr %iter3, align 8
  %79 = getelementptr inbounds i8, ptr %iter3, i64 8
  store ptr %78, ptr %79, align 8
  br label %bb19

bb27:                                             ; preds = %bb7
  %80 = load ptr, ptr %iter_uninit, align 8, !nonnull !3, !noundef !3
  %81 = getelementptr inbounds i8, ptr %iter_uninit, i64 8
  %82 = load ptr, ptr %81, align 8, !noundef !3
  store ptr %80, ptr %iter4, align 8
  %83 = getelementptr inbounds i8, ptr %iter4, i64 8
  store ptr %82, ptr %83, align 8
  br label %bb28

bb36:                                             ; preds = %bb7
  %84 = load ptr, ptr %iter_uninit, align 8, !nonnull !3, !noundef !3
  %85 = getelementptr inbounds i8, ptr %iter_uninit, i64 8
  %86 = load ptr, ptr %85, align 8, !noundef !3
  store ptr %84, ptr %iter5, align 8
  %87 = getelementptr inbounds i8, ptr %iter5, i64 8
  store ptr %86, ptr %87, align 8
  br label %bb37

bb45:                                             ; preds = %bb7
  %88 = load ptr, ptr %iter_uninit, align 8, !nonnull !3, !noundef !3
  %89 = getelementptr inbounds i8, ptr %iter_uninit, i64 8
  %90 = load ptr, ptr %89, align 8, !noundef !3
  store ptr %88, ptr %iter6, align 8
  %91 = getelementptr inbounds i8, ptr %iter6, i64 8
  store ptr %90, ptr %91, align 8
  br label %bb46

bb10:                                             ; preds = %bb17, %bb9
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %92 = invoke { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h02c1656b2970e714E"(ptr align 8 %iter2)
          to label %bb11 unwind label %cleanup

bb11:                                             ; preds = %bb10
  %93 = extractvalue { ptr, i64 } %92, 0
  %94 = extractvalue { ptr, i64 } %92, 1
  store ptr %93, ptr %_37, align 8
  %95 = getelementptr inbounds i8, ptr %_37, i64 8
  store i64 %94, ptr %95, align 8
  %96 = load ptr, ptr %_37, align 8, !noundef !3
  %97 = ptrtoint ptr %96 to i64
  %98 = icmp eq i64 %97, 0
  %_39 = select i1 %98, i64 0, i64 1
  %99 = icmp eq i64 %_39, 0
  br i1 %99, label %bb13, label %bb12

bb13:                                             ; preds = %bb11
  br label %bb62

bb12:                                             ; preds = %bb11
  %s.0 = load ptr, ptr %_37, align 8, !nonnull !3, !align !4, !noundef !3
  %100 = getelementptr inbounds i8, ptr %_37, i64 8
  %s.1 = load i64, ptr %100, align 8, !noundef !3
  %_45.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %101 = getelementptr inbounds i8, ptr %target, i64 8
  %_45.1 = load i64, ptr %101, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_44, ptr align 1 %_45.0, i64 %_45.1, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb14 unwind label %cleanup

bb62:                                             ; preds = %bb57, %bb49, %bb40, %bb31, %bb22, %bb13
  %remain.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %102 = getelementptr inbounds i8, ptr %target, i64 8
  %remain.1 = load i64, ptr %102, align 8, !noundef !3
  %result_len = sub i64 %reserved_len, %remain.1
  %103 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %result, i32 0, i32 1
  store i64 %result_len, ptr %103, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %result, i64 24, i1 false)
  br label %bb63

bb14:                                             ; preds = %bb12
  %head.0 = load ptr, ptr %_44, align 8, !nonnull !3, !align !4, !noundef !3
  %104 = getelementptr inbounds i8, ptr %_44, i64 8
  %head.1 = load i64, ptr %104, align 8, !noundef !3
  %105 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_44, i32 0, i32 1
  %tail.0 = load ptr, ptr %105, align 8, !nonnull !3, !align !4, !noundef !3
  %106 = getelementptr inbounds i8, ptr %105, i64 8
  %tail.1 = load i64, ptr %106, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.0, i64 %head.1, ptr align 1 %sep_uninit.0, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
  store ptr %tail.0, ptr %target, align 8
  %107 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.1, ptr %107, align 8
  %_52.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %108 = getelementptr inbounds i8, ptr %target, i64 8
  %_52.1 = load i64, ptr %108, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_51, ptr align 1 %_52.0, i64 %_52.1, i64 %s.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb16 unwind label %cleanup

bb16:                                             ; preds = %bb15
  %head.010 = load ptr, ptr %_51, align 8, !nonnull !3, !align !4, !noundef !3
  %109 = getelementptr inbounds i8, ptr %_51, i64 8
  %head.111 = load i64, ptr %109, align 8, !noundef !3
  %110 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_51, i32 0, i32 1
  %tail.012 = load ptr, ptr %110, align 8, !nonnull !3, !align !4, !noundef !3
  %111 = getelementptr inbounds i8, ptr %110, i64 8
  %tail.113 = load i64, ptr %111, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.010, i64 %head.111, ptr align 1 %s.0, i64 %s.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb17 unwind label %cleanup

bb17:                                             ; preds = %bb16
  store ptr %tail.012, ptr %target, align 8
  %112 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.113, ptr %112, align 8
  br label %bb10

bb19:                                             ; preds = %bb26, %bb18
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %113 = invoke { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h02c1656b2970e714E"(ptr align 8 %iter3)
          to label %bb20 unwind label %cleanup

bb20:                                             ; preds = %bb19
  %114 = extractvalue { ptr, i64 } %113, 0
  %115 = extractvalue { ptr, i64 } %113, 1
  store ptr %114, ptr %_55, align 8
  %116 = getelementptr inbounds i8, ptr %_55, i64 8
  store i64 %115, ptr %116, align 8
  %117 = load ptr, ptr %_55, align 8, !noundef !3
  %118 = ptrtoint ptr %117 to i64
  %119 = icmp eq i64 %118, 0
  %_57 = select i1 %119, i64 0, i64 1
  %120 = icmp eq i64 %_57, 0
  br i1 %120, label %bb22, label %bb21

bb22:                                             ; preds = %bb20
  br label %bb62

bb21:                                             ; preds = %bb20
  %s.014 = load ptr, ptr %_55, align 8, !nonnull !3, !align !4, !noundef !3
  %121 = getelementptr inbounds i8, ptr %_55, i64 8
  %s.115 = load i64, ptr %121, align 8, !noundef !3
  %_63.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %122 = getelementptr inbounds i8, ptr %target, i64 8
  %_63.1 = load i64, ptr %122, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_62, ptr align 1 %_63.0, i64 %_63.1, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb23 unwind label %cleanup

bb23:                                             ; preds = %bb21
  %head.016 = load ptr, ptr %_62, align 8, !nonnull !3, !align !4, !noundef !3
  %123 = getelementptr inbounds i8, ptr %_62, i64 8
  %head.117 = load i64, ptr %123, align 8, !noundef !3
  %124 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_62, i32 0, i32 1
  %tail.018 = load ptr, ptr %124, align 8, !nonnull !3, !align !4, !noundef !3
  %125 = getelementptr inbounds i8, ptr %124, i64 8
  %tail.119 = load i64, ptr %125, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.016, i64 %head.117, ptr align 1 %sep_uninit.0, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb24 unwind label %cleanup

bb24:                                             ; preds = %bb23
  store ptr %tail.018, ptr %target, align 8
  %126 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.119, ptr %126, align 8
  %_70.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %127 = getelementptr inbounds i8, ptr %target, i64 8
  %_70.1 = load i64, ptr %127, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_69, ptr align 1 %_70.0, i64 %_70.1, i64 %s.115, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
  %head.020 = load ptr, ptr %_69, align 8, !nonnull !3, !align !4, !noundef !3
  %128 = getelementptr inbounds i8, ptr %_69, i64 8
  %head.121 = load i64, ptr %128, align 8, !noundef !3
  %129 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_69, i32 0, i32 1
  %tail.022 = load ptr, ptr %129, align 8, !nonnull !3, !align !4, !noundef !3
  %130 = getelementptr inbounds i8, ptr %129, i64 8
  %tail.123 = load i64, ptr %130, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.020, i64 %head.121, ptr align 1 %s.014, i64 %s.115, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
  store ptr %tail.022, ptr %target, align 8
  %131 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.123, ptr %131, align 8
  br label %bb19

bb28:                                             ; preds = %bb35, %bb27
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %132 = invoke { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h02c1656b2970e714E"(ptr align 8 %iter4)
          to label %bb29 unwind label %cleanup

bb29:                                             ; preds = %bb28
  %133 = extractvalue { ptr, i64 } %132, 0
  %134 = extractvalue { ptr, i64 } %132, 1
  store ptr %133, ptr %_73, align 8
  %135 = getelementptr inbounds i8, ptr %_73, i64 8
  store i64 %134, ptr %135, align 8
  %136 = load ptr, ptr %_73, align 8, !noundef !3
  %137 = ptrtoint ptr %136 to i64
  %138 = icmp eq i64 %137, 0
  %_75 = select i1 %138, i64 0, i64 1
  %139 = icmp eq i64 %_75, 0
  br i1 %139, label %bb31, label %bb30

bb31:                                             ; preds = %bb29
  br label %bb62

bb30:                                             ; preds = %bb29
  %s.024 = load ptr, ptr %_73, align 8, !nonnull !3, !align !4, !noundef !3
  %140 = getelementptr inbounds i8, ptr %_73, i64 8
  %s.125 = load i64, ptr %140, align 8, !noundef !3
  %_81.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %141 = getelementptr inbounds i8, ptr %target, i64 8
  %_81.1 = load i64, ptr %141, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_80, ptr align 1 %_81.0, i64 %_81.1, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb32 unwind label %cleanup

bb32:                                             ; preds = %bb30
  %head.026 = load ptr, ptr %_80, align 8, !nonnull !3, !align !4, !noundef !3
  %142 = getelementptr inbounds i8, ptr %_80, i64 8
  %head.127 = load i64, ptr %142, align 8, !noundef !3
  %143 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_80, i32 0, i32 1
  %tail.028 = load ptr, ptr %143, align 8, !nonnull !3, !align !4, !noundef !3
  %144 = getelementptr inbounds i8, ptr %143, i64 8
  %tail.129 = load i64, ptr %144, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.026, i64 %head.127, ptr align 1 %sep_uninit.0, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb33 unwind label %cleanup

bb33:                                             ; preds = %bb32
  store ptr %tail.028, ptr %target, align 8
  %145 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.129, ptr %145, align 8
  %_88.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %146 = getelementptr inbounds i8, ptr %target, i64 8
  %_88.1 = load i64, ptr %146, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_87, ptr align 1 %_88.0, i64 %_88.1, i64 %s.125, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb34 unwind label %cleanup

bb34:                                             ; preds = %bb33
  %head.030 = load ptr, ptr %_87, align 8, !nonnull !3, !align !4, !noundef !3
  %147 = getelementptr inbounds i8, ptr %_87, i64 8
  %head.131 = load i64, ptr %147, align 8, !noundef !3
  %148 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_87, i32 0, i32 1
  %tail.032 = load ptr, ptr %148, align 8, !nonnull !3, !align !4, !noundef !3
  %149 = getelementptr inbounds i8, ptr %148, i64 8
  %tail.133 = load i64, ptr %149, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.030, i64 %head.131, ptr align 1 %s.024, i64 %s.125, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb35 unwind label %cleanup

bb35:                                             ; preds = %bb34
  store ptr %tail.032, ptr %target, align 8
  %150 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.133, ptr %150, align 8
  br label %bb28

bb37:                                             ; preds = %bb44, %bb36
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %151 = invoke { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h02c1656b2970e714E"(ptr align 8 %iter5)
          to label %bb38 unwind label %cleanup

bb38:                                             ; preds = %bb37
  %152 = extractvalue { ptr, i64 } %151, 0
  %153 = extractvalue { ptr, i64 } %151, 1
  store ptr %152, ptr %_91, align 8
  %154 = getelementptr inbounds i8, ptr %_91, i64 8
  store i64 %153, ptr %154, align 8
  %155 = load ptr, ptr %_91, align 8, !noundef !3
  %156 = ptrtoint ptr %155 to i64
  %157 = icmp eq i64 %156, 0
  %_93 = select i1 %157, i64 0, i64 1
  %158 = icmp eq i64 %_93, 0
  br i1 %158, label %bb40, label %bb39

bb40:                                             ; preds = %bb38
  br label %bb62

bb39:                                             ; preds = %bb38
  %s.034 = load ptr, ptr %_91, align 8, !nonnull !3, !align !4, !noundef !3
  %159 = getelementptr inbounds i8, ptr %_91, i64 8
  %s.135 = load i64, ptr %159, align 8, !noundef !3
  %_99.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %160 = getelementptr inbounds i8, ptr %target, i64 8
  %_99.1 = load i64, ptr %160, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_98, ptr align 1 %_99.0, i64 %_99.1, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb41 unwind label %cleanup

bb41:                                             ; preds = %bb39
  %head.036 = load ptr, ptr %_98, align 8, !nonnull !3, !align !4, !noundef !3
  %161 = getelementptr inbounds i8, ptr %_98, i64 8
  %head.137 = load i64, ptr %161, align 8, !noundef !3
  %162 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_98, i32 0, i32 1
  %tail.038 = load ptr, ptr %162, align 8, !nonnull !3, !align !4, !noundef !3
  %163 = getelementptr inbounds i8, ptr %162, i64 8
  %tail.139 = load i64, ptr %163, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.036, i64 %head.137, ptr align 1 %sep_uninit.0, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb42 unwind label %cleanup

bb42:                                             ; preds = %bb41
  store ptr %tail.038, ptr %target, align 8
  %164 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.139, ptr %164, align 8
  %_106.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %165 = getelementptr inbounds i8, ptr %target, i64 8
  %_106.1 = load i64, ptr %165, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_105, ptr align 1 %_106.0, i64 %_106.1, i64 %s.135, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb43 unwind label %cleanup

bb43:                                             ; preds = %bb42
  %head.040 = load ptr, ptr %_105, align 8, !nonnull !3, !align !4, !noundef !3
  %166 = getelementptr inbounds i8, ptr %_105, i64 8
  %head.141 = load i64, ptr %166, align 8, !noundef !3
  %167 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_105, i32 0, i32 1
  %tail.042 = load ptr, ptr %167, align 8, !nonnull !3, !align !4, !noundef !3
  %168 = getelementptr inbounds i8, ptr %167, i64 8
  %tail.143 = load i64, ptr %168, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.040, i64 %head.141, ptr align 1 %s.034, i64 %s.135, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb44 unwind label %cleanup

bb44:                                             ; preds = %bb43
  store ptr %tail.042, ptr %target, align 8
  %169 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.143, ptr %169, align 8
  br label %bb37

bb46:                                             ; preds = %bb53, %bb45
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %170 = invoke { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h02c1656b2970e714E"(ptr align 8 %iter6)
          to label %bb47 unwind label %cleanup

bb47:                                             ; preds = %bb46
  %171 = extractvalue { ptr, i64 } %170, 0
  %172 = extractvalue { ptr, i64 } %170, 1
  store ptr %171, ptr %_109, align 8
  %173 = getelementptr inbounds i8, ptr %_109, i64 8
  store i64 %172, ptr %173, align 8
  %174 = load ptr, ptr %_109, align 8, !noundef !3
  %175 = ptrtoint ptr %174 to i64
  %176 = icmp eq i64 %175, 0
  %_111 = select i1 %176, i64 0, i64 1
  %177 = icmp eq i64 %_111, 0
  br i1 %177, label %bb49, label %bb48

bb49:                                             ; preds = %bb47
  br label %bb62

bb48:                                             ; preds = %bb47
  %s.044 = load ptr, ptr %_109, align 8, !nonnull !3, !align !4, !noundef !3
  %178 = getelementptr inbounds i8, ptr %_109, i64 8
  %s.145 = load i64, ptr %178, align 8, !noundef !3
  %_117.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %179 = getelementptr inbounds i8, ptr %target, i64 8
  %_117.1 = load i64, ptr %179, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_116, ptr align 1 %_117.0, i64 %_117.1, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb50 unwind label %cleanup

bb50:                                             ; preds = %bb48
  %head.046 = load ptr, ptr %_116, align 8, !nonnull !3, !align !4, !noundef !3
  %180 = getelementptr inbounds i8, ptr %_116, i64 8
  %head.147 = load i64, ptr %180, align 8, !noundef !3
  %181 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_116, i32 0, i32 1
  %tail.048 = load ptr, ptr %181, align 8, !nonnull !3, !align !4, !noundef !3
  %182 = getelementptr inbounds i8, ptr %181, i64 8
  %tail.149 = load i64, ptr %182, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.046, i64 %head.147, ptr align 1 %sep_uninit.0, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb51 unwind label %cleanup

bb51:                                             ; preds = %bb50
  store ptr %tail.048, ptr %target, align 8
  %183 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.149, ptr %183, align 8
  %_124.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %184 = getelementptr inbounds i8, ptr %target, i64 8
  %_124.1 = load i64, ptr %184, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_123, ptr align 1 %_124.0, i64 %_124.1, i64 %s.145, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb52 unwind label %cleanup

bb52:                                             ; preds = %bb51
  %head.050 = load ptr, ptr %_123, align 8, !nonnull !3, !align !4, !noundef !3
  %185 = getelementptr inbounds i8, ptr %_123, i64 8
  %head.151 = load i64, ptr %185, align 8, !noundef !3
  %186 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_123, i32 0, i32 1
  %tail.052 = load ptr, ptr %186, align 8, !nonnull !3, !align !4, !noundef !3
  %187 = getelementptr inbounds i8, ptr %186, i64 8
  %tail.153 = load i64, ptr %187, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.050, i64 %head.151, ptr align 1 %s.044, i64 %s.145, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb53 unwind label %cleanup

bb53:                                             ; preds = %bb52
  store ptr %tail.052, ptr %target, align 8
  %188 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.153, ptr %188, align 8
  br label %bb46

bb54:                                             ; preds = %bb61, %bb8
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %189 = invoke { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h02c1656b2970e714E"(ptr align 8 %iter7)
          to label %bb55 unwind label %cleanup

bb55:                                             ; preds = %bb54
  %190 = extractvalue { ptr, i64 } %189, 0
  %191 = extractvalue { ptr, i64 } %189, 1
  store ptr %190, ptr %_127, align 8
  %192 = getelementptr inbounds i8, ptr %_127, i64 8
  store i64 %191, ptr %192, align 8
  %193 = load ptr, ptr %_127, align 8, !noundef !3
  %194 = ptrtoint ptr %193 to i64
  %195 = icmp eq i64 %194, 0
  %_129 = select i1 %195, i64 0, i64 1
  %196 = icmp eq i64 %_129, 0
  br i1 %196, label %bb57, label %bb56

bb57:                                             ; preds = %bb55
  br label %bb62

bb56:                                             ; preds = %bb55
  %s.054 = load ptr, ptr %_127, align 8, !nonnull !3, !align !4, !noundef !3
  %197 = getelementptr inbounds i8, ptr %_127, i64 8
  %s.155 = load i64, ptr %197, align 8, !noundef !3
  %_135.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %198 = getelementptr inbounds i8, ptr %target, i64 8
  %_135.1 = load i64, ptr %198, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_134, ptr align 1 %_135.0, i64 %_135.1, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb58 unwind label %cleanup

bb58:                                             ; preds = %bb56
  %head.056 = load ptr, ptr %_134, align 8, !nonnull !3, !align !4, !noundef !3
  %199 = getelementptr inbounds i8, ptr %_134, i64 8
  %head.157 = load i64, ptr %199, align 8, !noundef !3
  %200 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_134, i32 0, i32 1
  %tail.058 = load ptr, ptr %200, align 8, !nonnull !3, !align !4, !noundef !3
  %201 = getelementptr inbounds i8, ptr %200, i64 8
  %tail.159 = load i64, ptr %201, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.056, i64 %head.157, ptr align 1 %sep_uninit.0, i64 %sep_uninit.1, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb59 unwind label %cleanup

bb59:                                             ; preds = %bb58
  store ptr %tail.058, ptr %target, align 8
  %202 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.159, ptr %202, align 8
  %_142.0 = load ptr, ptr %target, align 8, !nonnull !3, !align !4, !noundef !3
  %203 = getelementptr inbounds i8, ptr %target, i64 8
  %_142.1 = load i64, ptr %203, align 8, !noundef !3
; invoke core::slice::<impl [T]>::split_at_mut
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$12split_at_mut17h2a485fce489f257fE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_141, ptr align 1 %_142.0, i64 %_142.1, i64 %s.155, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb60 unwind label %cleanup

bb60:                                             ; preds = %bb59
  %head.060 = load ptr, ptr %_141, align 8, !nonnull !3, !align !4, !noundef !3
  %204 = getelementptr inbounds i8, ptr %_141, i64 8
  %head.161 = load i64, ptr %204, align 8, !noundef !3
  %205 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_141, i32 0, i32 1
  %tail.062 = load ptr, ptr %205, align 8, !nonnull !3, !align !4, !noundef !3
  %206 = getelementptr inbounds i8, ptr %205, i64 8
  %tail.163 = load i64, ptr %206, align 8, !noundef !3
; invoke core::slice::<impl [T]>::copy_from_slice
  invoke void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17hee90ac8dcdade841E"(ptr align 1 %head.060, i64 %head.161, ptr align 1 %s.054, i64 %s.155, ptr align 8 @alloc_3a303dcbeb96808a4e23a68d0fb86be4)
          to label %bb61 unwind label %cleanup

bb61:                                             ; preds = %bb60
  store ptr %tail.062, ptr %target, align 8
  %207 = getelementptr inbounds i8, ptr %target, i64 8
  store i64 %tail.163, ptr %207, align 8
  br label %bb54

terminate:                                        ; preds = %bb64
  %208 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %209 = extractvalue { ptr, i32 } %208, 0
  %210 = extractvalue { ptr, i32 } %208, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb65:                                             ; preds = %bb64
  %211 = load ptr, ptr %0, align 8, !noundef !3
  %212 = getelementptr inbounds i8, ptr %0, i64 8
  %213 = load i32, ptr %212, align 8, !noundef !3
  %214 = insertvalue { ptr, i32 } poison, ptr %211, 0
  %215 = insertvalue { ptr, i32 } %214, i32 %213, 1
  resume { ptr, i32 } %215

bb81:                                             ; No predecessors!
  unreachable
}

; alloc::str::join_generic_copy::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17h5bd73595b2755f27E"(ptr align 1 %_1, ptr align 8 %it) unnamed_addr #0 {
start:
  %_12 = alloca %"core::ptr::metadata::PtrComponents<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_11 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
; call alloc::str::<impl core::borrow::Borrow<str> for alloc::string::String>::borrow
  %0 = call { ptr, i64 } @"_ZN5alloc3str83_$LT$impl$u20$core..borrow..Borrow$LT$str$GT$$u20$for$u20$alloc..string..String$GT$6borrow17hc6f2541ecd6bdf2fE"(ptr align 8 %it)
  %_4.0 = extractvalue { ptr, i64 } %0, 0
  %_4.1 = extractvalue { ptr, i64 } %0, 1
; call core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %1 = call { ptr, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17he21c76dc9236a822E"(ptr align 1 %_4.0, i64 %_4.1)
  %it.0 = extractvalue { ptr, i64 } %1, 0
  %it.1 = extractvalue { ptr, i64 } %1, 1
  store ptr %it.0, ptr %_12, align 8
  %2 = getelementptr inbounds i8, ptr %_12, i64 8
  store i64 %it.1, ptr %2, align 8
  %3 = load ptr, ptr %_12, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_12, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_11, align 8
  %6 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %5, ptr %6, align 8
  %_9.0 = load ptr, ptr %_11, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_11, i64 8
  %_9.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %_9.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %_9.1, 1
  ret { ptr, i64 } %9
}

; alloc::str::join_generic_copy::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17h8ca8d4a23444054eE"(ptr align 1 %_1, ptr align 8 %it) unnamed_addr #0 {
start:
  %_12 = alloca %"core::ptr::metadata::PtrComponents<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_11 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
; call <&T as core::borrow::Borrow<T>>::borrow
  %0 = call { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h8cd9e18c1076bd74E"(ptr align 8 %it)
  %_4.0 = extractvalue { ptr, i64 } %0, 0
  %_4.1 = extractvalue { ptr, i64 } %0, 1
; call core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %1 = call { ptr, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17he21c76dc9236a822E"(ptr align 1 %_4.0, i64 %_4.1)
  %it.0 = extractvalue { ptr, i64 } %1, 0
  %it.1 = extractvalue { ptr, i64 } %1, 1
  store ptr %it.0, ptr %_12, align 8
  %2 = getelementptr inbounds i8, ptr %_12, i64 8
  store i64 %it.1, ptr %2, align 8
  %3 = load ptr, ptr %_12, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_12, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_11, align 8
  %6 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %5, ptr %6, align 8
  %_9.0 = load ptr, ptr %_11, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_11, i64 8
  %_9.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %_9.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %_9.1, 1
  ret { ptr, i64 } %9
}

; alloc::str::join_generic_copy::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17he0e2fd3e5a3ef3a6E"(ptr align 8 %_1.0, i64 %_1.1, i64 %n) unnamed_addr #0 {
start:
  %_20 = alloca ptr, align 8
  %_12 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %self = alloca %"core::slice::iter::Iter<'_, &str>", align 8
  %_4 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@alloc::str::join_generic_copy<str, u8, &str>::{closure#0}::{closure#0}}>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds { ptr, i64 }, ptr %_1.0, i64 %_1.1
  store ptr %0, ptr %end_or_len, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %1 = inttoptr i64 %_1.1 to ptr
  store ptr %1, ptr %end_or_len, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  store ptr %_1.0, ptr %_12, align 8
  %_14 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %2 = load ptr, ptr %_12, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %self, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %_14, ptr %3, align 8
  %4 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds i8, ptr %self, i64 8
  %6 = load ptr, ptr %5, align 8, !noundef !3
  store ptr %4, ptr %_4, align 8
  %7 = getelementptr inbounds i8, ptr %_4, i64 8
  store ptr %6, ptr %7, align 8
  %f = getelementptr inbounds i8, ptr %_4, i64 16
  store ptr %f, ptr %_20, align 8
  %8 = load ptr, ptr %_20, align 8, !nonnull !3, !align !4, !noundef !3
; call core::iter::traits::iterator::Iterator::try_fold
  %9 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator8try_fold17h50eb73f9c6b70769E(ptr align 8 %_4, i64 %n, ptr align 1 %8)
  %_0.0 = extractvalue { i64, i64 } %9, 0
  %_0.1 = extractvalue { i64, i64 } %9, 1
  %10 = insertvalue { i64, i64 } poison, i64 %_0.0, 0
  %11 = insertvalue { i64, i64 } %10, i64 %_0.1, 1
  ret { i64, i64 } %11
}

; alloc::str::join_generic_copy::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$17hf4aea0a2a1b87de3E"(ptr align 8 %_1.0, i64 %_1.1, i64 %n) unnamed_addr #0 {
start:
  %_20 = alloca ptr, align 8
  %_12 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %self = alloca %"core::slice::iter::Iter<'_, alloc::string::String>", align 8
  %_4 = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, alloc::string::String>, {closure@alloc::str::join_generic_copy<str, u8, alloc::string::String>::{closure#0}::{closure#0}}>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds %"alloc::string::String", ptr %_1.0, i64 %_1.1
  store ptr %0, ptr %end_or_len, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %1 = inttoptr i64 %_1.1 to ptr
  store ptr %1, ptr %end_or_len, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  store ptr %_1.0, ptr %_12, align 8
  %_14 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %2 = load ptr, ptr %_12, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %self, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %_14, ptr %3, align 8
  %4 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds i8, ptr %self, i64 8
  %6 = load ptr, ptr %5, align 8, !noundef !3
  store ptr %4, ptr %_4, align 8
  %7 = getelementptr inbounds i8, ptr %_4, i64 8
  store ptr %6, ptr %7, align 8
  %f = getelementptr inbounds i8, ptr %_4, i64 16
  store ptr %f, ptr %_20, align 8
  %8 = load ptr, ptr %_20, align 8, !nonnull !3, !align !4, !noundef !3
; call core::iter::traits::iterator::Iterator::try_fold
  %9 = call { i64, i64 } @_ZN4core4iter6traits8iterator8Iterator8try_fold17h4245fc9ba6424fb4E(ptr align 8 %_4, i64 %n, ptr align 1 %8)
  %_0.0 = extractvalue { i64, i64 } %9, 0
  %_0.1 = extractvalue { i64, i64 } %9, 1
  %10 = insertvalue { i64, i64 } poison, i64 %_0.0, 0
  %11 = insertvalue { i64, i64 } %10, i64 %_0.1, 1
  ret { i64, i64 } %11
}

; alloc::str::join_generic_copy::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h71a136d86f0be180E"(ptr align 1 %_1, ptr align 8 %s) unnamed_addr #0 {
start:
; call <&T as core::borrow::Borrow<T>>::borrow
  %0 = call { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..borrow..Borrow$LT$T$GT$$GT$6borrow17h8cd9e18c1076bd74E"(ptr align 8 %s)
  %_4.0 = extractvalue { ptr, i64 } %0, 0
  %_4.1 = extractvalue { ptr, i64 } %0, 1
; call core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %1 = call { ptr, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17he21c76dc9236a822E"(ptr align 1 %_4.0, i64 %_4.1)
  %_3.0 = extractvalue { ptr, i64 } %1, 0
  %_3.1 = extractvalue { ptr, i64 } %1, 1
  ret i64 %_3.1
}

; alloc::str::join_generic_copy::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN5alloc3str17join_generic_copy28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h8a0e033de6fda2a8E"(ptr align 1 %_1, ptr align 8 %s) unnamed_addr #0 {
start:
; call alloc::str::<impl core::borrow::Borrow<str> for alloc::string::String>::borrow
  %0 = call { ptr, i64 } @"_ZN5alloc3str83_$LT$impl$u20$core..borrow..Borrow$LT$str$GT$$u20$for$u20$alloc..string..String$GT$6borrow17hc6f2541ecd6bdf2fE"(ptr align 8 %s)
  %_4.0 = extractvalue { ptr, i64 } %0, 0
  %_4.1 = extractvalue { ptr, i64 } %0, 1
; call core::str::<impl core::convert::AsRef<[u8]> for str>::as_ref
  %1 = call { ptr, i64 } @"_ZN4core3str74_$LT$impl$u20$core..convert..AsRef$LT$$u5b$u8$u5d$$GT$$u20$for$u20$str$GT$6as_ref17he21c76dc9236a822E"(ptr align 1 %_4.0, i64 %_4.1)
  %_3.0 = extractvalue { ptr, i64 } %1, 0
  %_3.1 = extractvalue { ptr, i64 } %1, 1
  ret i64 %_3.1
}

; alloc::str::<impl str>::replace
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$7replace17h1d949dc3ea24b7a7E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %self.0, i64 %self.1, i32 %from, ptr align 1 %to.0, i64 %to.1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_56 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_55 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_39 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_38 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_27 = alloca %"core::str::pattern::CharSearcher<'_>", align 8
  %_26 = alloca %"core::str::iter::MatchIndicesInternal<'_, char>", align 8
  %_25 = alloca %"alloc::vec::Vec<u8>", align 8
  %_8 = alloca %"core::option::Option<(usize, &str)>", align 8
  %iter = alloca %"core::str::iter::MatchIndices<'_, char>", align 8
  %self = alloca %"core::str::iter::MatchIndices<'_, char>", align 8
  %last_end = alloca i64, align 8
  %result = alloca %"alloc::string::String", align 8
  store i64 0, ptr %_25, align 8
  %1 = getelementptr inbounds i8, ptr %_25, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %_25, i32 0, i32 1
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %result, ptr align 8 %_25, i64 24, i1 false)
  store i64 0, ptr %last_end, align 8
; invoke <char as core::str::pattern::Pattern>::into_searcher
  invoke void @"_ZN52_$LT$char$u20$as$u20$core..str..pattern..Pattern$GT$13into_searcher17ha3f4776e4e43d4aaE"(ptr sret(%"core::str::pattern::CharSearcher<'_>") align 8 %_27, i32 %from, ptr align 1 %self.0, i64 %self.1)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb5, %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %result) #28
          to label %bb7 unwind label %terminate

cleanup:                                          ; preds = %bb4, %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb6

bb8:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_26, ptr align 8 %_27, i64 48, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_26, i64 48, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %self, i64 48, i1 false)
  br label %bb1

bb1:                                              ; preds = %bb11, %bb8
; invoke core::str::iter::MatchIndicesInternal<P>::next
  invoke void @"_ZN4core3str4iter29MatchIndicesInternal$LT$P$GT$4next17he92a6f5be4a5f6abE"(ptr sret(%"core::option::Option<(usize, &str)>") align 8 %_8, ptr align 8 %iter)
          to label %bb9 unwind label %cleanup1

bb5:                                              ; preds = %cleanup1
  br label %bb6

cleanup1:                                         ; preds = %bb10, %bb2, %bb1
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %0, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb5

bb9:                                              ; preds = %bb1
  %11 = getelementptr inbounds %"core::option::Option<(usize, &str)>", ptr %_8, i32 0, i32 1
  %12 = load ptr, ptr %11, align 8, !noundef !3
  %13 = ptrtoint ptr %12 to i64
  %14 = icmp eq i64 %13, 0
  %_10 = select i1 %14, i64 0, i64 1
  %15 = icmp eq i64 %_10, 0
  br i1 %15, label %bb3, label %bb2

bb3:                                              ; preds = %bb9
  br label %bb4

bb2:                                              ; preds = %bb9
  %start2 = load i64, ptr %_8, align 8, !noundef !3
  %16 = getelementptr inbounds { i64, { ptr, i64 } }, ptr %_8, i32 0, i32 1
  %part.0 = load ptr, ptr %16, align 8, !nonnull !3, !align !4, !noundef !3
  %17 = getelementptr inbounds i8, ptr %16, i64 8
  %part.1 = load i64, ptr %17, align 8, !noundef !3
  %i3 = load i64, ptr %last_end, align 8, !noundef !3
  %ptr4 = getelementptr inbounds i8, ptr %self.0, i64 %i3
  %len5 = sub i64 %start2, %i3
  store ptr %ptr4, ptr %_39, align 8
  %18 = getelementptr inbounds i8, ptr %_39, i64 8
  store i64 %len5, ptr %18, align 8
  %19 = load ptr, ptr %_39, align 8, !noundef !3
  %20 = getelementptr inbounds i8, ptr %_39, i64 8
  %21 = load i64, ptr %20, align 8, !noundef !3
  store ptr %19, ptr %_38, align 8
  %22 = getelementptr inbounds i8, ptr %_38, i64 8
  store i64 %21, ptr %22, align 8
  %_36.0 = load ptr, ptr %_38, align 8, !noundef !3
  %23 = getelementptr inbounds i8, ptr %_38, i64 8
  %_36.1 = load i64, ptr %23, align 8, !noundef !3
; invoke alloc::vec::Vec<T,A>::extend_from_slice
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h102f896cdc9c3e1dE"(ptr align 8 %result, ptr align 1 %_36.0, i64 %_36.1)
          to label %bb10 unwind label %cleanup1

bb4:                                              ; preds = %bb3
  %i = load i64, ptr %last_end, align 8, !noundef !3
  %ptr = getelementptr inbounds i8, ptr %self.0, i64 %i
  %len = sub i64 %self.1, %i
  store ptr %ptr, ptr %_56, align 8
  %24 = getelementptr inbounds i8, ptr %_56, i64 8
  store i64 %len, ptr %24, align 8
  %25 = load ptr, ptr %_56, align 8, !noundef !3
  %26 = getelementptr inbounds i8, ptr %_56, i64 8
  %27 = load i64, ptr %26, align 8, !noundef !3
  store ptr %25, ptr %_55, align 8
  %28 = getelementptr inbounds i8, ptr %_55, i64 8
  store i64 %27, ptr %28, align 8
  %_53.0 = load ptr, ptr %_55, align 8, !noundef !3
  %29 = getelementptr inbounds i8, ptr %_55, i64 8
  %_53.1 = load i64, ptr %29, align 8, !noundef !3
; invoke alloc::vec::Vec<T,A>::extend_from_slice
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h102f896cdc9c3e1dE"(ptr align 8 %result, ptr align 1 %_53.0, i64 %_53.1)
          to label %bb12 unwind label %cleanup

bb12:                                             ; preds = %bb4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %result, i64 24, i1 false)
  ret void

bb10:                                             ; preds = %bb2
; invoke alloc::vec::Vec<T,A>::extend_from_slice
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h102f896cdc9c3e1dE"(ptr align 8 %result, ptr align 1 %to.0, i64 %to.1)
          to label %bb11 unwind label %cleanup1

bb11:                                             ; preds = %bb10
  %30 = add i64 %start2, %part.1
  store i64 %30, ptr %last_end, align 8
  br label %bb1

bb13:                                             ; No predecessors!
  unreachable

terminate:                                        ; preds = %bb6
  %31 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %32 = extractvalue { ptr, i32 } %31, 0
  %33 = extractvalue { ptr, i32 } %31, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb7:                                              ; preds = %bb6
  %34 = load ptr, ptr %0, align 8, !noundef !3
  %35 = getelementptr inbounds i8, ptr %0, i64 8
  %36 = load i32, ptr %35, align 8, !noundef !3
  %37 = insertvalue { ptr, i32 } poison, ptr %34, 0
  %38 = insertvalue { ptr, i32 } %37, i32 %36, 1
  resume { ptr, i32 } %38
}

; alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h67276cf824909686E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %v = alloca %"alloc::vec::Vec<u8>", align 8
  %bytes = alloca %"alloc::vec::Vec<u8>", align 8
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %0 = call { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h332409814013709cE"(i64 %self.1, i1 zeroext false)
  %_10.0 = extractvalue { i64, ptr } %0, 0
  %_10.1 = extractvalue { i64, ptr } %0, 1
  store i64 %_10.0, ptr %v, align 8
  %1 = getelementptr inbounds i8, ptr %v, i64 8
  store ptr %_10.1, ptr %1, align 8
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %v, i32 0, i32 1
  store i64 0, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %v, i64 8
  %self = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  %4 = mul i64 %self.1, 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %self, ptr align 1 %self.0, i64 %4, i1 false)
  %5 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %v, i32 0, i32 1
  store i64 %self.1, ptr %5, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %bytes, ptr align 8 %v, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %bytes, i64 24, i1 false)
  ret void
}

; alloc::str::<impl alloc::slice::Join<&str> for [S]>::join
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3str75_$LT$impl$u20$alloc..slice..Join$LT$$RF$str$GT$$u20$for$u20$$u5b$S$u5d$$GT$4join17h226bb231a998f571E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %slice.0, i64 %slice.1, ptr align 1 %sep.0, i64 %sep.1) unnamed_addr #1 {
start:
  %bytes = alloca %"alloc::vec::Vec<u8>", align 8
; call alloc::str::join_generic_copy
  call void @_ZN5alloc3str17join_generic_copy17hd51c74e6706c726bE(ptr sret(%"alloc::vec::Vec<u8>") align 8 %bytes, ptr align 8 %slice.0, i64 %slice.1, ptr align 1 %sep.0, i64 %sep.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %bytes, i64 24, i1 false)
  ret void
}

; alloc::str::<impl alloc::slice::Join<&str> for [S]>::join
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3str75_$LT$impl$u20$alloc..slice..Join$LT$$RF$str$GT$$u20$for$u20$$u5b$S$u5d$$GT$4join17h56d8fb1e30a95d9aE"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %slice.0, i64 %slice.1, ptr align 1 %sep.0, i64 %sep.1) unnamed_addr #1 {
start:
  %bytes = alloca %"alloc::vec::Vec<u8>", align 8
; call alloc::str::join_generic_copy
  call void @_ZN5alloc3str17join_generic_copy17hf30e6a4b3a3707adE(ptr sret(%"alloc::vec::Vec<u8>") align 8 %bytes, ptr align 8 %slice.0, i64 %slice.1, ptr align 1 %sep.0, i64 %sep.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %bytes, i64 24, i1 false)
  ret void
}

; alloc::str::<impl core::borrow::Borrow<str> for alloc::string::String>::borrow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN5alloc3str83_$LT$impl$u20$core..borrow..Borrow$LT$str$GT$$u20$for$u20$alloc..string..String$GT$6borrow17hc6f2541ecd6bdf2fE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_13 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_12 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_13, align 8
  %2 = getelementptr inbounds i8, ptr %_13, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_13, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_13, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_12, align 8
  %6 = getelementptr inbounds i8, ptr %_12, i64 8
  store i64 %5, ptr %6, align 8
  %v.0 = load ptr, ptr %_12, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_12, i64 8
  %v.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %v.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %v.1, 1
  ret { ptr, i64 } %9
}

; alloc::vec::partial_eq::<impl core::cmp::PartialEq<alloc::vec::Vec<U,A2>> for alloc::vec::Vec<T,A1>>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN5alloc3vec10partial_eq117_$LT$impl$u20$core..cmp..PartialEq$LT$alloc..vec..Vec$LT$U$C$A2$GT$$GT$$u20$for$u20$alloc..vec..Vec$LT$T$C$A1$GT$$GT$2eq17hef9e2ca8e7e71238E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 {
start:
  %_24 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_23 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_13 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_14, align 8
  %2 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_14, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_14, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_13, align 8
  %6 = getelementptr inbounds i8, ptr %_13, i64 8
  store i64 %5, ptr %6, align 8
  %self.0 = load ptr, ptr %_13, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_13, i64 8
  %self.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %other, i64 8
  %self2 = load ptr, ptr %8, align 8, !nonnull !3, !noundef !3
  %9 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %other, i32 0, i32 1
  %len3 = load i64, ptr %9, align 8, !noundef !3
  store ptr %self2, ptr %_24, align 8
  %10 = getelementptr inbounds i8, ptr %_24, i64 8
  store i64 %len3, ptr %10, align 8
  %11 = load ptr, ptr %_24, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %_24, i64 8
  %13 = load i64, ptr %12, align 8, !noundef !3
  store ptr %11, ptr %_23, align 8
  %14 = getelementptr inbounds i8, ptr %_23, i64 8
  store i64 %13, ptr %14, align 8
  %self.04 = load ptr, ptr %_23, align 8, !noundef !3
  %15 = getelementptr inbounds i8, ptr %_23, i64 8
  %self.15 = load i64, ptr %15, align 8, !noundef !3
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %_0 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17hf2d9586e25ea8362E"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %self.04, i64 %self.15)
  ret i1 %_0
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h13fecb78cd1b9de4E"(ptr sret(%"alloc::vec::Vec<u8>") align 8 %_0) unnamed_addr #0 {
start:
  store i64 0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %0, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h14e2cbe069ce13f7E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0) unnamed_addr #0 {
start:
  store i64 0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 8 to ptr), ptr %0, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h5e1fa6f7e512871cE"(ptr sret(%"alloc::vec::Vec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>") align 8 %_0) unnamed_addr #0 {
start:
  store i64 0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 8 to ptr), ptr %0, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h868cdec37d7a5d1cE"(ptr sret(%"alloc::vec::Vec<std::ffi::os_str::OsString>") align 8 %_0) unnamed_addr #0 {
start:
  store i64 0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 8 to ptr), ptr %0, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<std::ffi::os_str::OsString>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h930ab69328028b1dE"(ptr sret(%"alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>") align 8 %_0) unnamed_addr #0 {
start:
  store i64 0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 8 to ptr), ptr %0, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17ha4159766d030dcfaE"(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0) unnamed_addr #0 {
start:
  store i64 0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 8 to ptr), ptr %0, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  ret void
}

; alloc::vec::Vec<T>::new
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hd1a6c09920f5cb95E"(ptr sret(%"alloc::vec::Vec<std::path::PathBuf>") align 8 %_0) unnamed_addr #0 {
start:
  store i64 0, ptr %_0, align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr inttoptr (i64 8 to ptr), ptr %0, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<std::path::PathBuf>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  ret void
}

; alloc::vec::in_place_drop::InPlaceDrop<T>::len
; Function Attrs: nonlazybind uwtable
define i64 @"_ZN5alloc3vec13in_place_drop20InPlaceDrop$LT$T$GT$3len17h706e86b2957421c8E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = alloca i64, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %1, align 8, !noundef !3
  %_4 = load ptr, ptr %self, align 8, !noundef !3
  br i1 true, label %bb2, label %bb4

bb4:                                              ; preds = %bb2, %start
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_768f4da2d83915fa9ce0d03164202475) #27
  unreachable

bb2:                                              ; preds = %start
  br i1 true, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %2 = ptrtoint ptr %self1 to i64
  %3 = ptrtoint ptr %_4 to i64
  %4 = sub nuw i64 %2, %3
  %5 = udiv exact i64 %4, 24
  store i64 %5, ptr %0, align 8
  %_0 = load i64, ptr %0, align 8, !noundef !3
  ret i64 %_0
}

; alloc::vec::Vec<T,A>::extend_trusted
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted17h21cc5af85e765449E"(ptr align 8 %self, ptr %0, ptr %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_31 = alloca %"core::fmt::Arguments<'_>", align 8
  %_22 = alloca i8, align 1
  %_20 = alloca %"core::fmt::Arguments<'_>", align 8
  %_18 = alloca %"{closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}", align 8
  %local_len = alloca %"alloc::vec::set_len_on_drop::SetLenOnDrop<'_>", align 8
  %_5 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %high = alloca %"core::option::Option<usize>", align 8
  %iterator = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>", align 8
  store ptr %0, ptr %iterator, align 8
  %3 = getelementptr inbounds i8, ptr %iterator, i64 8
  store ptr %1, ptr %3, align 8
  store i8 1, ptr %_22, align 1
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h413554d820527bb2E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_5, ptr align 8 %iterator)
          to label %bb1 unwind label %cleanup

bb8:                                              ; preds = %cleanup
  %4 = load i8, ptr %_22, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb7, label %bb6

cleanup:                                          ; preds = %bb10, %bb9, %bb11, %bb3, %bb2, %start
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %2, align 8
  %9 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %low = load i64, ptr %_5, align 8, !noundef !3
  %10 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_5, i32 0, i32 1
  %11 = load i64, ptr %10, align 8, !range !9, !noundef !3
  %12 = getelementptr inbounds i8, ptr %10, i64 8
  %13 = load i64, ptr %12, align 8
  store i64 %11, ptr %high, align 8
  %14 = getelementptr inbounds i8, ptr %high, i64 8
  store i64 %13, ptr %14, align 8
  %_7 = load i64, ptr %high, align 8, !range !9, !noundef !3
  %15 = icmp eq i64 %_7, 1
  br i1 %15, label %bb2, label %bb5

bb2:                                              ; preds = %bb1
  %16 = getelementptr inbounds i8, ptr %high, i64 8
  %additional = load i64, ptr %16, align 8, !noundef !3
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h5ecb5a99fdcd2696E"(ptr align 8 %self, i64 %additional)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %bb1
  br i1 false, label %bb9, label %bb11

bb3:                                              ; preds = %bb2
  %17 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %17, align 8, !nonnull !3, !noundef !3
  %len = getelementptr inbounds %"alloc::vec::Vec<std::ffi::os_str::OsString>", ptr %self, i32 0, i32 1
  %_27 = load i64, ptr %len, align 8, !noundef !3
  store ptr %len, ptr %local_len, align 8
  %18 = getelementptr inbounds i8, ptr %local_len, i64 8
  store i64 %_27, ptr %18, align 8
  store i8 0, ptr %_22, align 1
  %_17.0 = load ptr, ptr %iterator, align 8, !nonnull !3, !noundef !3
  %19 = getelementptr inbounds i8, ptr %iterator, i64 8
  %_17.1 = load ptr, ptr %19, align 8, !noundef !3
  %20 = getelementptr inbounds %"{closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}", ptr %_18, i32 0, i32 1
  store ptr %self1, ptr %20, align 8
  %21 = load ptr, ptr %local_len, align 8, !nonnull !3, !align !5, !noundef !3
  %22 = getelementptr inbounds i8, ptr %local_len, i64 8
  %23 = load i64, ptr %22, align 8, !noundef !3
  store ptr %21, ptr %_18, align 8
  %24 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %23, ptr %24, align 8
; invoke core::iter::traits::iterator::Iterator::for_each
  invoke void @_ZN4core4iter6traits8iterator8Iterator8for_each17h5f4b02a9121871a2E(ptr %_17.0, ptr %_17.1, ptr align 8 %_18)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb11:                                             ; preds = %bb5
  store ptr @alloc_e760b8a82485eab475ddc4c0d696a7ac, ptr %_20, align 8
  %25 = getelementptr inbounds i8, ptr %_20, i64 8
  store i64 1, ptr %25, align 8
  %26 = load ptr, ptr @1, align 8, !align !5, !noundef !3
  %27 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %28 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_20, i32 0, i32 2
  store ptr %26, ptr %28, align 8
  %29 = getelementptr inbounds i8, ptr %28, i64 8
  store i64 %27, ptr %29, align 8
  %30 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_20, i32 0, i32 1
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %30, align 8
  %31 = getelementptr inbounds i8, ptr %30, i64 8
  store i64 0, ptr %31, align 8
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_20, ptr align 8 @alloc_6c484125f16456a018e814f86cfd3331) #27
          to label %unreachable unwind label %cleanup

bb9:                                              ; preds = %bb5
; invoke core::fmt::Arguments::new_const
  invoke void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_31, ptr align 8 @alloc_af99043bc04c419363a7f04d23183506, i64 1)
          to label %bb10 unwind label %cleanup

unreachable:                                      ; preds = %bb10, %bb11
  unreachable

bb10:                                             ; preds = %bb9
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_31, ptr align 8 @alloc_b1c9b46fd6543b9e0f93a51d745efa2a) #27
          to label %unreachable unwind label %cleanup

bb6:                                              ; preds = %bb7, %bb8
  %32 = load ptr, ptr %2, align 8, !noundef !3
  %33 = getelementptr inbounds i8, ptr %2, i64 8
  %34 = load i32, ptr %33, align 8, !noundef !3
  %35 = insertvalue { ptr, i32 } poison, ptr %32, 0
  %36 = insertvalue { ptr, i32 } %35, i32 %34, 1
  resume { ptr, i32 } %36

bb7:                                              ; preds = %bb8
  br label %bb6
}

; alloc::vec::Vec<T,A>::extend_trusted
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted17h511ba7731480d3a0E"(ptr align 8 %self, ptr align 8 %iterator) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_31 = alloca %"core::fmt::Arguments<'_>", align 8
  %_22 = alloca i8, align 1
  %_20 = alloca %"core::fmt::Arguments<'_>", align 8
  %_18 = alloca %"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>>::{closure#0}}", align 8
  %_17 = alloca %"core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>", align 8
  %local_len = alloca %"alloc::vec::set_len_on_drop::SetLenOnDrop<'_>", align 8
  %_5 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %high = alloca %"core::option::Option<usize>", align 8
  store i8 1, ptr %_22, align 1
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h18471fb3af8f3228E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_5, ptr align 8 %iterator)
          to label %bb1 unwind label %cleanup

bb8:                                              ; preds = %cleanup
  %1 = load i8, ptr %_22, align 1, !range !10, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb7, label %bb6

cleanup:                                          ; preds = %bb10, %bb9, %bb11, %bb3, %bb2, %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %low = load i64, ptr %_5, align 8, !noundef !3
  %7 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_5, i32 0, i32 1
  %8 = load i64, ptr %7, align 8, !range !9, !noundef !3
  %9 = getelementptr inbounds i8, ptr %7, i64 8
  %10 = load i64, ptr %9, align 8
  store i64 %8, ptr %high, align 8
  %11 = getelementptr inbounds i8, ptr %high, i64 8
  store i64 %10, ptr %11, align 8
  %_7 = load i64, ptr %high, align 8, !range !9, !noundef !3
  %12 = icmp eq i64 %_7, 1
  br i1 %12, label %bb2, label %bb5

bb2:                                              ; preds = %bb1
  %13 = getelementptr inbounds i8, ptr %high, i64 8
  %additional = load i64, ptr %13, align 8, !noundef !3
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h89fc6bbcbf68b188E"(ptr align 8 %self, i64 %additional)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %bb1
  br i1 false, label %bb9, label %bb11

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %14, align 8, !nonnull !3, !noundef !3
  %len = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %self, i32 0, i32 1
  %_27 = load i64, ptr %len, align 8, !noundef !3
  store ptr %len, ptr %local_len, align 8
  %15 = getelementptr inbounds i8, ptr %local_len, i64 8
  store i64 %_27, ptr %15, align 8
  store i8 0, ptr %_22, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_17, ptr align 8 %iterator, i64 32, i1 false)
  %16 = getelementptr inbounds %"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>>::{closure#0}}", ptr %_18, i32 0, i32 1
  store ptr %self1, ptr %16, align 8
  %17 = load ptr, ptr %local_len, align 8, !nonnull !3, !align !5, !noundef !3
  %18 = getelementptr inbounds i8, ptr %local_len, i64 8
  %19 = load i64, ptr %18, align 8, !noundef !3
  store ptr %17, ptr %_18, align 8
  %20 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %19, ptr %20, align 8
; invoke core::iter::traits::iterator::Iterator::for_each
  invoke void @_ZN4core4iter6traits8iterator8Iterator8for_each17h703528618cf53600E(ptr align 8 %_17, ptr align 8 %_18)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb11:                                             ; preds = %bb5
  store ptr @alloc_e760b8a82485eab475ddc4c0d696a7ac, ptr %_20, align 8
  %21 = getelementptr inbounds i8, ptr %_20, i64 8
  store i64 1, ptr %21, align 8
  %22 = load ptr, ptr @1, align 8, !align !5, !noundef !3
  %23 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %24 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_20, i32 0, i32 2
  store ptr %22, ptr %24, align 8
  %25 = getelementptr inbounds i8, ptr %24, i64 8
  store i64 %23, ptr %25, align 8
  %26 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_20, i32 0, i32 1
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %26, align 8
  %27 = getelementptr inbounds i8, ptr %26, i64 8
  store i64 0, ptr %27, align 8
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_20, ptr align 8 @alloc_6c484125f16456a018e814f86cfd3331) #27
          to label %unreachable unwind label %cleanup

bb9:                                              ; preds = %bb5
; invoke core::fmt::Arguments::new_const
  invoke void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_31, ptr align 8 @alloc_af99043bc04c419363a7f04d23183506, i64 1)
          to label %bb10 unwind label %cleanup

unreachable:                                      ; preds = %bb10, %bb11
  unreachable

bb10:                                             ; preds = %bb9
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_31, ptr align 8 @alloc_b1c9b46fd6543b9e0f93a51d745efa2a) #27
          to label %unreachable unwind label %cleanup

bb6:                                              ; preds = %bb7, %bb8
  %28 = load ptr, ptr %0, align 8, !noundef !3
  %29 = getelementptr inbounds i8, ptr %0, i64 8
  %30 = load i32, ptr %29, align 8, !noundef !3
  %31 = insertvalue { ptr, i32 } poison, ptr %28, 0
  %32 = insertvalue { ptr, i32 } %31, i32 %30, 1
  resume { ptr, i32 } %32

bb7:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>,<alloc::string::String as core::convert::From<&str>>::from>>
  invoke void @"_ZN4core3ptr189drop_in_place$LT$core..iter..adapters..map..Map$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$GT$$GT$17hccf534f681aec439E"(ptr align 8 %iterator) #28
          to label %bb6 unwind label %terminate

terminate:                                        ; preds = %bb7
  %33 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %34 = extractvalue { ptr, i32 } %33, 0
  %35 = extractvalue { ptr, i32 } %33, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable
}

; alloc::vec::Vec<T,A>::extend_trusted
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted17ha046b2547886790cE"(ptr align 8 %self, ptr %0, ptr %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_31 = alloca %"core::fmt::Arguments<'_>", align 8
  %_22 = alloca i8, align 1
  %_20 = alloca %"core::fmt::Arguments<'_>", align 8
  %_18 = alloca %"{closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}", align 8
  %local_len = alloca %"alloc::vec::set_len_on_drop::SetLenOnDrop<'_>", align 8
  %_5 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %high = alloca %"core::option::Option<usize>", align 8
  %iterator = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>", align 8
  store ptr %0, ptr %iterator, align 8
  %3 = getelementptr inbounds i8, ptr %iterator, i64 8
  store ptr %1, ptr %3, align 8
  store i8 1, ptr %_22, align 1
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17he3b636c6b6126008E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_5, ptr align 8 %iterator)
          to label %bb1 unwind label %cleanup

bb8:                                              ; preds = %cleanup
  %4 = load i8, ptr %_22, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb7, label %bb6

cleanup:                                          ; preds = %bb10, %bb9, %bb11, %bb3, %bb2, %start
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %2, align 8
  %9 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %low = load i64, ptr %_5, align 8, !noundef !3
  %10 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_5, i32 0, i32 1
  %11 = load i64, ptr %10, align 8, !range !9, !noundef !3
  %12 = getelementptr inbounds i8, ptr %10, i64 8
  %13 = load i64, ptr %12, align 8
  store i64 %11, ptr %high, align 8
  %14 = getelementptr inbounds i8, ptr %high, i64 8
  store i64 %13, ptr %14, align 8
  %_7 = load i64, ptr %high, align 8, !range !9, !noundef !3
  %15 = icmp eq i64 %_7, 1
  br i1 %15, label %bb2, label %bb5

bb2:                                              ; preds = %bb1
  %16 = getelementptr inbounds i8, ptr %high, i64 8
  %additional = load i64, ptr %16, align 8, !noundef !3
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h5ecb5a99fdcd2696E"(ptr align 8 %self, i64 %additional)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %bb1
  br i1 false, label %bb9, label %bb11

bb3:                                              ; preds = %bb2
  %17 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %17, align 8, !nonnull !3, !noundef !3
  %len = getelementptr inbounds %"alloc::vec::Vec<std::ffi::os_str::OsString>", ptr %self, i32 0, i32 1
  %_27 = load i64, ptr %len, align 8, !noundef !3
  store ptr %len, ptr %local_len, align 8
  %18 = getelementptr inbounds i8, ptr %local_len, i64 8
  store i64 %_27, ptr %18, align 8
  store i8 0, ptr %_22, align 1
  %_17.0 = load ptr, ptr %iterator, align 8, !nonnull !3, !noundef !3
  %19 = getelementptr inbounds i8, ptr %iterator, i64 8
  %_17.1 = load ptr, ptr %19, align 8, !noundef !3
  %20 = getelementptr inbounds %"{closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}", ptr %_18, i32 0, i32 1
  store ptr %self1, ptr %20, align 8
  %21 = load ptr, ptr %local_len, align 8, !nonnull !3, !align !5, !noundef !3
  %22 = getelementptr inbounds i8, ptr %local_len, i64 8
  %23 = load i64, ptr %22, align 8, !noundef !3
  store ptr %21, ptr %_18, align 8
  %24 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %23, ptr %24, align 8
; invoke core::iter::traits::iterator::Iterator::for_each
  invoke void @_ZN4core4iter6traits8iterator8Iterator8for_each17h2e6d558b066195b3E(ptr %_17.0, ptr %_17.1, ptr align 8 %_18)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb11:                                             ; preds = %bb5
  store ptr @alloc_e760b8a82485eab475ddc4c0d696a7ac, ptr %_20, align 8
  %25 = getelementptr inbounds i8, ptr %_20, i64 8
  store i64 1, ptr %25, align 8
  %26 = load ptr, ptr @1, align 8, !align !5, !noundef !3
  %27 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %28 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_20, i32 0, i32 2
  store ptr %26, ptr %28, align 8
  %29 = getelementptr inbounds i8, ptr %28, i64 8
  store i64 %27, ptr %29, align 8
  %30 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_20, i32 0, i32 1
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %30, align 8
  %31 = getelementptr inbounds i8, ptr %30, i64 8
  store i64 0, ptr %31, align 8
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_20, ptr align 8 @alloc_6c484125f16456a018e814f86cfd3331) #27
          to label %unreachable unwind label %cleanup

bb9:                                              ; preds = %bb5
; invoke core::fmt::Arguments::new_const
  invoke void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_31, ptr align 8 @alloc_af99043bc04c419363a7f04d23183506, i64 1)
          to label %bb10 unwind label %cleanup

unreachable:                                      ; preds = %bb10, %bb11
  unreachable

bb10:                                             ; preds = %bb9
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_31, ptr align 8 @alloc_b1c9b46fd6543b9e0f93a51d745efa2a) #27
          to label %unreachable unwind label %cleanup

bb6:                                              ; preds = %bb7, %bb8
  %32 = load ptr, ptr %2, align 8, !noundef !3
  %33 = getelementptr inbounds i8, ptr %2, i64 8
  %34 = load i32, ptr %33, align 8, !noundef !3
  %35 = insertvalue { ptr, i32 } poison, ptr %32, 0
  %36 = insertvalue { ptr, i32 } %35, i32 %34, 1
  resume { ptr, i32 } %36

bb7:                                              ; preds = %bb8
  br label %bb6
}

; alloc::vec::Vec<T,A>::extend_trusted
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted17hbc18df39680fd4a5E"(ptr align 8 %self, ptr %0, ptr %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_31 = alloca %"core::fmt::Arguments<'_>", align 8
  %_22 = alloca i8, align 1
  %_20 = alloca %"core::fmt::Arguments<'_>", align 8
  %_18 = alloca %"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>>::{closure#0}}", align 8
  %local_len = alloca %"alloc::vec::set_len_on_drop::SetLenOnDrop<'_>", align 8
  %_5 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %high = alloca %"core::option::Option<usize>", align 8
  %iterator = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>", align 8
  store ptr %0, ptr %iterator, align 8
  %3 = getelementptr inbounds i8, ptr %iterator, i64 8
  store ptr %1, ptr %3, align 8
  store i8 1, ptr %_22, align 1
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h4131b44401768a3aE"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_5, ptr align 8 %iterator)
          to label %bb1 unwind label %cleanup

bb8:                                              ; preds = %cleanup
  %4 = load i8, ptr %_22, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb7, label %bb6

cleanup:                                          ; preds = %bb10, %bb9, %bb11, %bb3, %bb2, %start
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %2, align 8
  %9 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %low = load i64, ptr %_5, align 8, !noundef !3
  %10 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_5, i32 0, i32 1
  %11 = load i64, ptr %10, align 8, !range !9, !noundef !3
  %12 = getelementptr inbounds i8, ptr %10, i64 8
  %13 = load i64, ptr %12, align 8
  store i64 %11, ptr %high, align 8
  %14 = getelementptr inbounds i8, ptr %high, i64 8
  store i64 %13, ptr %14, align 8
  %_7 = load i64, ptr %high, align 8, !range !9, !noundef !3
  %15 = icmp eq i64 %_7, 1
  br i1 %15, label %bb2, label %bb5

bb2:                                              ; preds = %bb1
  %16 = getelementptr inbounds i8, ptr %high, i64 8
  %additional = load i64, ptr %16, align 8, !noundef !3
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h89fc6bbcbf68b188E"(ptr align 8 %self, i64 %additional)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %bb1
  br i1 false, label %bb9, label %bb11

bb3:                                              ; preds = %bb2
  %17 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %17, align 8, !nonnull !3, !noundef !3
  %len = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %self, i32 0, i32 1
  %_27 = load i64, ptr %len, align 8, !noundef !3
  store ptr %len, ptr %local_len, align 8
  %18 = getelementptr inbounds i8, ptr %local_len, i64 8
  store i64 %_27, ptr %18, align 8
  store i8 0, ptr %_22, align 1
  %_17.0 = load ptr, ptr %iterator, align 8, !nonnull !3, !noundef !3
  %19 = getelementptr inbounds i8, ptr %iterator, i64 8
  %_17.1 = load ptr, ptr %19, align 8, !noundef !3
  %20 = getelementptr inbounds %"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>>::{closure#0}}", ptr %_18, i32 0, i32 1
  store ptr %self1, ptr %20, align 8
  %21 = load ptr, ptr %local_len, align 8, !nonnull !3, !align !5, !noundef !3
  %22 = getelementptr inbounds i8, ptr %local_len, i64 8
  %23 = load i64, ptr %22, align 8, !noundef !3
  store ptr %21, ptr %_18, align 8
  %24 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %23, ptr %24, align 8
; invoke core::iter::traits::iterator::Iterator::for_each
  invoke void @_ZN4core4iter6traits8iterator8Iterator8for_each17h900cf0b3f8edd3eeE(ptr %_17.0, ptr %_17.1, ptr align 8 %_18)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb11:                                             ; preds = %bb5
  store ptr @alloc_e760b8a82485eab475ddc4c0d696a7ac, ptr %_20, align 8
  %25 = getelementptr inbounds i8, ptr %_20, i64 8
  store i64 1, ptr %25, align 8
  %26 = load ptr, ptr @1, align 8, !align !5, !noundef !3
  %27 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %28 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_20, i32 0, i32 2
  store ptr %26, ptr %28, align 8
  %29 = getelementptr inbounds i8, ptr %28, i64 8
  store i64 %27, ptr %29, align 8
  %30 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_20, i32 0, i32 1
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %30, align 8
  %31 = getelementptr inbounds i8, ptr %30, i64 8
  store i64 0, ptr %31, align 8
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_20, ptr align 8 @alloc_6c484125f16456a018e814f86cfd3331) #27
          to label %unreachable unwind label %cleanup

bb9:                                              ; preds = %bb5
; invoke core::fmt::Arguments::new_const
  invoke void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_31, ptr align 8 @alloc_af99043bc04c419363a7f04d23183506, i64 1)
          to label %bb10 unwind label %cleanup

unreachable:                                      ; preds = %bb10, %bb11
  unreachable

bb10:                                             ; preds = %bb9
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_31, ptr align 8 @alloc_b1c9b46fd6543b9e0f93a51d745efa2a) #27
          to label %unreachable unwind label %cleanup

bb6:                                              ; preds = %bb7, %bb8
  %32 = load ptr, ptr %2, align 8, !noundef !3
  %33 = getelementptr inbounds i8, ptr %2, i64 8
  %34 = load i32, ptr %33, align 8, !noundef !3
  %35 = insertvalue { ptr, i32 } poison, ptr %32, 0
  %36 = insertvalue { ptr, i32 } %35, i32 %34, 1
  resume { ptr, i32 } %36

bb7:                                              ; preds = %bb8
  br label %bb6
}

; alloc::vec::Vec<T,A>::extend_trusted
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted17he737cf463ceaec9bE"(ptr align 8 %self, ptr %0, ptr %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_31 = alloca %"core::fmt::Arguments<'_>", align 8
  %_22 = alloca i8, align 1
  %_20 = alloca %"core::fmt::Arguments<'_>", align 8
  %_18 = alloca %"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>>::{closure#0}}", align 8
  %local_len = alloca %"alloc::vec::set_len_on_drop::SetLenOnDrop<'_>", align 8
  %_5 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %high = alloca %"core::option::Option<usize>", align 8
  %iterator = alloca %"core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>", align 8
  store ptr %0, ptr %iterator, align 8
  %3 = getelementptr inbounds i8, ptr %iterator, i64 8
  store ptr %1, ptr %3, align 8
  store i8 1, ptr %_22, align 1
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17he525641c427ddb50E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_5, ptr align 8 %iterator)
          to label %bb1 unwind label %cleanup

bb8:                                              ; preds = %cleanup
  %4 = load i8, ptr %_22, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  br i1 %5, label %bb7, label %bb6

cleanup:                                          ; preds = %bb10, %bb9, %bb11, %bb3, %bb2, %start
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %2, align 8
  %9 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %low = load i64, ptr %_5, align 8, !noundef !3
  %10 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_5, i32 0, i32 1
  %11 = load i64, ptr %10, align 8, !range !9, !noundef !3
  %12 = getelementptr inbounds i8, ptr %10, i64 8
  %13 = load i64, ptr %12, align 8
  store i64 %11, ptr %high, align 8
  %14 = getelementptr inbounds i8, ptr %high, i64 8
  store i64 %13, ptr %14, align 8
  %_7 = load i64, ptr %high, align 8, !range !9, !noundef !3
  %15 = icmp eq i64 %_7, 1
  br i1 %15, label %bb2, label %bb5

bb2:                                              ; preds = %bb1
  %16 = getelementptr inbounds i8, ptr %high, i64 8
  %additional = load i64, ptr %16, align 8, !noundef !3
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h89fc6bbcbf68b188E"(ptr align 8 %self, i64 %additional)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %bb1
  br i1 false, label %bb9, label %bb11

bb3:                                              ; preds = %bb2
  %17 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %17, align 8, !nonnull !3, !noundef !3
  %len = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %self, i32 0, i32 1
  %_27 = load i64, ptr %len, align 8, !noundef !3
  store ptr %len, ptr %local_len, align 8
  %18 = getelementptr inbounds i8, ptr %local_len, i64 8
  store i64 %_27, ptr %18, align 8
  store i8 0, ptr %_22, align 1
  %_17.0 = load ptr, ptr %iterator, align 8, !nonnull !3, !noundef !3
  %19 = getelementptr inbounds i8, ptr %iterator, i64 8
  %_17.1 = load ptr, ptr %19, align 8, !noundef !3
  %20 = getelementptr inbounds %"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>>::{closure#0}}", ptr %_18, i32 0, i32 1
  store ptr %self1, ptr %20, align 8
  %21 = load ptr, ptr %local_len, align 8, !nonnull !3, !align !5, !noundef !3
  %22 = getelementptr inbounds i8, ptr %local_len, i64 8
  %23 = load i64, ptr %22, align 8, !noundef !3
  store ptr %21, ptr %_18, align 8
  %24 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %23, ptr %24, align 8
; invoke core::iter::traits::iterator::Iterator::for_each
  invoke void @_ZN4core4iter6traits8iterator8Iterator8for_each17h2637e927dded38b1E(ptr %_17.0, ptr %_17.1, ptr align 8 %_18)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  ret void

bb11:                                             ; preds = %bb5
  store ptr @alloc_e760b8a82485eab475ddc4c0d696a7ac, ptr %_20, align 8
  %25 = getelementptr inbounds i8, ptr %_20, i64 8
  store i64 1, ptr %25, align 8
  %26 = load ptr, ptr @1, align 8, !align !5, !noundef !3
  %27 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %28 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_20, i32 0, i32 2
  store ptr %26, ptr %28, align 8
  %29 = getelementptr inbounds i8, ptr %28, i64 8
  store i64 %27, ptr %29, align 8
  %30 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_20, i32 0, i32 1
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %30, align 8
  %31 = getelementptr inbounds i8, ptr %30, i64 8
  store i64 0, ptr %31, align 8
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_20, ptr align 8 @alloc_6c484125f16456a018e814f86cfd3331) #27
          to label %unreachable unwind label %cleanup

bb9:                                              ; preds = %bb5
; invoke core::fmt::Arguments::new_const
  invoke void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_31, ptr align 8 @alloc_af99043bc04c419363a7f04d23183506, i64 1)
          to label %bb10 unwind label %cleanup

unreachable:                                      ; preds = %bb10, %bb11
  unreachable

bb10:                                             ; preds = %bb9
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_31, ptr align 8 @alloc_b1c9b46fd6543b9e0f93a51d745efa2a) #27
          to label %unreachable unwind label %cleanup

bb6:                                              ; preds = %bb7, %bb8
  %32 = load ptr, ptr %2, align 8, !noundef !3
  %33 = getelementptr inbounds i8, ptr %2, i64 8
  %34 = load i32, ptr %33, align 8, !noundef !3
  %35 = insertvalue { ptr, i32 } poison, ptr %32, 0
  %36 = insertvalue { ptr, i32 } %35, i32 %34, 1
  resume { ptr, i32 } %36

bb7:                                              ; preds = %bb8
  br label %bb6
}

; alloc::vec::Vec<T,A>::extend_trusted::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted28_$u7b$$u7b$closure$u7d$$u7d$17h1f23e05e11a50a00E"(ptr align 8 %_1, ptr align 8 %element) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"{closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}", ptr %_1, i32 0, i32 1
  %self = load ptr, ptr %0, align 8, !noundef !3
  %1 = getelementptr inbounds i8, ptr %_1, i64 8
  %count = load i64, ptr %1, align 8, !noundef !3
  %dst = getelementptr inbounds %"std::ffi::os_str::OsString", ptr %self, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %element, i64 24, i1 false)
  %2 = getelementptr inbounds i8, ptr %_1, i64 8
  %3 = getelementptr inbounds i8, ptr %_1, i64 8
  %4 = load i64, ptr %3, align 8, !noundef !3
  %5 = add i64 %4, 1
  store i64 %5, ptr %2, align 8
  ret void
}

; alloc::vec::Vec<T,A>::extend_trusted::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted28_$u7b$$u7b$closure$u7d$$u7d$17h31bb52ffff08d917E"(ptr align 8 %_1, ptr align 8 %element) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"{closure@alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, &str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:201:42: 201:47}>>::{closure#0}}", ptr %_1, i32 0, i32 1
  %self = load ptr, ptr %0, align 8, !noundef !3
  %1 = getelementptr inbounds i8, ptr %_1, i64 8
  %count = load i64, ptr %1, align 8, !noundef !3
  %dst = getelementptr inbounds %"std::ffi::os_str::OsString", ptr %self, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %element, i64 24, i1 false)
  %2 = getelementptr inbounds i8, ptr %_1, i64 8
  %3 = getelementptr inbounds i8, ptr %_1, i64 8
  %4 = load i64, ptr %3, align 8, !noundef !3
  %5 = add i64 %4, 1
  store i64 %5, ptr %2, align 8
  ret void
}

; alloc::vec::Vec<T,A>::extend_trusted::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted28_$u7b$$u7b$closure$u7d$$u7d$17h8a3cfba5c47f70e4E"(ptr align 8 %_1, ptr align 8 %element) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, std::ffi::os_str::OsString>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:251:18: 251:23}>>::{closure#0}}", ptr %_1, i32 0, i32 1
  %self = load ptr, ptr %0, align 8, !noundef !3
  %1 = getelementptr inbounds i8, ptr %_1, i64 8
  %count = load i64, ptr %1, align 8, !noundef !3
  %dst = getelementptr inbounds %"alloc::string::String", ptr %self, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %element, i64 24, i1 false)
  %2 = getelementptr inbounds i8, ptr %_1, i64 8
  %3 = getelementptr inbounds i8, ptr %_1, i64 8
  %4 = load i64, ptr %3, align 8, !noundef !3
  %5 = add i64 %4, 1
  store i64 %5, ptr %2, align 8
  ret void
}

; alloc::vec::Vec<T,A>::extend_trusted::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted28_$u7b$$u7b$closure$u7d$$u7d$17hb2220676ca50560bE"(ptr align 8 %_1, ptr align 8 %element) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>>::{closure#0}}", ptr %_1, i32 0, i32 1
  %self = load ptr, ptr %0, align 8, !noundef !3
  %1 = getelementptr inbounds i8, ptr %_1, i64 8
  %count = load i64, ptr %1, align 8, !noundef !3
  %dst = getelementptr inbounds %"alloc::string::String", ptr %self, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %element, i64 24, i1 false)
  %2 = getelementptr inbounds i8, ptr %_1, i64 8
  %3 = getelementptr inbounds i8, ptr %_1, i64 8
  %4 = load i64, ptr %3, align 8, !noundef !3
  %5 = add i64 %4, 1
  store i64 %5, ptr %2, align 8
  ret void
}

; alloc::vec::Vec<T,A>::extend_trusted::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted28_$u7b$$u7b$closure$u7d$$u7d$17hc217f6865f223163E"(ptr align 8 %_1, ptr align 8 %element) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"{closure@alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:243:18: 243:30}>>::{closure#0}}", ptr %_1, i32 0, i32 1
  %self = load ptr, ptr %0, align 8, !noundef !3
  %1 = getelementptr inbounds i8, ptr %_1, i64 8
  %count = load i64, ptr %1, align 8, !noundef !3
  %dst = getelementptr inbounds %"alloc::string::String", ptr %self, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %element, i64 24, i1 false)
  %2 = getelementptr inbounds i8, ptr %_1, i64 8
  %3 = getelementptr inbounds i8, ptr %_1, i64 8
  %4 = load i64, ptr %3, align 8, !noundef !3
  %5 = add i64 %4, 1
  store i64 %5, ptr %2, align 8
  ret void
}

; alloc::vec::Vec<T,A>::extend_desugared
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17hcb20da7da0c89201E"(ptr align 8 %self, ptr align 8 %iterator) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_11 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %_9 = alloca i64, align 8
  %_3 = alloca %"core::option::Option<&str>", align 8
  br label %bb1

bb1:                                              ; preds = %bb8, %start
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke { ptr, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0568ea1bfd125502E"(ptr align 8 %iterator)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %bb14, %cleanup
  %3 = load ptr, ptr %1, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8, !noundef !3
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %bb1
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
  %12 = extractvalue { ptr, i64 } %2, 0
  %13 = extractvalue { ptr, i64 } %2, 1
  store ptr %12, ptr %_3, align 8
  %14 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %13, ptr %14, align 8
  %15 = load ptr, ptr %_3, align 8, !noundef !3
  %16 = ptrtoint ptr %15 to i64
  %17 = icmp eq i64 %16, 0
  %_5 = select i1 %17, i64 0, i64 1
  %18 = icmp eq i64 %_5, 1
  br i1 %18, label %bb3, label %bb9

bb3:                                              ; preds = %bb2
  %element.0 = load ptr, ptr %_3, align 8, !nonnull !3, !align !4, !noundef !3
  %19 = getelementptr inbounds i8, ptr %_3, i64 8
  %element.1 = load i64, ptr %19, align 8, !noundef !3
  %20 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %20, align 8, !noundef !3
  br i1 false, label %bb15, label %bb16

bb9:                                              ; preds = %bb2
  br label %bb10

bb16:                                             ; preds = %bb3
  %21 = load i64, ptr %self, align 8, !noundef !3
  store i64 %21, ptr %_9, align 8
  br label %bb17

bb15:                                             ; preds = %bb3
  store i64 -1, ptr %_9, align 8
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  %22 = load i64, ptr %_9, align 8, !noundef !3
  %_8 = icmp eq i64 %len, %22
  br i1 %_8, label %bb4, label %bb7

bb7:                                              ; preds = %bb17
  br label %bb8

bb4:                                              ; preds = %bb17
; invoke core::iter::traits::iterator::Iterator::size_hint
  invoke void @_ZN4core4iter6traits8iterator8Iterator9size_hint17h3b653c5f4a3b742bE(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_11, ptr align 8 %iterator)
          to label %bb5 unwind label %cleanup1

bb8:                                              ; preds = %bb6, %bb7
  %23 = getelementptr inbounds i8, ptr %self, i64 8
  %self2 = load ptr, ptr %23, align 8, !nonnull !3, !noundef !3
  %dst = getelementptr inbounds { ptr, i64 }, ptr %self2, i64 %len
  store ptr %element.0, ptr %dst, align 8
  %24 = getelementptr inbounds i8, ptr %dst, i64 8
  store i64 %element.1, ptr %24, align 8
  %new_len = add i64 %len, 1
  %25 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %self, i32 0, i32 1
  store i64 %new_len, ptr %25, align 8
  br label %bb1

bb14:                                             ; preds = %cleanup1
  br label %bb12

cleanup1:                                         ; preds = %bb5, %bb4
  %26 = landingpad { ptr, i32 }
          cleanup
  %27 = extractvalue { ptr, i32 } %26, 0
  %28 = extractvalue { ptr, i32 } %26, 1
  store ptr %27, ptr %1, align 8
  %29 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %28, ptr %29, align 8
  br label %bb14

bb5:                                              ; preds = %bb4
  %lower = load i64, ptr %_11, align 8, !noundef !3
  %30 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1)
  store i64 %30, ptr %0, align 8
  %_14 = load i64, ptr %0, align 8, !noundef !3
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h38f41bdc506cd19fE"(ptr align 8 %self, i64 %_14)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5
  br label %bb8

bb10:                                             ; preds = %bb9
  ret void
}

; alloc::vec::Vec<T,A>::extend_desugared
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17hde698a6e3434e772E"(ptr align 8 %self, ptr align 8 %iterator) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca i64, align 8
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %src = alloca %"alloc::string::String", align 8
  %_11 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %_9 = alloca i64, align 8
  %element = alloca %"alloc::string::String", align 8
  %_3 = alloca %"core::option::Option<alloc::string::String>", align 8
  br label %bb1

bb1:                                              ; preds = %bb8, %start
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h84d118b3160fa533E"(ptr sret(%"core::option::Option<alloc::string::String>") align 8 %_3, ptr align 8 %iterator)
          to label %bb2 unwind label %cleanup

bb12:                                             ; preds = %bb14, %cleanup
  %2 = load ptr, ptr %1, align 8, !noundef !3
  %3 = getelementptr inbounds i8, ptr %1, i64 8
  %4 = load i32, ptr %3, align 8, !noundef !3
  %5 = insertvalue { ptr, i32 } poison, ptr %2, 0
  %6 = insertvalue { ptr, i32 } %5, i32 %4, 1
  resume { ptr, i32 } %6

cleanup:                                          ; preds = %bb9, %bb1
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %1, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb12

bb2:                                              ; preds = %bb1
  %11 = load i64, ptr %_3, align 8, !range !12, !noundef !3
  %12 = icmp eq i64 %11, -9223372036854775808
  %_5 = select i1 %12, i64 0, i64 1
  %13 = icmp eq i64 %_5, 1
  br i1 %13, label %bb3, label %bb9

bb3:                                              ; preds = %bb2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %element, ptr align 8 %_3, i64 24, i1 false)
  %14 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %14, align 8, !noundef !3
  br i1 false, label %bb15, label %bb16

bb9:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h77bf297a2e36d6aaE"(ptr align 8 %_3)
          to label %bb10 unwind label %cleanup

bb16:                                             ; preds = %bb3
  %15 = load i64, ptr %self, align 8, !noundef !3
  store i64 %15, ptr %_9, align 8
  br label %bb17

bb15:                                             ; preds = %bb3
  store i64 -1, ptr %_9, align 8
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  %16 = load i64, ptr %_9, align 8, !noundef !3
  %_8 = icmp eq i64 %len, %16
  br i1 %_8, label %bb4, label %bb7

bb7:                                              ; preds = %bb17
  br label %bb8

bb4:                                              ; preds = %bb17
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h5046771ed6692a17E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_11, ptr align 8 %iterator)
          to label %bb5 unwind label %cleanup1

bb8:                                              ; preds = %bb6, %bb7
  %17 = getelementptr inbounds i8, ptr %self, i64 8
  %self2 = load ptr, ptr %17, align 8, !nonnull !3, !noundef !3
  %dst = getelementptr inbounds %"alloc::string::String", ptr %self2, i64 %len
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %src, ptr align 8 %element, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false)
  %new_len = add i64 %len, 1
  %18 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %self, i32 0, i32 1
  store i64 %new_len, ptr %18, align 8
  br label %bb1

bb14:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %element) #28
          to label %bb12 unwind label %terminate

cleanup1:                                         ; preds = %bb5, %bb4
  %19 = landingpad { ptr, i32 }
          cleanup
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
  store ptr %20, ptr %1, align 8
  %22 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %21, ptr %22, align 8
  br label %bb14

bb5:                                              ; preds = %bb4
  %lower = load i64, ptr %_11, align 8, !noundef !3
  %23 = call i64 @llvm.uadd.sat.i64(i64 %lower, i64 1)
  store i64 %23, ptr %0, align 8
  %_14 = load i64, ptr %0, align 8, !noundef !3
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h89fc6bbcbf68b188E"(ptr align 8 %self, i64 %_14)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5
  br label %bb8

terminate:                                        ; preds = %bb14
  %24 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %25 = extractvalue { ptr, i32 } %24, 0
  %26 = extractvalue { ptr, i32 } %24, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb10:                                             ; preds = %bb9
  ret void
}

; alloc::vec::Vec<T,A>::extend_from_slice
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h102f896cdc9c3e1dE"(ptr align 8 %self, ptr align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
  %_9 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %_3 = alloca %"core::slice::iter::Iter<'_, u8>", align 8
  br i1 false, label %bb2, label %bb3

bb3:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %other.0, i64 %other.1
  store ptr %0, ptr %end_or_len, align 8
  br label %bb4

bb2:                                              ; preds = %start
  %1 = inttoptr i64 %other.1 to ptr
  store ptr %1, ptr %end_or_len, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  store ptr %other.0, ptr %_9, align 8
  %_11 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %2 = load ptr, ptr %_9, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %_3, align 8
  %3 = getelementptr inbounds i8, ptr %_3, i64 8
  store ptr %_11, ptr %3, align 8
  %4 = load ptr, ptr %_3, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_3, i64 8
  %6 = load ptr, ptr %5, align 8, !noundef !3
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend
  call void @"_ZN132_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$$RF$T$C$core..slice..iter..Iter$LT$T$GT$$GT$$GT$11spec_extend17he00e02b866c5e4a3E"(ptr align 8 %self, ptr %4, ptr %6)
  ret void
}

; alloc::vec::Vec<T,A>::spare_capacity_mut
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$18spare_capacity_mut17h8a9bc6067f576ce8E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_17 = alloca %"core::ptr::metadata::PtrComponents<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_16 = alloca %"core::ptr::metadata::PtrRepr<[core::mem::maybe_uninit::MaybeUninit<u8>]>", align 8
  %_7 = alloca i64, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %count = load i64, ptr %1, align 8, !noundef !3
  %_3 = getelementptr inbounds i8, ptr %self1, i64 %count
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %2 = load i64, ptr %self, align 8, !noundef !3
  store i64 %2, ptr %_7, align 8
  br label %bb3

bb1:                                              ; preds = %start
  store i64 -1, ptr %_7, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %_9 = load i64, ptr %3, align 8, !noundef !3
  %4 = load i64, ptr %_7, align 8, !noundef !3
  %len = sub i64 %4, %_9
  store ptr %_3, ptr %_17, align 8
  %5 = getelementptr inbounds i8, ptr %_17, i64 8
  store i64 %len, ptr %5, align 8
  %6 = load ptr, ptr %_17, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_17, i64 8
  %8 = load i64, ptr %7, align 8, !noundef !3
  store ptr %6, ptr %_16, align 8
  %9 = getelementptr inbounds i8, ptr %_16, i64 8
  store i64 %8, ptr %9, align 8
  %_14.0 = load ptr, ptr %_16, align 8, !noundef !3
  %10 = getelementptr inbounds i8, ptr %_16, i64 8
  %_14.1 = load i64, ptr %10, align 8, !noundef !3
  %11 = insertvalue { ptr, i64 } poison, ptr %_14.0, 0
  %12 = insertvalue { ptr, i64 } %11, i64 %_14.1, 1
  ret { ptr, i64 } %12
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h08ef0425e8f0d2b6E"(ptr align 8 %self, ptr align 8 %value) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %src = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %_5 = alloca i64, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>", ptr %self, i32 0, i32 1
  %_4 = load i64, ptr %1, align 8, !noundef !3
  br i1 false, label %bb7, label %bb8

bb8:                                              ; preds = %start
  %2 = load i64, ptr %self, align 8, !noundef !3
  store i64 %2, ptr %_5, align 8
  br label %bb9

bb7:                                              ; preds = %start
  store i64 -1, ptr %_5, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %3 = load i64, ptr %_5, align 8, !noundef !3
  %_3 = icmp eq i64 %_4, %3
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %bb9
  br label %bb4

bb1:                                              ; preds = %bb9
  %4 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>", ptr %self, i32 0, i32 1
  %_9 = load i64, ptr %4, align 8, !noundef !3
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h597772cce7baed73E"(ptr align 8 %self, i64 %_9)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %bb2, %bb3
  %5 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %5, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>", ptr %self, i32 0, i32 1
  %count = load i64, ptr %6, align 8, !noundef !3
  %end = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %self1, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %src, ptr align 8 %value, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %end, ptr align 8 %src, i64 24, i1 false)
  %7 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>", ptr %self, i32 0, i32 1
  %8 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>", ptr %self, i32 0, i32 1
  %9 = load i64, ptr %8, align 8, !noundef !3
  %10 = add i64 %9, 1
  store i64 %10, ptr %7, align 8
  ret void

bb6:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %value) #28
          to label %bb5 unwind label %terminate

cleanup:                                          ; preds = %bb1
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
  store ptr %12, ptr %0, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %13, ptr %14, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  br label %bb4

terminate:                                        ; preds = %bb6
  %15 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb5:                                              ; preds = %bb6
  %18 = load ptr, ptr %0, align 8, !noundef !3
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  %20 = load i32, ptr %19, align 8, !noundef !3
  %21 = insertvalue { ptr, i32 } poison, ptr %18, 0
  %22 = insertvalue { ptr, i32 } %21, i32 %20, 1
  resume { ptr, i32 } %22
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h0fab4a587d1a0e24E"(ptr align 8 %self, i8 %value) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_5 = alloca i64, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %_4 = load i64, ptr %1, align 8, !noundef !3
  br i1 false, label %bb7, label %bb8

bb8:                                              ; preds = %start
  %2 = load i64, ptr %self, align 8, !noundef !3
  store i64 %2, ptr %_5, align 8
  br label %bb9

bb7:                                              ; preds = %start
  store i64 -1, ptr %_5, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %3 = load i64, ptr %_5, align 8, !noundef !3
  %_3 = icmp eq i64 %_4, %3
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %bb9
  br label %bb4

bb1:                                              ; preds = %bb9
  %4 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %_9 = load i64, ptr %4, align 8, !noundef !3
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h68fddcecc208e6a6E"(ptr align 8 %self, i64 %_9)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %bb2, %bb3
  %5 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %5, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %count = load i64, ptr %6, align 8, !noundef !3
  %end = getelementptr inbounds i8, ptr %self1, i64 %count
  store i8 %value, ptr %end, align 1
  %7 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %8 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %9 = load i64, ptr %8, align 8, !noundef !3
  %10 = add i64 %9, 1
  store i64 %10, ptr %7, align 8
  ret void

bb6:                                              ; preds = %cleanup
  %11 = load ptr, ptr %0, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  %13 = load i32, ptr %12, align 8, !noundef !3
  %14 = insertvalue { ptr, i32 } poison, ptr %11, 0
  %15 = insertvalue { ptr, i32 } %14, i32 %13, 1
  resume { ptr, i32 } %15

cleanup:                                          ; preds = %bb1
  %16 = landingpad { ptr, i32 }
          cleanup
  %17 = extractvalue { ptr, i32 } %16, 0
  %18 = extractvalue { ptr, i32 } %16, 1
  store ptr %17, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %18, ptr %19, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  br label %bb4
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h224a56628b492694E"(ptr align 8 %self, ptr align 8 %value) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %src = alloca { %"std::ffi::os_str::OsString", %"std::ffi::os_str::OsString" }, align 8
  %_5 = alloca i64, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>", ptr %self, i32 0, i32 1
  %_4 = load i64, ptr %1, align 8, !noundef !3
  br i1 false, label %bb7, label %bb8

bb8:                                              ; preds = %start
  %2 = load i64, ptr %self, align 8, !noundef !3
  store i64 %2, ptr %_5, align 8
  br label %bb9

bb7:                                              ; preds = %start
  store i64 -1, ptr %_5, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %3 = load i64, ptr %_5, align 8, !noundef !3
  %_3 = icmp eq i64 %_4, %3
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %bb9
  br label %bb4

bb1:                                              ; preds = %bb9
  %4 = getelementptr inbounds %"alloc::vec::Vec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>", ptr %self, i32 0, i32 1
  %_9 = load i64, ptr %4, align 8, !noundef !3
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hb87280f9c06fcb0eE"(ptr align 8 %self, i64 %_9)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %bb2, %bb3
  %5 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %5, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds %"alloc::vec::Vec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>", ptr %self, i32 0, i32 1
  %count = load i64, ptr %6, align 8, !noundef !3
  %end = getelementptr inbounds { %"std::ffi::os_str::OsString", %"std::ffi::os_str::OsString" }, ptr %self1, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %src, ptr align 8 %value, i64 48, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %end, ptr align 8 %src, i64 48, i1 false)
  %7 = getelementptr inbounds %"alloc::vec::Vec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>", ptr %self, i32 0, i32 1
  %8 = getelementptr inbounds %"alloc::vec::Vec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>", ptr %self, i32 0, i32 1
  %9 = load i64, ptr %8, align 8, !noundef !3
  %10 = add i64 %9, 1
  store i64 %10, ptr %7, align 8
  ret void

bb6:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>
  invoke void @"_ZN4core3ptr84drop_in_place$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$17he9f43031334b47aaE"(ptr align 8 %value) #28
          to label %bb5 unwind label %terminate

cleanup:                                          ; preds = %bb1
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
  store ptr %12, ptr %0, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %13, ptr %14, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  br label %bb4

terminate:                                        ; preds = %bb6
  %15 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb5:                                              ; preds = %bb6
  %18 = load ptr, ptr %0, align 8, !noundef !3
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  %20 = load i32, ptr %19, align 8, !noundef !3
  %21 = insertvalue { ptr, i32 } poison, ptr %18, 0
  %22 = insertvalue { ptr, i32 } %21, i32 %20, 1
  resume { ptr, i32 } %22
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h67f941fe3bed3648E"(ptr align 8 %self, ptr align 1 %value.0, i64 %value.1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_5 = alloca i64, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %self, i32 0, i32 1
  %_4 = load i64, ptr %1, align 8, !noundef !3
  br i1 false, label %bb7, label %bb8

bb8:                                              ; preds = %start
  %2 = load i64, ptr %self, align 8, !noundef !3
  store i64 %2, ptr %_5, align 8
  br label %bb9

bb7:                                              ; preds = %start
  store i64 -1, ptr %_5, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %3 = load i64, ptr %_5, align 8, !noundef !3
  %_3 = icmp eq i64 %_4, %3
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %bb9
  br label %bb4

bb1:                                              ; preds = %bb9
  %4 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %self, i32 0, i32 1
  %_9 = load i64, ptr %4, align 8, !noundef !3
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h19d71098d282cb40E"(ptr align 8 %self, i64 %_9)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %bb2, %bb3
  %5 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %5, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %self, i32 0, i32 1
  %count = load i64, ptr %6, align 8, !noundef !3
  %end = getelementptr inbounds { ptr, i64 }, ptr %self1, i64 %count
  store ptr %value.0, ptr %end, align 8
  %7 = getelementptr inbounds i8, ptr %end, i64 8
  store i64 %value.1, ptr %7, align 8
  %8 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %self, i32 0, i32 1
  %9 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %self, i32 0, i32 1
  %10 = load i64, ptr %9, align 8, !noundef !3
  %11 = add i64 %10, 1
  store i64 %11, ptr %8, align 8
  ret void

bb6:                                              ; preds = %cleanup
  %12 = load ptr, ptr %0, align 8, !noundef !3
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  %14 = load i32, ptr %13, align 8, !noundef !3
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1
  resume { ptr, i32 } %16

cleanup:                                          ; preds = %bb1
  %17 = landingpad { ptr, i32 }
          cleanup
  %18 = extractvalue { ptr, i32 } %17, 0
  %19 = extractvalue { ptr, i32 } %17, 1
  store ptr %18, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %19, ptr %20, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  br label %bb4
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h6ef806aed0cb5519E"(ptr align 8 %self, ptr align 8 %value) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %src = alloca %"std::ffi::os_str::OsString", align 8
  %_5 = alloca i64, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<std::ffi::os_str::OsString>", ptr %self, i32 0, i32 1
  %_4 = load i64, ptr %1, align 8, !noundef !3
  br i1 false, label %bb7, label %bb8

bb8:                                              ; preds = %start
  %2 = load i64, ptr %self, align 8, !noundef !3
  store i64 %2, ptr %_5, align 8
  br label %bb9

bb7:                                              ; preds = %start
  store i64 -1, ptr %_5, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %3 = load i64, ptr %_5, align 8, !noundef !3
  %_3 = icmp eq i64 %_4, %3
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %bb9
  br label %bb4

bb1:                                              ; preds = %bb9
  %4 = getelementptr inbounds %"alloc::vec::Vec<std::ffi::os_str::OsString>", ptr %self, i32 0, i32 1
  %_9 = load i64, ptr %4, align 8, !noundef !3
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h6edfce10a71b4c66E"(ptr align 8 %self, i64 %_9)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %bb2, %bb3
  %5 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %5, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds %"alloc::vec::Vec<std::ffi::os_str::OsString>", ptr %self, i32 0, i32 1
  %count = load i64, ptr %6, align 8, !noundef !3
  %end = getelementptr inbounds %"std::ffi::os_str::OsString", ptr %self1, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %src, ptr align 8 %value, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %end, ptr align 8 %src, i64 24, i1 false)
  %7 = getelementptr inbounds %"alloc::vec::Vec<std::ffi::os_str::OsString>", ptr %self, i32 0, i32 1
  %8 = getelementptr inbounds %"alloc::vec::Vec<std::ffi::os_str::OsString>", ptr %self, i32 0, i32 1
  %9 = load i64, ptr %8, align 8, !noundef !3
  %10 = add i64 %9, 1
  store i64 %10, ptr %7, align 8
  ret void

bb6:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %value) #28
          to label %bb5 unwind label %terminate

cleanup:                                          ; preds = %bb1
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
  store ptr %12, ptr %0, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %13, ptr %14, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  br label %bb4

terminate:                                        ; preds = %bb6
  %15 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb5:                                              ; preds = %bb6
  %18 = load ptr, ptr %0, align 8, !noundef !3
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  %20 = load i32, ptr %19, align 8, !noundef !3
  %21 = insertvalue { ptr, i32 } poison, ptr %18, 0
  %22 = insertvalue { ptr, i32 } %21, i32 %20, 1
  resume { ptr, i32 } %22
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h8a7b231363c15384E"(ptr align 8 %self, ptr align 8 %value) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %src = alloca %"alloc::string::String", align 8
  %_5 = alloca i64, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %self, i32 0, i32 1
  %_4 = load i64, ptr %1, align 8, !noundef !3
  br i1 false, label %bb7, label %bb8

bb8:                                              ; preds = %start
  %2 = load i64, ptr %self, align 8, !noundef !3
  store i64 %2, ptr %_5, align 8
  br label %bb9

bb7:                                              ; preds = %start
  store i64 -1, ptr %_5, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %3 = load i64, ptr %_5, align 8, !noundef !3
  %_3 = icmp eq i64 %_4, %3
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %bb9
  br label %bb4

bb1:                                              ; preds = %bb9
  %4 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %self, i32 0, i32 1
  %_9 = load i64, ptr %4, align 8, !noundef !3
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h6b3f0f184c2efc07E"(ptr align 8 %self, i64 %_9)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %bb2, %bb3
  %5 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %5, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %self, i32 0, i32 1
  %count = load i64, ptr %6, align 8, !noundef !3
  %end = getelementptr inbounds %"alloc::string::String", ptr %self1, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %src, ptr align 8 %value, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %end, ptr align 8 %src, i64 24, i1 false)
  %7 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %self, i32 0, i32 1
  %8 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %self, i32 0, i32 1
  %9 = load i64, ptr %8, align 8, !noundef !3
  %10 = add i64 %9, 1
  store i64 %10, ptr %7, align 8
  ret void

bb6:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %value) #28
          to label %bb5 unwind label %terminate

cleanup:                                          ; preds = %bb1
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
  store ptr %12, ptr %0, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %13, ptr %14, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  br label %bb4

terminate:                                        ; preds = %bb6
  %15 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb5:                                              ; preds = %bb6
  %18 = load ptr, ptr %0, align 8, !noundef !3
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  %20 = load i32, ptr %19, align 8, !noundef !3
  %21 = insertvalue { ptr, i32 } poison, ptr %18, 0
  %22 = insertvalue { ptr, i32 } %21, i32 %20, 1
  resume { ptr, i32 } %22
}

; alloc::vec::Vec<T,A>::push
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hf03bc2b7898a48eeE"(ptr align 8 %self, ptr align 8 %value) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %src = alloca %"std::path::PathBuf", align 8
  %_5 = alloca i64, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<std::path::PathBuf>", ptr %self, i32 0, i32 1
  %_4 = load i64, ptr %1, align 8, !noundef !3
  br i1 false, label %bb7, label %bb8

bb8:                                              ; preds = %start
  %2 = load i64, ptr %self, align 8, !noundef !3
  store i64 %2, ptr %_5, align 8
  br label %bb9

bb7:                                              ; preds = %start
  store i64 -1, ptr %_5, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %3 = load i64, ptr %_5, align 8, !noundef !3
  %_3 = icmp eq i64 %_4, %3
  br i1 %_3, label %bb1, label %bb3

bb3:                                              ; preds = %bb9
  br label %bb4

bb1:                                              ; preds = %bb9
  %4 = getelementptr inbounds %"alloc::vec::Vec<std::path::PathBuf>", ptr %self, i32 0, i32 1
  %_9 = load i64, ptr %4, align 8, !noundef !3
; invoke alloc::raw_vec::RawVec<T,A>::reserve_for_push
  invoke void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h56fc04168e6c9004E"(ptr align 8 %self, i64 %_9)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %bb2, %bb3
  %5 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %5, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds %"alloc::vec::Vec<std::path::PathBuf>", ptr %self, i32 0, i32 1
  %count = load i64, ptr %6, align 8, !noundef !3
  %end = getelementptr inbounds %"std::path::PathBuf", ptr %self1, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %src, ptr align 8 %value, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %end, ptr align 8 %src, i64 24, i1 false)
  %7 = getelementptr inbounds %"alloc::vec::Vec<std::path::PathBuf>", ptr %self, i32 0, i32 1
  %8 = getelementptr inbounds %"alloc::vec::Vec<std::path::PathBuf>", ptr %self, i32 0, i32 1
  %9 = load i64, ptr %8, align 8, !noundef !3
  %10 = add i64 %9, 1
  store i64 %10, ptr %7, align 8
  ret void

bb6:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::path::PathBuf>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17h3bed19ef85725cb6E"(ptr align 8 %value) #28
          to label %bb5 unwind label %terminate

cleanup:                                          ; preds = %bb1
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
  store ptr %12, ptr %0, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %13, ptr %14, align 8
  br label %bb6

bb2:                                              ; preds = %bb1
  br label %bb4

terminate:                                        ; preds = %bb6
  %15 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb5:                                              ; preds = %bb6
  %18 = load ptr, ptr %0, align 8, !noundef !3
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  %20 = load i32, ptr %19, align 8, !noundef !3
  %21 = insertvalue { ptr, i32 } poison, ptr %18, 0
  %22 = insertvalue { ptr, i32 } %21, i32 %20, 1
  resume { ptr, i32 } %22
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h19c8589e8d2b1e26E"(ptr align 8 %self, i64 %additional) unnamed_addr #1 {
start:
  %self1 = alloca i64, align 8
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %0, align 8, !noundef !3
  br i1 false, label %bb3, label %bb4

bb4:                                              ; preds = %start
  %1 = load i64, ptr %self, align 8, !noundef !3
  store i64 %1, ptr %self1, align 8
  br label %bb5

bb3:                                              ; preds = %start
  store i64 -1, ptr %self1, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %2 = load i64, ptr %self1, align 8, !noundef !3
  %_7 = sub i64 %2, %len
  %_5 = icmp ugt i64 %additional, %_7
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %bb1, %bb5
  ret void

bb1:                                              ; preds = %bb5
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hf33534cacfadddc1E"(ptr align 8 %self, i64 %len, i64 %additional)
  br label %bb2
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h38f41bdc506cd19fE"(ptr align 8 %self, i64 %additional) unnamed_addr #1 {
start:
  %self1 = alloca i64, align 8
  %0 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %0, align 8, !noundef !3
  br i1 false, label %bb3, label %bb4

bb4:                                              ; preds = %start
  %1 = load i64, ptr %self, align 8, !noundef !3
  store i64 %1, ptr %self1, align 8
  br label %bb5

bb3:                                              ; preds = %start
  store i64 -1, ptr %self1, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %2 = load i64, ptr %self1, align 8, !noundef !3
  %_7 = sub i64 %2, %len
  %_5 = icmp ugt i64 %additional, %_7
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %bb1, %bb5
  ret void

bb1:                                              ; preds = %bb5
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hca8d573d9dd55448E"(ptr align 8 %self, i64 %len, i64 %additional)
  br label %bb2
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h5ecb5a99fdcd2696E"(ptr align 8 %self, i64 %additional) unnamed_addr #1 {
start:
  %self1 = alloca i64, align 8
  %0 = getelementptr inbounds %"alloc::vec::Vec<std::ffi::os_str::OsString>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %0, align 8, !noundef !3
  br i1 false, label %bb3, label %bb4

bb4:                                              ; preds = %start
  %1 = load i64, ptr %self, align 8, !noundef !3
  store i64 %1, ptr %self1, align 8
  br label %bb5

bb3:                                              ; preds = %start
  store i64 -1, ptr %self1, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %2 = load i64, ptr %self1, align 8, !noundef !3
  %_7 = sub i64 %2, %len
  %_5 = icmp ugt i64 %additional, %_7
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %bb1, %bb5
  ret void

bb1:                                              ; preds = %bb5
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hed00d02a6a01b0eeE"(ptr align 8 %self, i64 %len, i64 %additional)
  br label %bb2
}

; alloc::vec::Vec<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h89fc6bbcbf68b188E"(ptr align 8 %self, i64 %additional) unnamed_addr #1 {
start:
  %self1 = alloca i64, align 8
  %0 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %0, align 8, !noundef !3
  br i1 false, label %bb3, label %bb4

bb4:                                              ; preds = %start
  %1 = load i64, ptr %self, align 8, !noundef !3
  store i64 %1, ptr %self1, align 8
  br label %bb5

bb3:                                              ; preds = %start
  store i64 -1, ptr %self1, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %2 = load i64, ptr %self1, align 8, !noundef !3
  %_7 = sub i64 %2, %len
  %_5 = icmp ugt i64 %additional, %_7
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %bb1, %bb5
  ret void

bb1:                                              ; preds = %bb5
; call alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h9be82eb53cf79224E"(ptr align 8 %self, i64 %len, i64 %additional)
  br label %bb2
}

; alloc::vec::Vec<T,A>::is_empty
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17h4b5582c2e32aef6bE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %_2 = load i64, ptr %0, align 8, !noundef !3
  %_0 = icmp eq i64 %_2, 0
  ret i1 %_0
}

; alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec16in_place_collect108_$LT$impl$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$u20$for$u20$alloc..vec..Vec$LT$T$GT$$GT$9from_iter17h0ac88415c9c7fffeE"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %iterator) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_91 = alloca ptr, align 8
  %_89 = alloca ptr, align 8
  %cap = alloca i64, align 8
  %_86 = alloca %"alloc::raw_vec::RawVec<alloc::string::String>", align 8
  %_66 = alloca i8, align 1
  %vec = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %_55 = alloca ptr, align 8
  %result = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", align 8
  %new_layout = alloca %"core::alloc::layout::Layout", align 8
  %old_layout = alloca %"core::alloc::layout::Layout", align 8
  %_44 = alloca %"alloc::alloc::Global", align 1
  %dst_guard = alloca %"alloc::vec::in_place_drop::InPlaceDstDataSrcBufDrop<&str, alloc::string::String>", align 8
  %dst_buf = alloca ptr, align 8
  %src_ptr = alloca ptr, align 8
  %_3 = alloca %"core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>", align 8
  store i8 1, ptr %_66, align 1
  br i1 true, label %bb1, label %bb3

bb3:                                              ; preds = %start
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::adapters::SourceIter>::as_inner
  %_7 = invoke align 8 ptr @"_ZN96_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..adapters..SourceIter$GT$8as_inner17ha0b9a40bb87190e8E"(ptr align 8 %iterator)
          to label %bb4 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, ptr %_66, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %iterator, i64 32, i1 false)
; invoke <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
  invoke void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h2a2136c492582566E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %_3)
          to label %bb2 unwind label %cleanup

bb25:                                             ; preds = %bb23, %cleanup
  %1 = load i8, ptr %_66, align 1, !range !10, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb24, label %bb22

cleanup:                                          ; preds = %bb1, %bb8, %bb7, %bb6, %bb4, %bb3
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb25

bb4:                                              ; preds = %bb3
; invoke <alloc::vec::into_iter::IntoIter<T> as alloc::vec::in_place_collect::AsVecIntoIter>::as_into_iter
  %inner = invoke align 8 ptr @"_ZN104_$LT$alloc..vec..into_iter..IntoIter$LT$T$GT$$u20$as$u20$alloc..vec..in_place_collect..AsVecIntoIter$GT$12as_into_iter17h4cc386e3ad2de013E"(ptr align 8 %_7)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  %self = load ptr, ptr %inner, align 8, !nonnull !3, !noundef !3
  %7 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %inner, i32 0, i32 1
  %_11 = load ptr, ptr %7, align 8, !nonnull !3, !noundef !3
  %8 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %inner, i32 0, i32 2
  %src_cap = load i64, ptr %8, align 8, !noundef !3
  %self1 = load ptr, ptr %inner, align 8, !nonnull !3, !noundef !3
  %9 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %inner, i32 0, i32 3
  %_17 = load ptr, ptr %9, align 8, !noundef !3
  %10 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %inner, i32 0, i32 2
  %_20 = load i64, ptr %10, align 8, !noundef !3
  %_19 = mul i64 %_20, 16
  br label %bb6

bb6:                                              ; preds = %bb5
  %dst_cap = udiv i64 %_19, 24
  store ptr %_11, ptr %src_ptr, align 8
  store ptr %self1, ptr %dst_buf, align 8
  %_26 = load ptr, ptr %dst_buf, align 8, !noundef !3
; invoke <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place
  %len = invoke i64 @"_ZN83_$LT$I$u20$as$u20$alloc..vec..in_place_collect..SpecInPlaceCollect$LT$T$C$I$GT$$GT$16collect_in_place17hcc39f85e3c7000e9E"(ptr align 8 %iterator, ptr %_26, ptr %_17)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::adapters::SourceIter>::as_inner
  %_28 = invoke align 8 ptr @"_ZN96_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..adapters..SourceIter$GT$8as_inner17ha0b9a40bb87190e8E"(ptr align 8 %iterator)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke <alloc::vec::into_iter::IntoIter<T> as alloc::vec::in_place_collect::AsVecIntoIter>::as_into_iter
  %src = invoke align 8 ptr @"_ZN104_$LT$alloc..vec..into_iter..IntoIter$LT$T$GT$$u20$as$u20$alloc..vec..in_place_collect..AsVecIntoIter$GT$12as_into_iter17h4cc386e3ad2de013E"(ptr align 8 %_28)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %self2 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %src, i32 0, i32 1
  %11 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %src, i32 0, i32 1
  %self3 = load ptr, ptr %11, align 8, !nonnull !3, !noundef !3
  %self4 = load ptr, ptr %src_ptr, align 8, !nonnull !3, !noundef !3
  %_69 = icmp eq ptr %self3, %self4
  %_33 = xor i1 %_69, true
  br i1 %_33, label %bb10, label %bb11

bb11:                                             ; preds = %bb9
  br label %bb12

bb10:                                             ; preds = %bb9
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %_41 = load ptr, ptr %dst_buf, align 8, !noundef !3
  store ptr %_41, ptr %dst_guard, align 8
  %12 = getelementptr inbounds %"alloc::vec::in_place_drop::InPlaceDstDataSrcBufDrop<&str, alloc::string::String>", ptr %dst_guard, i32 0, i32 1
  store i64 %len, ptr %12, align 8
  %13 = getelementptr inbounds %"alloc::vec::in_place_drop::InPlaceDstDataSrcBufDrop<&str, alloc::string::String>", ptr %dst_guard, i32 0, i32 2
  store i64 %src_cap, ptr %13, align 8
; invoke alloc::vec::into_iter::IntoIter<T,A>::forget_allocation_drop_remaining
  invoke void @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$32forget_allocation_drop_remaining17h5a7492c977e86ce8E"(ptr align 8 %src)
          to label %bb13 unwind label %cleanup5

bb23:                                             ; preds = %cleanup5
; invoke core::ptr::drop_in_place<alloc::vec::in_place_drop::InPlaceDstDataSrcBufDrop<&str,alloc::string::String>>
  invoke void @"_ZN4core3ptr111drop_in_place$LT$alloc..vec..in_place_drop..InPlaceDstDataSrcBufDrop$LT$$RF$str$C$alloc..string..String$GT$$GT$17he6cb8fbd7075c4b6E"(ptr align 8 %dst_guard) #28
          to label %bb25 unwind label %terminate

cleanup5:                                         ; preds = %bb18, %bb15, %bb13, %bb12
  %14 = landingpad { ptr, i32 }
          cleanup
  %15 = extractvalue { ptr, i32 } %14, 0
  %16 = extractvalue { ptr, i32 } %14, 1
  store ptr %15, ptr %0, align 8
  %17 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %16, ptr %17, align 8
  br label %bb23

bb13:                                             ; preds = %bb12
; invoke alloc::vec::in_place_collect::needs_realloc
  %_43 = invoke zeroext i1 @_ZN5alloc3vec16in_place_collect13needs_realloc17h1ff298465e47c35bE(i64 %src_cap, i64 %dst_cap)
          to label %bb14 unwind label %cleanup5

bb14:                                             ; preds = %bb13
  br i1 %_43, label %bb15, label %bb19

bb19:                                             ; preds = %bb14
  br label %bb20

bb15:                                             ; preds = %bb14
  %src_size = mul nuw i64 16, %src_cap
  %18 = getelementptr inbounds i8, ptr %old_layout, i64 8
  store i64 %src_size, ptr %18, align 8
  store i64 8, ptr %old_layout, align 8
  %dst_size = mul nuw i64 24, %dst_cap
  %19 = getelementptr inbounds i8, ptr %new_layout, i64 8
  store i64 %dst_size, ptr %19, align 8
  store i64 8, ptr %new_layout, align 8
  %_57 = load ptr, ptr %dst_buf, align 8, !noundef !3
  store ptr %_57, ptr %_55, align 8
  %20 = load ptr, ptr %_55, align 8, !nonnull !3, !noundef !3
  %21 = load i64, ptr %old_layout, align 8, !range !26, !noundef !3
  %22 = getelementptr inbounds i8, ptr %old_layout, i64 8
  %23 = load i64, ptr %22, align 8, !noundef !3
  %24 = load i64, ptr %new_layout, align 8, !range !26, !noundef !3
  %25 = getelementptr inbounds i8, ptr %new_layout, i64 8
  %26 = load i64, ptr %25, align 8, !noundef !3
; invoke <alloc::alloc::Global as core::alloc::Allocator>::shrink
  %27 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$6shrink17hbc4ae5360ce4053dE"(ptr align 1 %_44, ptr %20, i64 %21, i64 %23, i64 %24, i64 %26)
          to label %bb16 unwind label %cleanup5

bb20:                                             ; preds = %bb17, %bb19
  %t = load ptr, ptr %dst_guard, align 8, !noundef !3
  %28 = getelementptr inbounds %"alloc::vec::in_place_drop::InPlaceDstDataSrcBufDrop<&str, alloc::string::String>", ptr %dst_guard, i32 0, i32 1
  %t6 = load i64, ptr %28, align 8, !noundef !3
  %29 = getelementptr inbounds %"alloc::vec::in_place_drop::InPlaceDstDataSrcBufDrop<&str, alloc::string::String>", ptr %dst_guard, i32 0, i32 2
  %t7 = load i64, ptr %29, align 8, !noundef !3
  %ptr = load ptr, ptr %dst_buf, align 8, !noundef !3
  br i1 false, label %bb26, label %bb27

bb16:                                             ; preds = %bb15
  %30 = extractvalue { ptr, i64 } %27, 0
  %31 = extractvalue { ptr, i64 } %27, 1
  store ptr %30, ptr %result, align 8
  %32 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %31, ptr %32, align 8
  %33 = load ptr, ptr %result, align 8, !noundef !3
  %34 = ptrtoint ptr %33 to i64
  %35 = icmp eq i64 %34, 0
  %_60 = select i1 %35, i64 1, i64 0
  %36 = icmp eq i64 %_60, 0
  br i1 %36, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %reallocated.0 = load ptr, ptr %result, align 8, !nonnull !3, !noundef !3
  %37 = getelementptr inbounds i8, ptr %result, i64 8
  %reallocated.1 = load i64, ptr %37, align 8, !noundef !3
  store ptr %reallocated.0, ptr %dst_buf, align 8
  br label %bb20

bb18:                                             ; preds = %bb16
  %38 = load i64, ptr %new_layout, align 8, !range !26, !noundef !3
  %39 = getelementptr inbounds i8, ptr %new_layout, i64 8
  %40 = load i64, ptr %39, align 8, !noundef !3
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h48039cdfd0d60c1cE(i64 %38, i64 %40) #27
          to label %unreachable unwind label %cleanup5

bb27:                                             ; preds = %bb20
  store i64 %dst_cap, ptr %cap, align 8
  br label %bb28

bb26:                                             ; preds = %bb20
  store i64 0, ptr %cap, align 8
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  store ptr %ptr, ptr %_91, align 8
  %41 = load ptr, ptr %_91, align 8, !nonnull !3, !noundef !3
  store ptr %41, ptr %_89, align 8
  %_90 = load i64, ptr %cap, align 8, !range !13, !noundef !3
  %42 = load ptr, ptr %_89, align 8, !nonnull !3, !noundef !3
  %43 = getelementptr inbounds i8, ptr %_86, i64 8
  store ptr %42, ptr %43, align 8
  store i64 %_90, ptr %_86, align 8
  %44 = load i64, ptr %_86, align 8, !range !13, !noundef !3
  %45 = getelementptr inbounds i8, ptr %_86, i64 8
  %46 = load ptr, ptr %45, align 8, !nonnull !3, !noundef !3
  store i64 %44, ptr %vec, align 8
  %47 = getelementptr inbounds i8, ptr %vec, i64 8
  store ptr %46, ptr %47, align 8
  %48 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %vec, i32 0, i32 1
  store i64 %len, ptr %48, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %vec, i64 24, i1 false)
; call core::ptr::drop_in_place<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>,<alloc::string::String as core::convert::From<&str>>::from>>
  call void @"_ZN4core3ptr189drop_in_place$LT$core..iter..adapters..map..Map$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$GT$$GT$17hccf534f681aec439E"(ptr align 8 %iterator)
  br label %bb21

bb21:                                             ; preds = %bb2, %bb28
  ret void

unreachable:                                      ; preds = %bb18
  unreachable

terminate:                                        ; preds = %bb24, %bb23
  %49 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %50 = extractvalue { ptr, i32 } %49, 0
  %51 = extractvalue { ptr, i32 } %49, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb2:                                              ; preds = %bb1
  br label %bb21

bb22:                                             ; preds = %bb24, %bb25
  %52 = load ptr, ptr %0, align 8, !noundef !3
  %53 = getelementptr inbounds i8, ptr %0, i64 8
  %54 = load i32, ptr %53, align 8, !noundef !3
  %55 = insertvalue { ptr, i32 } poison, ptr %52, 0
  %56 = insertvalue { ptr, i32 } %55, i32 %54, 1
  resume { ptr, i32 } %56

bb24:                                             ; preds = %bb25
; invoke core::ptr::drop_in_place<core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>,<alloc::string::String as core::convert::From<&str>>::from>>
  invoke void @"_ZN4core3ptr189drop_in_place$LT$core..iter..adapters..map..Map$LT$alloc..vec..into_iter..IntoIter$LT$$RF$str$GT$$C$$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$..from$GT$$GT$17hccf534f681aec439E"(ptr align 8 %iterator) #28
          to label %bb22 unwind label %terminate
}

; alloc::vec::in_place_collect::needs_realloc
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN5alloc3vec16in_place_collect13needs_realloc17h1ff298465e47c35bE(i64 %src_cap, i64 %dst_cap) unnamed_addr #1 {
start:
  %_16 = alloca %"core::fmt::Arguments<'_>", align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %_0 = alloca i8, align 1
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  br i1 false, label %bb3, label %bb4

bb1:                                              ; preds = %start
  br i1 false, label %bb9, label %bb11

bb4:                                              ; preds = %bb2
  %_8 = icmp ugt i64 %src_cap, 0
  br i1 %_8, label %bb5, label %bb6

bb3:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1
  br label %bb8

bb6:                                              ; preds = %bb4
  store i8 0, ptr %_0, align 1
  br label %bb7

bb5:                                              ; preds = %bb4
  %_9 = mul i64 %src_cap, 16
  %_11 = mul i64 %dst_cap, 24
  %0 = icmp ne i64 %_9, %_11
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %_0, align 1
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  br label %bb8

bb8:                                              ; preds = %bb3, %bb7
  %2 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  ret i1 %3

bb11:                                             ; preds = %bb1
  store ptr @alloc_6a910050c9b05c7991f9e03754df3823, ptr %_5, align 8
  %4 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 1, ptr %4, align 8
  %5 = load ptr, ptr @1, align 8, !align !5, !noundef !3
  %6 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %7 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_5, i32 0, i32 2
  store ptr %5, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %7, i64 8
  store i64 %6, ptr %8, align 8
  %9 = getelementptr inbounds %"core::fmt::Arguments<'_>", ptr %_5, i32 0, i32 1
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  store i64 0, ptr %10, align 8
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_5, ptr align 8 @alloc_814fd9ef81381c73332eaf42ec46926e) #27
  unreachable

bb9:                                              ; preds = %bb1
; call core::fmt::Arguments::new_const
  call void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_16, ptr align 8 @alloc_af99043bc04c419363a7f04d23183506, i64 1)
; call core::panicking::panic_fmt
  call void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_16, ptr align 8 @alloc_b1c9b46fd6543b9e0f93a51d745efa2a) #27
  unreachable
}

; alloc::vec::into_iter::IntoIter<T,A>::as_raw_mut_slice
; Function Attrs: nonlazybind uwtable
define { ptr, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$16as_raw_mut_slice17hcdee6a37b3c42aa6E"(ptr align 8 %0) unnamed_addr #1 {
start:
  %_11 = alloca %"core::ptr::metadata::PtrComponents<[&str]>", align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[&str]>", align 8
  %self = alloca ptr, align 8
  store ptr %0, ptr %self, align 8
  %1 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
  %2 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %1, i32 0, i32 1
  %self1 = load ptr, ptr %2, align 8, !nonnull !3, !noundef !3
  %_8 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
; call core::iter::traits::exact_size::ExactSizeIterator::len
  %len = call i64 @_ZN4core4iter6traits10exact_size17ExactSizeIterator3len17hcc9996744452a691E(ptr align 8 %_8)
  store ptr %self1, ptr %_11, align 8
  %3 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %len, ptr %3, align 8
  %4 = load ptr, ptr %_11, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_11, i64 8
  %6 = load i64, ptr %5, align 8, !noundef !3
  store ptr %4, ptr %_10, align 8
  %7 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %6, ptr %7, align 8
  %_0.0 = load ptr, ptr %_10, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_10, i64 8
  %_0.1 = load i64, ptr %8, align 8, !noundef !3
  %9 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %10 = insertvalue { ptr, i64 } %9, i64 %_0.1, 1
  ret { ptr, i64 } %10
}

; alloc::vec::into_iter::IntoIter<T,A>::forget_allocation_drop_remaining
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$32forget_allocation_drop_remaining17h5a7492c977e86ce8E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_6 = alloca %"alloc::raw_vec::RawVec<&str>", align 8
  %_3 = alloca ptr, align 8
; call alloc::vec::into_iter::IntoIter<T,A>::as_raw_mut_slice
  %0 = call { ptr, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$16as_raw_mut_slice17hcdee6a37b3c42aa6E"(ptr align 8 %self)
  %remaining.0 = extractvalue { ptr, i64 } %0, 0
  %remaining.1 = extractvalue { ptr, i64 } %0, 1
  %1 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 2
  store i64 0, ptr %1, align 8
  store i64 0, ptr %_6, align 8
  %2 = getelementptr inbounds i8, ptr %_6, i64 8
  store ptr inttoptr (i64 8 to ptr), ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %_6, i64 8
  %self1 = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  store ptr %self1, ptr %_3, align 8
  %4 = load ptr, ptr %_3, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %self, align 8
; call core::ptr::drop_in_place<alloc::raw_vec::RawVec<&str>>
  call void @"_ZN4core3ptr58drop_in_place$LT$alloc..raw_vec..RawVec$LT$$RF$str$GT$$GT$17h08340d9e774abd8aE"(ptr align 8 %_6)
  %_7 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %5 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 1
  store ptr %_7, ptr %5, align 8
  %self2 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %self, i32 0, i32 3
  store ptr %self2, ptr %6, align 8
  ret void
}

; alloc::alloc::exchange_malloc
; Function Attrs: inlinehint nonlazybind uwtable
define internal ptr @_ZN5alloc5alloc15exchange_malloc17hd3112a05f766f5e6E(i64 %size, i64 %align) unnamed_addr #0 {
start:
  %self = alloca ptr, align 8
  %_4 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %0 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %0, align 8
  store i64 %align, ptr %layout, align 8
  %1 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  %3 = load i64, ptr %2, align 8, !noundef !3
; call alloc::alloc::Global::alloc_impl
  %4 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h879e6ffe68fe2d1bE(ptr align 1 @alloc_513570631223a12912d85da2bec3b15a, i64 %1, i64 %3, i1 zeroext false)
  %5 = extractvalue { ptr, i64 } %4, 0
  %6 = extractvalue { ptr, i64 } %4, 1
  store ptr %5, ptr %_4, align 8
  %7 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %6, ptr %7, align 8
  %8 = load ptr, ptr %_4, align 8, !noundef !3
  %9 = ptrtoint ptr %8 to i64
  %10 = icmp eq i64 %9, 0
  %_5 = select i1 %10, i64 1, i64 0
  %11 = icmp eq i64 %_5, 0
  br i1 %11, label %bb2, label %bb1

bb2:                                              ; preds = %start
  %ptr.0 = load ptr, ptr %_4, align 8, !nonnull !3, !noundef !3
  %12 = getelementptr inbounds i8, ptr %_4, i64 8
  %ptr.1 = load i64, ptr %12, align 8, !noundef !3
  store ptr %ptr.0, ptr %self, align 8
  ret ptr %ptr.0

bb1:                                              ; preds = %start
  %13 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %14 = getelementptr inbounds i8, ptr %layout, i64 8
  %15 = load i64, ptr %14, align 8, !noundef !3
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h48039cdfd0d60c1cE(i64 %13, i64 %15) #27
  unreachable

bb4:                                              ; No predecessors!
  unreachable
}

; alloc::alloc::Global::alloc_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h879e6ffe68fe2d1bE(ptr align 1 %self, i64 %0, i64 %1, i1 zeroext %zeroed) unnamed_addr #0 {
start:
  %2 = alloca i8, align 1
  %_79 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_78 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_64 = alloca ptr, align 8
  %_59 = alloca i64, align 8
  %_44 = alloca i64, align 8
  %_34 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_33 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_22 = alloca i64, align 8
  %_18 = alloca %"core::ptr::non_null::NonNull<[u8]>", align 8
  %self4 = alloca ptr, align 8
  %self3 = alloca ptr, align 8
  %_12 = alloca ptr, align 8
  %layout2 = alloca %"core::alloc::layout::Layout", align 8
  %layout1 = alloca %"core::alloc::layout::Layout", align 8
  %raw_ptr = alloca ptr, align 8
  %data = alloca ptr, align 8
  %_6 = alloca %"core::ptr::non_null::NonNull<[u8]>", align 8
  %_0 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  store i64 %0, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %1, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %layout, i64 8
  %size = load i64, ptr %4, align 8, !noundef !3
  %5 = icmp eq i64 %size, 0
  br i1 %5, label %bb2, label %bb1

bb2:                                              ; preds = %start
  %self5 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  store i64 %self5, ptr %_22, align 8
  %_23 = load i64, ptr %_22, align 8, !range !26, !noundef !3
  %_24 = icmp uge i64 %_23, 1
  %_25 = icmp ule i64 %_23, -9223372036854775808
  %_26 = and i1 %_24, %_25
  call void @llvm.assume(i1 %_26)
  %ptr = inttoptr i64 %_23 to ptr
  store ptr %ptr, ptr %data, align 8
  store ptr %ptr, ptr %_34, align 8
  %6 = getelementptr inbounds i8, ptr %_34, i64 8
  store i64 0, ptr %6, align 8
  %7 = load ptr, ptr %_34, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_34, i64 8
  %9 = load i64, ptr %8, align 8, !noundef !3
  store ptr %7, ptr %_33, align 8
  %10 = getelementptr inbounds i8, ptr %_33, i64 8
  store i64 %9, ptr %10, align 8
  %ptr.0 = load ptr, ptr %_33, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_33, i64 8
  %ptr.1 = load i64, ptr %11, align 8, !noundef !3
  store ptr %ptr.0, ptr %_6, align 8
  %12 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 %ptr.1, ptr %12, align 8
  %13 = load ptr, ptr %_6, align 8, !nonnull !3, !noundef !3
  %14 = getelementptr inbounds i8, ptr %_6, i64 8
  %15 = load i64, ptr %14, align 8, !noundef !3
  store ptr %13, ptr %_0, align 8
  %16 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %15, ptr %16, align 8
  br label %bb8

bb1:                                              ; preds = %start
  br i1 %zeroed, label %bb3, label %bb4

bb8:                                              ; preds = %bb7, %bb6, %bb2
  %17 = load ptr, ptr %_0, align 8, !noundef !3
  %18 = getelementptr inbounds i8, ptr %_0, i64 8
  %19 = load i64, ptr %18, align 8
  %20 = insertvalue { ptr, i64 } poison, ptr %17, 0
  %21 = insertvalue { ptr, i64 } %20, i64 %19, 1
  ret { ptr, i64 } %21

bb4:                                              ; preds = %bb1
  %22 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %23 = getelementptr inbounds i8, ptr %layout, i64 8
  %24 = load i64, ptr %23, align 8, !noundef !3
  store i64 %22, ptr %layout2, align 8
  %25 = getelementptr inbounds i8, ptr %layout2, i64 8
  store i64 %24, ptr %25, align 8
  %26 = load volatile i8, ptr @__rust_no_alloc_shim_is_unstable, align 1
  store i8 %26, ptr %2, align 1
  %_49 = load i8, ptr %2, align 1, !noundef !3
  %27 = getelementptr inbounds i8, ptr %layout2, i64 8
  %_52 = load i64, ptr %27, align 8, !noundef !3
  %self6 = load i64, ptr %layout2, align 8, !range !26, !noundef !3
  store i64 %self6, ptr %_59, align 8
  %_60 = load i64, ptr %_59, align 8, !range !26, !noundef !3
  %_61 = icmp uge i64 %_60, 1
  %_62 = icmp ule i64 %_60, -9223372036854775808
  %_63 = and i1 %_61, %_62
  call void @llvm.assume(i1 %_63)
  %28 = call ptr @__rust_alloc(i64 %_52, i64 %_60) #29
  store ptr %28, ptr %raw_ptr, align 8
  br label %bb5

bb3:                                              ; preds = %bb1
  %29 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %30 = getelementptr inbounds i8, ptr %layout, i64 8
  %31 = load i64, ptr %30, align 8, !noundef !3
  store i64 %29, ptr %layout1, align 8
  %32 = getelementptr inbounds i8, ptr %layout1, i64 8
  store i64 %31, ptr %32, align 8
  %33 = getelementptr inbounds i8, ptr %layout1, i64 8
  %_39 = load i64, ptr %33, align 8, !noundef !3
  %self7 = load i64, ptr %layout1, align 8, !range !26, !noundef !3
  store i64 %self7, ptr %_44, align 8
  %_45 = load i64, ptr %_44, align 8, !range !26, !noundef !3
  %_46 = icmp uge i64 %_45, 1
  %_47 = icmp ule i64 %_45, -9223372036854775808
  %_48 = and i1 %_46, %_47
  call void @llvm.assume(i1 %_48)
  %34 = call ptr @__rust_alloc_zeroed(i64 %_39, i64 %_45) #29
  store ptr %34, ptr %raw_ptr, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %ptr8 = load ptr, ptr %raw_ptr, align 8, !noundef !3
  %_65 = ptrtoint ptr %ptr8 to i64
  %35 = icmp eq i64 %_65, 0
  br i1 %35, label %bb13, label %bb14

bb13:                                             ; preds = %bb5
  store ptr null, ptr %self4, align 8
  br label %bb12

bb14:                                             ; preds = %bb5
  store ptr %ptr8, ptr %_64, align 8
  %36 = load ptr, ptr %_64, align 8, !nonnull !3, !noundef !3
  store ptr %36, ptr %self4, align 8
  br label %bb12

bb12:                                             ; preds = %bb14, %bb13
  %37 = load ptr, ptr %self4, align 8, !noundef !3
  %38 = ptrtoint ptr %37 to i64
  %39 = icmp eq i64 %38, 0
  %_70 = select i1 %39, i64 0, i64 1
  %40 = icmp eq i64 %_70, 0
  br i1 %40, label %bb15, label %bb16

bb15:                                             ; preds = %bb12
  store ptr null, ptr %self3, align 8
  br label %bb17

bb16:                                             ; preds = %bb12
  %v = load ptr, ptr %self4, align 8, !nonnull !3, !noundef !3
  store ptr %v, ptr %self3, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %41 = load ptr, ptr %self3, align 8, !noundef !3
  %42 = ptrtoint ptr %41 to i64
  %43 = icmp eq i64 %42, 0
  %_72 = select i1 %43, i64 1, i64 0
  %44 = icmp eq i64 %_72, 0
  br i1 %44, label %bb20, label %bb19

bb20:                                             ; preds = %bb17
  %v9 = load ptr, ptr %self3, align 8, !nonnull !3, !noundef !3
  store ptr %v9, ptr %_12, align 8
  br label %bb18

bb19:                                             ; preds = %bb17
  store ptr null, ptr %_12, align 8
  br label %bb18

bb18:                                             ; preds = %bb19, %bb20
  %45 = load ptr, ptr %_12, align 8, !noundef !3
  %46 = ptrtoint ptr %45 to i64
  %47 = icmp eq i64 %46, 0
  %_16 = select i1 %47, i64 1, i64 0
  %48 = icmp eq i64 %_16, 0
  br i1 %48, label %bb6, label %bb7

bb6:                                              ; preds = %bb18
  %ptr10 = load ptr, ptr %_12, align 8, !nonnull !3, !noundef !3
  store ptr %ptr10, ptr %_79, align 8
  %49 = getelementptr inbounds i8, ptr %_79, i64 8
  store i64 %size, ptr %49, align 8
  %50 = load ptr, ptr %_79, align 8, !noundef !3
  %51 = getelementptr inbounds i8, ptr %_79, i64 8
  %52 = load i64, ptr %51, align 8, !noundef !3
  store ptr %50, ptr %_78, align 8
  %53 = getelementptr inbounds i8, ptr %_78, i64 8
  store i64 %52, ptr %53, align 8
  %ptr.011 = load ptr, ptr %_78, align 8, !noundef !3
  %54 = getelementptr inbounds i8, ptr %_78, i64 8
  %ptr.112 = load i64, ptr %54, align 8, !noundef !3
  store ptr %ptr.011, ptr %_18, align 8
  %55 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %ptr.112, ptr %55, align 8
  %56 = load ptr, ptr %_18, align 8, !nonnull !3, !noundef !3
  %57 = getelementptr inbounds i8, ptr %_18, i64 8
  %58 = load i64, ptr %57, align 8, !noundef !3
  store ptr %56, ptr %_0, align 8
  %59 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %58, ptr %59, align 8
  br label %bb8

bb7:                                              ; preds = %bb18
  %60 = load ptr, ptr @1, align 8, !noundef !3
  %61 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %60, ptr %_0, align 8
  %62 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %61, ptr %62, align 8
  br label %bb8

bb21:                                             ; No predecessors!
  unreachable
}

; alloc::alloc::Global::grow_impl
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @_ZN5alloc5alloc6Global9grow_impl17he940b2bc8627b3e5E(ptr align 1 %self, ptr %ptr, i64 %0, i64 %1, i64 %2, i64 %3, i1 zeroext %zeroed) unnamed_addr #0 {
start:
  %self4 = alloca ptr, align 8
  %_86 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_85 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_71 = alloca ptr, align 8
  %_66 = alloca i64, align 8
  %_54 = alloca i64, align 8
  %_48 = alloca i64, align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", align 8
  %_37 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_35 = alloca %"core::ptr::non_null::NonNull<[u8]>", align 8
  %self2 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_27 = alloca ptr, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %_9 = alloca i64, align 8
  %_0 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", align 8
  %new_layout = alloca %"core::alloc::layout::Layout", align 8
  %old_layout = alloca %"core::alloc::layout::Layout", align 8
  store i64 %0, ptr %old_layout, align 8
  %4 = getelementptr inbounds i8, ptr %old_layout, i64 8
  store i64 %1, ptr %4, align 8
  store i64 %2, ptr %new_layout, align 8
  %5 = getelementptr inbounds i8, ptr %new_layout, i64 8
  store i64 %3, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %old_layout, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
  store i64 %7, ptr %_9, align 8
  %8 = load i64, ptr %_9, align 8, !noundef !3
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %bb1, label %bb3

bb1:                                              ; preds = %start
  %_11.0 = load i64, ptr %new_layout, align 8, !range !26, !noundef !3
  %10 = getelementptr inbounds i8, ptr %new_layout, i64 8
  %_11.1 = load i64, ptr %10, align 8, !noundef !3
; call alloc::alloc::Global::alloc_impl
  %11 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h879e6ffe68fe2d1bE(ptr align 1 %self, i64 %_11.0, i64 %_11.1, i1 zeroext %zeroed)
  %12 = extractvalue { ptr, i64 } %11, 0
  %13 = extractvalue { ptr, i64 } %11, 1
  store ptr %12, ptr %_0, align 8
  %14 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %13, ptr %14, align 8
  br label %bb14

bb3:                                              ; preds = %start
  %self5 = load i64, ptr %old_layout, align 8, !range !26, !noundef !3
  store i64 %self5, ptr %_48, align 8
  %_49 = load i64, ptr %_48, align 8, !range !26, !noundef !3
  %_50 = icmp uge i64 %_49, 1
  %_51 = icmp ule i64 %_49, -9223372036854775808
  %_52 = and i1 %_50, %_51
  call void @llvm.assume(i1 %_52)
  %self6 = load i64, ptr %new_layout, align 8, !range !26, !noundef !3
  store i64 %self6, ptr %_54, align 8
  %_55 = load i64, ptr %_54, align 8, !range !26, !noundef !3
  %_56 = icmp uge i64 %_55, 1
  %_57 = icmp ule i64 %_55, -9223372036854775808
  %_58 = and i1 %_56, %_57
  call void @llvm.assume(i1 %_58)
  %_14 = icmp eq i64 %_49, %_55
  br i1 %_14, label %bb4, label %bb5

bb14:                                             ; preds = %bb9, %bb11, %bb1
  br label %bb16

bb5:                                              ; preds = %bb3
  %old_size = load i64, ptr %_9, align 8, !noundef !3
  %_39.0 = load i64, ptr %new_layout, align 8, !range !26, !noundef !3
  %15 = getelementptr inbounds i8, ptr %new_layout, i64 8
  %_39.1 = load i64, ptr %15, align 8, !noundef !3
; call alloc::alloc::Global::alloc_impl
  %16 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h879e6ffe68fe2d1bE(ptr align 1 %self, i64 %_39.0, i64 %_39.1, i1 zeroext %zeroed)
  %17 = extractvalue { ptr, i64 } %16, 0
  %18 = extractvalue { ptr, i64 } %16, 1
  store ptr %17, ptr %self3, align 8
  %19 = getelementptr inbounds i8, ptr %self3, i64 8
  store i64 %18, ptr %19, align 8
  %20 = load ptr, ptr %self3, align 8, !noundef !3
  %21 = ptrtoint ptr %20 to i64
  %22 = icmp eq i64 %21, 0
  %_91 = select i1 %22, i64 1, i64 0
  %23 = icmp eq i64 %_91, 0
  br i1 %23, label %bb30, label %bb29

bb4:                                              ; preds = %bb3
  %old_size7 = load i64, ptr %_9, align 8, !noundef !3
  %24 = getelementptr inbounds i8, ptr %new_layout, i64 8
  %new_size = load i64, ptr %24, align 8, !noundef !3
  %25 = getelementptr inbounds i8, ptr %old_layout, i64 8
  %_22 = load i64, ptr %25, align 8, !noundef !3
  %cond = icmp uge i64 %new_size, %_22
  call void @llvm.assume(i1 %cond)
  %26 = load i64, ptr %old_layout, align 8, !range !26, !noundef !3
  %27 = getelementptr inbounds i8, ptr %old_layout, i64 8
  %28 = load i64, ptr %27, align 8, !noundef !3
  store i64 %26, ptr %layout, align 8
  %29 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %28, ptr %29, align 8
  %30 = getelementptr inbounds i8, ptr %layout, i64 8
  %_61 = load i64, ptr %30, align 8, !noundef !3
  %self8 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  store i64 %self8, ptr %_66, align 8
  %_67 = load i64, ptr %_66, align 8, !range !26, !noundef !3
  %_68 = icmp uge i64 %_67, 1
  %_69 = icmp ule i64 %_67, -9223372036854775808
  %_70 = and i1 %_68, %_69
  call void @llvm.assume(i1 %_70)
  %raw_ptr = call ptr @__rust_realloc(ptr %ptr, i64 %_61, i64 %_67, i64 %new_size) #29
  %_72 = ptrtoint ptr %raw_ptr to i64
  %31 = icmp eq i64 %_72, 0
  br i1 %31, label %bb19, label %bb20

bb30:                                             ; preds = %bb5
  %v.0 = load ptr, ptr %self3, align 8, !nonnull !3, !noundef !3
  %32 = getelementptr inbounds i8, ptr %self3, i64 8
  %v.1 = load i64, ptr %32, align 8, !noundef !3
  store ptr %v.0, ptr %_37, align 8
  %33 = getelementptr inbounds i8, ptr %_37, i64 8
  store i64 %v.1, ptr %33, align 8
  br label %bb28

bb29:                                             ; preds = %bb5
  %34 = load ptr, ptr @1, align 8, !noundef !3
  %35 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %34, ptr %_37, align 8
  %36 = getelementptr inbounds i8, ptr %_37, i64 8
  store i64 %35, ptr %36, align 8
  br label %bb28

bb28:                                             ; preds = %bb29, %bb30
  %37 = load ptr, ptr %_37, align 8, !noundef !3
  %38 = ptrtoint ptr %37 to i64
  %39 = icmp eq i64 %38, 0
  %_40 = select i1 %39, i64 1, i64 0
  %40 = icmp eq i64 %_40, 0
  br i1 %40, label %bb11, label %bb12

bb11:                                             ; preds = %bb28
  %new_ptr.0 = load ptr, ptr %_37, align 8, !nonnull !3, !noundef !3
  %41 = getelementptr inbounds i8, ptr %_37, i64 8
  %new_ptr.1 = load i64, ptr %41, align 8, !noundef !3
  store ptr %new_ptr.0, ptr %self4, align 8
  %42 = mul i64 %old_size, 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %new_ptr.0, ptr align 1 %ptr, i64 %42, i1 false)
  %_46.0 = load i64, ptr %old_layout, align 8, !range !26, !noundef !3
  %43 = getelementptr inbounds i8, ptr %old_layout, i64 8
  %_46.1 = load i64, ptr %43, align 8, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %self, ptr %ptr, i64 %_46.0, i64 %_46.1)
  store ptr %new_ptr.0, ptr %_0, align 8
  %44 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %new_ptr.1, ptr %44, align 8
  br label %bb14

bb12:                                             ; preds = %bb28
  %45 = load ptr, ptr @1, align 8, !noundef !3
  %46 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %45, ptr %_0, align 8
  %47 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %46, ptr %47, align 8
  br label %bb15

bb15:                                             ; preds = %bb7, %bb12
  br label %bb16

bb19:                                             ; preds = %bb4
  store ptr null, ptr %self2, align 8
  br label %bb18

bb20:                                             ; preds = %bb4
  store ptr %raw_ptr, ptr %_71, align 8
  %48 = load ptr, ptr %_71, align 8, !nonnull !3, !noundef !3
  store ptr %48, ptr %self2, align 8
  br label %bb18

bb18:                                             ; preds = %bb20, %bb19
  %49 = load ptr, ptr %self2, align 8, !noundef !3
  %50 = ptrtoint ptr %49 to i64
  %51 = icmp eq i64 %50, 0
  %_77 = select i1 %51, i64 0, i64 1
  %52 = icmp eq i64 %_77, 0
  br i1 %52, label %bb21, label %bb22

bb21:                                             ; preds = %bb18
  store ptr null, ptr %self1, align 8
  br label %bb23

bb22:                                             ; preds = %bb18
  %v = load ptr, ptr %self2, align 8, !nonnull !3, !noundef !3
  store ptr %v, ptr %self1, align 8
  br label %bb23

bb23:                                             ; preds = %bb22, %bb21
  %53 = load ptr, ptr %self1, align 8, !noundef !3
  %54 = ptrtoint ptr %53 to i64
  %55 = icmp eq i64 %54, 0
  %_79 = select i1 %55, i64 1, i64 0
  %56 = icmp eq i64 %_79, 0
  br i1 %56, label %bb26, label %bb25

bb26:                                             ; preds = %bb23
  %v9 = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  store ptr %v9, ptr %_27, align 8
  br label %bb24

bb25:                                             ; preds = %bb23
  store ptr null, ptr %_27, align 8
  br label %bb24

bb24:                                             ; preds = %bb25, %bb26
  %57 = load ptr, ptr %_27, align 8, !noundef !3
  %58 = ptrtoint ptr %57 to i64
  %59 = icmp eq i64 %58, 0
  %_30 = select i1 %59, i64 1, i64 0
  %60 = icmp eq i64 %_30, 0
  br i1 %60, label %bb6, label %bb7

bb6:                                              ; preds = %bb24
  %ptr10 = load ptr, ptr %_27, align 8, !nonnull !3, !noundef !3
  br i1 %zeroed, label %bb8, label %bb9

bb7:                                              ; preds = %bb24
  %61 = load ptr, ptr @1, align 8, !noundef !3
  %62 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %61, ptr %_0, align 8
  %63 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %62, ptr %63, align 8
  br label %bb15

bb9:                                              ; preds = %bb8, %bb6
  store ptr %ptr10, ptr %_86, align 8
  %64 = getelementptr inbounds i8, ptr %_86, i64 8
  store i64 %new_size, ptr %64, align 8
  %65 = load ptr, ptr %_86, align 8, !noundef !3
  %66 = getelementptr inbounds i8, ptr %_86, i64 8
  %67 = load i64, ptr %66, align 8, !noundef !3
  store ptr %65, ptr %_85, align 8
  %68 = getelementptr inbounds i8, ptr %_85, i64 8
  store i64 %67, ptr %68, align 8
  %ptr.0 = load ptr, ptr %_85, align 8, !noundef !3
  %69 = getelementptr inbounds i8, ptr %_85, i64 8
  %ptr.1 = load i64, ptr %69, align 8, !noundef !3
  store ptr %ptr.0, ptr %_35, align 8
  %70 = getelementptr inbounds i8, ptr %_35, i64 8
  store i64 %ptr.1, ptr %70, align 8
  %71 = load ptr, ptr %_35, align 8, !nonnull !3, !noundef !3
  %72 = getelementptr inbounds i8, ptr %_35, i64 8
  %73 = load i64, ptr %72, align 8, !noundef !3
  store ptr %71, ptr %_0, align 8
  %74 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %73, ptr %74, align 8
  br label %bb14

bb8:                                              ; preds = %bb6
  %self11 = getelementptr inbounds i8, ptr %raw_ptr, i64 %old_size7
  %count = sub i64 %new_size, %old_size7
  %75 = mul i64 1, %count
  call void @llvm.memset.p0.i64(ptr align 1 %self11, i8 0, i64 %75, i1 false)
  br label %bb9

bb16:                                             ; preds = %bb15, %bb14
  %76 = load ptr, ptr %_0, align 8, !noundef !3
  %77 = getelementptr inbounds i8, ptr %_0, i64 8
  %78 = load i64, ptr %77, align 8
  %79 = insertvalue { ptr, i64 } poison, ptr %76, 0
  %80 = insertvalue { ptr, i64 } %79, i64 %78, 1
  ret { ptr, i64 } %80

bb31:                                             ; No predecessors!
  unreachable
}

; alloc::slice::<impl [T]>::join
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4join17h099904bb3d1c31fbE"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %self.0, i64 %self.1, ptr align 1 %sep.0, i64 %sep.1) unnamed_addr #1 {
start:
; call alloc::str::<impl alloc::slice::Join<&str> for [S]>::join
  call void @"_ZN5alloc3str75_$LT$impl$u20$alloc..slice..Join$LT$$RF$str$GT$$u20$for$u20$$u5b$S$u5d$$GT$4join17h56d8fb1e30a95d9aE"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %self.0, i64 %self.1, ptr align 1 %sep.0, i64 %sep.1)
  ret void
}

; alloc::slice::<impl [T]>::join
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4join17hada6e44c2df73d1aE"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %self.0, i64 %self.1, ptr align 1 %sep.0, i64 %sep.1) unnamed_addr #1 {
start:
; call alloc::str::<impl alloc::slice::Join<&str> for [S]>::join
  call void @"_ZN5alloc3str75_$LT$impl$u20$alloc..slice..Join$LT$$RF$str$GT$$u20$for$u20$$u5b$S$u5d$$GT$4join17h226bb231a998f571E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %self.0, i64 %self.1, ptr align 1 %sep.0, i64 %sep.1)
  ret void
}

; alloc::slice::<impl [T]>::into_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h0a9c87a108c744e8E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::hack::into_vec
  call void @_ZN5alloc5slice4hack8into_vec17h555df777df4b0d16E(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %self.0, i64 %self.1)
  ret void
}

; alloc::slice::<impl [T]>::into_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h8fc1d5f2c5d561d6E"(ptr sret(%"alloc::vec::Vec<std::path::PathBuf>") align 8 %_0, ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::hack::into_vec
  call void @_ZN5alloc5slice4hack8into_vec17h9029ea6b38d90cf9E(ptr sret(%"alloc::vec::Vec<std::path::PathBuf>") align 8 %_0, ptr align 8 %self.0, i64 %self.1)
  ret void
}

; alloc::slice::<impl [T]>::into_vec
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h915212dbeebea442E"(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 8 %self.0, i64 %self.1) unnamed_addr #0 {
start:
; call alloc::slice::hack::into_vec
  call void @_ZN5alloc5slice4hack8into_vec17h75b466bbf8e221fdE(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 8 %self.0, i64 %self.1)
  ret void
}

; alloc::slice::hack::into_vec
; Function Attrs: nonlazybind uwtable
define void @_ZN5alloc5slice4hack8into_vec17h555df777df4b0d16E(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %b.0, i64 %b.1) unnamed_addr #1 {
start:
  %_25 = alloca ptr, align 8
  %_23 = alloca ptr, align 8
  %cap = alloca i64, align 8
  %_20 = alloca %"alloc::raw_vec::RawVec<alloc::string::String>", align 8
  %leaked = alloca %"core::ptr::non_null::NonNull<[alloc::string::String]>", align 8
  %_14 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[alloc::string::String]>>", align 8
  %b = alloca %"alloc::boxed::Box<[alloc::string::String]>", align 8
  store ptr %b.0, ptr %b, align 8
  %0 = getelementptr inbounds i8, ptr %b, i64 8
  store i64 %b.1, ptr %0, align 8
  %src = getelementptr inbounds i8, ptr %b, i64 16
  %b.01 = load ptr, ptr %b, align 8, !nonnull !3, !align !5, !noundef !3
  %1 = getelementptr inbounds i8, ptr %b, i64 8
  %b.12 = load i64, ptr %1, align 8, !noundef !3
  store ptr %b.01, ptr %_14, align 8
  %2 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %b.12, ptr %2, align 8
  %self.0 = load ptr, ptr %_14, align 8, !nonnull !3, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_14, i64 8
  %self.1 = load i64, ptr %3, align 8, !noundef !3
  store ptr %self.0, ptr %leaked, align 8
  %4 = getelementptr inbounds i8, ptr %leaked, i64 8
  store i64 %self.1, ptr %4, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i64 %b.1, ptr %cap, align 8
  br label %bb3

bb1:                                              ; preds = %start
  store i64 0, ptr %cap, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  store ptr %self.0, ptr %_25, align 8
  %5 = load ptr, ptr %_25, align 8, !nonnull !3, !noundef !3
  store ptr %5, ptr %_23, align 8
  %_24 = load i64, ptr %cap, align 8, !range !13, !noundef !3
  %6 = load ptr, ptr %_23, align 8, !nonnull !3, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_20, i64 8
  store ptr %6, ptr %7, align 8
  store i64 %_24, ptr %_20, align 8
  %8 = load i64, ptr %_20, align 8, !range !13, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_20, i64 8
  %10 = load ptr, ptr %9, align 8, !nonnull !3, !noundef !3
  store i64 %8, ptr %_0, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %10, ptr %11, align 8
  %12 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %_0, i32 0, i32 1
  store i64 %b.1, ptr %12, align 8
  ret void
}

; alloc::slice::hack::into_vec
; Function Attrs: nonlazybind uwtable
define void @_ZN5alloc5slice4hack8into_vec17h75b466bbf8e221fdE(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 8 %b.0, i64 %b.1) unnamed_addr #1 {
start:
  %_25 = alloca ptr, align 8
  %_23 = alloca ptr, align 8
  %cap = alloca i64, align 8
  %_20 = alloca %"alloc::raw_vec::RawVec<&str>", align 8
  %leaked = alloca %"core::ptr::non_null::NonNull<[&str]>", align 8
  %_14 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[&str]>>", align 8
  %b = alloca %"alloc::boxed::Box<[&str]>", align 8
  store ptr %b.0, ptr %b, align 8
  %0 = getelementptr inbounds i8, ptr %b, i64 8
  store i64 %b.1, ptr %0, align 8
  %src = getelementptr inbounds i8, ptr %b, i64 16
  %b.01 = load ptr, ptr %b, align 8, !nonnull !3, !align !5, !noundef !3
  %1 = getelementptr inbounds i8, ptr %b, i64 8
  %b.12 = load i64, ptr %1, align 8, !noundef !3
  store ptr %b.01, ptr %_14, align 8
  %2 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %b.12, ptr %2, align 8
  %self.0 = load ptr, ptr %_14, align 8, !nonnull !3, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_14, i64 8
  %self.1 = load i64, ptr %3, align 8, !noundef !3
  store ptr %self.0, ptr %leaked, align 8
  %4 = getelementptr inbounds i8, ptr %leaked, i64 8
  store i64 %self.1, ptr %4, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i64 %b.1, ptr %cap, align 8
  br label %bb3

bb1:                                              ; preds = %start
  store i64 0, ptr %cap, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  store ptr %self.0, ptr %_25, align 8
  %5 = load ptr, ptr %_25, align 8, !nonnull !3, !noundef !3
  store ptr %5, ptr %_23, align 8
  %_24 = load i64, ptr %cap, align 8, !range !13, !noundef !3
  %6 = load ptr, ptr %_23, align 8, !nonnull !3, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_20, i64 8
  store ptr %6, ptr %7, align 8
  store i64 %_24, ptr %_20, align 8
  %8 = load i64, ptr %_20, align 8, !range !13, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_20, i64 8
  %10 = load ptr, ptr %9, align 8, !nonnull !3, !noundef !3
  store i64 %8, ptr %_0, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %10, ptr %11, align 8
  %12 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %_0, i32 0, i32 1
  store i64 %b.1, ptr %12, align 8
  ret void
}

; alloc::slice::hack::into_vec
; Function Attrs: nonlazybind uwtable
define void @_ZN5alloc5slice4hack8into_vec17h9029ea6b38d90cf9E(ptr sret(%"alloc::vec::Vec<std::path::PathBuf>") align 8 %_0, ptr align 8 %b.0, i64 %b.1) unnamed_addr #1 {
start:
  %_25 = alloca ptr, align 8
  %_23 = alloca ptr, align 8
  %cap = alloca i64, align 8
  %_20 = alloca %"alloc::raw_vec::RawVec<std::path::PathBuf>", align 8
  %leaked = alloca %"core::ptr::non_null::NonNull<[std::path::PathBuf]>", align 8
  %_14 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<[std::path::PathBuf]>>", align 8
  %b = alloca %"alloc::boxed::Box<[std::path::PathBuf]>", align 8
  store ptr %b.0, ptr %b, align 8
  %0 = getelementptr inbounds i8, ptr %b, i64 8
  store i64 %b.1, ptr %0, align 8
  %src = getelementptr inbounds i8, ptr %b, i64 16
  %b.01 = load ptr, ptr %b, align 8, !nonnull !3, !align !5, !noundef !3
  %1 = getelementptr inbounds i8, ptr %b, i64 8
  %b.12 = load i64, ptr %1, align 8, !noundef !3
  store ptr %b.01, ptr %_14, align 8
  %2 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %b.12, ptr %2, align 8
  %self.0 = load ptr, ptr %_14, align 8, !nonnull !3, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_14, i64 8
  %self.1 = load i64, ptr %3, align 8, !noundef !3
  store ptr %self.0, ptr %leaked, align 8
  %4 = getelementptr inbounds i8, ptr %leaked, i64 8
  store i64 %self.1, ptr %4, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i64 %b.1, ptr %cap, align 8
  br label %bb3

bb1:                                              ; preds = %start
  store i64 0, ptr %cap, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  store ptr %self.0, ptr %_25, align 8
  %5 = load ptr, ptr %_25, align 8, !nonnull !3, !noundef !3
  store ptr %5, ptr %_23, align 8
  %_24 = load i64, ptr %cap, align 8, !range !13, !noundef !3
  %6 = load ptr, ptr %_23, align 8, !nonnull !3, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_20, i64 8
  store ptr %6, ptr %7, align 8
  store i64 %_24, ptr %_20, align 8
  %8 = load i64, ptr %_20, align 8, !range !13, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_20, i64 8
  %10 = load ptr, ptr %9, align 8, !nonnull !3, !noundef !3
  store i64 %8, ptr %_0, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %10, ptr %11, align 8
  %12 = getelementptr inbounds %"alloc::vec::Vec<std::path::PathBuf>", ptr %_0, i32 0, i32 1
  store i64 %b.1, ptr %12, align 8
  ret void
}

; alloc::string::String::len
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN5alloc6string6String3len17h40ae4a8f256dd53eE(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %_0 = load i64, ptr %0, align 8, !noundef !3
  ret i64 %_0
}

; alloc::string::String::new
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String3new17h4b28029e472a96caE(ptr sret(%"alloc::string::String") align 8 %_0) unnamed_addr #0 {
start:
  %_1 = alloca %"alloc::vec::Vec<u8>", align 8
  store i64 0, ptr %_1, align 8
  %0 = getelementptr inbounds i8, ptr %_1, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %0, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %_1, i32 0, i32 1
  store i64 0, ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_1, i64 24, i1 false)
  ret void
}

; alloc::string::String::push
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String4push17h15f1d932223e61d3E(ptr align 8 %self, i32 %ch) unnamed_addr #0 {
start:
  %_11 = alloca [4 x i8], align 1
  %_3 = alloca i64, align 8
  %_13 = icmp ult i32 %ch, 128
  br i1 %_13, label %bb6, label %bb7

bb7:                                              ; preds = %start
  %_14 = icmp ult i32 %ch, 2048
  br i1 %_14, label %bb8, label %bb9

bb6:                                              ; preds = %start
  store i64 1, ptr %_3, align 8
  br label %bb14

bb9:                                              ; preds = %bb7
  %_15 = icmp ult i32 %ch, 65536
  br i1 %_15, label %bb10, label %bb11

bb8:                                              ; preds = %bb7
  store i64 2, ptr %_3, align 8
  br label %bb13

bb11:                                             ; preds = %bb9
  store i64 4, ptr %_3, align 8
  br label %bb12

bb10:                                             ; preds = %bb9
  store i64 3, ptr %_3, align 8
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  br label %bb13

bb13:                                             ; preds = %bb8, %bb12
  br label %bb14

bb14:                                             ; preds = %bb6, %bb13
  %0 = load i64, ptr %_3, align 8, !noundef !3
  %1 = icmp eq i64 %0, 1
  br i1 %1, label %bb2, label %bb1

bb2:                                              ; preds = %bb14
  %_5 = trunc i32 %ch to i8
; call alloc::vec::Vec<T,A>::push
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h0fab4a587d1a0e24E"(ptr align 8 %self, i8 %_5)
  br label %bb5

bb1:                                              ; preds = %bb14
  %2 = getelementptr inbounds [4 x i8], ptr %_11, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 1 %2, i8 0, i64 4, i1 false)
; call core::char::methods::encode_utf8_raw
  %3 = call { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17hce4a0e0468f969f6E(i32 %ch, ptr align 1 %_11, i64 4)
  %v.0 = extractvalue { ptr, i64 } %3, 0
  %v.1 = extractvalue { ptr, i64 } %3, 1
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h102f896cdc9c3e1dE"(ptr align 8 %self, ptr align 1 %v.0, i64 %v.1)
  br label %bb5

bb5:                                              ; preds = %bb1, %bb2
  ret void
}

; alloc::string::String::push_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String8push_str17hd6e542df8f6735b7E(ptr align 8 %self, ptr align 1 %string.0, i64 %string.1) unnamed_addr #0 {
start:
; call alloc::vec::Vec<T,A>::extend_from_slice
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$17extend_from_slice17h102f896cdc9c3e1dE"(ptr align 8 %self, ptr align 1 %string.0, i64 %string.1)
  ret void
}

; alloc::string::String::from_utf8
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc6string6String9from_utf817h4b7ef7083b636b2dE(ptr sret(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>") align 8 %_0, ptr align 8 %vec) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_20 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_19 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_10 = alloca %"alloc::vec::Vec<u8>", align 8
  %_9 = alloca %"alloc::string::FromUtf8Error", align 8
  %e = alloca %"core::str::error::Utf8Error", align 8
  %_7 = alloca %"alloc::vec::Vec<u8>", align 8
  %_6 = alloca %"alloc::string::String", align 8
  %_2 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %1 = getelementptr inbounds i8, ptr %vec, i64 8
  %self = load ptr, ptr %1, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %vec, i32 0, i32 1
  %len = load i64, ptr %2, align 8, !noundef !3
  store ptr %self, ptr %_20, align 8
  %3 = getelementptr inbounds i8, ptr %_20, i64 8
  store i64 %len, ptr %3, align 8
  %4 = load ptr, ptr %_20, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_20, i64 8
  %6 = load i64, ptr %5, align 8, !noundef !3
  store ptr %4, ptr %_19, align 8
  %7 = getelementptr inbounds i8, ptr %_19, i64 8
  store i64 %6, ptr %7, align 8
  %_17.0 = load ptr, ptr %_19, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_19, i64 8
  %_17.1 = load i64, ptr %8, align 8, !noundef !3
; invoke core::str::converts::from_utf8
  invoke void @_ZN4core3str8converts9from_utf817hc8e8a5bde000841dE(ptr sret(%"core::result::Result<&str, core::str::error::Utf8Error>") align 8 %_2, ptr align 1 %_17.0, i64 %_17.1)
          to label %bb1 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %vec) #28
          to label %bb6 unwind label %terminate

cleanup:                                          ; preds = %start
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb5

bb1:                                              ; preds = %start
  %_5 = load i64, ptr %_2, align 8, !range !9, !noundef !3
  %13 = icmp eq i64 %_5, 0
  br i1 %13, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %vec, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %_7, i64 24, i1 false)
  %14 = getelementptr inbounds %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %_6, i64 24, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  %15 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Err", ptr %_2, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e, ptr align 8 %15, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_10, ptr align 8 %vec, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %_10, i64 24, i1 false)
  %16 = getelementptr inbounds %"alloc::string::FromUtf8Error", ptr %_9, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %e, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 40, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void

bb7:                                              ; No predecessors!
  unreachable

terminate:                                        ; preds = %bb5
  %17 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %18 = extractvalue { ptr, i32 } %17, 0
  %19 = extractvalue { ptr, i32 } %17, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb6:                                              ; preds = %bb5
  %20 = load ptr, ptr %0, align 8, !noundef !3
  %21 = getelementptr inbounds i8, ptr %0, i64 8
  %22 = load i32, ptr %21, align 8, !noundef !3
  %23 = insertvalue { ptr, i32 } poison, ptr %20, 0
  %24 = insertvalue { ptr, i32 } %23, i32 %22, 1
  resume { ptr, i32 } %24
}

; alloc::raw_vec::finish_grow
; Function Attrs: noinline nonlazybind uwtable
define void @_ZN5alloc7raw_vec11finish_grow17habb2cfab89ff935aE(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") align 8 %_0, i64 %new_layout.0, i64 %new_layout.1, ptr align 8 %current_memory, ptr align 1 %alloc) unnamed_addr #3 {
start:
  %_52 = alloca i64, align 8
  %_46 = alloca i64, align 8
  %_41 = alloca %"alloc::collections::TryReserveError", align 8
  %_39 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %_34 = alloca ptr, align 8
  %old_layout = alloca %"core::alloc::layout::Layout", align 8
  %memory = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", align 8
  %residual1 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_10 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>>", align 8
  %residual = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %self = alloca %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>", align 8
  %new_layout = alloca %"core::alloc::layout::Layout", align 8
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hb3219775ef73406dE"(ptr sret(%"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>") align 8 %self, i64 %new_layout.0, i64 %new_layout.1)
  %_36 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %0 = icmp eq i64 %_36, 0
  br i1 %0, label %bb16, label %bb15

bb16:                                             ; preds = %start
  %1 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Ok", ptr %self, i32 0, i32 1
  %v.0 = load i64, ptr %1, align 8, !range !26, !noundef !3
  %2 = getelementptr inbounds i8, ptr %1, i64 8
  %v.1 = load i64, ptr %2, align 8, !noundef !3
  %3 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", ptr %_5, i32 0, i32 1
  store i64 %v.0, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  store i64 %v.1, ptr %4, align 8
  store i64 0, ptr %_5, align 8
  br label %bb14

bb15:                                             ; preds = %start
  %5 = getelementptr inbounds %"core::result::Result<core::alloc::layout::Layout, alloc::collections::TryReserveErrorKind>::Err", ptr %self, i32 0, i32 1
  %e.0 = load i64, ptr %5, align 8, !range !12, !noundef !3
  %6 = getelementptr inbounds i8, ptr %5, i64 8
  %e.1 = load i64, ptr %6, align 8
  store i64 %e.0, ptr %_39, align 8
  %7 = getelementptr inbounds i8, ptr %_39, i64 8
  store i64 %e.1, ptr %7, align 8
  %8 = load i64, ptr %_39, align 8, !range !12, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_39, i64 8
  %10 = load i64, ptr %9, align 8
  %11 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", ptr %_5, i32 0, i32 1
  store i64 %8, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store i64 %10, ptr %12, align 8
  store i64 1, ptr %_5, align 8
  br label %bb14

bb14:                                             ; preds = %bb15, %bb16
  %_7 = load i64, ptr %_5, align 8, !range !9, !noundef !3
  %13 = icmp eq i64 %_7, 0
  br i1 %13, label %bb2, label %bb3

bb2:                                              ; preds = %bb14
  %14 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Continue", ptr %_5, i32 0, i32 1
  %val.0 = load i64, ptr %14, align 8, !range !26, !noundef !3
  %15 = getelementptr inbounds i8, ptr %14, i64 8
  %val.1 = load i64, ptr %15, align 8, !noundef !3
  store i64 %val.0, ptr %new_layout, align 8
  %16 = getelementptr inbounds i8, ptr %new_layout, i64 8
  store i64 %val.1, ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %new_layout, i64 8
  %alloc_size = load i64, ptr %17, align 8, !noundef !3
  %18 = load i64, ptr @5, align 8, !range !23, !noundef !3
  %19 = load i64, ptr getelementptr inbounds (i8, ptr @5, i64 8), align 8
  store i64 %18, ptr %_10, align 8
  %20 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %19, ptr %20, align 8
  %21 = load i64, ptr %_10, align 8, !range !23, !noundef !3
  %22 = icmp eq i64 %21, -9223372036854775807
  %_13 = select i1 %22, i64 0, i64 1
  %23 = icmp eq i64 %_13, 0
  br i1 %23, label %bb4, label %bb5

bb3:                                              ; preds = %bb14
  %24 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, core::alloc::layout::Layout>::Break", ptr %_5, i32 0, i32 1
  %25 = load i64, ptr %24, align 8, !range !12, !noundef !3
  %26 = getelementptr inbounds i8, ptr %24, i64 8
  %27 = load i64, ptr %26, align 8
  store i64 %25, ptr %residual, align 8
  %28 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %27, ptr %28, align 8
  %e.06 = load i64, ptr %residual, align 8, !range !12, !noundef !3
  %29 = getelementptr inbounds i8, ptr %residual, i64 8
  %e.17 = load i64, ptr %29, align 8
  store i64 %e.06, ptr %_41, align 8
  %30 = getelementptr inbounds i8, ptr %_41, i64 8
  store i64 %e.17, ptr %30, align 8
  %31 = load i64, ptr %_41, align 8, !range !12, !noundef !3
  %32 = getelementptr inbounds i8, ptr %_41, i64 8
  %33 = load i64, ptr %32, align 8
  %34 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", ptr %_0, i32 0, i32 1
  store i64 %31, ptr %34, align 8
  %35 = getelementptr inbounds i8, ptr %34, i64 8
  store i64 %33, ptr %35, align 8
  store i64 1, ptr %_0, align 8
  br label %bb12

bb4:                                              ; preds = %bb2
  %36 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %current_memory, i32 0, i32 1
  %37 = load i64, ptr %36, align 8, !range !12, !noundef !3
  %38 = icmp eq i64 %37, 0
  %_16 = select i1 %38, i64 0, i64 1
  %39 = icmp eq i64 %_16, 1
  br i1 %39, label %bb7, label %bb6

bb5:                                              ; preds = %bb2
  %40 = load i64, ptr %_10, align 8, !range !12, !noundef !3
  %41 = getelementptr inbounds i8, ptr %_10, i64 8
  %42 = load i64, ptr %41, align 8
  store i64 %40, ptr %residual1, align 8
  %43 = getelementptr inbounds i8, ptr %residual1, i64 8
  store i64 %42, ptr %43, align 8
  %e.04 = load i64, ptr %residual1, align 8, !range !12, !noundef !3
  %44 = getelementptr inbounds i8, ptr %residual1, i64 8
  %e.15 = load i64, ptr %44, align 8
  %45 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", ptr %_0, i32 0, i32 1
  store i64 %e.04, ptr %45, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  store i64 %e.15, ptr %46, align 8
  store i64 1, ptr %_0, align 8
  br label %bb12

bb7:                                              ; preds = %bb4
  %ptr = load ptr, ptr %current_memory, align 8, !nonnull !3, !noundef !3
  %47 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %current_memory, i32 0, i32 1
  %48 = load i64, ptr %47, align 8, !range !26, !noundef !3
  %49 = getelementptr inbounds i8, ptr %47, i64 8
  %50 = load i64, ptr %49, align 8, !noundef !3
  store i64 %48, ptr %old_layout, align 8
  %51 = getelementptr inbounds i8, ptr %old_layout, i64 8
  store i64 %50, ptr %51, align 8
  %self2 = load i64, ptr %old_layout, align 8, !range !26, !noundef !3
  store i64 %self2, ptr %_46, align 8
  %_47 = load i64, ptr %_46, align 8, !range !26, !noundef !3
  %_48 = icmp uge i64 %_47, 1
  %_49 = icmp ule i64 %_47, -9223372036854775808
  %_50 = and i1 %_48, %_49
  call void @llvm.assume(i1 %_50)
  %self3 = load i64, ptr %new_layout, align 8, !range !26, !noundef !3
  store i64 %self3, ptr %_52, align 8
  %_53 = load i64, ptr %_52, align 8, !range !26, !noundef !3
  %_54 = icmp uge i64 %_53, 1
  %_55 = icmp ule i64 %_53, -9223372036854775808
  %_56 = and i1 %_54, %_55
  call void @llvm.assume(i1 %_56)
  %cond = icmp eq i64 %_47, %_53
  call void @llvm.assume(i1 %cond)
  %_29.0 = load i64, ptr %old_layout, align 8, !range !26, !noundef !3
  %52 = getelementptr inbounds i8, ptr %old_layout, i64 8
  %_29.1 = load i64, ptr %52, align 8, !noundef !3
  %_30.0 = load i64, ptr %new_layout, align 8, !range !26, !noundef !3
  %53 = getelementptr inbounds i8, ptr %new_layout, i64 8
  %_30.1 = load i64, ptr %53, align 8, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::grow
  %54 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hc256a458da5735efE"(ptr align 1 %alloc, ptr %ptr, i64 %_29.0, i64 %_29.1, i64 %_30.0, i64 %_30.1)
  %55 = extractvalue { ptr, i64 } %54, 0
  %56 = extractvalue { ptr, i64 } %54, 1
  store ptr %55, ptr %memory, align 8
  %57 = getelementptr inbounds i8, ptr %memory, i64 8
  store i64 %56, ptr %57, align 8
  br label %bb10

bb6:                                              ; preds = %bb4
  %_32.0 = load i64, ptr %new_layout, align 8, !range !26, !noundef !3
  %58 = getelementptr inbounds i8, ptr %new_layout, i64 8
  %_32.1 = load i64, ptr %58, align 8, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %59 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h8a8088df2849bd53E"(ptr align 1 %alloc, i64 %_32.0, i64 %_32.1)
  %60 = extractvalue { ptr, i64 } %59, 0
  %61 = extractvalue { ptr, i64 } %59, 1
  store ptr %60, ptr %memory, align 8
  %62 = getelementptr inbounds i8, ptr %memory, i64 8
  store i64 %61, ptr %62, align 8
  br label %bb10

bb10:                                             ; preds = %bb6, %bb7
  %_33.0 = load ptr, ptr %memory, align 8, !noundef !3
  %63 = getelementptr inbounds i8, ptr %memory, i64 8
  %_33.1 = load i64, ptr %63, align 8
  store ptr %new_layout, ptr %_34, align 8
  %64 = load ptr, ptr %_34, align 8, !nonnull !3, !align !5, !noundef !3
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h34c96332661aaa7fE"(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") align 8 %_0, ptr %_33.0, i64 %_33.1, ptr align 8 %64)
  br label %bb13

bb13:                                             ; preds = %bb12, %bb10
  ret void

bb12:                                             ; preds = %bb3, %bb5
  br label %bb13

bb17:                                             ; No predecessors!
  unreachable
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h3709c0d647af5674E"() unnamed_addr #0 {
start:
  %_0.0 = load i64, ptr @1, align 8, !range !12, !noundef !3
  %_0.1 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  %0 = insertvalue { i64, i64 } poison, i64 %_0.0, 0
  %1 = insertvalue { i64, i64 } %0, i64 %_0.1, 1
  ret { i64, i64 } %1
}

; alloc::raw_vec::finish_grow::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec11finish_grow28_$u7b$$u7b$closure$u7d$$u7d$17h53c7041ba978ccb5E"(ptr align 8 %_1) unnamed_addr #0 {
start:
  %self = alloca %"alloc::collections::TryReserveErrorKind", align 8
  %_0 = alloca %"alloc::collections::TryReserveError", align 8
  %_4.0 = load i64, ptr %_1, align 8, !range !26, !noundef !3
  %0 = getelementptr inbounds i8, ptr %_1, i64 8
  %_4.1 = load i64, ptr %0, align 8, !noundef !3
  store i64 %_4.0, ptr %self, align 8
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %_4.1, ptr %1, align 8
  %2 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load i64, ptr %3, align 8
  store i64 %2, ptr %_0, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %4, ptr %5, align 8
  %6 = load i64, ptr %_0, align 8, !range !12, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  %8 = load i64, ptr %7, align 8
  %9 = insertvalue { i64, i64 } poison, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10
}

; alloc::raw_vec::handle_reserve
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN5alloc7raw_vec14handle_reserve17ha4600e6afa03dbc8E(i64 %result.0, i64 %result.1) unnamed_addr #0 {
start:
  %_2 = alloca %"core::result::Result<(), alloc::collections::TryReserveErrorKind>", align 8
; call core::result::Result<T,E>::map_err
  %0 = call { i64, i64 } @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h658c16fcda7cc85dE"(i64 %result.0, i64 %result.1)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  store i64 %1, ptr %_2, align 8
  %3 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %2, ptr %3, align 8
  %4 = load i64, ptr %_2, align 8, !range !23, !noundef !3
  %5 = icmp eq i64 %4, -9223372036854775807
  %_4 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_4, 0
  br i1 %6, label %bb2, label %bb3

bb2:                                              ; preds = %start
  ret void

bb3:                                              ; preds = %start
  %7 = load i64, ptr %_2, align 8, !range !12, !noundef !3
  %8 = icmp eq i64 %7, 0
  %_3 = select i1 %8, i64 0, i64 1
  %9 = icmp eq i64 %_3, 0
  br i1 %9, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
; call alloc::raw_vec::capacity_overflow
  call void @_ZN5alloc7raw_vec17capacity_overflow17hdebe4d61eabe5c80E() #27
  unreachable

bb5:                                              ; preds = %bb3
  %layout.0 = load i64, ptr %_2, align 8, !range !26, !noundef !3
  %10 = getelementptr inbounds i8, ptr %_2, i64 8
  %layout.1 = load i64, ptr %10, align 8, !noundef !3
; call alloc::alloc::handle_alloc_error
  call void @_ZN5alloc5alloc18handle_alloc_error17h48039cdfd0d60c1cE(i64 %layout.0, i64 %layout.1) #27
  unreachable

bb6:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::handle_reserve::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec14handle_reserve28_$u7b$$u7b$closure$u7d$$u7d$17had53668212210393E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_0 = alloca %"alloc::collections::TryReserveErrorKind", align 8
  %e = alloca %"alloc::collections::TryReserveError", align 8
  store i64 %0, ptr %e, align 8
  %2 = getelementptr inbounds i8, ptr %e, i64 8
  store i64 %1, ptr %2, align 8
  %3 = load i64, ptr %e, align 8, !range !12, !noundef !3
  %4 = icmp eq i64 %3, 0
  %_5 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_5, 0
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %6 = load i64, ptr @1, align 8, !range !12, !noundef !3
  %7 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %6, ptr %_0, align 8
  %8 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %7, ptr %8, align 8
  br label %bb1

bb2:                                              ; preds = %start
  %__self_1 = getelementptr inbounds i8, ptr %e, i64 16
  %_8.0 = load i64, ptr %e, align 8, !range !26, !noundef !3
  %9 = getelementptr inbounds i8, ptr %e, i64 8
  %_8.1 = load i64, ptr %9, align 8, !noundef !3
  store i64 %_8.0, ptr %_0, align 8
  %10 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_8.1, ptr %10, align 8
  br label %bb1

bb1:                                              ; preds = %bb2, %bb3
  %11 = load i64, ptr %_0, align 8, !range !12, !noundef !3
  %12 = getelementptr inbounds i8, ptr %_0, i64 8
  %13 = load i64, ptr %12, align 8
  %14 = insertvalue { i64, i64 } poison, i64 %11, 0
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1
  ret { i64, i64 } %15

bb4:                                              ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h332409814013709cE"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_46 = alloca ptr, align 8
  %_29 = alloca ptr, align 8
  %_28 = alloca ptr, align 8
  %_26 = alloca i64, align 8
  %self = alloca ptr, align 8
  %_23 = alloca ptr, align 8
  %result = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", align 8
  %_7 = alloca %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %_0 = alloca %"alloc::raw_vec::RawVec<u8>", align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %init, align 1
  br i1 false, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %3 = icmp eq i64 %capacity, 0
  br i1 %3, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  store ptr inttoptr (i64 1 to ptr), ptr %_29, align 8
  %4 = load ptr, ptr %_29, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %_28, align 8
  %5 = load ptr, ptr %_28, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %5, ptr %6, align 8
  store i64 0, ptr %_0, align 8
  br label %bb13

bb3:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array::inner
  %7 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17h7b4b019e487e1690E(i64 1, i64 1, i64 %capacity)
          to label %bb16 unwind label %cleanup

bb15:                                             ; preds = %cleanup
  %8 = load ptr, ptr %1, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %1, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12

cleanup:                                          ; preds = %bb4, %bb11, %bb6, %bb7, %bb3
  %13 = landingpad { ptr, i32 }
          cleanup
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
  store ptr %14, ptr %1, align 8
  %16 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %15, ptr %16, align 8
  br label %bb15

bb16:                                             ; preds = %bb3
  %17 = extractvalue { i64, i64 } %7, 0
  %18 = extractvalue { i64, i64 } %7, 1
  store i64 %17, ptr %_7, align 8
  %19 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %18, ptr %19, align 8
  %20 = load i64, ptr %_7, align 8, !range !12, !noundef !3
  %21 = icmp eq i64 %20, 0
  %_8 = select i1 %21, i64 1, i64 0
  %22 = icmp eq i64 %_8, 0
  br i1 %22, label %bb5, label %bb4

bb5:                                              ; preds = %bb16
  %layout.0 = load i64, ptr %_7, align 8, !range !26, !noundef !3
  %23 = getelementptr inbounds i8, ptr %_7, i64 8
  %layout.1 = load i64, ptr %23, align 8, !noundef !3
  store i64 %layout.0, ptr %layout, align 8
  %24 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %layout.1, ptr %24, align 8
  %25 = getelementptr inbounds i8, ptr %layout, i64 8
  %alloc_size = load i64, ptr %25, align 8, !noundef !3
  %26 = load i8, ptr %init, align 1, !range !10, !noundef !3
  %27 = trunc i8 %26 to i1
  %_14 = zext i1 %27 to i64
  %28 = icmp eq i64 %_14, 0
  br i1 %28, label %bb7, label %bb6

bb4:                                              ; preds = %bb16
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hdebe4d61eabe5c80E() #27
          to label %unreachable unwind label %cleanup

bb7:                                              ; preds = %bb5
  %_16.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %29 = getelementptr inbounds i8, ptr %layout, i64 8
  %_16.1 = load i64, ptr %29, align 8, !noundef !3
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %30 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h8a8088df2849bd53E"(ptr align 1 %alloc, i64 %_16.0, i64 %_16.1)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_18.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %31 = getelementptr inbounds i8, ptr %layout, i64 8
  %_18.1 = load i64, ptr %31, align 8, !noundef !3
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %32 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h9bde4277a86bc281E"(ptr align 1 %alloc, i64 %_18.0, i64 %_18.1)
          to label %bb9 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %33 = extractvalue { ptr, i64 } %30, 0
  %34 = extractvalue { ptr, i64 } %30, 1
  store ptr %33, ptr %result, align 8
  %35 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %34, ptr %35, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %36 = load ptr, ptr %result, align 8, !noundef !3
  %37 = ptrtoint ptr %36 to i64
  %38 = icmp eq i64 %37, 0
  %_19 = select i1 %38, i64 1, i64 0
  %39 = icmp eq i64 %_19, 0
  br i1 %39, label %bb12, label %bb11

bb9:                                              ; preds = %bb6
  %40 = extractvalue { ptr, i64 } %32, 0
  %41 = extractvalue { ptr, i64 } %32, 1
  store ptr %40, ptr %result, align 8
  %42 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %41, ptr %42, align 8
  br label %bb10

bb12:                                             ; preds = %bb10
  %ptr.0 = load ptr, ptr %result, align 8, !nonnull !3, !noundef !3
  %43 = getelementptr inbounds i8, ptr %result, i64 8
  %ptr.1 = load i64, ptr %43, align 8, !noundef !3
  store ptr %ptr.0, ptr %self, align 8
  store ptr %ptr.0, ptr %_46, align 8
  %44 = load ptr, ptr %_46, align 8, !nonnull !3, !noundef !3
  store ptr %44, ptr %_23, align 8
  store i64 %capacity, ptr %_26, align 8
  %45 = load ptr, ptr %_23, align 8, !nonnull !3, !noundef !3
  %46 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %45, ptr %46, align 8
  %47 = load i64, ptr %_26, align 8, !range !13, !noundef !3
  store i64 %47, ptr %_0, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %_22.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %48 = getelementptr inbounds i8, ptr %layout, i64 8
  %_22.1 = load i64, ptr %48, align 8, !noundef !3
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h48039cdfd0d60c1cE(i64 %_22.0, i64 %_22.1) #27
          to label %unreachable unwind label %cleanup

bb13:                                             ; preds = %bb2, %bb12
  %49 = load i64, ptr %_0, align 8, !range !13, !noundef !3
  %50 = getelementptr inbounds i8, ptr %_0, i64 8
  %51 = load ptr, ptr %50, align 8, !nonnull !3, !noundef !3
  %52 = insertvalue { i64, ptr } poison, i64 %49, 0
  %53 = insertvalue { i64, ptr } %52, ptr %51, 1
  ret { i64, ptr } %53

unreachable:                                      ; preds = %bb4, %bb11
  unreachable

bb17:                                             ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h7f9a905a91520728E"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_46 = alloca ptr, align 8
  %_29 = alloca ptr, align 8
  %_28 = alloca ptr, align 8
  %_26 = alloca i64, align 8
  %self = alloca ptr, align 8
  %_23 = alloca ptr, align 8
  %result = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", align 8
  %_7 = alloca %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %_0 = alloca %"alloc::raw_vec::RawVec<&str>", align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %init, align 1
  br i1 false, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %3 = icmp eq i64 %capacity, 0
  br i1 %3, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  store ptr inttoptr (i64 8 to ptr), ptr %_29, align 8
  %4 = load ptr, ptr %_29, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %_28, align 8
  %5 = load ptr, ptr %_28, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %5, ptr %6, align 8
  store i64 0, ptr %_0, align 8
  br label %bb13

bb3:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array::inner
  %7 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17h7b4b019e487e1690E(i64 16, i64 8, i64 %capacity)
          to label %bb16 unwind label %cleanup

bb15:                                             ; preds = %cleanup
  %8 = load ptr, ptr %1, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %1, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12

cleanup:                                          ; preds = %bb4, %bb11, %bb6, %bb7, %bb3
  %13 = landingpad { ptr, i32 }
          cleanup
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
  store ptr %14, ptr %1, align 8
  %16 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %15, ptr %16, align 8
  br label %bb15

bb16:                                             ; preds = %bb3
  %17 = extractvalue { i64, i64 } %7, 0
  %18 = extractvalue { i64, i64 } %7, 1
  store i64 %17, ptr %_7, align 8
  %19 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %18, ptr %19, align 8
  %20 = load i64, ptr %_7, align 8, !range !12, !noundef !3
  %21 = icmp eq i64 %20, 0
  %_8 = select i1 %21, i64 1, i64 0
  %22 = icmp eq i64 %_8, 0
  br i1 %22, label %bb5, label %bb4

bb5:                                              ; preds = %bb16
  %layout.0 = load i64, ptr %_7, align 8, !range !26, !noundef !3
  %23 = getelementptr inbounds i8, ptr %_7, i64 8
  %layout.1 = load i64, ptr %23, align 8, !noundef !3
  store i64 %layout.0, ptr %layout, align 8
  %24 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %layout.1, ptr %24, align 8
  %25 = getelementptr inbounds i8, ptr %layout, i64 8
  %alloc_size = load i64, ptr %25, align 8, !noundef !3
  %26 = load i8, ptr %init, align 1, !range !10, !noundef !3
  %27 = trunc i8 %26 to i1
  %_14 = zext i1 %27 to i64
  %28 = icmp eq i64 %_14, 0
  br i1 %28, label %bb7, label %bb6

bb4:                                              ; preds = %bb16
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hdebe4d61eabe5c80E() #27
          to label %unreachable unwind label %cleanup

bb7:                                              ; preds = %bb5
  %_16.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %29 = getelementptr inbounds i8, ptr %layout, i64 8
  %_16.1 = load i64, ptr %29, align 8, !noundef !3
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %30 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h8a8088df2849bd53E"(ptr align 1 %alloc, i64 %_16.0, i64 %_16.1)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_18.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %31 = getelementptr inbounds i8, ptr %layout, i64 8
  %_18.1 = load i64, ptr %31, align 8, !noundef !3
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %32 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h9bde4277a86bc281E"(ptr align 1 %alloc, i64 %_18.0, i64 %_18.1)
          to label %bb9 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %33 = extractvalue { ptr, i64 } %30, 0
  %34 = extractvalue { ptr, i64 } %30, 1
  store ptr %33, ptr %result, align 8
  %35 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %34, ptr %35, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %36 = load ptr, ptr %result, align 8, !noundef !3
  %37 = ptrtoint ptr %36 to i64
  %38 = icmp eq i64 %37, 0
  %_19 = select i1 %38, i64 1, i64 0
  %39 = icmp eq i64 %_19, 0
  br i1 %39, label %bb12, label %bb11

bb9:                                              ; preds = %bb6
  %40 = extractvalue { ptr, i64 } %32, 0
  %41 = extractvalue { ptr, i64 } %32, 1
  store ptr %40, ptr %result, align 8
  %42 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %41, ptr %42, align 8
  br label %bb10

bb12:                                             ; preds = %bb10
  %ptr.0 = load ptr, ptr %result, align 8, !nonnull !3, !noundef !3
  %43 = getelementptr inbounds i8, ptr %result, i64 8
  %ptr.1 = load i64, ptr %43, align 8, !noundef !3
  store ptr %ptr.0, ptr %self, align 8
  store ptr %ptr.0, ptr %_46, align 8
  %44 = load ptr, ptr %_46, align 8, !nonnull !3, !noundef !3
  store ptr %44, ptr %_23, align 8
  store i64 %capacity, ptr %_26, align 8
  %45 = load ptr, ptr %_23, align 8, !nonnull !3, !noundef !3
  %46 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %45, ptr %46, align 8
  %47 = load i64, ptr %_26, align 8, !range !13, !noundef !3
  store i64 %47, ptr %_0, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %_22.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %48 = getelementptr inbounds i8, ptr %layout, i64 8
  %_22.1 = load i64, ptr %48, align 8, !noundef !3
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h48039cdfd0d60c1cE(i64 %_22.0, i64 %_22.1) #27
          to label %unreachable unwind label %cleanup

bb13:                                             ; preds = %bb2, %bb12
  %49 = load i64, ptr %_0, align 8, !range !13, !noundef !3
  %50 = getelementptr inbounds i8, ptr %_0, i64 8
  %51 = load ptr, ptr %50, align 8, !nonnull !3, !noundef !3
  %52 = insertvalue { i64, ptr } poison, i64 %49, 0
  %53 = insertvalue { i64, ptr } %52, ptr %51, 1
  ret { i64, ptr } %53

unreachable:                                      ; preds = %bb4, %bb11
  unreachable

bb17:                                             ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::allocate_in
; Function Attrs: nonlazybind uwtable
define { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h932932697f18691bE"(i64 %capacity, i1 zeroext %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_46 = alloca ptr, align 8
  %_29 = alloca ptr, align 8
  %_28 = alloca ptr, align 8
  %_26 = alloca i64, align 8
  %self = alloca ptr, align 8
  %_23 = alloca ptr, align 8
  %result = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", align 8
  %_7 = alloca %"core::result::Result<core::alloc::layout::Layout, core::alloc::layout::LayoutError>", align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %_0 = alloca %"alloc::raw_vec::RawVec<alloc::string::String>", align 8
  %alloc = alloca %"alloc::alloc::Global", align 1
  %init = alloca i8, align 1
  %2 = zext i1 %0 to i8
  store i8 %2, ptr %init, align 1
  br i1 false, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %3 = icmp eq i64 %capacity, 0
  br i1 %3, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  store ptr inttoptr (i64 8 to ptr), ptr %_29, align 8
  %4 = load ptr, ptr %_29, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %_28, align 8
  %5 = load ptr, ptr %_28, align 8, !nonnull !3, !noundef !3
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %5, ptr %6, align 8
  store i64 0, ptr %_0, align 8
  br label %bb13

bb3:                                              ; preds = %bb1
; invoke core::alloc::layout::Layout::array::inner
  %7 = invoke { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17h7b4b019e487e1690E(i64 24, i64 8, i64 %capacity)
          to label %bb16 unwind label %cleanup

bb15:                                             ; preds = %cleanup
  %8 = load ptr, ptr %1, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %1, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12

cleanup:                                          ; preds = %bb4, %bb11, %bb6, %bb7, %bb3
  %13 = landingpad { ptr, i32 }
          cleanup
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
  store ptr %14, ptr %1, align 8
  %16 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %15, ptr %16, align 8
  br label %bb15

bb16:                                             ; preds = %bb3
  %17 = extractvalue { i64, i64 } %7, 0
  %18 = extractvalue { i64, i64 } %7, 1
  store i64 %17, ptr %_7, align 8
  %19 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %18, ptr %19, align 8
  %20 = load i64, ptr %_7, align 8, !range !12, !noundef !3
  %21 = icmp eq i64 %20, 0
  %_8 = select i1 %21, i64 1, i64 0
  %22 = icmp eq i64 %_8, 0
  br i1 %22, label %bb5, label %bb4

bb5:                                              ; preds = %bb16
  %layout.0 = load i64, ptr %_7, align 8, !range !26, !noundef !3
  %23 = getelementptr inbounds i8, ptr %_7, i64 8
  %layout.1 = load i64, ptr %23, align 8, !noundef !3
  store i64 %layout.0, ptr %layout, align 8
  %24 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %layout.1, ptr %24, align 8
  %25 = getelementptr inbounds i8, ptr %layout, i64 8
  %alloc_size = load i64, ptr %25, align 8, !noundef !3
  %26 = load i8, ptr %init, align 1, !range !10, !noundef !3
  %27 = trunc i8 %26 to i1
  %_14 = zext i1 %27 to i64
  %28 = icmp eq i64 %_14, 0
  br i1 %28, label %bb7, label %bb6

bb4:                                              ; preds = %bb16
; invoke alloc::raw_vec::capacity_overflow
  invoke void @_ZN5alloc7raw_vec17capacity_overflow17hdebe4d61eabe5c80E() #27
          to label %unreachable unwind label %cleanup

bb7:                                              ; preds = %bb5
  %_16.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %29 = getelementptr inbounds i8, ptr %layout, i64 8
  %_16.1 = load i64, ptr %29, align 8, !noundef !3
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %30 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h8a8088df2849bd53E"(ptr align 1 %alloc, i64 %_16.0, i64 %_16.1)
          to label %bb8 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_18.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %31 = getelementptr inbounds i8, ptr %layout, i64 8
  %_18.1 = load i64, ptr %31, align 8, !noundef !3
; invoke <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
  %32 = invoke { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h9bde4277a86bc281E"(ptr align 1 %alloc, i64 %_18.0, i64 %_18.1)
          to label %bb9 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %33 = extractvalue { ptr, i64 } %30, 0
  %34 = extractvalue { ptr, i64 } %30, 1
  store ptr %33, ptr %result, align 8
  %35 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %34, ptr %35, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %36 = load ptr, ptr %result, align 8, !noundef !3
  %37 = ptrtoint ptr %36 to i64
  %38 = icmp eq i64 %37, 0
  %_19 = select i1 %38, i64 1, i64 0
  %39 = icmp eq i64 %_19, 0
  br i1 %39, label %bb12, label %bb11

bb9:                                              ; preds = %bb6
  %40 = extractvalue { ptr, i64 } %32, 0
  %41 = extractvalue { ptr, i64 } %32, 1
  store ptr %40, ptr %result, align 8
  %42 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %41, ptr %42, align 8
  br label %bb10

bb12:                                             ; preds = %bb10
  %ptr.0 = load ptr, ptr %result, align 8, !nonnull !3, !noundef !3
  %43 = getelementptr inbounds i8, ptr %result, i64 8
  %ptr.1 = load i64, ptr %43, align 8, !noundef !3
  store ptr %ptr.0, ptr %self, align 8
  store ptr %ptr.0, ptr %_46, align 8
  %44 = load ptr, ptr %_46, align 8, !nonnull !3, !noundef !3
  store ptr %44, ptr %_23, align 8
  store i64 %capacity, ptr %_26, align 8
  %45 = load ptr, ptr %_23, align 8, !nonnull !3, !noundef !3
  %46 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %45, ptr %46, align 8
  %47 = load i64, ptr %_26, align 8, !range !13, !noundef !3
  store i64 %47, ptr %_0, align 8
  br label %bb13

bb11:                                             ; preds = %bb10
  %_22.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %48 = getelementptr inbounds i8, ptr %layout, i64 8
  %_22.1 = load i64, ptr %48, align 8, !noundef !3
; invoke alloc::alloc::handle_alloc_error
  invoke void @_ZN5alloc5alloc18handle_alloc_error17h48039cdfd0d60c1cE(i64 %_22.0, i64 %_22.1) #27
          to label %unreachable unwind label %cleanup

bb13:                                             ; preds = %bb2, %bb12
  %49 = load i64, ptr %_0, align 8, !range !13, !noundef !3
  %50 = getelementptr inbounds i8, ptr %_0, i64 8
  %51 = load ptr, ptr %50, align 8, !nonnull !3, !noundef !3
  %52 = insertvalue { i64, ptr } poison, i64 %49, 0
  %53 = insertvalue { i64, ptr } %52, ptr %51, 1
  ret { i64, ptr } %53

unreachable:                                      ; preds = %bb4, %bb11
  unreachable

bb17:                                             ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h07fdb8f9ccfa4336E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %self2 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  %_9 = alloca { ptr, %"core::alloc::layout::Layout" }, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  br i1 false, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8, !noundef !3
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  %1 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8, !noundef !3
  %size = mul nuw i64 24, %rhs
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 8, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self3 = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  store ptr %self3, ptr %self1, align 8
  store ptr %self3, ptr %self2, align 8
  store ptr %self3, ptr %_10, align 8
  %4 = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %_9, align 8
  %5 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %6 = getelementptr inbounds i8, ptr %layout, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
  %8 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_9, i32 0, i32 1
  store i64 %5, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %7, ptr %9, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h6e4687a36ee9cd08E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %self2 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  %_9 = alloca { ptr, %"core::alloc::layout::Layout" }, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  br i1 false, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8, !noundef !3
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  %1 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8, !noundef !3
  %size = mul nuw i64 24, %rhs
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 8, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self3 = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  store ptr %self3, ptr %self1, align 8
  store ptr %self3, ptr %self2, align 8
  store ptr %self3, ptr %_10, align 8
  %4 = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %_9, align 8
  %5 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %6 = getelementptr inbounds i8, ptr %layout, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
  %8 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_9, i32 0, i32 1
  store i64 %5, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %7, ptr %9, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h7b9e2e38d815380cE"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %self2 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  %_9 = alloca { ptr, %"core::alloc::layout::Layout" }, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  br i1 false, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8, !noundef !3
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  %1 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8, !noundef !3
  %size = mul nuw i64 16, %rhs
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 8, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self3 = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  store ptr %self3, ptr %self1, align 8
  store ptr %self3, ptr %self2, align 8
  store ptr %self3, ptr %_10, align 8
  %4 = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %_9, align 8
  %5 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %6 = getelementptr inbounds i8, ptr %layout, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
  %8 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_9, i32 0, i32 1
  store i64 %5, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %7, ptr %9, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9149c4b9324cc59cE"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %self2 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  %_9 = alloca { ptr, %"core::alloc::layout::Layout" }, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  br i1 false, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8, !noundef !3
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  %1 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8, !noundef !3
  %size = mul nuw i64 24, %rhs
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 8, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self3 = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  store ptr %self3, ptr %self1, align 8
  store ptr %self3, ptr %self2, align 8
  store ptr %self3, ptr %_10, align 8
  %4 = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %_9, align 8
  %5 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %6 = getelementptr inbounds i8, ptr %layout, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
  %8 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_9, i32 0, i32 1
  store i64 %5, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %7, ptr %9, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hb694ea140937d94fE"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %self2 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  %_9 = alloca { ptr, %"core::alloc::layout::Layout" }, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  br i1 false, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8, !noundef !3
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  %1 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8, !noundef !3
  %size = mul nuw i64 1, %rhs
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 1, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self3 = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  store ptr %self3, ptr %self1, align 8
  store ptr %self3, ptr %self2, align 8
  store ptr %self3, ptr %_10, align 8
  %4 = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %_9, align 8
  %5 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %6 = getelementptr inbounds i8, ptr %layout, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
  %8 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_9, i32 0, i32 1
  store i64 %5, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %7, ptr %9, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hba546dc289c888f4E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %self2 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  %_9 = alloca { ptr, %"core::alloc::layout::Layout" }, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  br i1 false, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8, !noundef !3
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  %1 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8, !noundef !3
  %size = mul nuw i64 24, %rhs
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 8, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self3 = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  store ptr %self3, ptr %self1, align 8
  store ptr %self3, ptr %self2, align 8
  store ptr %self3, ptr %_10, align 8
  %4 = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %_9, align 8
  %5 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %6 = getelementptr inbounds i8, ptr %layout, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
  %8 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_9, i32 0, i32 1
  store i64 %5, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %7, ptr %9, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hbd5d151f1f2b23a7E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %self2 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  %_9 = alloca { ptr, %"core::alloc::layout::Layout" }, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  br i1 false, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8, !noundef !3
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  %1 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8, !noundef !3
  %size = mul nuw i64 16, %rhs
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 8, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self3 = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  store ptr %self3, ptr %self1, align 8
  store ptr %self3, ptr %self2, align 8
  store ptr %self3, ptr %_10, align 8
  %4 = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %_9, align 8
  %5 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %6 = getelementptr inbounds i8, ptr %layout, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
  %8 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_9, i32 0, i32 1
  store i64 %5, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %7, ptr %9, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hc295d53723748449E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %self2 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  %_9 = alloca { ptr, %"core::alloc::layout::Layout" }, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  br i1 false, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8, !noundef !3
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  %1 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8, !noundef !3
  %size = mul nuw i64 48, %rhs
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 8, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self3 = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  store ptr %self3, ptr %self1, align 8
  store ptr %self3, ptr %self2, align 8
  store ptr %self3, ptr %_10, align 8
  %4 = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %_9, align 8
  %5 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %6 = getelementptr inbounds i8, ptr %layout, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
  %8 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_9, i32 0, i32 1
  store i64 %5, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %7, ptr %9, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hcb22e17f1c87d314E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %self2 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  %_9 = alloca { ptr, %"core::alloc::layout::Layout" }, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  br i1 false, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8, !noundef !3
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  %1 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8, !noundef !3
  %size = mul nuw i64 16, %rhs
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 8, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self3 = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  store ptr %self3, ptr %self1, align 8
  store ptr %self3, ptr %self2, align 8
  store ptr %self3, ptr %_10, align 8
  %4 = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %_9, align 8
  %5 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %6 = getelementptr inbounds i8, ptr %layout, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
  %8 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_9, i32 0, i32 1
  store i64 %5, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %7, ptr %9, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void
}

; alloc::raw_vec::RawVec<T,A>::current_memory
; Function Attrs: nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17he67d1fd90dcebfeaE"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
  %self2 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  %_9 = alloca { ptr, %"core::alloc::layout::Layout" }, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  br i1 false, label %bb2, label %bb1

bb1:                                              ; preds = %start
  %_3 = load i64, ptr %self, align 8, !noundef !3
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %start
  %1 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_0, i32 0, i32 1
  store i64 0, ptr %1, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %rhs = load i64, ptr %self, align 8, !noundef !3
  %size = mul nuw i64 8, %rhs
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 8, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self3 = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  store ptr %self3, ptr %self1, align 8
  store ptr %self3, ptr %self2, align 8
  store ptr %self3, ptr %_10, align 8
  %4 = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %_9, align 8
  %5 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %6 = getelementptr inbounds i8, ptr %layout, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
  %8 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_9, i32 0, i32 1
  store i64 %5, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %7, ptr %9, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_9, i64 24, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  ret void
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h52ed4fbc63a92d72E"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_59 = alloca ptr, align 8
  %_52 = alloca i64, align 8
  %self5 = alloca ptr, align 8
  %_49 = alloca ptr, align 8
  %_48 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_38 = alloca %"alloc::collections::TryReserveError", align 8
  %_36 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %residual4 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_18 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_16 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %self2 = alloca %"core::option::Option<usize>", align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_0 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %len, i64 %additional)
  %_27.0 = extractvalue { i64, i1 } %1, 0
  %_27.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false)
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %0, align 1
  %4 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_24 = trunc i8 %4 to i1
  br i1 %_24, label %bb12, label %bb13

bb1:                                              ; preds = %start
  %5 = load i64, ptr @1, align 8, !range !23, !noundef !3
  %6 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %5, ptr %_0, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %6, ptr %7, align 8
  br label %bb10

bb13:                                             ; preds = %bb2
  %8 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %_27.0, ptr %8, align 8
  store i64 1, ptr %self2, align 8
  br label %bb14

bb12:                                             ; preds = %bb2
  %9 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %9, ptr %self2, align 8
  %11 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %10, ptr %11, align 8
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  %_31 = load i64, ptr %self2, align 8, !range !9, !noundef !3
  %12 = icmp eq i64 %_31, 0
  br i1 %12, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %13 = load i64, ptr @1, align 8, !range !12, !noundef !3
  %14 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %13, ptr %self1, align 8
  %15 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %14, ptr %15, align 8
  br label %bb17

bb16:                                             ; preds = %bb14
  %16 = getelementptr inbounds i8, ptr %self2, i64 8
  %v = load i64, ptr %16, align 8, !noundef !3
  %17 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", ptr %self1, i32 0, i32 1
  store i64 %v, ptr %17, align 8
  store i64 -9223372036854775807, ptr %self1, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %18 = load i64, ptr %self1, align 8, !range !23, !noundef !3
  %19 = icmp eq i64 %18, -9223372036854775807
  %_33 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_33, 0
  br i1 %20, label %bb20, label %bb19

bb20:                                             ; preds = %bb17
  %21 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", ptr %self1, i32 0, i32 1
  %v6 = load i64, ptr %21, align 8, !noundef !3
  %22 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", ptr %_5, i32 0, i32 1
  store i64 %v6, ptr %22, align 8
  store i64 -9223372036854775807, ptr %_5, align 8
  br label %bb18

bb19:                                             ; preds = %bb17
  %e.0 = load i64, ptr %self1, align 8, !range !12, !noundef !3
  %23 = getelementptr inbounds i8, ptr %self1, i64 8
  %e.1 = load i64, ptr %23, align 8
  store i64 %e.0, ptr %_36, align 8
  %24 = getelementptr inbounds i8, ptr %_36, i64 8
  store i64 %e.1, ptr %24, align 8
  %25 = load i64, ptr %_36, align 8, !range !12, !noundef !3
  %26 = getelementptr inbounds i8, ptr %_36, i64 8
  %27 = load i64, ptr %26, align 8
  store i64 %25, ptr %_5, align 8
  %28 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %27, ptr %28, align 8
  br label %bb18

bb18:                                             ; preds = %bb19, %bb20
  %29 = load i64, ptr %_5, align 8, !range !23, !noundef !3
  %30 = icmp eq i64 %29, -9223372036854775807
  %_8 = select i1 %30, i64 0, i64 1
  %31 = icmp eq i64 %_8, 0
  br i1 %31, label %bb3, label %bb4

bb3:                                              ; preds = %bb18
  %32 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", ptr %_5, i32 0, i32 1
  %required_cap = load i64, ptr %32, align 8, !noundef !3
  %_13 = load i64, ptr %self, align 8, !noundef !3
  %v1 = mul i64 %_13, 2
; call core::cmp::max_by
  %cap = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 %v1, i64 %required_cap)
; call core::cmp::max_by
  %cap7 = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 4, i64 %cap)
; call core::alloc::layout::Layout::array::inner
  %33 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17h7b4b019e487e1690E(i64 24, i64 8, i64 %cap7)
  %new_layout.0 = extractvalue { i64, i64 } %33, 0
  %new_layout.1 = extractvalue { i64, i64 } %33, 1
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9149c4b9324cc59cE"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_18, ptr align 8 %self)
  %_20 = getelementptr inbounds i8, ptr %self, i64 16
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17habb2cfab89ff935aE(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") align 8 %self3, i64 %new_layout.0, i64 %new_layout.1, ptr align 8 %_18, ptr align 1 %_20)
  %_45 = load i64, ptr %self3, align 8, !range !9, !noundef !3
  %34 = icmp eq i64 %_45, 0
  br i1 %34, label %bb26, label %bb25

bb4:                                              ; preds = %bb18
  %35 = load i64, ptr %_5, align 8, !range !12, !noundef !3
  %36 = getelementptr inbounds i8, ptr %_5, i64 8
  %37 = load i64, ptr %36, align 8
  store i64 %35, ptr %residual, align 8
  %38 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %37, ptr %38, align 8
  %e.012 = load i64, ptr %residual, align 8, !range !12, !noundef !3
  %39 = getelementptr inbounds i8, ptr %residual, i64 8
  %e.113 = load i64, ptr %39, align 8
  store i64 %e.012, ptr %_38, align 8
  %40 = getelementptr inbounds i8, ptr %_38, i64 8
  store i64 %e.113, ptr %40, align 8
  %41 = load i64, ptr %_38, align 8, !range !12, !noundef !3
  %42 = getelementptr inbounds i8, ptr %_38, i64 8
  %43 = load i64, ptr %42, align 8
  store i64 %41, ptr %_0, align 8
  %44 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %43, ptr %44, align 8
  br label %bb9

bb26:                                             ; preds = %bb3
  %45 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", ptr %self3, i32 0, i32 1
  %v.0 = load ptr, ptr %45, align 8, !nonnull !3, !noundef !3
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  %v.1 = load i64, ptr %46, align 8, !noundef !3
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_16, i32 0, i32 1
  store ptr %v.0, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store i64 %v.1, ptr %48, align 8
  store i64 0, ptr %_16, align 8
  br label %bb24

bb25:                                             ; preds = %bb3
  %49 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", ptr %self3, i32 0, i32 1
  %e.08 = load i64, ptr %49, align 8, !range !12, !noundef !3
  %50 = getelementptr inbounds i8, ptr %49, i64 8
  %e.19 = load i64, ptr %50, align 8
  store i64 %e.08, ptr %_48, align 8
  %51 = getelementptr inbounds i8, ptr %_48, i64 8
  store i64 %e.19, ptr %51, align 8
  %52 = load i64, ptr %_48, align 8, !range !12, !noundef !3
  %53 = getelementptr inbounds i8, ptr %_48, i64 8
  %54 = load i64, ptr %53, align 8
  %55 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_16, i32 0, i32 1
  store i64 %52, ptr %55, align 8
  %56 = getelementptr inbounds i8, ptr %55, i64 8
  store i64 %54, ptr %56, align 8
  store i64 1, ptr %_16, align 8
  br label %bb24

bb24:                                             ; preds = %bb25, %bb26
  %_21 = load i64, ptr %_16, align 8, !range !9, !noundef !3
  %57 = icmp eq i64 %_21, 0
  br i1 %57, label %bb7, label %bb8

bb7:                                              ; preds = %bb24
  %58 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_16, i32 0, i32 1
  %ptr.0 = load ptr, ptr %58, align 8, !nonnull !3, !noundef !3
  %59 = getelementptr inbounds i8, ptr %58, i64 8
  %ptr.1 = load i64, ptr %59, align 8, !noundef !3
  store ptr %ptr.0, ptr %self5, align 8
  store ptr %ptr.0, ptr %_59, align 8
  %60 = load ptr, ptr %_59, align 8, !nonnull !3, !noundef !3
  store ptr %60, ptr %_49, align 8
  %61 = getelementptr inbounds i8, ptr %self, i64 8
  %62 = load ptr, ptr %_49, align 8, !nonnull !3, !noundef !3
  store ptr %62, ptr %61, align 8
  store i64 %cap7, ptr %_52, align 8
  %63 = load i64, ptr %_52, align 8, !range !13, !noundef !3
  store i64 %63, ptr %self, align 8
  %64 = load i64, ptr @5, align 8, !range !23, !noundef !3
  %65 = load i64, ptr getelementptr inbounds (i8, ptr @5, i64 8), align 8
  store i64 %64, ptr %_0, align 8
  %66 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %65, ptr %66, align 8
  br label %bb10

bb8:                                              ; preds = %bb24
  %67 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_16, i32 0, i32 1
  %68 = load i64, ptr %67, align 8, !range !12, !noundef !3
  %69 = getelementptr inbounds i8, ptr %67, i64 8
  %70 = load i64, ptr %69, align 8
  store i64 %68, ptr %residual4, align 8
  %71 = getelementptr inbounds i8, ptr %residual4, i64 8
  store i64 %70, ptr %71, align 8
  %e.010 = load i64, ptr %residual4, align 8, !range !12, !noundef !3
  %72 = getelementptr inbounds i8, ptr %residual4, i64 8
  %e.111 = load i64, ptr %72, align 8
  store i64 %e.010, ptr %_0, align 8
  %73 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %e.111, ptr %73, align 8
  br label %bb9

bb10:                                             ; preds = %bb1, %bb9, %bb7
  %74 = load i64, ptr %_0, align 8, !range !23, !noundef !3
  %75 = getelementptr inbounds i8, ptr %_0, i64 8
  %76 = load i64, ptr %75, align 8
  %77 = insertvalue { i64, i64 } poison, i64 %74, 0
  %78 = insertvalue { i64, i64 } %77, i64 %76, 1
  ret { i64, i64 } %78

bb9:                                              ; preds = %bb4, %bb8
  br label %bb10

bb27:                                             ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h7eda2524c17c8d1aE"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_59 = alloca ptr, align 8
  %_52 = alloca i64, align 8
  %self5 = alloca ptr, align 8
  %_49 = alloca ptr, align 8
  %_48 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_38 = alloca %"alloc::collections::TryReserveError", align 8
  %_36 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %residual4 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_18 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_16 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %self2 = alloca %"core::option::Option<usize>", align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_0 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %len, i64 %additional)
  %_27.0 = extractvalue { i64, i1 } %1, 0
  %_27.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false)
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %0, align 1
  %4 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_24 = trunc i8 %4 to i1
  br i1 %_24, label %bb12, label %bb13

bb1:                                              ; preds = %start
  %5 = load i64, ptr @1, align 8, !range !23, !noundef !3
  %6 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %5, ptr %_0, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %6, ptr %7, align 8
  br label %bb10

bb13:                                             ; preds = %bb2
  %8 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %_27.0, ptr %8, align 8
  store i64 1, ptr %self2, align 8
  br label %bb14

bb12:                                             ; preds = %bb2
  %9 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %9, ptr %self2, align 8
  %11 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %10, ptr %11, align 8
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  %_31 = load i64, ptr %self2, align 8, !range !9, !noundef !3
  %12 = icmp eq i64 %_31, 0
  br i1 %12, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %13 = load i64, ptr @1, align 8, !range !12, !noundef !3
  %14 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %13, ptr %self1, align 8
  %15 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %14, ptr %15, align 8
  br label %bb17

bb16:                                             ; preds = %bb14
  %16 = getelementptr inbounds i8, ptr %self2, i64 8
  %v = load i64, ptr %16, align 8, !noundef !3
  %17 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", ptr %self1, i32 0, i32 1
  store i64 %v, ptr %17, align 8
  store i64 -9223372036854775807, ptr %self1, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %18 = load i64, ptr %self1, align 8, !range !23, !noundef !3
  %19 = icmp eq i64 %18, -9223372036854775807
  %_33 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_33, 0
  br i1 %20, label %bb20, label %bb19

bb20:                                             ; preds = %bb17
  %21 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", ptr %self1, i32 0, i32 1
  %v6 = load i64, ptr %21, align 8, !noundef !3
  %22 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", ptr %_5, i32 0, i32 1
  store i64 %v6, ptr %22, align 8
  store i64 -9223372036854775807, ptr %_5, align 8
  br label %bb18

bb19:                                             ; preds = %bb17
  %e.0 = load i64, ptr %self1, align 8, !range !12, !noundef !3
  %23 = getelementptr inbounds i8, ptr %self1, i64 8
  %e.1 = load i64, ptr %23, align 8
  store i64 %e.0, ptr %_36, align 8
  %24 = getelementptr inbounds i8, ptr %_36, i64 8
  store i64 %e.1, ptr %24, align 8
  %25 = load i64, ptr %_36, align 8, !range !12, !noundef !3
  %26 = getelementptr inbounds i8, ptr %_36, i64 8
  %27 = load i64, ptr %26, align 8
  store i64 %25, ptr %_5, align 8
  %28 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %27, ptr %28, align 8
  br label %bb18

bb18:                                             ; preds = %bb19, %bb20
  %29 = load i64, ptr %_5, align 8, !range !23, !noundef !3
  %30 = icmp eq i64 %29, -9223372036854775807
  %_8 = select i1 %30, i64 0, i64 1
  %31 = icmp eq i64 %_8, 0
  br i1 %31, label %bb3, label %bb4

bb3:                                              ; preds = %bb18
  %32 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", ptr %_5, i32 0, i32 1
  %required_cap = load i64, ptr %32, align 8, !noundef !3
  %_13 = load i64, ptr %self, align 8, !noundef !3
  %v1 = mul i64 %_13, 2
; call core::cmp::max_by
  %cap = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 %v1, i64 %required_cap)
; call core::cmp::max_by
  %cap7 = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 8, i64 %cap)
; call core::alloc::layout::Layout::array::inner
  %33 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17h7b4b019e487e1690E(i64 1, i64 1, i64 %cap7)
  %new_layout.0 = extractvalue { i64, i64 } %33, 0
  %new_layout.1 = extractvalue { i64, i64 } %33, 1
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hb694ea140937d94fE"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_18, ptr align 8 %self)
  %_20 = getelementptr inbounds i8, ptr %self, i64 16
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17habb2cfab89ff935aE(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") align 8 %self3, i64 %new_layout.0, i64 %new_layout.1, ptr align 8 %_18, ptr align 1 %_20)
  %_45 = load i64, ptr %self3, align 8, !range !9, !noundef !3
  %34 = icmp eq i64 %_45, 0
  br i1 %34, label %bb26, label %bb25

bb4:                                              ; preds = %bb18
  %35 = load i64, ptr %_5, align 8, !range !12, !noundef !3
  %36 = getelementptr inbounds i8, ptr %_5, i64 8
  %37 = load i64, ptr %36, align 8
  store i64 %35, ptr %residual, align 8
  %38 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %37, ptr %38, align 8
  %e.012 = load i64, ptr %residual, align 8, !range !12, !noundef !3
  %39 = getelementptr inbounds i8, ptr %residual, i64 8
  %e.113 = load i64, ptr %39, align 8
  store i64 %e.012, ptr %_38, align 8
  %40 = getelementptr inbounds i8, ptr %_38, i64 8
  store i64 %e.113, ptr %40, align 8
  %41 = load i64, ptr %_38, align 8, !range !12, !noundef !3
  %42 = getelementptr inbounds i8, ptr %_38, i64 8
  %43 = load i64, ptr %42, align 8
  store i64 %41, ptr %_0, align 8
  %44 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %43, ptr %44, align 8
  br label %bb9

bb26:                                             ; preds = %bb3
  %45 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", ptr %self3, i32 0, i32 1
  %v.0 = load ptr, ptr %45, align 8, !nonnull !3, !noundef !3
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  %v.1 = load i64, ptr %46, align 8, !noundef !3
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_16, i32 0, i32 1
  store ptr %v.0, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store i64 %v.1, ptr %48, align 8
  store i64 0, ptr %_16, align 8
  br label %bb24

bb25:                                             ; preds = %bb3
  %49 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", ptr %self3, i32 0, i32 1
  %e.08 = load i64, ptr %49, align 8, !range !12, !noundef !3
  %50 = getelementptr inbounds i8, ptr %49, i64 8
  %e.19 = load i64, ptr %50, align 8
  store i64 %e.08, ptr %_48, align 8
  %51 = getelementptr inbounds i8, ptr %_48, i64 8
  store i64 %e.19, ptr %51, align 8
  %52 = load i64, ptr %_48, align 8, !range !12, !noundef !3
  %53 = getelementptr inbounds i8, ptr %_48, i64 8
  %54 = load i64, ptr %53, align 8
  %55 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_16, i32 0, i32 1
  store i64 %52, ptr %55, align 8
  %56 = getelementptr inbounds i8, ptr %55, i64 8
  store i64 %54, ptr %56, align 8
  store i64 1, ptr %_16, align 8
  br label %bb24

bb24:                                             ; preds = %bb25, %bb26
  %_21 = load i64, ptr %_16, align 8, !range !9, !noundef !3
  %57 = icmp eq i64 %_21, 0
  br i1 %57, label %bb7, label %bb8

bb7:                                              ; preds = %bb24
  %58 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_16, i32 0, i32 1
  %ptr.0 = load ptr, ptr %58, align 8, !nonnull !3, !noundef !3
  %59 = getelementptr inbounds i8, ptr %58, i64 8
  %ptr.1 = load i64, ptr %59, align 8, !noundef !3
  store ptr %ptr.0, ptr %self5, align 8
  store ptr %ptr.0, ptr %_59, align 8
  %60 = load ptr, ptr %_59, align 8, !nonnull !3, !noundef !3
  store ptr %60, ptr %_49, align 8
  %61 = getelementptr inbounds i8, ptr %self, i64 8
  %62 = load ptr, ptr %_49, align 8, !nonnull !3, !noundef !3
  store ptr %62, ptr %61, align 8
  store i64 %cap7, ptr %_52, align 8
  %63 = load i64, ptr %_52, align 8, !range !13, !noundef !3
  store i64 %63, ptr %self, align 8
  %64 = load i64, ptr @5, align 8, !range !23, !noundef !3
  %65 = load i64, ptr getelementptr inbounds (i8, ptr @5, i64 8), align 8
  store i64 %64, ptr %_0, align 8
  %66 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %65, ptr %66, align 8
  br label %bb10

bb8:                                              ; preds = %bb24
  %67 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_16, i32 0, i32 1
  %68 = load i64, ptr %67, align 8, !range !12, !noundef !3
  %69 = getelementptr inbounds i8, ptr %67, i64 8
  %70 = load i64, ptr %69, align 8
  store i64 %68, ptr %residual4, align 8
  %71 = getelementptr inbounds i8, ptr %residual4, i64 8
  store i64 %70, ptr %71, align 8
  %e.010 = load i64, ptr %residual4, align 8, !range !12, !noundef !3
  %72 = getelementptr inbounds i8, ptr %residual4, i64 8
  %e.111 = load i64, ptr %72, align 8
  store i64 %e.010, ptr %_0, align 8
  %73 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %e.111, ptr %73, align 8
  br label %bb9

bb10:                                             ; preds = %bb1, %bb9, %bb7
  %74 = load i64, ptr %_0, align 8, !range !23, !noundef !3
  %75 = getelementptr inbounds i8, ptr %_0, i64 8
  %76 = load i64, ptr %75, align 8
  %77 = insertvalue { i64, i64 } poison, i64 %74, 0
  %78 = insertvalue { i64, i64 } %77, i64 %76, 1
  ret { i64, i64 } %78

bb9:                                              ; preds = %bb4, %bb8
  br label %bb10

bb27:                                             ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hb46d5f1e6d319c16E"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_59 = alloca ptr, align 8
  %_52 = alloca i64, align 8
  %self5 = alloca ptr, align 8
  %_49 = alloca ptr, align 8
  %_48 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_38 = alloca %"alloc::collections::TryReserveError", align 8
  %_36 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %residual4 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_18 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_16 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %self2 = alloca %"core::option::Option<usize>", align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_0 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %len, i64 %additional)
  %_27.0 = extractvalue { i64, i1 } %1, 0
  %_27.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false)
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %0, align 1
  %4 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_24 = trunc i8 %4 to i1
  br i1 %_24, label %bb12, label %bb13

bb1:                                              ; preds = %start
  %5 = load i64, ptr @1, align 8, !range !23, !noundef !3
  %6 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %5, ptr %_0, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %6, ptr %7, align 8
  br label %bb10

bb13:                                             ; preds = %bb2
  %8 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %_27.0, ptr %8, align 8
  store i64 1, ptr %self2, align 8
  br label %bb14

bb12:                                             ; preds = %bb2
  %9 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %9, ptr %self2, align 8
  %11 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %10, ptr %11, align 8
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  %_31 = load i64, ptr %self2, align 8, !range !9, !noundef !3
  %12 = icmp eq i64 %_31, 0
  br i1 %12, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %13 = load i64, ptr @1, align 8, !range !12, !noundef !3
  %14 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %13, ptr %self1, align 8
  %15 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %14, ptr %15, align 8
  br label %bb17

bb16:                                             ; preds = %bb14
  %16 = getelementptr inbounds i8, ptr %self2, i64 8
  %v = load i64, ptr %16, align 8, !noundef !3
  %17 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", ptr %self1, i32 0, i32 1
  store i64 %v, ptr %17, align 8
  store i64 -9223372036854775807, ptr %self1, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %18 = load i64, ptr %self1, align 8, !range !23, !noundef !3
  %19 = icmp eq i64 %18, -9223372036854775807
  %_33 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_33, 0
  br i1 %20, label %bb20, label %bb19

bb20:                                             ; preds = %bb17
  %21 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", ptr %self1, i32 0, i32 1
  %v6 = load i64, ptr %21, align 8, !noundef !3
  %22 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", ptr %_5, i32 0, i32 1
  store i64 %v6, ptr %22, align 8
  store i64 -9223372036854775807, ptr %_5, align 8
  br label %bb18

bb19:                                             ; preds = %bb17
  %e.0 = load i64, ptr %self1, align 8, !range !12, !noundef !3
  %23 = getelementptr inbounds i8, ptr %self1, i64 8
  %e.1 = load i64, ptr %23, align 8
  store i64 %e.0, ptr %_36, align 8
  %24 = getelementptr inbounds i8, ptr %_36, i64 8
  store i64 %e.1, ptr %24, align 8
  %25 = load i64, ptr %_36, align 8, !range !12, !noundef !3
  %26 = getelementptr inbounds i8, ptr %_36, i64 8
  %27 = load i64, ptr %26, align 8
  store i64 %25, ptr %_5, align 8
  %28 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %27, ptr %28, align 8
  br label %bb18

bb18:                                             ; preds = %bb19, %bb20
  %29 = load i64, ptr %_5, align 8, !range !23, !noundef !3
  %30 = icmp eq i64 %29, -9223372036854775807
  %_8 = select i1 %30, i64 0, i64 1
  %31 = icmp eq i64 %_8, 0
  br i1 %31, label %bb3, label %bb4

bb3:                                              ; preds = %bb18
  %32 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", ptr %_5, i32 0, i32 1
  %required_cap = load i64, ptr %32, align 8, !noundef !3
  %_13 = load i64, ptr %self, align 8, !noundef !3
  %v1 = mul i64 %_13, 2
; call core::cmp::max_by
  %cap = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 %v1, i64 %required_cap)
; call core::cmp::max_by
  %cap7 = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 4, i64 %cap)
; call core::alloc::layout::Layout::array::inner
  %33 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17h7b4b019e487e1690E(i64 48, i64 8, i64 %cap7)
  %new_layout.0 = extractvalue { i64, i64 } %33, 0
  %new_layout.1 = extractvalue { i64, i64 } %33, 1
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hc295d53723748449E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_18, ptr align 8 %self)
  %_20 = getelementptr inbounds i8, ptr %self, i64 16
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17habb2cfab89ff935aE(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") align 8 %self3, i64 %new_layout.0, i64 %new_layout.1, ptr align 8 %_18, ptr align 1 %_20)
  %_45 = load i64, ptr %self3, align 8, !range !9, !noundef !3
  %34 = icmp eq i64 %_45, 0
  br i1 %34, label %bb26, label %bb25

bb4:                                              ; preds = %bb18
  %35 = load i64, ptr %_5, align 8, !range !12, !noundef !3
  %36 = getelementptr inbounds i8, ptr %_5, i64 8
  %37 = load i64, ptr %36, align 8
  store i64 %35, ptr %residual, align 8
  %38 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %37, ptr %38, align 8
  %e.012 = load i64, ptr %residual, align 8, !range !12, !noundef !3
  %39 = getelementptr inbounds i8, ptr %residual, i64 8
  %e.113 = load i64, ptr %39, align 8
  store i64 %e.012, ptr %_38, align 8
  %40 = getelementptr inbounds i8, ptr %_38, i64 8
  store i64 %e.113, ptr %40, align 8
  %41 = load i64, ptr %_38, align 8, !range !12, !noundef !3
  %42 = getelementptr inbounds i8, ptr %_38, i64 8
  %43 = load i64, ptr %42, align 8
  store i64 %41, ptr %_0, align 8
  %44 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %43, ptr %44, align 8
  br label %bb9

bb26:                                             ; preds = %bb3
  %45 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", ptr %self3, i32 0, i32 1
  %v.0 = load ptr, ptr %45, align 8, !nonnull !3, !noundef !3
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  %v.1 = load i64, ptr %46, align 8, !noundef !3
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_16, i32 0, i32 1
  store ptr %v.0, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store i64 %v.1, ptr %48, align 8
  store i64 0, ptr %_16, align 8
  br label %bb24

bb25:                                             ; preds = %bb3
  %49 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", ptr %self3, i32 0, i32 1
  %e.08 = load i64, ptr %49, align 8, !range !12, !noundef !3
  %50 = getelementptr inbounds i8, ptr %49, i64 8
  %e.19 = load i64, ptr %50, align 8
  store i64 %e.08, ptr %_48, align 8
  %51 = getelementptr inbounds i8, ptr %_48, i64 8
  store i64 %e.19, ptr %51, align 8
  %52 = load i64, ptr %_48, align 8, !range !12, !noundef !3
  %53 = getelementptr inbounds i8, ptr %_48, i64 8
  %54 = load i64, ptr %53, align 8
  %55 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_16, i32 0, i32 1
  store i64 %52, ptr %55, align 8
  %56 = getelementptr inbounds i8, ptr %55, i64 8
  store i64 %54, ptr %56, align 8
  store i64 1, ptr %_16, align 8
  br label %bb24

bb24:                                             ; preds = %bb25, %bb26
  %_21 = load i64, ptr %_16, align 8, !range !9, !noundef !3
  %57 = icmp eq i64 %_21, 0
  br i1 %57, label %bb7, label %bb8

bb7:                                              ; preds = %bb24
  %58 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_16, i32 0, i32 1
  %ptr.0 = load ptr, ptr %58, align 8, !nonnull !3, !noundef !3
  %59 = getelementptr inbounds i8, ptr %58, i64 8
  %ptr.1 = load i64, ptr %59, align 8, !noundef !3
  store ptr %ptr.0, ptr %self5, align 8
  store ptr %ptr.0, ptr %_59, align 8
  %60 = load ptr, ptr %_59, align 8, !nonnull !3, !noundef !3
  store ptr %60, ptr %_49, align 8
  %61 = getelementptr inbounds i8, ptr %self, i64 8
  %62 = load ptr, ptr %_49, align 8, !nonnull !3, !noundef !3
  store ptr %62, ptr %61, align 8
  store i64 %cap7, ptr %_52, align 8
  %63 = load i64, ptr %_52, align 8, !range !13, !noundef !3
  store i64 %63, ptr %self, align 8
  %64 = load i64, ptr @5, align 8, !range !23, !noundef !3
  %65 = load i64, ptr getelementptr inbounds (i8, ptr @5, i64 8), align 8
  store i64 %64, ptr %_0, align 8
  %66 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %65, ptr %66, align 8
  br label %bb10

bb8:                                              ; preds = %bb24
  %67 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_16, i32 0, i32 1
  %68 = load i64, ptr %67, align 8, !range !12, !noundef !3
  %69 = getelementptr inbounds i8, ptr %67, i64 8
  %70 = load i64, ptr %69, align 8
  store i64 %68, ptr %residual4, align 8
  %71 = getelementptr inbounds i8, ptr %residual4, i64 8
  store i64 %70, ptr %71, align 8
  %e.010 = load i64, ptr %residual4, align 8, !range !12, !noundef !3
  %72 = getelementptr inbounds i8, ptr %residual4, i64 8
  %e.111 = load i64, ptr %72, align 8
  store i64 %e.010, ptr %_0, align 8
  %73 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %e.111, ptr %73, align 8
  br label %bb9

bb10:                                             ; preds = %bb1, %bb9, %bb7
  %74 = load i64, ptr %_0, align 8, !range !23, !noundef !3
  %75 = getelementptr inbounds i8, ptr %_0, i64 8
  %76 = load i64, ptr %75, align 8
  %77 = insertvalue { i64, i64 } poison, i64 %74, 0
  %78 = insertvalue { i64, i64 } %77, i64 %76, 1
  ret { i64, i64 } %78

bb9:                                              ; preds = %bb4, %bb8
  br label %bb10

bb27:                                             ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hb84af3afa1df3293E"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_59 = alloca ptr, align 8
  %_52 = alloca i64, align 8
  %self5 = alloca ptr, align 8
  %_49 = alloca ptr, align 8
  %_48 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_38 = alloca %"alloc::collections::TryReserveError", align 8
  %_36 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %residual4 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_18 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_16 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %self2 = alloca %"core::option::Option<usize>", align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_0 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %len, i64 %additional)
  %_27.0 = extractvalue { i64, i1 } %1, 0
  %_27.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false)
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %0, align 1
  %4 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_24 = trunc i8 %4 to i1
  br i1 %_24, label %bb12, label %bb13

bb1:                                              ; preds = %start
  %5 = load i64, ptr @1, align 8, !range !23, !noundef !3
  %6 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %5, ptr %_0, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %6, ptr %7, align 8
  br label %bb10

bb13:                                             ; preds = %bb2
  %8 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %_27.0, ptr %8, align 8
  store i64 1, ptr %self2, align 8
  br label %bb14

bb12:                                             ; preds = %bb2
  %9 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %9, ptr %self2, align 8
  %11 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %10, ptr %11, align 8
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  %_31 = load i64, ptr %self2, align 8, !range !9, !noundef !3
  %12 = icmp eq i64 %_31, 0
  br i1 %12, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %13 = load i64, ptr @1, align 8, !range !12, !noundef !3
  %14 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %13, ptr %self1, align 8
  %15 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %14, ptr %15, align 8
  br label %bb17

bb16:                                             ; preds = %bb14
  %16 = getelementptr inbounds i8, ptr %self2, i64 8
  %v = load i64, ptr %16, align 8, !noundef !3
  %17 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", ptr %self1, i32 0, i32 1
  store i64 %v, ptr %17, align 8
  store i64 -9223372036854775807, ptr %self1, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %18 = load i64, ptr %self1, align 8, !range !23, !noundef !3
  %19 = icmp eq i64 %18, -9223372036854775807
  %_33 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_33, 0
  br i1 %20, label %bb20, label %bb19

bb20:                                             ; preds = %bb17
  %21 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", ptr %self1, i32 0, i32 1
  %v6 = load i64, ptr %21, align 8, !noundef !3
  %22 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", ptr %_5, i32 0, i32 1
  store i64 %v6, ptr %22, align 8
  store i64 -9223372036854775807, ptr %_5, align 8
  br label %bb18

bb19:                                             ; preds = %bb17
  %e.0 = load i64, ptr %self1, align 8, !range !12, !noundef !3
  %23 = getelementptr inbounds i8, ptr %self1, i64 8
  %e.1 = load i64, ptr %23, align 8
  store i64 %e.0, ptr %_36, align 8
  %24 = getelementptr inbounds i8, ptr %_36, i64 8
  store i64 %e.1, ptr %24, align 8
  %25 = load i64, ptr %_36, align 8, !range !12, !noundef !3
  %26 = getelementptr inbounds i8, ptr %_36, i64 8
  %27 = load i64, ptr %26, align 8
  store i64 %25, ptr %_5, align 8
  %28 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %27, ptr %28, align 8
  br label %bb18

bb18:                                             ; preds = %bb19, %bb20
  %29 = load i64, ptr %_5, align 8, !range !23, !noundef !3
  %30 = icmp eq i64 %29, -9223372036854775807
  %_8 = select i1 %30, i64 0, i64 1
  %31 = icmp eq i64 %_8, 0
  br i1 %31, label %bb3, label %bb4

bb3:                                              ; preds = %bb18
  %32 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", ptr %_5, i32 0, i32 1
  %required_cap = load i64, ptr %32, align 8, !noundef !3
  %_13 = load i64, ptr %self, align 8, !noundef !3
  %v1 = mul i64 %_13, 2
; call core::cmp::max_by
  %cap = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 %v1, i64 %required_cap)
; call core::cmp::max_by
  %cap7 = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 4, i64 %cap)
; call core::alloc::layout::Layout::array::inner
  %33 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17h7b4b019e487e1690E(i64 24, i64 8, i64 %cap7)
  %new_layout.0 = extractvalue { i64, i64 } %33, 0
  %new_layout.1 = extractvalue { i64, i64 } %33, 1
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hba546dc289c888f4E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_18, ptr align 8 %self)
  %_20 = getelementptr inbounds i8, ptr %self, i64 16
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17habb2cfab89ff935aE(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") align 8 %self3, i64 %new_layout.0, i64 %new_layout.1, ptr align 8 %_18, ptr align 1 %_20)
  %_45 = load i64, ptr %self3, align 8, !range !9, !noundef !3
  %34 = icmp eq i64 %_45, 0
  br i1 %34, label %bb26, label %bb25

bb4:                                              ; preds = %bb18
  %35 = load i64, ptr %_5, align 8, !range !12, !noundef !3
  %36 = getelementptr inbounds i8, ptr %_5, i64 8
  %37 = load i64, ptr %36, align 8
  store i64 %35, ptr %residual, align 8
  %38 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %37, ptr %38, align 8
  %e.012 = load i64, ptr %residual, align 8, !range !12, !noundef !3
  %39 = getelementptr inbounds i8, ptr %residual, i64 8
  %e.113 = load i64, ptr %39, align 8
  store i64 %e.012, ptr %_38, align 8
  %40 = getelementptr inbounds i8, ptr %_38, i64 8
  store i64 %e.113, ptr %40, align 8
  %41 = load i64, ptr %_38, align 8, !range !12, !noundef !3
  %42 = getelementptr inbounds i8, ptr %_38, i64 8
  %43 = load i64, ptr %42, align 8
  store i64 %41, ptr %_0, align 8
  %44 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %43, ptr %44, align 8
  br label %bb9

bb26:                                             ; preds = %bb3
  %45 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", ptr %self3, i32 0, i32 1
  %v.0 = load ptr, ptr %45, align 8, !nonnull !3, !noundef !3
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  %v.1 = load i64, ptr %46, align 8, !noundef !3
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_16, i32 0, i32 1
  store ptr %v.0, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store i64 %v.1, ptr %48, align 8
  store i64 0, ptr %_16, align 8
  br label %bb24

bb25:                                             ; preds = %bb3
  %49 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", ptr %self3, i32 0, i32 1
  %e.08 = load i64, ptr %49, align 8, !range !12, !noundef !3
  %50 = getelementptr inbounds i8, ptr %49, i64 8
  %e.19 = load i64, ptr %50, align 8
  store i64 %e.08, ptr %_48, align 8
  %51 = getelementptr inbounds i8, ptr %_48, i64 8
  store i64 %e.19, ptr %51, align 8
  %52 = load i64, ptr %_48, align 8, !range !12, !noundef !3
  %53 = getelementptr inbounds i8, ptr %_48, i64 8
  %54 = load i64, ptr %53, align 8
  %55 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_16, i32 0, i32 1
  store i64 %52, ptr %55, align 8
  %56 = getelementptr inbounds i8, ptr %55, i64 8
  store i64 %54, ptr %56, align 8
  store i64 1, ptr %_16, align 8
  br label %bb24

bb24:                                             ; preds = %bb25, %bb26
  %_21 = load i64, ptr %_16, align 8, !range !9, !noundef !3
  %57 = icmp eq i64 %_21, 0
  br i1 %57, label %bb7, label %bb8

bb7:                                              ; preds = %bb24
  %58 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_16, i32 0, i32 1
  %ptr.0 = load ptr, ptr %58, align 8, !nonnull !3, !noundef !3
  %59 = getelementptr inbounds i8, ptr %58, i64 8
  %ptr.1 = load i64, ptr %59, align 8, !noundef !3
  store ptr %ptr.0, ptr %self5, align 8
  store ptr %ptr.0, ptr %_59, align 8
  %60 = load ptr, ptr %_59, align 8, !nonnull !3, !noundef !3
  store ptr %60, ptr %_49, align 8
  %61 = getelementptr inbounds i8, ptr %self, i64 8
  %62 = load ptr, ptr %_49, align 8, !nonnull !3, !noundef !3
  store ptr %62, ptr %61, align 8
  store i64 %cap7, ptr %_52, align 8
  %63 = load i64, ptr %_52, align 8, !range !13, !noundef !3
  store i64 %63, ptr %self, align 8
  %64 = load i64, ptr @5, align 8, !range !23, !noundef !3
  %65 = load i64, ptr getelementptr inbounds (i8, ptr @5, i64 8), align 8
  store i64 %64, ptr %_0, align 8
  %66 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %65, ptr %66, align 8
  br label %bb10

bb8:                                              ; preds = %bb24
  %67 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_16, i32 0, i32 1
  %68 = load i64, ptr %67, align 8, !range !12, !noundef !3
  %69 = getelementptr inbounds i8, ptr %67, i64 8
  %70 = load i64, ptr %69, align 8
  store i64 %68, ptr %residual4, align 8
  %71 = getelementptr inbounds i8, ptr %residual4, i64 8
  store i64 %70, ptr %71, align 8
  %e.010 = load i64, ptr %residual4, align 8, !range !12, !noundef !3
  %72 = getelementptr inbounds i8, ptr %residual4, i64 8
  %e.111 = load i64, ptr %72, align 8
  store i64 %e.010, ptr %_0, align 8
  %73 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %e.111, ptr %73, align 8
  br label %bb9

bb10:                                             ; preds = %bb1, %bb9, %bb7
  %74 = load i64, ptr %_0, align 8, !range !23, !noundef !3
  %75 = getelementptr inbounds i8, ptr %_0, i64 8
  %76 = load i64, ptr %75, align 8
  %77 = insertvalue { i64, i64 } poison, i64 %74, 0
  %78 = insertvalue { i64, i64 } %77, i64 %76, 1
  ret { i64, i64 } %78

bb9:                                              ; preds = %bb4, %bb8
  br label %bb10

bb27:                                             ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hd1caf525272e9b29E"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_59 = alloca ptr, align 8
  %_52 = alloca i64, align 8
  %self5 = alloca ptr, align 8
  %_49 = alloca ptr, align 8
  %_48 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_38 = alloca %"alloc::collections::TryReserveError", align 8
  %_36 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %residual4 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_18 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_16 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %self2 = alloca %"core::option::Option<usize>", align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_0 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %len, i64 %additional)
  %_27.0 = extractvalue { i64, i1 } %1, 0
  %_27.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false)
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %0, align 1
  %4 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_24 = trunc i8 %4 to i1
  br i1 %_24, label %bb12, label %bb13

bb1:                                              ; preds = %start
  %5 = load i64, ptr @1, align 8, !range !23, !noundef !3
  %6 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %5, ptr %_0, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %6, ptr %7, align 8
  br label %bb10

bb13:                                             ; preds = %bb2
  %8 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %_27.0, ptr %8, align 8
  store i64 1, ptr %self2, align 8
  br label %bb14

bb12:                                             ; preds = %bb2
  %9 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %9, ptr %self2, align 8
  %11 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %10, ptr %11, align 8
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  %_31 = load i64, ptr %self2, align 8, !range !9, !noundef !3
  %12 = icmp eq i64 %_31, 0
  br i1 %12, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %13 = load i64, ptr @1, align 8, !range !12, !noundef !3
  %14 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %13, ptr %self1, align 8
  %15 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %14, ptr %15, align 8
  br label %bb17

bb16:                                             ; preds = %bb14
  %16 = getelementptr inbounds i8, ptr %self2, i64 8
  %v = load i64, ptr %16, align 8, !noundef !3
  %17 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", ptr %self1, i32 0, i32 1
  store i64 %v, ptr %17, align 8
  store i64 -9223372036854775807, ptr %self1, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %18 = load i64, ptr %self1, align 8, !range !23, !noundef !3
  %19 = icmp eq i64 %18, -9223372036854775807
  %_33 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_33, 0
  br i1 %20, label %bb20, label %bb19

bb20:                                             ; preds = %bb17
  %21 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", ptr %self1, i32 0, i32 1
  %v6 = load i64, ptr %21, align 8, !noundef !3
  %22 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", ptr %_5, i32 0, i32 1
  store i64 %v6, ptr %22, align 8
  store i64 -9223372036854775807, ptr %_5, align 8
  br label %bb18

bb19:                                             ; preds = %bb17
  %e.0 = load i64, ptr %self1, align 8, !range !12, !noundef !3
  %23 = getelementptr inbounds i8, ptr %self1, i64 8
  %e.1 = load i64, ptr %23, align 8
  store i64 %e.0, ptr %_36, align 8
  %24 = getelementptr inbounds i8, ptr %_36, i64 8
  store i64 %e.1, ptr %24, align 8
  %25 = load i64, ptr %_36, align 8, !range !12, !noundef !3
  %26 = getelementptr inbounds i8, ptr %_36, i64 8
  %27 = load i64, ptr %26, align 8
  store i64 %25, ptr %_5, align 8
  %28 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %27, ptr %28, align 8
  br label %bb18

bb18:                                             ; preds = %bb19, %bb20
  %29 = load i64, ptr %_5, align 8, !range !23, !noundef !3
  %30 = icmp eq i64 %29, -9223372036854775807
  %_8 = select i1 %30, i64 0, i64 1
  %31 = icmp eq i64 %_8, 0
  br i1 %31, label %bb3, label %bb4

bb3:                                              ; preds = %bb18
  %32 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", ptr %_5, i32 0, i32 1
  %required_cap = load i64, ptr %32, align 8, !noundef !3
  %_13 = load i64, ptr %self, align 8, !noundef !3
  %v1 = mul i64 %_13, 2
; call core::cmp::max_by
  %cap = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 %v1, i64 %required_cap)
; call core::cmp::max_by
  %cap7 = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 4, i64 %cap)
; call core::alloc::layout::Layout::array::inner
  %33 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17h7b4b019e487e1690E(i64 16, i64 8, i64 %cap7)
  %new_layout.0 = extractvalue { i64, i64 } %33, 0
  %new_layout.1 = extractvalue { i64, i64 } %33, 1
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hbd5d151f1f2b23a7E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_18, ptr align 8 %self)
  %_20 = getelementptr inbounds i8, ptr %self, i64 16
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17habb2cfab89ff935aE(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") align 8 %self3, i64 %new_layout.0, i64 %new_layout.1, ptr align 8 %_18, ptr align 1 %_20)
  %_45 = load i64, ptr %self3, align 8, !range !9, !noundef !3
  %34 = icmp eq i64 %_45, 0
  br i1 %34, label %bb26, label %bb25

bb4:                                              ; preds = %bb18
  %35 = load i64, ptr %_5, align 8, !range !12, !noundef !3
  %36 = getelementptr inbounds i8, ptr %_5, i64 8
  %37 = load i64, ptr %36, align 8
  store i64 %35, ptr %residual, align 8
  %38 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %37, ptr %38, align 8
  %e.012 = load i64, ptr %residual, align 8, !range !12, !noundef !3
  %39 = getelementptr inbounds i8, ptr %residual, i64 8
  %e.113 = load i64, ptr %39, align 8
  store i64 %e.012, ptr %_38, align 8
  %40 = getelementptr inbounds i8, ptr %_38, i64 8
  store i64 %e.113, ptr %40, align 8
  %41 = load i64, ptr %_38, align 8, !range !12, !noundef !3
  %42 = getelementptr inbounds i8, ptr %_38, i64 8
  %43 = load i64, ptr %42, align 8
  store i64 %41, ptr %_0, align 8
  %44 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %43, ptr %44, align 8
  br label %bb9

bb26:                                             ; preds = %bb3
  %45 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", ptr %self3, i32 0, i32 1
  %v.0 = load ptr, ptr %45, align 8, !nonnull !3, !noundef !3
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  %v.1 = load i64, ptr %46, align 8, !noundef !3
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_16, i32 0, i32 1
  store ptr %v.0, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store i64 %v.1, ptr %48, align 8
  store i64 0, ptr %_16, align 8
  br label %bb24

bb25:                                             ; preds = %bb3
  %49 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", ptr %self3, i32 0, i32 1
  %e.08 = load i64, ptr %49, align 8, !range !12, !noundef !3
  %50 = getelementptr inbounds i8, ptr %49, i64 8
  %e.19 = load i64, ptr %50, align 8
  store i64 %e.08, ptr %_48, align 8
  %51 = getelementptr inbounds i8, ptr %_48, i64 8
  store i64 %e.19, ptr %51, align 8
  %52 = load i64, ptr %_48, align 8, !range !12, !noundef !3
  %53 = getelementptr inbounds i8, ptr %_48, i64 8
  %54 = load i64, ptr %53, align 8
  %55 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_16, i32 0, i32 1
  store i64 %52, ptr %55, align 8
  %56 = getelementptr inbounds i8, ptr %55, i64 8
  store i64 %54, ptr %56, align 8
  store i64 1, ptr %_16, align 8
  br label %bb24

bb24:                                             ; preds = %bb25, %bb26
  %_21 = load i64, ptr %_16, align 8, !range !9, !noundef !3
  %57 = icmp eq i64 %_21, 0
  br i1 %57, label %bb7, label %bb8

bb7:                                              ; preds = %bb24
  %58 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_16, i32 0, i32 1
  %ptr.0 = load ptr, ptr %58, align 8, !nonnull !3, !noundef !3
  %59 = getelementptr inbounds i8, ptr %58, i64 8
  %ptr.1 = load i64, ptr %59, align 8, !noundef !3
  store ptr %ptr.0, ptr %self5, align 8
  store ptr %ptr.0, ptr %_59, align 8
  %60 = load ptr, ptr %_59, align 8, !nonnull !3, !noundef !3
  store ptr %60, ptr %_49, align 8
  %61 = getelementptr inbounds i8, ptr %self, i64 8
  %62 = load ptr, ptr %_49, align 8, !nonnull !3, !noundef !3
  store ptr %62, ptr %61, align 8
  store i64 %cap7, ptr %_52, align 8
  %63 = load i64, ptr %_52, align 8, !range !13, !noundef !3
  store i64 %63, ptr %self, align 8
  %64 = load i64, ptr @5, align 8, !range !23, !noundef !3
  %65 = load i64, ptr getelementptr inbounds (i8, ptr @5, i64 8), align 8
  store i64 %64, ptr %_0, align 8
  %66 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %65, ptr %66, align 8
  br label %bb10

bb8:                                              ; preds = %bb24
  %67 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_16, i32 0, i32 1
  %68 = load i64, ptr %67, align 8, !range !12, !noundef !3
  %69 = getelementptr inbounds i8, ptr %67, i64 8
  %70 = load i64, ptr %69, align 8
  store i64 %68, ptr %residual4, align 8
  %71 = getelementptr inbounds i8, ptr %residual4, i64 8
  store i64 %70, ptr %71, align 8
  %e.010 = load i64, ptr %residual4, align 8, !range !12, !noundef !3
  %72 = getelementptr inbounds i8, ptr %residual4, i64 8
  %e.111 = load i64, ptr %72, align 8
  store i64 %e.010, ptr %_0, align 8
  %73 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %e.111, ptr %73, align 8
  br label %bb9

bb10:                                             ; preds = %bb1, %bb9, %bb7
  %74 = load i64, ptr %_0, align 8, !range !23, !noundef !3
  %75 = getelementptr inbounds i8, ptr %_0, i64 8
  %76 = load i64, ptr %75, align 8
  %77 = insertvalue { i64, i64 } poison, i64 %74, 0
  %78 = insertvalue { i64, i64 } %77, i64 %76, 1
  ret { i64, i64 } %78

bb9:                                              ; preds = %bb4, %bb8
  br label %bb10

bb27:                                             ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hd4e289ca221253cfE"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_59 = alloca ptr, align 8
  %_52 = alloca i64, align 8
  %self5 = alloca ptr, align 8
  %_49 = alloca ptr, align 8
  %_48 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_38 = alloca %"alloc::collections::TryReserveError", align 8
  %_36 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %residual4 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_18 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_16 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %self2 = alloca %"core::option::Option<usize>", align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_0 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %len, i64 %additional)
  %_27.0 = extractvalue { i64, i1 } %1, 0
  %_27.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false)
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %0, align 1
  %4 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_24 = trunc i8 %4 to i1
  br i1 %_24, label %bb12, label %bb13

bb1:                                              ; preds = %start
  %5 = load i64, ptr @1, align 8, !range !23, !noundef !3
  %6 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %5, ptr %_0, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %6, ptr %7, align 8
  br label %bb10

bb13:                                             ; preds = %bb2
  %8 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %_27.0, ptr %8, align 8
  store i64 1, ptr %self2, align 8
  br label %bb14

bb12:                                             ; preds = %bb2
  %9 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %9, ptr %self2, align 8
  %11 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %10, ptr %11, align 8
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  %_31 = load i64, ptr %self2, align 8, !range !9, !noundef !3
  %12 = icmp eq i64 %_31, 0
  br i1 %12, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %13 = load i64, ptr @1, align 8, !range !12, !noundef !3
  %14 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %13, ptr %self1, align 8
  %15 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %14, ptr %15, align 8
  br label %bb17

bb16:                                             ; preds = %bb14
  %16 = getelementptr inbounds i8, ptr %self2, i64 8
  %v = load i64, ptr %16, align 8, !noundef !3
  %17 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", ptr %self1, i32 0, i32 1
  store i64 %v, ptr %17, align 8
  store i64 -9223372036854775807, ptr %self1, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %18 = load i64, ptr %self1, align 8, !range !23, !noundef !3
  %19 = icmp eq i64 %18, -9223372036854775807
  %_33 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_33, 0
  br i1 %20, label %bb20, label %bb19

bb20:                                             ; preds = %bb17
  %21 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", ptr %self1, i32 0, i32 1
  %v6 = load i64, ptr %21, align 8, !noundef !3
  %22 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", ptr %_5, i32 0, i32 1
  store i64 %v6, ptr %22, align 8
  store i64 -9223372036854775807, ptr %_5, align 8
  br label %bb18

bb19:                                             ; preds = %bb17
  %e.0 = load i64, ptr %self1, align 8, !range !12, !noundef !3
  %23 = getelementptr inbounds i8, ptr %self1, i64 8
  %e.1 = load i64, ptr %23, align 8
  store i64 %e.0, ptr %_36, align 8
  %24 = getelementptr inbounds i8, ptr %_36, i64 8
  store i64 %e.1, ptr %24, align 8
  %25 = load i64, ptr %_36, align 8, !range !12, !noundef !3
  %26 = getelementptr inbounds i8, ptr %_36, i64 8
  %27 = load i64, ptr %26, align 8
  store i64 %25, ptr %_5, align 8
  %28 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %27, ptr %28, align 8
  br label %bb18

bb18:                                             ; preds = %bb19, %bb20
  %29 = load i64, ptr %_5, align 8, !range !23, !noundef !3
  %30 = icmp eq i64 %29, -9223372036854775807
  %_8 = select i1 %30, i64 0, i64 1
  %31 = icmp eq i64 %_8, 0
  br i1 %31, label %bb3, label %bb4

bb3:                                              ; preds = %bb18
  %32 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", ptr %_5, i32 0, i32 1
  %required_cap = load i64, ptr %32, align 8, !noundef !3
  %_13 = load i64, ptr %self, align 8, !noundef !3
  %v1 = mul i64 %_13, 2
; call core::cmp::max_by
  %cap = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 %v1, i64 %required_cap)
; call core::cmp::max_by
  %cap7 = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 4, i64 %cap)
; call core::alloc::layout::Layout::array::inner
  %33 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17h7b4b019e487e1690E(i64 24, i64 8, i64 %cap7)
  %new_layout.0 = extractvalue { i64, i64 } %33, 0
  %new_layout.1 = extractvalue { i64, i64 } %33, 1
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h07fdb8f9ccfa4336E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_18, ptr align 8 %self)
  %_20 = getelementptr inbounds i8, ptr %self, i64 16
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17habb2cfab89ff935aE(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") align 8 %self3, i64 %new_layout.0, i64 %new_layout.1, ptr align 8 %_18, ptr align 1 %_20)
  %_45 = load i64, ptr %self3, align 8, !range !9, !noundef !3
  %34 = icmp eq i64 %_45, 0
  br i1 %34, label %bb26, label %bb25

bb4:                                              ; preds = %bb18
  %35 = load i64, ptr %_5, align 8, !range !12, !noundef !3
  %36 = getelementptr inbounds i8, ptr %_5, i64 8
  %37 = load i64, ptr %36, align 8
  store i64 %35, ptr %residual, align 8
  %38 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %37, ptr %38, align 8
  %e.012 = load i64, ptr %residual, align 8, !range !12, !noundef !3
  %39 = getelementptr inbounds i8, ptr %residual, i64 8
  %e.113 = load i64, ptr %39, align 8
  store i64 %e.012, ptr %_38, align 8
  %40 = getelementptr inbounds i8, ptr %_38, i64 8
  store i64 %e.113, ptr %40, align 8
  %41 = load i64, ptr %_38, align 8, !range !12, !noundef !3
  %42 = getelementptr inbounds i8, ptr %_38, i64 8
  %43 = load i64, ptr %42, align 8
  store i64 %41, ptr %_0, align 8
  %44 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %43, ptr %44, align 8
  br label %bb9

bb26:                                             ; preds = %bb3
  %45 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", ptr %self3, i32 0, i32 1
  %v.0 = load ptr, ptr %45, align 8, !nonnull !3, !noundef !3
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  %v.1 = load i64, ptr %46, align 8, !noundef !3
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_16, i32 0, i32 1
  store ptr %v.0, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store i64 %v.1, ptr %48, align 8
  store i64 0, ptr %_16, align 8
  br label %bb24

bb25:                                             ; preds = %bb3
  %49 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", ptr %self3, i32 0, i32 1
  %e.08 = load i64, ptr %49, align 8, !range !12, !noundef !3
  %50 = getelementptr inbounds i8, ptr %49, i64 8
  %e.19 = load i64, ptr %50, align 8
  store i64 %e.08, ptr %_48, align 8
  %51 = getelementptr inbounds i8, ptr %_48, i64 8
  store i64 %e.19, ptr %51, align 8
  %52 = load i64, ptr %_48, align 8, !range !12, !noundef !3
  %53 = getelementptr inbounds i8, ptr %_48, i64 8
  %54 = load i64, ptr %53, align 8
  %55 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_16, i32 0, i32 1
  store i64 %52, ptr %55, align 8
  %56 = getelementptr inbounds i8, ptr %55, i64 8
  store i64 %54, ptr %56, align 8
  store i64 1, ptr %_16, align 8
  br label %bb24

bb24:                                             ; preds = %bb25, %bb26
  %_21 = load i64, ptr %_16, align 8, !range !9, !noundef !3
  %57 = icmp eq i64 %_21, 0
  br i1 %57, label %bb7, label %bb8

bb7:                                              ; preds = %bb24
  %58 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_16, i32 0, i32 1
  %ptr.0 = load ptr, ptr %58, align 8, !nonnull !3, !noundef !3
  %59 = getelementptr inbounds i8, ptr %58, i64 8
  %ptr.1 = load i64, ptr %59, align 8, !noundef !3
  store ptr %ptr.0, ptr %self5, align 8
  store ptr %ptr.0, ptr %_59, align 8
  %60 = load ptr, ptr %_59, align 8, !nonnull !3, !noundef !3
  store ptr %60, ptr %_49, align 8
  %61 = getelementptr inbounds i8, ptr %self, i64 8
  %62 = load ptr, ptr %_49, align 8, !nonnull !3, !noundef !3
  store ptr %62, ptr %61, align 8
  store i64 %cap7, ptr %_52, align 8
  %63 = load i64, ptr %_52, align 8, !range !13, !noundef !3
  store i64 %63, ptr %self, align 8
  %64 = load i64, ptr @5, align 8, !range !23, !noundef !3
  %65 = load i64, ptr getelementptr inbounds (i8, ptr @5, i64 8), align 8
  store i64 %64, ptr %_0, align 8
  %66 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %65, ptr %66, align 8
  br label %bb10

bb8:                                              ; preds = %bb24
  %67 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_16, i32 0, i32 1
  %68 = load i64, ptr %67, align 8, !range !12, !noundef !3
  %69 = getelementptr inbounds i8, ptr %67, i64 8
  %70 = load i64, ptr %69, align 8
  store i64 %68, ptr %residual4, align 8
  %71 = getelementptr inbounds i8, ptr %residual4, i64 8
  store i64 %70, ptr %71, align 8
  %e.010 = load i64, ptr %residual4, align 8, !range !12, !noundef !3
  %72 = getelementptr inbounds i8, ptr %residual4, i64 8
  %e.111 = load i64, ptr %72, align 8
  store i64 %e.010, ptr %_0, align 8
  %73 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %e.111, ptr %73, align 8
  br label %bb9

bb10:                                             ; preds = %bb1, %bb9, %bb7
  %74 = load i64, ptr %_0, align 8, !range !23, !noundef !3
  %75 = getelementptr inbounds i8, ptr %_0, i64 8
  %76 = load i64, ptr %75, align 8
  %77 = insertvalue { i64, i64 } poison, i64 %74, 0
  %78 = insertvalue { i64, i64 } %77, i64 %76, 1
  ret { i64, i64 } %78

bb9:                                              ; preds = %bb4, %bb8
  br label %bb10

bb27:                                             ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::grow_amortized
; Function Attrs: nonlazybind uwtable
define { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hd7831489d27c63acE"(ptr align 8 %self, i64 %len, i64 %additional) unnamed_addr #1 {
start:
  %0 = alloca i8, align 1
  %_59 = alloca ptr, align 8
  %_52 = alloca i64, align 8
  %self5 = alloca ptr, align 8
  %_49 = alloca ptr, align 8
  %_48 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_38 = alloca %"alloc::collections::TryReserveError", align 8
  %_36 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %residual4 = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>::Err", align 8
  %_18 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>", align 8
  %_16 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %residual = alloca %"core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>::Err", align 8
  %self2 = alloca %"core::option::Option<usize>", align 8
  %self1 = alloca %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>", align 8
  %_0 = alloca %"core::result::Result<(), alloc::collections::TryReserveError>", align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %1 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %len, i64 %additional)
  %_27.0 = extractvalue { i64, i1 } %1, 0
  %_27.1 = extractvalue { i64, i1 } %1, 1
  %2 = call i1 @llvm.expect.i1(i1 %_27.1, i1 false)
  %3 = zext i1 %2 to i8
  store i8 %3, ptr %0, align 1
  %4 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_24 = trunc i8 %4 to i1
  br i1 %_24, label %bb12, label %bb13

bb1:                                              ; preds = %start
  %5 = load i64, ptr @1, align 8, !range !23, !noundef !3
  %6 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %5, ptr %_0, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %6, ptr %7, align 8
  br label %bb10

bb13:                                             ; preds = %bb2
  %8 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %_27.0, ptr %8, align 8
  store i64 1, ptr %self2, align 8
  br label %bb14

bb12:                                             ; preds = %bb2
  %9 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %10 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %9, ptr %self2, align 8
  %11 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %10, ptr %11, align 8
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  %_31 = load i64, ptr %self2, align 8, !range !9, !noundef !3
  %12 = icmp eq i64 %_31, 0
  br i1 %12, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %13 = load i64, ptr @1, align 8, !range !12, !noundef !3
  %14 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %13, ptr %self1, align 8
  %15 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %14, ptr %15, align 8
  br label %bb17

bb16:                                             ; preds = %bb14
  %16 = getelementptr inbounds i8, ptr %self2, i64 8
  %v = load i64, ptr %16, align 8, !noundef !3
  %17 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", ptr %self1, i32 0, i32 1
  store i64 %v, ptr %17, align 8
  store i64 -9223372036854775807, ptr %self1, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %18 = load i64, ptr %self1, align 8, !range !23, !noundef !3
  %19 = icmp eq i64 %18, -9223372036854775807
  %_33 = select i1 %19, i64 0, i64 1
  %20 = icmp eq i64 %_33, 0
  br i1 %20, label %bb20, label %bb19

bb20:                                             ; preds = %bb17
  %21 = getelementptr inbounds %"core::result::Result<usize, alloc::collections::TryReserveErrorKind>::Ok", ptr %self1, i32 0, i32 1
  %v6 = load i64, ptr %21, align 8, !noundef !3
  %22 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", ptr %_5, i32 0, i32 1
  store i64 %v6, ptr %22, align 8
  store i64 -9223372036854775807, ptr %_5, align 8
  br label %bb18

bb19:                                             ; preds = %bb17
  %e.0 = load i64, ptr %self1, align 8, !range !12, !noundef !3
  %23 = getelementptr inbounds i8, ptr %self1, i64 8
  %e.1 = load i64, ptr %23, align 8
  store i64 %e.0, ptr %_36, align 8
  %24 = getelementptr inbounds i8, ptr %_36, i64 8
  store i64 %e.1, ptr %24, align 8
  %25 = load i64, ptr %_36, align 8, !range !12, !noundef !3
  %26 = getelementptr inbounds i8, ptr %_36, i64 8
  %27 = load i64, ptr %26, align 8
  store i64 %25, ptr %_5, align 8
  %28 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %27, ptr %28, align 8
  br label %bb18

bb18:                                             ; preds = %bb19, %bb20
  %29 = load i64, ptr %_5, align 8, !range !23, !noundef !3
  %30 = icmp eq i64 %29, -9223372036854775807
  %_8 = select i1 %30, i64 0, i64 1
  %31 = icmp eq i64 %_8, 0
  br i1 %31, label %bb3, label %bb4

bb3:                                              ; preds = %bb18
  %32 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveErrorKind>, usize>::Continue", ptr %_5, i32 0, i32 1
  %required_cap = load i64, ptr %32, align 8, !noundef !3
  %_13 = load i64, ptr %self, align 8, !noundef !3
  %v1 = mul i64 %_13, 2
; call core::cmp::max_by
  %cap = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 %v1, i64 %required_cap)
; call core::cmp::max_by
  %cap7 = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 4, i64 %cap)
; call core::alloc::layout::Layout::array::inner
  %33 = call { i64, i64 } @_ZN4core5alloc6layout6Layout5array5inner17h7b4b019e487e1690E(i64 24, i64 8, i64 %cap7)
  %new_layout.0 = extractvalue { i64, i64 } %33, 0
  %new_layout.1 = extractvalue { i64, i64 } %33, 1
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h6e4687a36ee9cd08E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_18, ptr align 8 %self)
  %_20 = getelementptr inbounds i8, ptr %self, i64 16
; call alloc::raw_vec::finish_grow
  call void @_ZN5alloc7raw_vec11finish_grow17habb2cfab89ff935aE(ptr sret(%"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>") align 8 %self3, i64 %new_layout.0, i64 %new_layout.1, ptr align 8 %_18, ptr align 1 %_20)
  %_45 = load i64, ptr %self3, align 8, !range !9, !noundef !3
  %34 = icmp eq i64 %_45, 0
  br i1 %34, label %bb26, label %bb25

bb4:                                              ; preds = %bb18
  %35 = load i64, ptr %_5, align 8, !range !12, !noundef !3
  %36 = getelementptr inbounds i8, ptr %_5, i64 8
  %37 = load i64, ptr %36, align 8
  store i64 %35, ptr %residual, align 8
  %38 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %37, ptr %38, align 8
  %e.012 = load i64, ptr %residual, align 8, !range !12, !noundef !3
  %39 = getelementptr inbounds i8, ptr %residual, i64 8
  %e.113 = load i64, ptr %39, align 8
  store i64 %e.012, ptr %_38, align 8
  %40 = getelementptr inbounds i8, ptr %_38, i64 8
  store i64 %e.113, ptr %40, align 8
  %41 = load i64, ptr %_38, align 8, !range !12, !noundef !3
  %42 = getelementptr inbounds i8, ptr %_38, i64 8
  %43 = load i64, ptr %42, align 8
  store i64 %41, ptr %_0, align 8
  %44 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %43, ptr %44, align 8
  br label %bb9

bb26:                                             ; preds = %bb3
  %45 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Ok", ptr %self3, i32 0, i32 1
  %v.0 = load ptr, ptr %45, align 8, !nonnull !3, !noundef !3
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  %v.1 = load i64, ptr %46, align 8, !noundef !3
  %47 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_16, i32 0, i32 1
  store ptr %v.0, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store i64 %v.1, ptr %48, align 8
  store i64 0, ptr %_16, align 8
  br label %bb24

bb25:                                             ; preds = %bb3
  %49 = getelementptr inbounds %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, alloc::collections::TryReserveError>::Err", ptr %self3, i32 0, i32 1
  %e.08 = load i64, ptr %49, align 8, !range !12, !noundef !3
  %50 = getelementptr inbounds i8, ptr %49, i64 8
  %e.19 = load i64, ptr %50, align 8
  store i64 %e.08, ptr %_48, align 8
  %51 = getelementptr inbounds i8, ptr %_48, i64 8
  store i64 %e.19, ptr %51, align 8
  %52 = load i64, ptr %_48, align 8, !range !12, !noundef !3
  %53 = getelementptr inbounds i8, ptr %_48, i64 8
  %54 = load i64, ptr %53, align 8
  %55 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_16, i32 0, i32 1
  store i64 %52, ptr %55, align 8
  %56 = getelementptr inbounds i8, ptr %55, i64 8
  store i64 %54, ptr %56, align 8
  store i64 1, ptr %_16, align 8
  br label %bb24

bb24:                                             ; preds = %bb25, %bb26
  %_21 = load i64, ptr %_16, align 8, !range !9, !noundef !3
  %57 = icmp eq i64 %_21, 0
  br i1 %57, label %bb7, label %bb8

bb7:                                              ; preds = %bb24
  %58 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Continue", ptr %_16, i32 0, i32 1
  %ptr.0 = load ptr, ptr %58, align 8, !nonnull !3, !noundef !3
  %59 = getelementptr inbounds i8, ptr %58, i64 8
  %ptr.1 = load i64, ptr %59, align 8, !noundef !3
  store ptr %ptr.0, ptr %self5, align 8
  store ptr %ptr.0, ptr %_59, align 8
  %60 = load ptr, ptr %_59, align 8, !nonnull !3, !noundef !3
  store ptr %60, ptr %_49, align 8
  %61 = getelementptr inbounds i8, ptr %self, i64 8
  %62 = load ptr, ptr %_49, align 8, !nonnull !3, !noundef !3
  store ptr %62, ptr %61, align 8
  store i64 %cap7, ptr %_52, align 8
  %63 = load i64, ptr %_52, align 8, !range !13, !noundef !3
  store i64 %63, ptr %self, align 8
  %64 = load i64, ptr @5, align 8, !range !23, !noundef !3
  %65 = load i64, ptr getelementptr inbounds (i8, ptr @5, i64 8), align 8
  store i64 %64, ptr %_0, align 8
  %66 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %65, ptr %66, align 8
  br label %bb10

bb8:                                              ; preds = %bb24
  %67 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, alloc::collections::TryReserveError>, core::ptr::non_null::NonNull<[u8]>>::Break", ptr %_16, i32 0, i32 1
  %68 = load i64, ptr %67, align 8, !range !12, !noundef !3
  %69 = getelementptr inbounds i8, ptr %67, i64 8
  %70 = load i64, ptr %69, align 8
  store i64 %68, ptr %residual4, align 8
  %71 = getelementptr inbounds i8, ptr %residual4, i64 8
  store i64 %70, ptr %71, align 8
  %e.010 = load i64, ptr %residual4, align 8, !range !12, !noundef !3
  %72 = getelementptr inbounds i8, ptr %residual4, i64 8
  %e.111 = load i64, ptr %72, align 8
  store i64 %e.010, ptr %_0, align 8
  %73 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %e.111, ptr %73, align 8
  br label %bb9

bb10:                                             ; preds = %bb1, %bb9, %bb7
  %74 = load i64, ptr %_0, align 8, !range !23, !noundef !3
  %75 = getelementptr inbounds i8, ptr %_0, i64 8
  %76 = load i64, ptr %75, align 8
  %77 = insertvalue { i64, i64 } poison, i64 %74, 0
  %78 = insertvalue { i64, i64 } %77, i64 %76, 1
  ret { i64, i64 } %78

bb9:                                              ; preds = %bb4, %bb8
  br label %bb10

bb27:                                             ; No predecessors!
  unreachable
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h19d71098d282cb40E"(ptr align 8 %self, i64 %len) unnamed_addr #3 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hd1caf525272e9b29E"(ptr align 8 %self, i64 %len, i64 1)
  %_4.0 = extractvalue { i64, i64 } %0, 0
  %_4.1 = extractvalue { i64, i64 } %0, 1
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17ha4600e6afa03dbc8E(i64 %_4.0, i64 %_4.1)
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h56fc04168e6c9004E"(ptr align 8 %self, i64 %len) unnamed_addr #3 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hd4e289ca221253cfE"(ptr align 8 %self, i64 %len, i64 1)
  %_4.0 = extractvalue { i64, i64 } %0, 0
  %_4.1 = extractvalue { i64, i64 } %0, 1
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17ha4600e6afa03dbc8E(i64 %_4.0, i64 %_4.1)
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h597772cce7baed73E"(ptr align 8 %self, i64 %len) unnamed_addr #3 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h52ed4fbc63a92d72E"(ptr align 8 %self, i64 %len, i64 1)
  %_4.0 = extractvalue { i64, i64 } %0, 0
  %_4.1 = extractvalue { i64, i64 } %0, 1
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17ha4600e6afa03dbc8E(i64 %_4.0, i64 %_4.1)
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h68fddcecc208e6a6E"(ptr align 8 %self, i64 %len) unnamed_addr #3 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h7eda2524c17c8d1aE"(ptr align 8 %self, i64 %len, i64 1)
  %_4.0 = extractvalue { i64, i64 } %0, 0
  %_4.1 = extractvalue { i64, i64 } %0, 1
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17ha4600e6afa03dbc8E(i64 %_4.0, i64 %_4.1)
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h6b3f0f184c2efc07E"(ptr align 8 %self, i64 %len) unnamed_addr #3 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hd7831489d27c63acE"(ptr align 8 %self, i64 %len, i64 1)
  %_4.0 = extractvalue { i64, i64 } %0, 0
  %_4.1 = extractvalue { i64, i64 } %0, 1
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17ha4600e6afa03dbc8E(i64 %_4.0, i64 %_4.1)
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17h6edfce10a71b4c66E"(ptr align 8 %self, i64 %len) unnamed_addr #3 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hb84af3afa1df3293E"(ptr align 8 %self, i64 %len, i64 1)
  %_4.0 = extractvalue { i64, i64 } %0, 0
  %_4.1 = extractvalue { i64, i64 } %0, 1
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17ha4600e6afa03dbc8E(i64 %_4.0, i64 %_4.1)
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve_for_push
; Function Attrs: noinline nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$16reserve_for_push17hb87280f9c06fcb0eE"(ptr align 8 %self, i64 %len) unnamed_addr #3 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hb46d5f1e6d319c16E"(ptr align 8 %self, i64 %len, i64 1)
  %_4.0 = extractvalue { i64, i64 } %0, 0
  %_4.1 = extractvalue { i64, i64 } %0, 1
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17ha4600e6afa03dbc8E(i64 %_4.0, i64 %_4.1)
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h9be82eb53cf79224E"(ptr align 8 %slf, i64 %len, i64 %additional) unnamed_addr #9 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hd7831489d27c63acE"(ptr align 8 %slf, i64 %len, i64 %additional)
  %_5.0 = extractvalue { i64, i64 } %0, 0
  %_5.1 = extractvalue { i64, i64 } %0, 1
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17ha4600e6afa03dbc8E(i64 %_5.0, i64 %_5.1)
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hca8d573d9dd55448E"(ptr align 8 %slf, i64 %len, i64 %additional) unnamed_addr #9 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hd1caf525272e9b29E"(ptr align 8 %slf, i64 %len, i64 %additional)
  %_5.0 = extractvalue { i64, i64 } %0, 0
  %_5.1 = extractvalue { i64, i64 } %0, 1
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17ha4600e6afa03dbc8E(i64 %_5.0, i64 %_5.1)
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hed00d02a6a01b0eeE"(ptr align 8 %slf, i64 %len, i64 %additional) unnamed_addr #9 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17hb84af3afa1df3293E"(ptr align 8 %slf, i64 %len, i64 %additional)
  %_5.0 = extractvalue { i64, i64 } %0, 0
  %_5.1 = extractvalue { i64, i64 } %0, 1
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17ha4600e6afa03dbc8E(i64 %_5.0, i64 %_5.1)
  ret void
}

; alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle
; Function Attrs: cold nonlazybind uwtable
define void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hf33534cacfadddc1E"(ptr align 8 %slf, i64 %len, i64 %additional) unnamed_addr #9 {
start:
; call alloc::raw_vec::RawVec<T,A>::grow_amortized
  %0 = call { i64, i64 } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14grow_amortized17h7eda2524c17c8d1aE"(ptr align 8 %slf, i64 %len, i64 %additional)
  %_5.0 = extractvalue { i64, i64 } %0, 0
  %_5.1 = extractvalue { i64, i64 } %0, 1
; call alloc::raw_vec::handle_reserve
  call void @_ZN5alloc7raw_vec14handle_reserve17ha4600e6afa03dbc8E(i64 %_5.0, i64 %_5.1)
  ret void
}

; <alloc::string::String as core::fmt::Display>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %_15 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_15, align 8
  %2 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_15, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_15, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_14, align 8
  %6 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %5, ptr %6, align 8
  %v.0 = load ptr, ptr %_14, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_14, i64 8
  %v.1 = load i64, ptr %7, align 8, !noundef !3
; call <str as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h86309c7b5dd516e7E"(ptr align 1 %v.0, i64 %v.1, ptr align 8 %f)
  ret i1 %_0
}

; <alloc::string::String as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN62_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$GT$2eq17h0fbfccbadab9c0e7E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 {
start:
; call alloc::vec::partial_eq::<impl core::cmp::PartialEq<alloc::vec::Vec<U,A2>> for alloc::vec::Vec<T,A1>>::eq
  %_0 = call zeroext i1 @"_ZN5alloc3vec10partial_eq117_$LT$impl$u20$core..cmp..PartialEq$LT$alloc..vec..Vec$LT$U$C$A2$GT$$GT$$u20$for$u20$alloc..vec..Vec$LT$T$C$A1$GT$$GT$2eq17hef9e2ca8e7e71238E"(ptr align 8 %self, ptr align 8 %other)
  ret i1 %_0
}

; <std::path::PathBuf as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN62_$LT$std..path..PathBuf$u20$as$u20$core..ops..deref..Deref$GT$5deref17he2917e5103d42affE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_18 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_18, align 8
  %2 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_18, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_18, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_17, align 8
  %6 = getelementptr inbounds i8, ptr %_17, i64 8
  store i64 %5, ptr %6, align 8
  %_15.0 = load ptr, ptr %_17, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_17, i64 8
  %_15.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %_15.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %_15.1, 1
  ret { ptr, i64 } %9
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h18d0da7106718c14E"(ptr sret(%"core::str::iter::Split<'_, char>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 72, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4f355ed30dd53161E"(ptr sret(%"core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 32, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5acc009586ae1387E"(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %self.1, 1
  ret { ptr, ptr } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5e78dac8093339d9E"(ptr sret(%"core::iter::adapters::map::Map<core::str::iter::Split<'_, char>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:372:38: 372:44}>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %self, i64 72, i1 false)
  ret void
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h715c49fc680ca833E"(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %self.1, 1
  ret { ptr, ptr } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h811b7597d31bb2bfE"(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %self.1, 1
  ret { ptr, ptr } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h93b96e9b8d260840E"(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %self.1, 1
  ret { ptr, ptr } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb116f9e308cbf188E"(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %self.1, 1
  ret { ptr, ptr } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb6ba55a5e5a9b4abE"(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %self.1, 1
  ret { ptr, ptr } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hce236b4cd3f73ffeE"(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %self.1, 1
  ret { ptr, ptr } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdb2f8b9c6c5dbe6cE"(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %self.1, 1
  ret { ptr, ptr } %1
}

; <I as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hf7b7808b0086d36dE"(ptr %self.0, ptr %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, ptr } %0, ptr %self.1, 1
  ret { ptr, ptr } %1
}

; <alloc::alloc::Global as core::alloc::Allocator>::deallocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %self, ptr %ptr, i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_14 = alloca i64, align 8
  %layout1 = alloca %"core::alloc::layout::Layout", align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  store i64 %0, ptr %layout, align 8
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %1, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %layout, i64 8
  %_4 = load i64, ptr %3, align 8, !noundef !3
  %4 = icmp eq i64 %_4, 0
  br i1 %4, label %bb2, label %bb1

bb2:                                              ; preds = %start
  br label %bb3

bb1:                                              ; preds = %start
  %5 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %6 = getelementptr inbounds i8, ptr %layout, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
  store i64 %5, ptr %layout1, align 8
  %8 = getelementptr inbounds i8, ptr %layout1, i64 8
  store i64 %7, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %layout1, i64 8
  %_9 = load i64, ptr %9, align 8, !noundef !3
  %self2 = load i64, ptr %layout1, align 8, !range !26, !noundef !3
  store i64 %self2, ptr %_14, align 8
  %_15 = load i64, ptr %_14, align 8, !range !26, !noundef !3
  %_16 = icmp uge i64 %_15, 1
  %_17 = icmp ule i64 %_15, -9223372036854775808
  %_18 = and i1 %_16, %_17
  call void @llvm.assume(i1 %_18)
  call void @__rust_dealloc(ptr %ptr, i64 %_9, i64 %_15) #29
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  ret void
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$15allocate_zeroed17h9bde4277a86bc281E"(ptr align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h879e6ffe68fe2d1bE(ptr align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext true)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <alloc::alloc::Global as core::alloc::Allocator>::grow
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$4grow17hc256a458da5735efE"(ptr align 1 %self, ptr %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::grow_impl
  %0 = call { ptr, i64 } @_ZN5alloc5alloc6Global9grow_impl17he940b2bc8627b3e5E(ptr align 1 %self, ptr %ptr, i64 %old_layout.0, i64 %old_layout.1, i64 %new_layout.0, i64 %new_layout.1, i1 zeroext false)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <alloc::alloc::Global as core::alloc::Allocator>::shrink
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$6shrink17hbc4ae5360ce4053dE"(ptr align 1 %self, ptr %ptr, i64 %0, i64 %1, i64 %2, i64 %3) unnamed_addr #0 {
start:
  %self4 = alloca ptr, align 8
  %_104 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_103 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_89 = alloca ptr, align 8
  %_84 = alloca i64, align 8
  %_72 = alloca i64, align 8
  %_66 = alloca i64, align 8
  %_60 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_59 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_48 = alloca i64, align 8
  %self3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", align 8
  %_35 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, core::alloc::AllocError>, core::ptr::non_null::NonNull<[u8]>>", align 8
  %_33 = alloca %"core::ptr::non_null::NonNull<[u8]>", align 8
  %self2 = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_28 = alloca ptr, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %data = alloca ptr, align 8
  %_12 = alloca %"core::ptr::non_null::NonNull<[u8]>", align 8
  %_8 = alloca i64, align 8
  %_0 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", align 8
  %new_layout = alloca %"core::alloc::layout::Layout", align 8
  %old_layout = alloca %"core::alloc::layout::Layout", align 8
  store i64 %0, ptr %old_layout, align 8
  %4 = getelementptr inbounds i8, ptr %old_layout, i64 8
  store i64 %1, ptr %4, align 8
  store i64 %2, ptr %new_layout, align 8
  %5 = getelementptr inbounds i8, ptr %new_layout, i64 8
  store i64 %3, ptr %5, align 8
  %6 = getelementptr inbounds i8, ptr %new_layout, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
  store i64 %7, ptr %_8, align 8
  %8 = load i64, ptr %_8, align 8, !noundef !3
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %bb1, label %bb3

bb1:                                              ; preds = %start
  %_11.0 = load i64, ptr %old_layout, align 8, !range !26, !noundef !3
  %10 = getelementptr inbounds i8, ptr %old_layout, i64 8
  %_11.1 = load i64, ptr %10, align 8, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %self, ptr %ptr, i64 %_11.0, i64 %_11.1)
  %self5 = load i64, ptr %new_layout, align 8, !range !26, !noundef !3
  store i64 %self5, ptr %_48, align 8
  %_49 = load i64, ptr %_48, align 8, !range !26, !noundef !3
  %_50 = icmp uge i64 %_49, 1
  %_51 = icmp ule i64 %_49, -9223372036854775808
  %_52 = and i1 %_50, %_51
  call void @llvm.assume(i1 %_52)
  %ptr6 = inttoptr i64 %_49 to ptr
  store ptr %ptr6, ptr %data, align 8
  store ptr %ptr6, ptr %_60, align 8
  %11 = getelementptr inbounds i8, ptr %_60, i64 8
  store i64 0, ptr %11, align 8
  %12 = load ptr, ptr %_60, align 8, !noundef !3
  %13 = getelementptr inbounds i8, ptr %_60, i64 8
  %14 = load i64, ptr %13, align 8, !noundef !3
  store ptr %12, ptr %_59, align 8
  %15 = getelementptr inbounds i8, ptr %_59, i64 8
  store i64 %14, ptr %15, align 8
  %ptr.0 = load ptr, ptr %_59, align 8, !noundef !3
  %16 = getelementptr inbounds i8, ptr %_59, i64 8
  %ptr.1 = load i64, ptr %16, align 8, !noundef !3
  store ptr %ptr.0, ptr %_12, align 8
  %17 = getelementptr inbounds i8, ptr %_12, i64 8
  store i64 %ptr.1, ptr %17, align 8
  %18 = load ptr, ptr %_12, align 8, !nonnull !3, !noundef !3
  %19 = getelementptr inbounds i8, ptr %_12, i64 8
  %20 = load i64, ptr %19, align 8, !noundef !3
  store ptr %18, ptr %_0, align 8
  %21 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %20, ptr %21, align 8
  br label %bb11

bb3:                                              ; preds = %start
  %self7 = load i64, ptr %old_layout, align 8, !range !26, !noundef !3
  store i64 %self7, ptr %_66, align 8
  %_67 = load i64, ptr %_66, align 8, !range !26, !noundef !3
  %_68 = icmp uge i64 %_67, 1
  %_69 = icmp ule i64 %_67, -9223372036854775808
  %_70 = and i1 %_68, %_69
  call void @llvm.assume(i1 %_70)
  %self8 = load i64, ptr %new_layout, align 8, !range !26, !noundef !3
  store i64 %self8, ptr %_72, align 8
  %_73 = load i64, ptr %_72, align 8, !range !26, !noundef !3
  %_74 = icmp uge i64 %_73, 1
  %_75 = icmp ule i64 %_73, -9223372036854775808
  %_76 = and i1 %_74, %_75
  call void @llvm.assume(i1 %_76)
  %_17 = icmp eq i64 %_67, %_73
  br i1 %_17, label %bb4, label %bb5

bb11:                                             ; preds = %bb6, %bb8, %bb1
  br label %bb13

bb5:                                              ; preds = %bb3
  %new_size = load i64, ptr %_8, align 8, !noundef !3
  %layout.0 = load i64, ptr %new_layout, align 8, !range !26, !noundef !3
  %22 = getelementptr inbounds i8, ptr %new_layout, i64 8
  %layout.1 = load i64, ptr %22, align 8, !noundef !3
; call alloc::alloc::Global::alloc_impl
  %23 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h879e6ffe68fe2d1bE(ptr align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false)
  %24 = extractvalue { ptr, i64 } %23, 0
  %25 = extractvalue { ptr, i64 } %23, 1
  store ptr %24, ptr %self3, align 8
  %26 = getelementptr inbounds i8, ptr %self3, i64 8
  store i64 %25, ptr %26, align 8
  %27 = load ptr, ptr %self3, align 8, !noundef !3
  %28 = ptrtoint ptr %27 to i64
  %29 = icmp eq i64 %28, 0
  %_109 = select i1 %29, i64 1, i64 0
  %30 = icmp eq i64 %_109, 0
  br i1 %30, label %bb27, label %bb26

bb4:                                              ; preds = %bb3
  %new_size9 = load i64, ptr %_8, align 8, !noundef !3
  %31 = getelementptr inbounds i8, ptr %old_layout, i64 8
  %_23 = load i64, ptr %31, align 8, !noundef !3
  %cond = icmp ule i64 %new_size9, %_23
  call void @llvm.assume(i1 %cond)
  %32 = load i64, ptr %old_layout, align 8, !range !26, !noundef !3
  %33 = getelementptr inbounds i8, ptr %old_layout, i64 8
  %34 = load i64, ptr %33, align 8, !noundef !3
  store i64 %32, ptr %layout, align 8
  %35 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %34, ptr %35, align 8
  %36 = getelementptr inbounds i8, ptr %layout, i64 8
  %_79 = load i64, ptr %36, align 8, !noundef !3
  %self10 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  store i64 %self10, ptr %_84, align 8
  %_85 = load i64, ptr %_84, align 8, !range !26, !noundef !3
  %_86 = icmp uge i64 %_85, 1
  %_87 = icmp ule i64 %_85, -9223372036854775808
  %_88 = and i1 %_86, %_87
  call void @llvm.assume(i1 %_88)
  %raw_ptr = call ptr @__rust_realloc(ptr %ptr, i64 %_79, i64 %_85, i64 %new_size9) #29
  %_90 = ptrtoint ptr %raw_ptr to i64
  %37 = icmp eq i64 %_90, 0
  br i1 %37, label %bb17, label %bb18

bb27:                                             ; preds = %bb5
  %v.0 = load ptr, ptr %self3, align 8, !nonnull !3, !noundef !3
  %38 = getelementptr inbounds i8, ptr %self3, i64 8
  %v.1 = load i64, ptr %38, align 8, !noundef !3
  store ptr %v.0, ptr %_35, align 8
  %39 = getelementptr inbounds i8, ptr %_35, i64 8
  store i64 %v.1, ptr %39, align 8
  br label %bb25

bb26:                                             ; preds = %bb5
  %40 = load ptr, ptr @1, align 8, !noundef !3
  %41 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %40, ptr %_35, align 8
  %42 = getelementptr inbounds i8, ptr %_35, i64 8
  store i64 %41, ptr %42, align 8
  br label %bb25

bb25:                                             ; preds = %bb26, %bb27
  %43 = load ptr, ptr %_35, align 8, !noundef !3
  %44 = ptrtoint ptr %43 to i64
  %45 = icmp eq i64 %44, 0
  %_38 = select i1 %45, i64 1, i64 0
  %46 = icmp eq i64 %_38, 0
  br i1 %46, label %bb8, label %bb9

bb8:                                              ; preds = %bb25
  %new_ptr.0 = load ptr, ptr %_35, align 8, !nonnull !3, !noundef !3
  %47 = getelementptr inbounds i8, ptr %_35, i64 8
  %new_ptr.1 = load i64, ptr %47, align 8, !noundef !3
  store ptr %new_ptr.0, ptr %self4, align 8
  %48 = mul i64 %new_size, 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %new_ptr.0, ptr align 1 %ptr, i64 %48, i1 false)
  %_44.0 = load i64, ptr %old_layout, align 8, !range !26, !noundef !3
  %49 = getelementptr inbounds i8, ptr %old_layout, i64 8
  %_44.1 = load i64, ptr %49, align 8, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %self, ptr %ptr, i64 %_44.0, i64 %_44.1)
  store ptr %new_ptr.0, ptr %_0, align 8
  %50 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %new_ptr.1, ptr %50, align 8
  br label %bb11

bb9:                                              ; preds = %bb25
  %51 = load ptr, ptr @1, align 8, !noundef !3
  %52 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %51, ptr %_0, align 8
  %53 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %52, ptr %53, align 8
  br label %bb12

bb12:                                             ; preds = %bb7, %bb9
  br label %bb13

bb17:                                             ; preds = %bb4
  store ptr null, ptr %self2, align 8
  br label %bb16

bb18:                                             ; preds = %bb4
  store ptr %raw_ptr, ptr %_89, align 8
  %54 = load ptr, ptr %_89, align 8, !nonnull !3, !noundef !3
  store ptr %54, ptr %self2, align 8
  br label %bb16

bb16:                                             ; preds = %bb18, %bb17
  %55 = load ptr, ptr %self2, align 8, !noundef !3
  %56 = ptrtoint ptr %55 to i64
  %57 = icmp eq i64 %56, 0
  %_95 = select i1 %57, i64 0, i64 1
  %58 = icmp eq i64 %_95, 0
  br i1 %58, label %bb19, label %bb20

bb19:                                             ; preds = %bb16
  store ptr null, ptr %self1, align 8
  br label %bb21

bb20:                                             ; preds = %bb16
  %v = load ptr, ptr %self2, align 8, !nonnull !3, !noundef !3
  store ptr %v, ptr %self1, align 8
  br label %bb21

bb21:                                             ; preds = %bb20, %bb19
  %59 = load ptr, ptr %self1, align 8, !noundef !3
  %60 = ptrtoint ptr %59 to i64
  %61 = icmp eq i64 %60, 0
  %_97 = select i1 %61, i64 1, i64 0
  %62 = icmp eq i64 %_97, 0
  br i1 %62, label %bb24, label %bb23

bb24:                                             ; preds = %bb21
  %v11 = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  store ptr %v11, ptr %_28, align 8
  br label %bb22

bb23:                                             ; preds = %bb21
  store ptr null, ptr %_28, align 8
  br label %bb22

bb22:                                             ; preds = %bb23, %bb24
  %63 = load ptr, ptr %_28, align 8, !noundef !3
  %64 = ptrtoint ptr %63 to i64
  %65 = icmp eq i64 %64, 0
  %_31 = select i1 %65, i64 1, i64 0
  %66 = icmp eq i64 %_31, 0
  br i1 %66, label %bb6, label %bb7

bb6:                                              ; preds = %bb22
  %ptr12 = load ptr, ptr %_28, align 8, !nonnull !3, !noundef !3
  store ptr %ptr12, ptr %_104, align 8
  %67 = getelementptr inbounds i8, ptr %_104, i64 8
  store i64 %new_size9, ptr %67, align 8
  %68 = load ptr, ptr %_104, align 8, !noundef !3
  %69 = getelementptr inbounds i8, ptr %_104, i64 8
  %70 = load i64, ptr %69, align 8, !noundef !3
  store ptr %68, ptr %_103, align 8
  %71 = getelementptr inbounds i8, ptr %_103, i64 8
  store i64 %70, ptr %71, align 8
  %ptr.013 = load ptr, ptr %_103, align 8, !noundef !3
  %72 = getelementptr inbounds i8, ptr %_103, i64 8
  %ptr.114 = load i64, ptr %72, align 8, !noundef !3
  store ptr %ptr.013, ptr %_33, align 8
  %73 = getelementptr inbounds i8, ptr %_33, i64 8
  store i64 %ptr.114, ptr %73, align 8
  %74 = load ptr, ptr %_33, align 8, !nonnull !3, !noundef !3
  %75 = getelementptr inbounds i8, ptr %_33, i64 8
  %76 = load i64, ptr %75, align 8, !noundef !3
  store ptr %74, ptr %_0, align 8
  %77 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %76, ptr %77, align 8
  br label %bb11

bb7:                                              ; preds = %bb22
  %78 = load ptr, ptr @1, align 8, !noundef !3
  %79 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %78, ptr %_0, align 8
  %80 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %79, ptr %80, align 8
  br label %bb12

bb13:                                             ; preds = %bb12, %bb11
  %81 = load ptr, ptr %_0, align 8, !noundef !3
  %82 = getelementptr inbounds i8, ptr %_0, i64 8
  %83 = load i64, ptr %82, align 8
  %84 = insertvalue { ptr, i64 } poison, ptr %81, 0
  %85 = insertvalue { ptr, i64 } %84, i64 %83, 1
  ret { ptr, i64 } %85

bb28:                                             ; No predecessors!
  unreachable
}

; <alloc::alloc::Global as core::alloc::Allocator>::allocate
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h8a8088df2849bd53E"(ptr align 1 %self, i64 %layout.0, i64 %layout.1) unnamed_addr #0 {
start:
; call alloc::alloc::Global::alloc_impl
  %0 = call { ptr, i64 } @_ZN5alloc5alloc6Global10alloc_impl17h879e6ffe68fe2d1bE(ptr align 1 %self, i64 %layout.0, i64 %layout.1, i1 zeroext false)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <core::str::error::Utf8Error as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN64_$LT$core..str..error..Utf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h173189172731b276E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %_10 = alloca ptr, align 8
  %0 = getelementptr inbounds %"core::str::error::Utf8Error", ptr %self, i32 0, i32 1
  store ptr %0, ptr %_10, align 8
; call core::fmt::Formatter::debug_struct_field2_finish
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17h1f3ee845d6554337E(ptr align 8 %f, ptr align 1 @alloc_8e685ef482aec04a2d7a8ed5ef1228a3, i64 9, ptr align 1 @alloc_f34017a1538f19bf68b6d6294eec0bb3, i64 11, ptr align 1 %self, ptr align 8 @vtable.c, ptr align 1 @alloc_91eca80c47235190e5fbed3d6d8be36c, i64 9, ptr align 1 %_10, ptr align 8 @vtable.d)
  ret i1 %_0
}

; <alloc::string::FromUtf8Error as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN65_$LT$alloc..string..FromUtf8Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h759536fc0ae27503E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %_10 = alloca ptr, align 8
  %0 = getelementptr inbounds %"alloc::string::FromUtf8Error", ptr %self, i32 0, i32 1
  store ptr %0, ptr %_10, align 8
; call core::fmt::Formatter::debug_struct_field2_finish
  %_0 = call zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17h1f3ee845d6554337E(ptr align 8 %f, ptr align 1 @alloc_b44d52c0728a956e7d16327f52693b58, i64 13, ptr align 1 @alloc_dd4ffb6a82fadbcfa53fa009063078f4, i64 5, ptr align 1 %self, ptr align 8 @vtable.e, ptr align 1 @alloc_3f7b77ecc8a3c421d9a84c3c3ee05b1c, i64 5, ptr align 1 %_10, ptr align 8 @vtable.f)
  ret i1 %_0
}

; <alloc::string::String as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_13 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_12 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_13, align 8
  %2 = getelementptr inbounds i8, ptr %_13, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_13, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_13, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_12, align 8
  %6 = getelementptr inbounds i8, ptr %_12, i64 8
  store i64 %5, ptr %6, align 8
  %v.0 = load ptr, ptr %_12, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_12, i64 8
  %v.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %v.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %v.1, 1
  ret { ptr, i64 } %9
}

; <alloc::vec::Vec<T,A> as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN65_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h5badfd4d654de6ceE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_13 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_12 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_13, align 8
  %2 = getelementptr inbounds i8, ptr %_13, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_13, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_13, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_12, align 8
  %6 = getelementptr inbounds i8, ptr %_12, i64 8
  store i64 %5, ptr %6, align 8
  %_10.0 = load ptr, ptr %_12, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_12, i64 8
  %_10.1 = load i64, ptr %7, align 8, !noundef !3
; call <[T] as core::fmt::Debug>::fmt
  %_0 = call zeroext i1 @"_ZN48_$LT$$u5b$T$u5d$$u20$as$u20$core..fmt..Debug$GT$3fmt17h317c69c23b1980a0E"(ptr align 1 %_10.0, i64 %_10.1, ptr align 8 %f)
  ret i1 %_0
}

; <alloc::borrow::Cow<B> as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN66_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hd1ea73ff770805bdE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
  %_0 = alloca i8, align 1
  %0 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %1 = icmp eq i64 %0, -9223372036854775808
  %_3 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb1

bb3:                                              ; preds = %start
  %b = getelementptr inbounds %"alloc::borrow::Cow<'_, str>::Borrowed", ptr %self, i32 0, i32 1
  %self1 = getelementptr inbounds %"alloc::borrow::Cow<'_, str>::Borrowed", ptr %self, i32 0, i32 1
  %3 = getelementptr inbounds %"alloc::borrow::Cow<'_, str>::Borrowed", ptr %self, i32 0, i32 1
  %_8.0 = load ptr, ptr %3, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  %_8.1 = load i64, ptr %4, align 8, !noundef !3
; call <str as core::fmt::Display>::fmt
  %5 = call zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h86309c7b5dd516e7E"(ptr align 1 %_8.0, i64 %_8.1, ptr align 8 %f)
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_0, align 1
  br label %bb5

bb1:                                              ; preds = %start
; call <alloc::string::String as core::fmt::Display>::fmt
  %7 = call zeroext i1 @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E"(ptr align 8 %self, ptr align 8 %f)
  %8 = zext i1 %7 to i8
  store i8 %8, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb1, %bb3
  %9 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %10 = trunc i8 %9 to i1
  ret i1 %10

bb2:                                              ; No predecessors!
  unreachable
}

; <core::option::Option<T> as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h33fd057d7ddbf3a1E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %__self_0 = alloca ptr, align 8
  %_0 = alloca i8, align 1
  %_3 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %0 = icmp eq i64 %_3, 0
  br i1 %0, label %bb3, label %bb1

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %1 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h4bb7c9399e0c7fb5E(ptr align 8 %f, ptr align 1 @alloc_37d2e53432a03a1f90b3e7253015eaf9, i64 4)
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_0, align 1
  br label %bb5

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %3, ptr %__self_0, align 8
; call core::fmt::Formatter::debug_tuple_field1_finish
  %4 = call zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17hac56ed013e0598f8E(ptr align 8 %f, ptr align 1 @alloc_9535bf4c204f3eb9b19ec2c83e446e52, i64 4, ptr align 1 %__self_0, ptr align 8 @vtable.g)
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb1, %bb3
  %6 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %7 = trunc i8 %6 to i1
  ret i1 %7

bb2:                                              ; No predecessors!
  unreachable
}

; <core::option::Option<T> as core::fmt::Debug>::fmt
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN66_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h6dde431f051d5a31E"(ptr align 1 %self, ptr align 8 %f) unnamed_addr #0 {
start:
  %__self_0 = alloca ptr, align 8
  %_0 = alloca i8, align 1
  %0 = load i8, ptr %self, align 1, !range !10, !noundef !3
  %1 = trunc i8 %0 to i1
  %_3 = zext i1 %1 to i64
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb1

bb3:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %3 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h4bb7c9399e0c7fb5E(ptr align 8 %f, ptr align 1 @alloc_37d2e53432a03a1f90b3e7253015eaf9, i64 4)
  %4 = zext i1 %3 to i8
  store i8 %4, ptr %_0, align 1
  br label %bb5

bb1:                                              ; preds = %start
  %5 = getelementptr inbounds i8, ptr %self, i64 1
  store ptr %5, ptr %__self_0, align 8
; call core::fmt::Formatter::debug_tuple_field1_finish
  %6 = call zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17hac56ed013e0598f8E(ptr align 8 %f, ptr align 1 @alloc_9535bf4c204f3eb9b19ec2c83e446e52, i64 4, ptr align 1 %__self_0, ptr align 8 @vtable.4)
  %7 = zext i1 %6 to i8
  store i8 %7, ptr %_0, align 1
  br label %bb5

bb5:                                              ; preds = %bb1, %bb3
  %8 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %9 = trunc i8 %8 to i1
  ret i1 %9

bb2:                                              ; No predecessors!
  unreachable
}

; <std::ffi::os_str::OsString as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN67_$LT$std..ffi..os_str..OsString$u20$as$u20$core..cmp..PartialEq$GT$2eq17ha9051ab2072a2ec3E"(ptr align 8 %self, ptr align 8 %other) unnamed_addr #0 {
start:
  %_36 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_35 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_20 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_19 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_6 = alloca { ptr, i64 }, align 8
  %_4 = alloca { ptr, i64 }, align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_20, align 8
  %2 = getelementptr inbounds i8, ptr %_20, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_20, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_20, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_19, align 8
  %6 = getelementptr inbounds i8, ptr %_19, i64 8
  store i64 %5, ptr %6, align 8
  %_17.0 = load ptr, ptr %_19, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_19, i64 8
  %_17.1 = load i64, ptr %7, align 8, !noundef !3
  store ptr %_17.0, ptr %_4, align 8
  %8 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %_17.1, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %other, i64 8
  %self2 = load ptr, ptr %9, align 8, !nonnull !3, !noundef !3
  %10 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %other, i32 0, i32 1
  %len3 = load i64, ptr %10, align 8, !noundef !3
  store ptr %self2, ptr %_36, align 8
  %11 = getelementptr inbounds i8, ptr %_36, i64 8
  store i64 %len3, ptr %11, align 8
  %12 = load ptr, ptr %_36, align 8, !noundef !3
  %13 = getelementptr inbounds i8, ptr %_36, i64 8
  %14 = load i64, ptr %13, align 8, !noundef !3
  store ptr %12, ptr %_35, align 8
  %15 = getelementptr inbounds i8, ptr %_35, i64 8
  store i64 %14, ptr %15, align 8
  %_33.0 = load ptr, ptr %_35, align 8, !noundef !3
  %16 = getelementptr inbounds i8, ptr %_35, i64 8
  %_33.1 = load i64, ptr %16, align 8, !noundef !3
  store ptr %_33.0, ptr %_6, align 8
  %17 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 %_33.1, ptr %17, align 8
  %self.0 = load ptr, ptr %_4, align 8, !nonnull !3, !align !4, !noundef !3
  %18 = getelementptr inbounds i8, ptr %_4, i64 8
  %self.1 = load i64, ptr %18, align 8, !noundef !3
  %other.0 = load ptr, ptr %_6, align 8, !nonnull !3, !align !4, !noundef !3
  %19 = getelementptr inbounds i8, ptr %_6, i64 8
  %other.1 = load i64, ptr %19, align 8, !noundef !3
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %_0 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17hf2d9586e25ea8362E"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %other.0, i64 %other.1)
  ret i1 %_0
}

; <alloc::ffi::c_str::CString as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN68_$LT$alloc..ffi..c_str..CString$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc7531c9c629ac6f3E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_2.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_2.1 = load i64, ptr %0, align 8, !noundef !3
  store i8 0, ptr %_2.0, align 1
  ret void
}

; <core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::c_rounds
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$core..hash..sip..Sip13Rounds$u20$as$u20$core..hash..sip..Sip$GT$8c_rounds17hd80f9fe0cf640dd9E"(ptr align 8 %state) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %self = load i64, ptr %state, align 8, !noundef !3
  %6 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %rhs = load i64, ptr %6, align 8, !noundef !3
  %_2 = add i64 %self, %rhs
  store i64 %_2, ptr %state, align 8
  %7 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %self1 = load i64, ptr %7, align 8, !noundef !3
  %8 = call i64 @llvm.fshl.i64(i64 %self1, i64 %self1, i64 13)
  store i64 %8, ptr %5, align 8
  %_5 = load i64, ptr %5, align 8, !noundef !3
  %9 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  store i64 %_5, ptr %9, align 8
  %_7 = load i64, ptr %state, align 8, !noundef !3
  %10 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %11 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %12 = load i64, ptr %11, align 8, !noundef !3
  %13 = xor i64 %12, %_7
  store i64 %13, ptr %10, align 8
  %self2 = load i64, ptr %state, align 8, !noundef !3
  %14 = call i64 @llvm.fshl.i64(i64 %self2, i64 %self2, i64 32)
  store i64 %14, ptr %4, align 8
  %_8 = load i64, ptr %4, align 8, !noundef !3
  store i64 %_8, ptr %state, align 8
  %15 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %self3 = load i64, ptr %15, align 8, !noundef !3
  %16 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %rhs4 = load i64, ptr %16, align 8, !noundef !3
  %_10 = add i64 %self3, %rhs4
  %17 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  store i64 %_10, ptr %17, align 8
  %18 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %self5 = load i64, ptr %18, align 8, !noundef !3
  %19 = call i64 @llvm.fshl.i64(i64 %self5, i64 %self5, i64 16)
  store i64 %19, ptr %3, align 8
  %_13 = load i64, ptr %3, align 8, !noundef !3
  %20 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  store i64 %_13, ptr %20, align 8
  %21 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %_15 = load i64, ptr %21, align 8, !noundef !3
  %22 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %23 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %24 = load i64, ptr %23, align 8, !noundef !3
  %25 = xor i64 %24, %_15
  store i64 %25, ptr %22, align 8
  %self6 = load i64, ptr %state, align 8, !noundef !3
  %26 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %rhs7 = load i64, ptr %26, align 8, !noundef !3
  %_16 = add i64 %self6, %rhs7
  store i64 %_16, ptr %state, align 8
  %27 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %self8 = load i64, ptr %27, align 8, !noundef !3
  %28 = call i64 @llvm.fshl.i64(i64 %self8, i64 %self8, i64 21)
  store i64 %28, ptr %2, align 8
  %_19 = load i64, ptr %2, align 8, !noundef !3
  %29 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  store i64 %_19, ptr %29, align 8
  %_21 = load i64, ptr %state, align 8, !noundef !3
  %30 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %31 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %32 = load i64, ptr %31, align 8, !noundef !3
  %33 = xor i64 %32, %_21
  store i64 %33, ptr %30, align 8
  %34 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %self9 = load i64, ptr %34, align 8, !noundef !3
  %35 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %rhs10 = load i64, ptr %35, align 8, !noundef !3
  %_22 = add i64 %self9, %rhs10
  %36 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  store i64 %_22, ptr %36, align 8
  %37 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %self11 = load i64, ptr %37, align 8, !noundef !3
  %38 = call i64 @llvm.fshl.i64(i64 %self11, i64 %self11, i64 17)
  store i64 %38, ptr %1, align 8
  %_25 = load i64, ptr %1, align 8, !noundef !3
  %39 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  store i64 %_25, ptr %39, align 8
  %40 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %_27 = load i64, ptr %40, align 8, !noundef !3
  %41 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %42 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %43 = load i64, ptr %42, align 8, !noundef !3
  %44 = xor i64 %43, %_27
  store i64 %44, ptr %41, align 8
  %45 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %self12 = load i64, ptr %45, align 8, !noundef !3
  %46 = call i64 @llvm.fshl.i64(i64 %self12, i64 %self12, i64 32)
  store i64 %46, ptr %0, align 8
  %_28 = load i64, ptr %0, align 8, !noundef !3
  %47 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  store i64 %_28, ptr %47, align 8
  ret void
}

; <core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::d_rounds
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$core..hash..sip..Sip13Rounds$u20$as$u20$core..hash..sip..Sip$GT$8d_rounds17h6d3ac88b47437d02E"(ptr align 8 %state) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %self = load i64, ptr %state, align 8, !noundef !3
  %18 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %rhs = load i64, ptr %18, align 8, !noundef !3
  %_2 = add i64 %self, %rhs
  store i64 %_2, ptr %state, align 8
  %19 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %self1 = load i64, ptr %19, align 8, !noundef !3
  %20 = call i64 @llvm.fshl.i64(i64 %self1, i64 %self1, i64 13)
  store i64 %20, ptr %17, align 8
  %_5 = load i64, ptr %17, align 8, !noundef !3
  %21 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  store i64 %_5, ptr %21, align 8
  %_7 = load i64, ptr %state, align 8, !noundef !3
  %22 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %23 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %24 = load i64, ptr %23, align 8, !noundef !3
  %25 = xor i64 %24, %_7
  store i64 %25, ptr %22, align 8
  %self2 = load i64, ptr %state, align 8, !noundef !3
  %26 = call i64 @llvm.fshl.i64(i64 %self2, i64 %self2, i64 32)
  store i64 %26, ptr %16, align 8
  %_8 = load i64, ptr %16, align 8, !noundef !3
  store i64 %_8, ptr %state, align 8
  %27 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %self3 = load i64, ptr %27, align 8, !noundef !3
  %28 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %rhs4 = load i64, ptr %28, align 8, !noundef !3
  %_10 = add i64 %self3, %rhs4
  %29 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  store i64 %_10, ptr %29, align 8
  %30 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %self5 = load i64, ptr %30, align 8, !noundef !3
  %31 = call i64 @llvm.fshl.i64(i64 %self5, i64 %self5, i64 16)
  store i64 %31, ptr %15, align 8
  %_13 = load i64, ptr %15, align 8, !noundef !3
  %32 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  store i64 %_13, ptr %32, align 8
  %33 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %_15 = load i64, ptr %33, align 8, !noundef !3
  %34 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %35 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %36 = load i64, ptr %35, align 8, !noundef !3
  %37 = xor i64 %36, %_15
  store i64 %37, ptr %34, align 8
  %self6 = load i64, ptr %state, align 8, !noundef !3
  %38 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %rhs7 = load i64, ptr %38, align 8, !noundef !3
  %_16 = add i64 %self6, %rhs7
  store i64 %_16, ptr %state, align 8
  %39 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %self8 = load i64, ptr %39, align 8, !noundef !3
  %40 = call i64 @llvm.fshl.i64(i64 %self8, i64 %self8, i64 21)
  store i64 %40, ptr %14, align 8
  %_19 = load i64, ptr %14, align 8, !noundef !3
  %41 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  store i64 %_19, ptr %41, align 8
  %_21 = load i64, ptr %state, align 8, !noundef !3
  %42 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %43 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %44 = load i64, ptr %43, align 8, !noundef !3
  %45 = xor i64 %44, %_21
  store i64 %45, ptr %42, align 8
  %46 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %self9 = load i64, ptr %46, align 8, !noundef !3
  %47 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %rhs10 = load i64, ptr %47, align 8, !noundef !3
  %_22 = add i64 %self9, %rhs10
  %48 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  store i64 %_22, ptr %48, align 8
  %49 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %self11 = load i64, ptr %49, align 8, !noundef !3
  %50 = call i64 @llvm.fshl.i64(i64 %self11, i64 %self11, i64 17)
  store i64 %50, ptr %13, align 8
  %_25 = load i64, ptr %13, align 8, !noundef !3
  %51 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  store i64 %_25, ptr %51, align 8
  %52 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %_27 = load i64, ptr %52, align 8, !noundef !3
  %53 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %54 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %55 = load i64, ptr %54, align 8, !noundef !3
  %56 = xor i64 %55, %_27
  store i64 %56, ptr %53, align 8
  %57 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %self12 = load i64, ptr %57, align 8, !noundef !3
  %58 = call i64 @llvm.fshl.i64(i64 %self12, i64 %self12, i64 32)
  store i64 %58, ptr %12, align 8
  %_28 = load i64, ptr %12, align 8, !noundef !3
  %59 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  store i64 %_28, ptr %59, align 8
  %self13 = load i64, ptr %state, align 8, !noundef !3
  %60 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %rhs14 = load i64, ptr %60, align 8, !noundef !3
  %_30 = add i64 %self13, %rhs14
  store i64 %_30, ptr %state, align 8
  %61 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %self15 = load i64, ptr %61, align 8, !noundef !3
  %62 = call i64 @llvm.fshl.i64(i64 %self15, i64 %self15, i64 13)
  store i64 %62, ptr %11, align 8
  %_33 = load i64, ptr %11, align 8, !noundef !3
  %63 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  store i64 %_33, ptr %63, align 8
  %_35 = load i64, ptr %state, align 8, !noundef !3
  %64 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %65 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %66 = load i64, ptr %65, align 8, !noundef !3
  %67 = xor i64 %66, %_35
  store i64 %67, ptr %64, align 8
  %self16 = load i64, ptr %state, align 8, !noundef !3
  %68 = call i64 @llvm.fshl.i64(i64 %self16, i64 %self16, i64 32)
  store i64 %68, ptr %10, align 8
  %_36 = load i64, ptr %10, align 8, !noundef !3
  store i64 %_36, ptr %state, align 8
  %69 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %self17 = load i64, ptr %69, align 8, !noundef !3
  %70 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %rhs18 = load i64, ptr %70, align 8, !noundef !3
  %_38 = add i64 %self17, %rhs18
  %71 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  store i64 %_38, ptr %71, align 8
  %72 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %self19 = load i64, ptr %72, align 8, !noundef !3
  %73 = call i64 @llvm.fshl.i64(i64 %self19, i64 %self19, i64 16)
  store i64 %73, ptr %9, align 8
  %_41 = load i64, ptr %9, align 8, !noundef !3
  %74 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  store i64 %_41, ptr %74, align 8
  %75 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %_43 = load i64, ptr %75, align 8, !noundef !3
  %76 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %77 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %78 = load i64, ptr %77, align 8, !noundef !3
  %79 = xor i64 %78, %_43
  store i64 %79, ptr %76, align 8
  %self20 = load i64, ptr %state, align 8, !noundef !3
  %80 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %rhs21 = load i64, ptr %80, align 8, !noundef !3
  %_44 = add i64 %self20, %rhs21
  store i64 %_44, ptr %state, align 8
  %81 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %self22 = load i64, ptr %81, align 8, !noundef !3
  %82 = call i64 @llvm.fshl.i64(i64 %self22, i64 %self22, i64 21)
  store i64 %82, ptr %8, align 8
  %_47 = load i64, ptr %8, align 8, !noundef !3
  %83 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  store i64 %_47, ptr %83, align 8
  %_49 = load i64, ptr %state, align 8, !noundef !3
  %84 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %85 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %86 = load i64, ptr %85, align 8, !noundef !3
  %87 = xor i64 %86, %_49
  store i64 %87, ptr %84, align 8
  %88 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %self23 = load i64, ptr %88, align 8, !noundef !3
  %89 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %rhs24 = load i64, ptr %89, align 8, !noundef !3
  %_50 = add i64 %self23, %rhs24
  %90 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  store i64 %_50, ptr %90, align 8
  %91 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %self25 = load i64, ptr %91, align 8, !noundef !3
  %92 = call i64 @llvm.fshl.i64(i64 %self25, i64 %self25, i64 17)
  store i64 %92, ptr %7, align 8
  %_53 = load i64, ptr %7, align 8, !noundef !3
  %93 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  store i64 %_53, ptr %93, align 8
  %94 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %_55 = load i64, ptr %94, align 8, !noundef !3
  %95 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %96 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %97 = load i64, ptr %96, align 8, !noundef !3
  %98 = xor i64 %97, %_55
  store i64 %98, ptr %95, align 8
  %99 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %self26 = load i64, ptr %99, align 8, !noundef !3
  %100 = call i64 @llvm.fshl.i64(i64 %self26, i64 %self26, i64 32)
  store i64 %100, ptr %6, align 8
  %_56 = load i64, ptr %6, align 8, !noundef !3
  %101 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  store i64 %_56, ptr %101, align 8
  %self27 = load i64, ptr %state, align 8, !noundef !3
  %102 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %rhs28 = load i64, ptr %102, align 8, !noundef !3
  %_58 = add i64 %self27, %rhs28
  store i64 %_58, ptr %state, align 8
  %103 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %self29 = load i64, ptr %103, align 8, !noundef !3
  %104 = call i64 @llvm.fshl.i64(i64 %self29, i64 %self29, i64 13)
  store i64 %104, ptr %5, align 8
  %_61 = load i64, ptr %5, align 8, !noundef !3
  %105 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  store i64 %_61, ptr %105, align 8
  %_63 = load i64, ptr %state, align 8, !noundef !3
  %106 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %107 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %108 = load i64, ptr %107, align 8, !noundef !3
  %109 = xor i64 %108, %_63
  store i64 %109, ptr %106, align 8
  %self30 = load i64, ptr %state, align 8, !noundef !3
  %110 = call i64 @llvm.fshl.i64(i64 %self30, i64 %self30, i64 32)
  store i64 %110, ptr %4, align 8
  %_64 = load i64, ptr %4, align 8, !noundef !3
  store i64 %_64, ptr %state, align 8
  %111 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %self31 = load i64, ptr %111, align 8, !noundef !3
  %112 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %rhs32 = load i64, ptr %112, align 8, !noundef !3
  %_66 = add i64 %self31, %rhs32
  %113 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  store i64 %_66, ptr %113, align 8
  %114 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %self33 = load i64, ptr %114, align 8, !noundef !3
  %115 = call i64 @llvm.fshl.i64(i64 %self33, i64 %self33, i64 16)
  store i64 %115, ptr %3, align 8
  %_69 = load i64, ptr %3, align 8, !noundef !3
  %116 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  store i64 %_69, ptr %116, align 8
  %117 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %_71 = load i64, ptr %117, align 8, !noundef !3
  %118 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %119 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %120 = load i64, ptr %119, align 8, !noundef !3
  %121 = xor i64 %120, %_71
  store i64 %121, ptr %118, align 8
  %self34 = load i64, ptr %state, align 8, !noundef !3
  %122 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %rhs35 = load i64, ptr %122, align 8, !noundef !3
  %_72 = add i64 %self34, %rhs35
  store i64 %_72, ptr %state, align 8
  %123 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %self36 = load i64, ptr %123, align 8, !noundef !3
  %124 = call i64 @llvm.fshl.i64(i64 %self36, i64 %self36, i64 21)
  store i64 %124, ptr %2, align 8
  %_75 = load i64, ptr %2, align 8, !noundef !3
  %125 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  store i64 %_75, ptr %125, align 8
  %_77 = load i64, ptr %state, align 8, !noundef !3
  %126 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %127 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %128 = load i64, ptr %127, align 8, !noundef !3
  %129 = xor i64 %128, %_77
  store i64 %129, ptr %126, align 8
  %130 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %self37 = load i64, ptr %130, align 8, !noundef !3
  %131 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %rhs38 = load i64, ptr %131, align 8, !noundef !3
  %_78 = add i64 %self37, %rhs38
  %132 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  store i64 %_78, ptr %132, align 8
  %133 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %self39 = load i64, ptr %133, align 8, !noundef !3
  %134 = call i64 @llvm.fshl.i64(i64 %self39, i64 %self39, i64 17)
  store i64 %134, ptr %1, align 8
  %_81 = load i64, ptr %1, align 8, !noundef !3
  %135 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  store i64 %_81, ptr %135, align 8
  %136 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %_83 = load i64, ptr %136, align 8, !noundef !3
  %137 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %138 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %139 = load i64, ptr %138, align 8, !noundef !3
  %140 = xor i64 %139, %_83
  store i64 %140, ptr %137, align 8
  %141 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %self40 = load i64, ptr %141, align 8, !noundef !3
  %142 = call i64 @llvm.fshl.i64(i64 %self40, i64 %self40, i64 32)
  store i64 %142, ptr %0, align 8
  %_84 = load i64, ptr %0, align 8, !noundef !3
  %143 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  store i64 %_84, ptr %143, align 8
  ret void
}

; <std::ffi::os_str::OsString as core::default::Default>::default
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$std..ffi..os_str..OsString$u20$as$u20$core..default..Default$GT$7default17h4413335316fa2d9dE"(ptr sret(%"std::ffi::os_str::OsString") align 8 %_0) unnamed_addr #0 {
start:
  %_3 = alloca %"alloc::vec::Vec<u8>", align 8
  %s = alloca %"alloc::string::String", align 8
  %_1 = alloca %"std::sys::os_str::bytes::Buf", align 8
  store i64 0, ptr %_3, align 8
  %0 = getelementptr inbounds i8, ptr %_3, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %0, align 8
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %_3, i32 0, i32 1
  store i64 0, ptr %1, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %s, ptr align 8 %_3, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_1, ptr align 8 %_3, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_1, i64 24, i1 false)
  ret void
}

; <std::os::fd::owned::OwnedFd as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN69_$LT$std..os..fd..owned..OwnedFd$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2c37aa9c96cdbbcaE"(ptr align 4 %self) unnamed_addr #0 {
start:
  %_3 = load i32, ptr %self, align 4, !noundef !3
  %_2 = call i32 @close(i32 %_3)
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h19518165a6145640E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_10 = alloca %"core::ptr::metadata::PtrComponents<[alloc::string::String]>", align 8
  %_9 = alloca %"core::ptr::metadata::PtrRepr<[alloc::string::String]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_10, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_10, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_10, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_9, align 8
  %6 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %5, ptr %6, align 8
  %_2.0 = load ptr, ptr %_9, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_9, i64 8
  %_2.1 = load i64, ptr %7, align 8, !noundef !3
; call core::ptr::drop_in_place<[alloc::string::String]>
  call void @"_ZN4core3ptr52drop_in_place$LT$$u5b$alloc..string..String$u5d$$GT$17hdec1d56981c42602E"(ptr align 8 %_2.0, i64 %_2.1)
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h2aba75e37b1dd45dE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_10 = alloca %"core::ptr::metadata::PtrComponents<[*const i8]>", align 8
  %_9 = alloca %"core::ptr::metadata::PtrRepr<[*const i8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<*const i8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_10, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_10, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_10, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_9, align 8
  %6 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %5, ptr %6, align 8
  %_2.0 = load ptr, ptr %_9, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_9, i64 8
  %_2.1 = load i64, ptr %7, align 8, !noundef !3
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7c8e630744120a73E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_10 = alloca %"core::ptr::metadata::PtrComponents<[alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>]>", align 8
  %_9 = alloca %"core::ptr::metadata::PtrRepr<[alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<alloc::boxed::Box<dyn core::ops::function::FnMut() -> core::result::Result<(), std::io::error::Error> + core::marker::Send + core::marker::Sync>>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_10, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_10, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_10, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_9, align 8
  %6 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %5, ptr %6, align 8
  %_2.0 = load ptr, ptr %_9, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_9, i64 8
  %_2.1 = load i64, ptr %7, align 8, !noundef !3
; call core::ptr::drop_in_place<[alloc::boxed::Box<dyn core::ops::function::FnMut<()>+Output = core::result::Result<(),std::io::error::Error>+core::marker::Send+core::marker::Sync>]>
  call void @"_ZN4core3ptr238drop_in_place$LT$$u5b$alloc..boxed..Box$LT$dyn$u20$core..ops..function..FnMut$LT$$LP$$RP$$GT$$u2b$Output$u20$$u3d$$u20$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$u2b$core..marker..Send$u2b$core..marker..Sync$GT$$u5d$$GT$17h15dc09c806b4ea07E"(ptr align 8 %_2.0, i64 %_2.1)
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h8375a15b1768aafbE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_10 = alloca %"core::ptr::metadata::PtrComponents<[std::path::PathBuf]>", align 8
  %_9 = alloca %"core::ptr::metadata::PtrRepr<[std::path::PathBuf]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<std::path::PathBuf>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_10, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_10, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_10, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_9, align 8
  %6 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %5, ptr %6, align 8
  %_2.0 = load ptr, ptr %_9, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_9, i64 8
  %_2.1 = load i64, ptr %7, align 8, !noundef !3
; call core::ptr::drop_in_place<[std::path::PathBuf]>
  call void @"_ZN4core3ptr49drop_in_place$LT$$u5b$std..path..PathBuf$u5d$$GT$17ha0367c1c249b9363E"(ptr align 8 %_2.0, i64 %_2.1)
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9abcde57a55aadeeE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_10 = alloca %"core::ptr::metadata::PtrComponents<[&str]>", align 8
  %_9 = alloca %"core::ptr::metadata::PtrRepr<[&str]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_10, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_10, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_10, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_9, align 8
  %6 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %5, ptr %6, align 8
  %_2.0 = load ptr, ptr %_9, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_9, i64 8
  %_2.1 = load i64, ptr %7, align 8, !noundef !3
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha12dbd5f87ebbafaE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_10 = alloca %"core::ptr::metadata::PtrComponents<[(std::ffi::os_str::OsString, std::ffi::os_str::OsString)]>", align 8
  %_9 = alloca %"core::ptr::metadata::PtrRepr<[(std::ffi::os_str::OsString, std::ffi::os_str::OsString)]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_10, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_10, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_10, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_9, align 8
  %6 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %5, ptr %6, align 8
  %_2.0 = load ptr, ptr %_9, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_9, i64 8
  %_2.1 = load i64, ptr %7, align 8, !noundef !3
; call core::ptr::drop_in_place<[(std::ffi::os_str::OsString,std::ffi::os_str::OsString)]>
  call void @"_ZN4core3ptr94drop_in_place$LT$$u5b$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$u5d$$GT$17h33b441c15d804543E"(ptr align 8 %_2.0, i64 %_2.1)
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha827b2674695e81fE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_10 = alloca %"core::ptr::metadata::PtrComponents<[std::ffi::os_str::OsString]>", align 8
  %_9 = alloca %"core::ptr::metadata::PtrRepr<[std::ffi::os_str::OsString]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<std::ffi::os_str::OsString>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_10, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_10, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_10, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_9, align 8
  %6 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %5, ptr %6, align 8
  %_2.0 = load ptr, ptr %_9, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_9, i64 8
  %_2.1 = load i64, ptr %7, align 8, !noundef !3
; call core::ptr::drop_in_place<[std::ffi::os_str::OsString]>
  call void @"_ZN4core3ptr57drop_in_place$LT$$u5b$std..ffi..os_str..OsString$u5d$$GT$17hd01026d62b5567bcE"(ptr align 8 %_2.0, i64 %_2.1)
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17haaf3533dada0972dE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_10 = alloca %"core::ptr::metadata::PtrComponents<[alloc::vec::Vec<alloc::string::String>]>", align 8
  %_9 = alloca %"core::ptr::metadata::PtrRepr<[alloc::vec::Vec<alloc::string::String>]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_10, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_10, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_10, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_9, align 8
  %6 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %5, ptr %6, align 8
  %_2.0 = load ptr, ptr %_9, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_9, i64 8
  %_2.1 = load i64, ptr %7, align 8, !noundef !3
; call core::ptr::drop_in_place<[alloc::vec::Vec<alloc::string::String>]>
  call void @"_ZN4core3ptr75drop_in_place$LT$$u5b$alloc..vec..Vec$LT$alloc..string..String$GT$$u5d$$GT$17hacbd5c2b09cbbcccE"(ptr align 8 %_2.0, i64 %_2.1)
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hcfd8a289ec6bb00fE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_10 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_9 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_10, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_10, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_10, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_9, align 8
  %6 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %5, ptr %6, align 8
  %_2.0 = load ptr, ptr %_9, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_9, i64 8
  %_2.1 = load i64, ptr %7, align 8, !noundef !3
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN70_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hfb306739c08504d4E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_10 = alloca %"core::ptr::metadata::PtrComponents<[alloc::ffi::c_str::CString]>", align 8
  %_9 = alloca %"core::ptr::metadata::PtrRepr<[alloc::ffi::c_str::CString]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<alloc::ffi::c_str::CString>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_10, align 8
  %2 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_10, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_10, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_9, align 8
  %6 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %5, ptr %6, align 8
  %_2.0 = load ptr, ptr %_9, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_9, i64 8
  %_2.1 = load i64, ptr %7, align 8, !noundef !3
; call core::ptr::drop_in_place<[alloc::ffi::c_str::CString]>
  call void @"_ZN4core3ptr57drop_in_place$LT$$u5b$alloc..ffi..c_str..CString$u5d$$GT$17hdf403cf2158b792bE"(ptr align 8 %_2.0, i64 %_2.1)
  ret void
}

; <std::ffi::os_str::OsString as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN70_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h32d6c568a2decf67E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_15 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_15, align 8
  %2 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_15, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_15, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_14, align 8
  %6 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %5, ptr %6, align 8
  %_12.0 = load ptr, ptr %_14, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_14, i64 8
  %_12.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %_12.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %_12.1, 1
  ret { ptr, i64 } %9
}

; <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
; Function Attrs: nonlazybind uwtable
define { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h445e1b4694eb6d64E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca { ptr, i64 }, align 8
  %0 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %1 = icmp eq i64 %0, -9223372036854775808
  %_3 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_3, 0
  br i1 %2, label %bb3, label %bb1

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds %"alloc::borrow::Cow<'_, str>::Borrowed", ptr %self, i32 0, i32 1
  %borrowed.0 = load ptr, ptr %3, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %3, i64 8
  %borrowed.1 = load i64, ptr %4, align 8, !noundef !3
  store ptr %borrowed.0, ptr %_2, align 8
  %5 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %borrowed.1, ptr %5, align 8
  br label %bb5

bb1:                                              ; preds = %start
; call alloc::str::<impl core::borrow::Borrow<str> for alloc::string::String>::borrow
  %6 = call { ptr, i64 } @"_ZN5alloc3str83_$LT$impl$u20$core..borrow..Borrow$LT$str$GT$$u20$for$u20$alloc..string..String$GT$6borrow17hc6f2541ecd6bdf2fE"(ptr align 8 %self)
  %_6.0 = extractvalue { ptr, i64 } %6, 0
  %_6.1 = extractvalue { ptr, i64 } %6, 1
  store ptr %_6.0, ptr %_2, align 8
  %7 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %_6.1, ptr %7, align 8
  br label %bb5

bb5:                                              ; preds = %bb1, %bb3
  %_0.0 = load ptr, ptr %_2, align 8, !nonnull !3, !align !4, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_2, i64 8
  %_0.1 = load i64, ptr %8, align 8, !noundef !3
  %9 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %10 = insertvalue { ptr, i64 } %9, i64 %_0.1, 1
  ret { ptr, i64 } %10

bb2:                                              ; No predecessors!
  unreachable
}

; <core::hash::sip::Hasher<S> as core::hash::Hasher>::write
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17hf98e37642da45a69E"(ptr align 8 %self, ptr align 1 %msg.0, i64 %msg.1) unnamed_addr #0 {
start:
  %data = alloca i64, align 8
  %i = alloca i64, align 8
  %needed = alloca i64, align 8
  %0 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 3
  %1 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 3
  %2 = load i64, ptr %1, align 8, !noundef !3
  %3 = add i64 %2, %msg.1
  store i64 %3, ptr %0, align 8
  store i64 0, ptr %needed, align 8
  %4 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 5
  %_5 = load i64, ptr %4, align 8, !noundef !3
  %5 = icmp eq i64 %_5, 0
  br i1 %5, label %bb6, label %bb1

bb6:                                              ; preds = %start
  br label %bb7

bb1:                                              ; preds = %start
  %6 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 5
  %_6 = load i64, ptr %6, align 8, !noundef !3
  %7 = sub i64 8, %_6
  store i64 %7, ptr %needed, align 8
  %v2 = load i64, ptr %needed, align 8, !noundef !3
; call core::cmp::min_by
  %_9 = call i64 @_ZN4core3cmp6min_by17h2372ffec580d3119E(i64 %msg.1, i64 %v2)
; call core::hash::sip::u8to64_le
  %_8 = call i64 @_ZN4core4hash3sip9u8to64_le17h1fda4fd4cddb1152E(ptr align 1 %msg.0, i64 %msg.1, i64 0, i64 %_9)
  %8 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 5
  %_12 = load i64, ptr %8, align 8, !noundef !3
  %_11 = mul i64 8, %_12
  %9 = and i64 %_11, 63
  %_7 = shl i64 %_8, %9
  %10 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 4
  %11 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 4
  %12 = load i64, ptr %11, align 8, !noundef !3
  %13 = or i64 %12, %_7
  store i64 %13, ptr %10, align 8
  %_14 = load i64, ptr %needed, align 8, !noundef !3
  %_13 = icmp ult i64 %msg.1, %_14
  br i1 %_13, label %bb3, label %bb4

bb7:                                              ; preds = %bb4, %bb6
  %_20 = load i64, ptr %needed, align 8, !noundef !3
  %len = sub i64 %msg.1, %_20
  %left = and i64 %len, 7
  %14 = load i64, ptr %needed, align 8, !noundef !3
  store i64 %14, ptr %i, align 8
  br label %bb8

bb4:                                              ; preds = %bb1
  %15 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 4
  %_15 = load i64, ptr %15, align 8, !noundef !3
  %16 = getelementptr inbounds %"core::hash::sip::State", ptr %self, i32 0, i32 3
  %17 = getelementptr inbounds %"core::hash::sip::State", ptr %self, i32 0, i32 3
  %18 = load i64, ptr %17, align 8, !noundef !3
  %19 = xor i64 %18, %_15
  store i64 %19, ptr %16, align 8
; call <core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::c_rounds
  call void @"_ZN69_$LT$core..hash..sip..Sip13Rounds$u20$as$u20$core..hash..sip..Sip$GT$8c_rounds17hd80f9fe0cf640dd9E"(ptr align 8 %self)
  %20 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 4
  %_18 = load i64, ptr %20, align 8, !noundef !3
  %21 = load i64, ptr %self, align 8, !noundef !3
  %22 = xor i64 %21, %_18
  store i64 %22, ptr %self, align 8
  %23 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 5
  store i64 0, ptr %23, align 8
  br label %bb7

bb3:                                              ; preds = %bb1
  %24 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 5
  %25 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 5
  %26 = load i64, ptr %25, align 8, !noundef !3
  %27 = add i64 %26, %msg.1
  store i64 %27, ptr %24, align 8
  br label %bb13

bb8:                                              ; preds = %bb9, %bb7
  %_24 = load i64, ptr %i, align 8, !noundef !3
  %_25 = sub i64 %len, %left
  %_23 = icmp ult i64 %_24, %_25
  br i1 %_23, label %bb9, label %bb11

bb11:                                             ; preds = %bb8
  %_36 = load i64, ptr %i, align 8, !noundef !3
; call core::hash::sip::u8to64_le
  %_35 = call i64 @_ZN4core4hash3sip9u8to64_le17h1fda4fd4cddb1152E(ptr align 1 %msg.0, i64 %msg.1, i64 %_36, i64 %left)
  %28 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 4
  store i64 %_35, ptr %28, align 8
  %29 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 5
  store i64 %left, ptr %29, align 8
  br label %bb13

bb9:                                              ; preds = %bb8
  store i64 0, ptr %data, align 8
  %count = load i64, ptr %i, align 8, !noundef !3
  %src = getelementptr inbounds i8, ptr %msg.0, i64 %count
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %data, ptr align 1 %src, i64 8, i1 false)
  %mi = load i64, ptr %data, align 8, !noundef !3
  %30 = getelementptr inbounds %"core::hash::sip::State", ptr %self, i32 0, i32 3
  %31 = getelementptr inbounds %"core::hash::sip::State", ptr %self, i32 0, i32 3
  %32 = load i64, ptr %31, align 8, !noundef !3
  %33 = xor i64 %32, %mi
  store i64 %33, ptr %30, align 8
; call <core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::c_rounds
  call void @"_ZN69_$LT$core..hash..sip..Sip13Rounds$u20$as$u20$core..hash..sip..Sip$GT$8c_rounds17hd80f9fe0cf640dd9E"(ptr align 8 %self)
  %34 = load i64, ptr %self, align 8, !noundef !3
  %35 = xor i64 %34, %mi
  store i64 %35, ptr %self, align 8
  %36 = load i64, ptr %i, align 8, !noundef !3
  %37 = add i64 %36, 8
  store i64 %37, ptr %i, align 8
  br label %bb8

bb13:                                             ; preds = %bb3, %bb11
  ret void
}

; <core::hash::sip::Hasher<S> as core::hash::Hasher>::finish
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$6finish17h19e3252e2712971dE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %state = alloca %"core::hash::sip::State", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %state, ptr align 8 %self, i64 32, i1 false)
  %0 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 3
  %_7 = load i64, ptr %0, align 8, !noundef !3
  %_5 = and i64 %_7, 255
  %_4 = shl i64 %_5, 56
  %1 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %self, i32 0, i32 4
  %_8 = load i64, ptr %1, align 8, !noundef !3
  %b = or i64 %_4, %_8
  %2 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %3 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %4 = load i64, ptr %3, align 8, !noundef !3
  %5 = xor i64 %4, %b
  store i64 %5, ptr %2, align 8
; call <core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::c_rounds
  call void @"_ZN69_$LT$core..hash..sip..Sip13Rounds$u20$as$u20$core..hash..sip..Sip$GT$8c_rounds17hd80f9fe0cf640dd9E"(ptr align 8 %state)
  %6 = load i64, ptr %state, align 8, !noundef !3
  %7 = xor i64 %6, %b
  store i64 %7, ptr %state, align 8
  %8 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %9 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %10 = load i64, ptr %9, align 8, !noundef !3
  %11 = xor i64 %10, 255
  store i64 %11, ptr %8, align 8
; call <core::hash::sip::Sip13Rounds as core::hash::sip::Sip>::d_rounds
  call void @"_ZN69_$LT$core..hash..sip..Sip13Rounds$u20$as$u20$core..hash..sip..Sip$GT$8d_rounds17h6d3ac88b47437d02E"(ptr align 8 %state)
  %_15 = load i64, ptr %state, align 8, !noundef !3
  %12 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %_16 = load i64, ptr %12, align 8, !noundef !3
  %_14 = xor i64 %_15, %_16
  %13 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %_17 = load i64, ptr %13, align 8, !noundef !3
  %_13 = xor i64 %_14, %_17
  %14 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %_18 = load i64, ptr %14, align 8, !noundef !3
  %_0 = xor i64 %_13, %_18
  ret i64 %_0
}

; <std::hash::random::DefaultHasher as core::hash::Hasher>::finish
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @"_ZN71_$LT$std..hash..random..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$6finish17h5e72f7077416374fE"(ptr align 8 %self) unnamed_addr #0 {
start:
; call <core::hash::sip::Hasher<S> as core::hash::Hasher>::finish
  %_0 = call i64 @"_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$6finish17h19e3252e2712971dE"(ptr align 8 %self)
  ret i64 %_0
}

; <std::hash::random::DefaultHasher as core::hash::Hasher>::write_str
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN71_$LT$std..hash..random..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$9write_str17hc78e34e958b50f9bE"(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %_10 = alloca [1 x i8], align 1
; call <core::hash::sip::Hasher<S> as core::hash::Hasher>::write
  call void @"_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17hf98e37642da45a69E"(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1)
  %0 = getelementptr inbounds [1 x i8], ptr %_10, i64 0, i64 0
  store i8 -1, ptr %0, align 1
; call <core::hash::sip::Hasher<S> as core::hash::Hasher>::write
  call void @"_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17hf98e37642da45a69E"(ptr align 8 %self, ptr align 1 %_10, i64 1)
  ret void
}

; <std::path::PathBuf as core::convert::From<&T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN71_$LT$std..path..PathBuf$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hed97eefc100830f2E"(ptr sret(%"std::path::PathBuf") align 8 %_0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %_4 = alloca %"std::sys::os_str::bytes::Buf", align 8
  %s = alloca %"std::ffi::os_str::OsString", align 8
; call std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
  %0 = call { ptr, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h38c339d16ee25205E"(ptr align 1 %s.0, i64 %s.1)
  %self.0 = extractvalue { ptr, i64 } %0, 0
  %self.1 = extractvalue { ptr, i64 } %0, 1
; call std::sys::os_str::bytes::Slice::to_owned
  call void @_ZN3std3sys6os_str5bytes5Slice8to_owned17h805dfc47b79ea5d4E(ptr sret(%"std::sys::os_str::bytes::Buf") align 8 %_4, ptr align 1 %self.0, i64 %self.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %s, ptr align 8 %_4, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %s, i64 24, i1 false)
  ret void
}

; <std::path::PathBuf as core::convert::From<&T>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN71_$LT$std..path..PathBuf$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hf53fefcc0c86f474E"(ptr sret(%"std::path::PathBuf") align 8 %_0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %_4 = alloca %"std::sys::os_str::bytes::Buf", align 8
  %s = alloca %"std::ffi::os_str::OsString", align 8
; call <std::path::Path as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
  %0 = call { ptr, i64 } @"_ZN87_$LT$std..path..Path$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17h06af80081eb91ceaE"(ptr align 1 %s.0, i64 %s.1)
  %self.0 = extractvalue { ptr, i64 } %0, 0
  %self.1 = extractvalue { ptr, i64 } %0, 1
; call std::sys::os_str::bytes::Slice::to_owned
  call void @_ZN3std3sys6os_str5bytes5Slice8to_owned17h805dfc47b79ea5d4E(ptr sret(%"std::sys::os_str::bytes::Buf") align 8 %_4, ptr align 1 %self.0, i64 %self.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %s, ptr align 8 %_4, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %s, i64 24, i1 false)
  ret void
}

; <I as core::iter::adapters::zip::SpecTrustedRandomAccess>::try_get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN72_$LT$I$u20$as$u20$core..iter..adapters..zip..SpecTrustedRandomAccess$GT$17try_get_unchecked17hab4ae95815513184E"(ptr align 8 %self, i64 %index) unnamed_addr #0 {
start:
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  %0 = call { ptr, i64 } @"_ZN103_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17hc3f410f566ec4bb9E"(ptr align 8 %self, i64 %index)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h194de1febf74edecE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %unique = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_9 = alloca ptr, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %ptr.0 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %ptr.1 = load ptr, ptr %2, align 8, !nonnull !3, !align !5, !noundef !3
  %3 = getelementptr inbounds i64, ptr %ptr.1, i64 1
  %4 = load i64, ptr %3, align 8, !range !13, !invariant.load !3
  %5 = getelementptr inbounds i64, ptr %ptr.1, i64 2
  %6 = load i64, ptr %5, align 8, !range !24, !invariant.load !3
  store i64 %4, ptr %1, align 8
  %size = load i64, ptr %1, align 8, !noundef !3
  %7 = getelementptr inbounds i64, ptr %ptr.1, i64 1
  %8 = load i64, ptr %7, align 8, !range !13, !invariant.load !3
  %9 = getelementptr inbounds i64, ptr %ptr.1, i64 2
  %10 = load i64, ptr %9, align 8, !range !24, !invariant.load !3
  store i64 %10, ptr %0, align 8
  %align = load i64, ptr %0, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %11, align 8
  store i64 %align, ptr %layout, align 8
  %12 = getelementptr inbounds i8, ptr %layout, i64 8
  %_5 = load i64, ptr %12, align 8, !noundef !3
  %13 = icmp eq i64 %_5, 0
  br i1 %13, label %bb3, label %bb1

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; preds = %start
  %_8 = getelementptr inbounds i8, ptr %self, i64 16
  store ptr %ptr.0, ptr %self1, align 8
  store ptr %ptr.0, ptr %unique, align 8
  store ptr %ptr.0, ptr %_9, align 8
  %_10.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %14 = getelementptr inbounds i8, ptr %layout, i64 8
  %_10.1 = load i64, ptr %14, align 8, !noundef !3
  %15 = load ptr, ptr %_9, align 8, !nonnull !3, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_8, ptr %15, i64 %_10.0, i64 %_10.1)
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  ret void
}

; <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h27da08099f6f49a9E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %unique = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_9 = alloca ptr, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %ptr = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store i64 24, ptr %1, align 8
  %size = load i64, ptr %1, align 8, !noundef !3
  store i64 8, ptr %0, align 8
  %align = load i64, ptr %0, align 8, !noundef !3
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 %align, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %layout, i64 8
  %_5 = load i64, ptr %3, align 8, !noundef !3
  %4 = icmp eq i64 %_5, 0
  br i1 %4, label %bb3, label %bb1

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; preds = %start
  %_8 = getelementptr i8, ptr %self, i64 8
  store ptr %ptr, ptr %self1, align 8
  store ptr %ptr, ptr %unique, align 8
  store ptr %ptr, ptr %_9, align 8
  %_10.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %layout, i64 8
  %_10.1 = load i64, ptr %5, align 8, !noundef !3
  %6 = load ptr, ptr %_9, align 8, !nonnull !3, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_8, ptr %6, i64 %_10.0, i64 %_10.1)
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  ret void
}

; <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h6b28cdb521962c25E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %unique = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_9 = alloca ptr, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %ptr.0 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %ptr.1 = load i64, ptr %2, align 8, !noundef !3
  %3 = mul nsw i64 %ptr.1, 4
  store i64 %3, ptr %1, align 8
  %size = load i64, ptr %1, align 8, !noundef !3
  %4 = mul nsw i64 %ptr.1, 4
  store i64 4, ptr %0, align 8
  %align = load i64, ptr %0, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %5, align 8
  store i64 %align, ptr %layout, align 8
  %6 = getelementptr inbounds i8, ptr %layout, i64 8
  %_5 = load i64, ptr %6, align 8, !noundef !3
  %7 = icmp eq i64 %_5, 0
  br i1 %7, label %bb3, label %bb1

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; preds = %start
  %_8 = getelementptr inbounds i8, ptr %self, i64 16
  store ptr %ptr.0, ptr %self1, align 8
  store ptr %ptr.0, ptr %unique, align 8
  store ptr %ptr.0, ptr %_9, align 8
  %_10.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %8 = getelementptr inbounds i8, ptr %layout, i64 8
  %_10.1 = load i64, ptr %8, align 8, !noundef !3
  %9 = load ptr, ptr %_9, align 8, !nonnull !3, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_8, ptr %9, i64 %_10.0, i64 %_10.1)
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  ret void
}

; <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7d60048b94b70648E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %unique = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_9 = alloca ptr, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %ptr = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store i64 24, ptr %1, align 8
  %size = load i64, ptr %1, align 8, !noundef !3
  store i64 8, ptr %0, align 8
  %align = load i64, ptr %0, align 8, !noundef !3
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 %align, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %layout, i64 8
  %_5 = load i64, ptr %3, align 8, !noundef !3
  %4 = icmp eq i64 %_5, 0
  br i1 %4, label %bb3, label %bb1

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; preds = %start
  %_8 = getelementptr i8, ptr %self, i64 8
  store ptr %ptr, ptr %self1, align 8
  store ptr %ptr, ptr %unique, align 8
  store ptr %ptr, ptr %_9, align 8
  %_10.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %layout, i64 8
  %_10.1 = load i64, ptr %5, align 8, !noundef !3
  %6 = load ptr, ptr %_9, align 8, !nonnull !3, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_8, ptr %6, i64 %_10.0, i64 %_10.1)
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  ret void
}

; <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9726e88f24dae00dE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %unique = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_9 = alloca ptr, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %ptr = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store i64 24, ptr %1, align 8
  %size = load i64, ptr %1, align 8, !noundef !3
  store i64 8, ptr %0, align 8
  %align = load i64, ptr %0, align 8, !noundef !3
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 %align, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %layout, i64 8
  %_5 = load i64, ptr %3, align 8, !noundef !3
  %4 = icmp eq i64 %_5, 0
  br i1 %4, label %bb3, label %bb1

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; preds = %start
  %_8 = getelementptr i8, ptr %self, i64 8
  store ptr %ptr, ptr %self1, align 8
  store ptr %ptr, ptr %unique, align 8
  store ptr %ptr, ptr %_9, align 8
  %_10.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %layout, i64 8
  %_10.1 = load i64, ptr %5, align 8, !noundef !3
  %6 = load ptr, ptr %_9, align 8, !nonnull !3, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_8, ptr %6, i64 %_10.0, i64 %_10.1)
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  ret void
}

; <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9e85433e2b0dbfb5E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %unique = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_9 = alloca ptr, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %ptr.0 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %ptr.1 = load i64, ptr %2, align 8, !noundef !3
  %3 = mul nsw i64 %ptr.1, 1
  store i64 %3, ptr %1, align 8
  %size = load i64, ptr %1, align 8, !noundef !3
  %4 = mul nsw i64 %ptr.1, 1
  store i64 1, ptr %0, align 8
  %align = load i64, ptr %0, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %5, align 8
  store i64 %align, ptr %layout, align 8
  %6 = getelementptr inbounds i8, ptr %layout, i64 8
  %_5 = load i64, ptr %6, align 8, !noundef !3
  %7 = icmp eq i64 %_5, 0
  br i1 %7, label %bb3, label %bb1

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; preds = %start
  %_8 = getelementptr inbounds i8, ptr %self, i64 16
  store ptr %ptr.0, ptr %self1, align 8
  store ptr %ptr.0, ptr %unique, align 8
  store ptr %ptr.0, ptr %_9, align 8
  %_10.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %8 = getelementptr inbounds i8, ptr %layout, i64 8
  %_10.1 = load i64, ptr %8, align 8, !noundef !3
  %9 = load ptr, ptr %_9, align 8, !nonnull !3, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_8, ptr %9, i64 %_10.0, i64 %_10.1)
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  ret void
}

; <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc30de25cf1540c5cE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %unique = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_9 = alloca ptr, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %ptr = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store i64 16, ptr %1, align 8
  %size = load i64, ptr %1, align 8, !noundef !3
  store i64 8, ptr %0, align 8
  %align = load i64, ptr %0, align 8, !noundef !3
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 %align, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %layout, i64 8
  %_5 = load i64, ptr %3, align 8, !noundef !3
  %4 = icmp eq i64 %_5, 0
  br i1 %4, label %bb3, label %bb1

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; preds = %start
  %_8 = getelementptr i8, ptr %self, i64 8
  store ptr %ptr, ptr %self1, align 8
  store ptr %ptr, ptr %unique, align 8
  store ptr %ptr, ptr %_9, align 8
  %_10.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %layout, i64 8
  %_10.1 = load i64, ptr %5, align 8, !noundef !3
  %6 = load ptr, ptr %_9, align 8, !nonnull !3, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_8, ptr %6, i64 %_10.0, i64 %_10.1)
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  ret void
}

; <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc79ba9f988553170E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %unique = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_9 = alloca ptr, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %ptr.0 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %ptr.1 = load ptr, ptr %2, align 8, !nonnull !3, !align !5, !noundef !3
  %3 = getelementptr inbounds i64, ptr %ptr.1, i64 1
  %4 = load i64, ptr %3, align 8, !range !13, !invariant.load !3
  %5 = getelementptr inbounds i64, ptr %ptr.1, i64 2
  %6 = load i64, ptr %5, align 8, !range !24, !invariant.load !3
  store i64 %4, ptr %1, align 8
  %size = load i64, ptr %1, align 8, !noundef !3
  %7 = getelementptr inbounds i64, ptr %ptr.1, i64 1
  %8 = load i64, ptr %7, align 8, !range !13, !invariant.load !3
  %9 = getelementptr inbounds i64, ptr %ptr.1, i64 2
  %10 = load i64, ptr %9, align 8, !range !24, !invariant.load !3
  store i64 %10, ptr %0, align 8
  %align = load i64, ptr %0, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %11, align 8
  store i64 %align, ptr %layout, align 8
  %12 = getelementptr inbounds i8, ptr %layout, i64 8
  %_5 = load i64, ptr %12, align 8, !noundef !3
  %13 = icmp eq i64 %_5, 0
  br i1 %13, label %bb3, label %bb1

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; preds = %start
  %_8 = getelementptr inbounds i8, ptr %self, i64 16
  store ptr %ptr.0, ptr %self1, align 8
  store ptr %ptr.0, ptr %unique, align 8
  store ptr %ptr.0, ptr %_9, align 8
  %_10.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %14 = getelementptr inbounds i8, ptr %layout, i64 8
  %_10.1 = load i64, ptr %14, align 8, !noundef !3
  %15 = load ptr, ptr %_9, align 8, !nonnull !3, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_8, ptr %15, i64 %_10.0, i64 %_10.1)
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  ret void
}

; <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hcbbfbcaeccbafd19E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %unique = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_9 = alloca ptr, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %ptr = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store i64 48, ptr %1, align 8
  %size = load i64, ptr %1, align 8, !noundef !3
  store i64 8, ptr %0, align 8
  %align = load i64, ptr %0, align 8, !noundef !3
  %2 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %2, align 8
  store i64 %align, ptr %layout, align 8
  %3 = getelementptr inbounds i8, ptr %layout, i64 8
  %_5 = load i64, ptr %3, align 8, !noundef !3
  %4 = icmp eq i64 %_5, 0
  br i1 %4, label %bb3, label %bb1

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; preds = %start
  %_8 = getelementptr i8, ptr %self, i64 8
  store ptr %ptr, ptr %self1, align 8
  store ptr %ptr, ptr %unique, align 8
  store ptr %ptr, ptr %_9, align 8
  %_10.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %layout, i64 8
  %_10.1 = load i64, ptr %5, align 8, !noundef !3
  %6 = load ptr, ptr %_9, align 8, !nonnull !3, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_8, ptr %6, i64 %_10.0, i64 %_10.1)
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  ret void
}

; <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17he4329873de2d2b1aE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i64, align 8
  %unique = alloca ptr, align 8
  %self1 = alloca ptr, align 8
  %_9 = alloca ptr, align 8
  %layout = alloca %"core::alloc::layout::Layout", align 8
  %ptr.0 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %ptr.1 = load ptr, ptr %2, align 8, !nonnull !3, !align !5, !noundef !3
  %3 = getelementptr inbounds i64, ptr %ptr.1, i64 1
  %4 = load i64, ptr %3, align 8, !range !13, !invariant.load !3
  %5 = getelementptr inbounds i64, ptr %ptr.1, i64 2
  %6 = load i64, ptr %5, align 8, !range !24, !invariant.load !3
  store i64 %4, ptr %1, align 8
  %size = load i64, ptr %1, align 8, !noundef !3
  %7 = getelementptr inbounds i64, ptr %ptr.1, i64 1
  %8 = load i64, ptr %7, align 8, !range !13, !invariant.load !3
  %9 = getelementptr inbounds i64, ptr %ptr.1, i64 2
  %10 = load i64, ptr %9, align 8, !range !24, !invariant.load !3
  store i64 %10, ptr %0, align 8
  %align = load i64, ptr %0, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %layout, i64 8
  store i64 %size, ptr %11, align 8
  store i64 %align, ptr %layout, align 8
  %12 = getelementptr inbounds i8, ptr %layout, i64 8
  %_5 = load i64, ptr %12, align 8, !noundef !3
  %13 = icmp eq i64 %_5, 0
  br i1 %13, label %bb3, label %bb1

bb3:                                              ; preds = %start
  br label %bb4

bb1:                                              ; preds = %start
  %_8 = getelementptr inbounds i8, ptr %self, i64 16
  store ptr %ptr.0, ptr %self1, align 8
  store ptr %ptr.0, ptr %unique, align 8
  store ptr %ptr.0, ptr %_9, align 8
  %_10.0 = load i64, ptr %layout, align 8, !range !26, !noundef !3
  %14 = getelementptr inbounds i8, ptr %layout, i64 8
  %_10.1 = load i64, ptr %14, align 8, !noundef !3
  %15 = load ptr, ptr %_9, align 8, !nonnull !3, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_8, ptr %15, i64 %_10.0, i64 %_10.1)
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  ret void
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h100ed3e772a63995E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_11 = alloca %"core::ptr::metadata::PtrComponents<[std::ffi::os_str::OsString]>", align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[std::ffi::os_str::OsString]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<std::ffi::os_str::OsString>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_11, align 8
  %2 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_11, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_11, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_10, align 8
  %6 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %5, ptr %6, align 8
  %_8.0 = load ptr, ptr %_10, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_10, i64 8
  %_8.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %_8.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %_8.1, 1
  ret { ptr, i64 } %9
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4bebbda27fc201fdE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_11 = alloca %"core::ptr::metadata::PtrComponents<[std::path::PathBuf]>", align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[std::path::PathBuf]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<std::path::PathBuf>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_11, align 8
  %2 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_11, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_11, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_10, align 8
  %6 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %5, ptr %6, align 8
  %_8.0 = load ptr, ptr %_10, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_10, i64 8
  %_8.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %_8.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %_8.1, 1
  ret { ptr, i64 } %9
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5724e53d580ba91fE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_11 = alloca %"core::ptr::metadata::PtrComponents<[&str]>", align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[&str]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_11, align 8
  %2 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_11, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_11, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_10, align 8
  %6 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %5, ptr %6, align 8
  %_8.0 = load ptr, ptr %_10, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_10, i64 8
  %_8.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %_8.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %_8.1, 1
  ret { ptr, i64 } %9
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7e6a91f6382569b6E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_11 = alloca %"core::ptr::metadata::PtrComponents<[(std::ffi::os_str::OsString, std::ffi::os_str::OsString)]>", align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[(std::ffi::os_str::OsString, std::ffi::os_str::OsString)]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_11, align 8
  %2 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_11, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_11, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_10, align 8
  %6 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %5, ptr %6, align 8
  %_8.0 = load ptr, ptr %_10, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_10, i64 8
  %_8.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %_8.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %_8.1, 1
  ret { ptr, i64 } %9
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h97011247661b3d0dE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_11 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_11, align 8
  %2 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_11, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_11, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_10, align 8
  %6 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %5, ptr %6, align 8
  %_8.0 = load ptr, ptr %_10, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_10, i64 8
  %_8.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %_8.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %_8.1, 1
  ret { ptr, i64 } %9
}

; <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd778bbd1b5a53518E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_11 = alloca %"core::ptr::metadata::PtrComponents<[alloc::string::String]>", align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[alloc::string::String]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<alloc::string::String>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_11, align 8
  %2 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_11, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_11, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_10, align 8
  %6 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %5, ptr %6, align 8
  %_8.0 = load ptr, ptr %_10, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_10, i64 8
  %_8.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %_8.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %_8.1, 1
  ret { ptr, i64 } %9
}

; <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17hf2d9586e25ea8362E"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %other.0, i64 %other.1) unnamed_addr #1 {
start:
  %0 = alloca i32, align 4
  %1 = alloca i64, align 8
  %_0 = alloca i8, align 1
  %_3 = icmp ne i64 %self.1, %other.1
  br i1 %_3, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %2 = mul nsw i64 %self.1, 1
  store i64 %2, ptr %1, align 8
  %size = load i64, ptr %1, align 8, !noundef !3
  %3 = call i32 @memcmp(ptr %self.0, ptr %other.0, i64 %size)
  store i32 %3, ptr %0, align 4
  %_7 = load i32, ptr %0, align 4, !noundef !3
  %4 = icmp eq i32 %_7, 0
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb1, %bb2
  %6 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %7 = trunc i8 %6 to i1
  ret i1 %7
}

; <alloc::borrow::Cow<str> as alloc::string::ToString>::to_string
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN73_$LT$alloc..borrow..Cow$LT$str$GT$$u20$as$u20$alloc..string..ToString$GT$9to_string17h87d763589fb67a11E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %v = alloca %"alloc::vec::Vec<u8>", align 8
  %bytes = alloca %"alloc::vec::Vec<u8>", align 8
; call <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h445e1b4694eb6d64E"(ptr align 8 %self)
  %self.0 = extractvalue { ptr, i64 } %0, 0
  %self.1 = extractvalue { ptr, i64 } %0, 1
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %1 = call { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h332409814013709cE"(i64 %self.1, i1 zeroext false)
  %_11.0 = extractvalue { i64, ptr } %1, 0
  %_11.1 = extractvalue { i64, ptr } %1, 1
  store i64 %_11.0, ptr %v, align 8
  %2 = getelementptr inbounds i8, ptr %v, i64 8
  store ptr %_11.1, ptr %2, align 8
  %3 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %v, i32 0, i32 1
  store i64 0, ptr %3, align 8
  %4 = getelementptr inbounds i8, ptr %v, i64 8
  %self1 = load ptr, ptr %4, align 8, !nonnull !3, !noundef !3
  %5 = mul i64 %self.1, 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %self1, ptr align 1 %self.0, i64 %5, i1 false)
  %6 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %v, i32 0, i32 1
  store i64 %self.1, ptr %6, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %bytes, ptr align 8 %v, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %bytes, i64 24, i1 false)
  ret void
}

; <alloc::string::String as core::convert::AsRef<str>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN73_$LT$alloc..string..String$u20$as$u20$core..convert..AsRef$LT$str$GT$$GT$6as_ref17h3e3fce076f625b8aE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_13 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_12 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_13, align 8
  %2 = getelementptr inbounds i8, ptr %_13, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_13, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_13, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_12, align 8
  %6 = getelementptr inbounds i8, ptr %_12, i64 8
  store i64 %5, ptr %6, align 8
  %v.0 = load ptr, ptr %_12, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_12, i64 8
  %v.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %v.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %v.1, 1
  ret { ptr, i64 } %9
}

; <std::hash::random::RandomState as core::hash::BuildHasher>::build_hasher
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN74_$LT$std..hash..random..RandomState$u20$as$u20$core..hash..BuildHasher$GT$12build_hasher17h6312fb19187fc8e9E"(ptr sret(%"std::hash::random::DefaultHasher") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_7 = alloca %"core::hash::sip::State", align 8
  %state = alloca %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", align 8
  %_5 = alloca %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", align 8
  %_2 = alloca %"core::hash::sip::SipHasher13", align 8
  %key0 = load i64, ptr %self, align 8, !noundef !3
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %key1 = load i64, ptr %0, align 8, !noundef !3
  store i64 0, ptr %_7, align 8
  %1 = getelementptr inbounds %"core::hash::sip::State", ptr %_7, i32 0, i32 1
  store i64 0, ptr %1, align 8
  %2 = getelementptr inbounds %"core::hash::sip::State", ptr %_7, i32 0, i32 2
  store i64 0, ptr %2, align 8
  %3 = getelementptr inbounds %"core::hash::sip::State", ptr %_7, i32 0, i32 3
  store i64 0, ptr %3, align 8
  %4 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %state, i32 0, i32 1
  store i64 %key0, ptr %4, align 8
  %5 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %state, i32 0, i32 2
  store i64 %key1, ptr %5, align 8
  %6 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %state, i32 0, i32 3
  store i64 0, ptr %6, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %state, ptr align 8 %_7, i64 32, i1 false)
  %7 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %state, i32 0, i32 4
  store i64 0, ptr %7, align 8
  %8 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %state, i32 0, i32 5
  store i64 0, ptr %8, align 8
  %9 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %state, i32 0, i32 3
  store i64 0, ptr %9, align 8
  %10 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %state, i32 0, i32 1
  %_9 = load i64, ptr %10, align 8, !noundef !3
  %11 = xor i64 %_9, 8317987319222330741
  store i64 %11, ptr %state, align 8
  %12 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %state, i32 0, i32 2
  %_10 = load i64, ptr %12, align 8, !noundef !3
  %13 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 2
  %14 = xor i64 %_10, 7237128888997146477
  store i64 %14, ptr %13, align 8
  %15 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %state, i32 0, i32 1
  %_11 = load i64, ptr %15, align 8, !noundef !3
  %16 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 1
  %17 = xor i64 %_11, 7816392313619706465
  store i64 %17, ptr %16, align 8
  %18 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %state, i32 0, i32 2
  %_12 = load i64, ptr %18, align 8, !noundef !3
  %19 = getelementptr inbounds %"core::hash::sip::State", ptr %state, i32 0, i32 3
  %20 = xor i64 %_12, 8387220255154660723
  store i64 %20, ptr %19, align 8
  %21 = getelementptr inbounds %"core::hash::sip::Hasher<core::hash::sip::Sip13Rounds>", ptr %state, i32 0, i32 5
  store i64 0, ptr %21, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %state, i64 72, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_2, ptr align 8 %_5, i64 72, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 72, i1 false)
  ret void
}

; <&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17h2429ba0202763b76E"(ptr align 8 %self, ptr align 8 %args) unnamed_addr #0 {
start:
; call core::fmt::write
  %_0 = call zeroext i1 @_ZN4core3fmt5write17h938c332fdab924ebE(ptr align 1 %self, ptr align 8 @vtable.3, ptr align 8 %args)
  ret i1 %_0
}

; <&mut W as core::fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN75_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write..write_fmt..SpecWriteFmt$GT$14spec_write_fmt17hb8afec2ecc798f1aE"(ptr align 8 %self, ptr align 8 %args) unnamed_addr #0 {
start:
; call core::fmt::write
  %_0 = call zeroext i1 @_ZN4core3fmt5write17h938c332fdab924ebE(ptr align 1 %self, ptr align 8 @vtable.1, ptr align 8 %args)
  ret i1 %_0
}

; <core::option::Option<T> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17h46e9161d433cd730E"(i64 %output) unnamed_addr #0 {
start:
  %_0 = alloca %"core::option::Option<usize>", align 8
  %0 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %output, ptr %0, align 8
  store i64 1, ptr %_0, align 8
  %1 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_0, i64 8
  %3 = load i64, ptr %2, align 8
  %4 = insertvalue { i64, i64 } poison, i64 %1, 0
  %5 = insertvalue { i64, i64 } %4, i64 %3, 1
  ret { i64, i64 } %5
}

; <core::option::Option<T> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN75_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h84932a33c096221eE"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_0 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>", align 8
  %self = alloca %"core::option::Option<usize>", align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
  %_2 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb3

bb1:                                              ; preds = %start
  store i64 1, ptr %_0, align 8
  br label %bb4

bb3:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i64 8
  %v = load i64, ptr %4, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %v, ptr %5, align 8
  store i64 0, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %6 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  %8 = load i64, ptr %7, align 8
  %9 = insertvalue { i64, i64 } poison, i64 %6, 0
  %10 = insertvalue { i64, i64 } %9, i64 %8, 1
  ret { i64, i64 } %10

bb2:                                              ; No predecessors!
  unreachable
}

; <alloc::string::String as core::convert::From<&str>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h2ce6d0b3267d2923E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
  %v = alloca %"alloc::vec::Vec<u8>", align 8
  %bytes = alloca %"alloc::vec::Vec<u8>", align 8
; call alloc::raw_vec::RawVec<T,A>::allocate_in
  %0 = call { i64, ptr } @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$11allocate_in17h332409814013709cE"(i64 %s.1, i1 zeroext false)
  %_10.0 = extractvalue { i64, ptr } %0, 0
  %_10.1 = extractvalue { i64, ptr } %0, 1
  store i64 %_10.0, ptr %v, align 8
  %1 = getelementptr inbounds i8, ptr %v, i64 8
  store ptr %_10.1, ptr %1, align 8
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %v, i32 0, i32 1
  store i64 0, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %v, i64 8
  %self = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  %4 = mul i64 %s.1, 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %self, ptr align 1 %s.0, i64 %4, i1 false)
  %5 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %v, i32 0, i32 1
  store i64 %s.1, ptr %5, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %bytes, ptr align 8 %v, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %bytes, i64 24, i1 false)
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h31095ee5c95c05a0E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h9149c4b9324cc59cE"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_2, i32 0, i32 1
  %1 = load i64, ptr %0, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_2, i32 0, i32 1
  %layout.0 = load i64, ptr %4, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8, !noundef !3
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h3a71ca05bf530c7cE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h07fdb8f9ccfa4336E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_2, i32 0, i32 1
  %1 = load i64, ptr %0, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_2, i32 0, i32 1
  %layout.0 = load i64, ptr %4, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8, !noundef !3
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h49b437f2e4c06aefE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hc295d53723748449E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_2, i32 0, i32 1
  %1 = load i64, ptr %0, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_2, i32 0, i32 1
  %layout.0 = load i64, ptr %4, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8, !noundef !3
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4a5afc1f4578b006E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h7b9e2e38d815380cE"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_2, i32 0, i32 1
  %1 = load i64, ptr %0, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_2, i32 0, i32 1
  %layout.0 = load i64, ptr %4, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8, !noundef !3
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h519120d3d943c0acE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hb694ea140937d94fE"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_2, i32 0, i32 1
  %1 = load i64, ptr %0, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_2, i32 0, i32 1
  %layout.0 = load i64, ptr %4, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8, !noundef !3
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7755d9c522fcf09bE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hbd5d151f1f2b23a7E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_2, i32 0, i32 1
  %1 = load i64, ptr %0, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_2, i32 0, i32 1
  %layout.0 = load i64, ptr %4, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8, !noundef !3
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7e7f92152911f92aE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hcb22e17f1c87d314E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_2, i32 0, i32 1
  %1 = load i64, ptr %0, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_2, i32 0, i32 1
  %layout.0 = load i64, ptr %4, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8, !noundef !3
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h93a9f6948a0c630fE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17h6e4687a36ee9cd08E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_2, i32 0, i32 1
  %1 = load i64, ptr %0, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_2, i32 0, i32 1
  %layout.0 = load i64, ptr %4, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8, !noundef !3
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9e0ca7db601645cdE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17hba546dc289c888f4E"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_2, i32 0, i32 1
  %1 = load i64, ptr %0, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_2, i32 0, i32 1
  %layout.0 = load i64, ptr %4, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8, !noundef !3
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void
}

; <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN77_$LT$alloc..raw_vec..RawVec$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha4774d5519d5a6abE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_2 = alloca %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", align 8
; call alloc::raw_vec::RawVec<T,A>::current_memory
  call void @"_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$14current_memory17he67d1fd90dcebfeaE"(ptr sret(%"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>") align 8 %_2, ptr align 8 %self)
  %0 = getelementptr inbounds %"core::option::Option<(core::ptr::non_null::NonNull<u8>, core::alloc::layout::Layout)>", ptr %_2, i32 0, i32 1
  %1 = load i64, ptr %0, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_4 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_4, 1
  br i1 %3, label %bb2, label %bb4

bb2:                                              ; preds = %start
  %ptr = load ptr, ptr %_2, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds { ptr, %"core::alloc::layout::Layout" }, ptr %_2, i32 0, i32 1
  %layout.0 = load i64, ptr %4, align 8, !range !26, !noundef !3
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %layout.1 = load i64, ptr %5, align 8, !noundef !3
  %_7 = getelementptr inbounds i8, ptr %self, i64 16
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %_7, ptr %ptr, i64 %layout.0, i64 %layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %start
  ret void
}

; <std::ffi::os_str::OsString as core::cmp::PartialEq<str>>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN78_$LT$std..ffi..os_str..OsString$u20$as$u20$core..cmp..PartialEq$LT$str$GT$$GT$2eq17he6497c5be0eb77bfE"(ptr align 8 %self, ptr align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_19 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_18 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_4 = alloca { ptr, i64 }, align 8
  %other = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %other, align 8
  %2 = getelementptr inbounds i8, ptr %other, i64 8
  store i64 %1, ptr %2, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  %4 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %4, align 8, !noundef !3
  store ptr %self1, ptr %_19, align 8
  %5 = getelementptr inbounds i8, ptr %_19, i64 8
  store i64 %len, ptr %5, align 8
  %6 = load ptr, ptr %_19, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_19, i64 8
  %8 = load i64, ptr %7, align 8, !noundef !3
  store ptr %6, ptr %_18, align 8
  %9 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %8, ptr %9, align 8
  %_16.0 = load ptr, ptr %_18, align 8, !noundef !3
  %10 = getelementptr inbounds i8, ptr %_18, i64 8
  %_16.1 = load i64, ptr %10, align 8, !noundef !3
  store ptr %_16.0, ptr %_4, align 8
  %11 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 %_16.1, ptr %11, align 8
  %self.0 = load ptr, ptr %_4, align 8, !nonnull !3, !align !4, !noundef !3
  %12 = getelementptr inbounds i8, ptr %_4, i64 8
  %self.1 = load i64, ptr %12, align 8, !noundef !3
  %other.0 = load ptr, ptr %other, align 8, !nonnull !3, !align !4, !noundef !3
  %13 = getelementptr inbounds i8, ptr %other, i64 8
  %other.1 = load i64, ptr %13, align 8, !noundef !3
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %_0 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17hf2d9586e25ea8362E"(ptr align 1 %self.0, i64 %self.1, ptr align 1 %other.0, i64 %other.1)
  ret i1 %_0
}

; <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop17h9f1af4aa15b558d0E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_2 = alloca %"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>", align 8
  %_3 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
; call std::io::error::repr_bitpacked::decode_repr
  call void @_ZN3std2io5error14repr_bitpacked11decode_repr17h643e7b998b9adc2cE(ptr sret(%"std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>") align 8 %_2, ptr %_3)
; call core::ptr::drop_in_place<std::io::error::ErrorData<alloc::boxed::Box<std::io::error::Custom>>>
  call void @"_ZN4core3ptr101drop_in_place$LT$std..io..error..ErrorData$LT$alloc..boxed..Box$LT$std..io..error..Custom$GT$$GT$$GT$17ha2c35500c6b3bbe6E"(ptr align 8 %_2)
  ret void
}

; <std::io::error::repr_bitpacked::Repr as core::ops::drop::Drop>::drop::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN78_$LT$std..io..error..repr_bitpacked..Repr$u20$as$u20$core..ops..drop..Drop$GT$4drop28_$u7b$$u7b$closure$u7d$$u7d$17h9cfbb04b5664acdcE"(ptr %p) unnamed_addr #0 {
start:
  %_4 = alloca ptr, align 8
  %_3 = alloca ptr, align 8
  %_0 = alloca ptr, align 8
  store ptr %p, ptr %_4, align 8
  %0 = load ptr, ptr %_4, align 8, !nonnull !3, !noundef !3
  store ptr %0, ptr %_3, align 8
  %1 = load ptr, ptr %_3, align 8, !nonnull !3, !noundef !3
  store ptr %1, ptr %_0, align 8
  %2 = load ptr, ptr %_0, align 8, !nonnull !3, !align !5, !noundef !3
  ret ptr %2
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha33fb9ee59c6a77cE"(i1 zeroext %0) unnamed_addr #0 {
start:
  %_0 = alloca i8, align 1
  %self = alloca i8, align 1
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %self, align 1
  %2 = load i8, ptr %self, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb3, label %bb1

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %5 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %6 = trunc i8 %5 to i1
  ret i1 %6

bb2:                                              ; No predecessors!
  unreachable
}

; <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hccf1f027f08dc360E"(ptr sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, Error>, alloc::vec::Vec<u8>>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_5 = alloca %"core::result::Result<core::convert::Infallible, Error>::Err", align 8
  %e = alloca %Error, align 8
  %v = alloca %"alloc::vec::Vec<u8>", align 8
  %0 = load i64, ptr %self, align 8, !range !27, !noundef !3
  %1 = icmp eq i64 %0, 6
  %_2 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_2, 0
  br i1 %2, label %bb3, label %bb1

bb3:                                              ; preds = %start
  %3 = getelementptr inbounds %"core::result::Result<alloc::vec::Vec<u8>, Error>::Ok", ptr %self, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v, ptr align 8 %3, i64 24, i1 false)
  %4 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, Error>, alloc::vec::Vec<u8>>::Continue", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %v, i64 24, i1 false)
  store i64 6, ptr %_0, align 8
  br label %bb4

bb1:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e, ptr align 8 %self, i64 112, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_5, ptr align 8 %e, i64 112, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_5, i64 112, i1 false)
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  ret void

bb2:                                              ; No predecessors!
  unreachable
}

; <hashbrown::raw::RawTable<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN79_$LT$hashbrown..raw..RawTable$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h4b9ad5df213f3c72E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_4 = getelementptr inbounds %"hashbrown::raw::RawTable<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %self, i32 0, i32 1
; call hashbrown::raw::RawTableInner::drop_inner_table
  call void @_ZN9hashbrown3raw13RawTableInner16drop_inner_table17h5350a4e497f391d5E(ptr align 8 %self, ptr align 1 %_4, i64 48, i64 16)
  ret void
}

; <std::ffi::os_str::OsString as core::convert::From<&T>>::from
; Function Attrs: nonlazybind uwtable
define void @"_ZN79_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hd62ea4c8c72fff33E"(ptr sret(%"std::ffi::os_str::OsString") align 8 %_0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 {
start:
  %_3 = alloca %"std::sys::os_str::bytes::Buf", align 8
; call std::ffi::os_str::<impl core::convert::AsRef<std::ffi::os_str::OsStr> for str>::as_ref
  %0 = call { ptr, i64 } @"_ZN3std3ffi6os_str85_$LT$impl$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$u20$for$u20$str$GT$6as_ref17h38c339d16ee25205E"(ptr align 1 %s.0, i64 %s.1)
  %self.0 = extractvalue { ptr, i64 } %0, 0
  %self.1 = extractvalue { ptr, i64 } %0, 1
; call std::sys::os_str::bytes::Slice::to_owned
  call void @_ZN3std3sys6os_str5bytes5Slice8to_owned17h805dfc47b79ea5d4E(ptr sret(%"std::sys::os_str::bytes::Buf") align 8 %_3, ptr align 1 %self.0, i64 %self.1)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_3, i64 24, i1 false)
  ret void
}

; <std::path::Path as core::convert::AsRef<std::path::Path>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN79_$LT$std..path..Path$u20$as$u20$core..convert..AsRef$LT$std..path..Path$GT$$GT$6as_ref17hb0196d7c6bcc43a8E"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, i64 } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, i64 } %0, i64 %self.1, 1
  ret { ptr, i64 } %1
}

; <core::core_arch::x86::__m128i as core::core_arch::x86::m128iExt>::as_m128i
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..core_arch..x86..__m128i$u20$as$u20$core..core_arch..x86..m128iExt$GT$8as_m128i17hb85a39b590396cc2E"(ptr sret(<2 x i64>) align 16 %_0, ptr align 16 %self) unnamed_addr #0 {
start:
  %0 = load <2 x i64>, ptr %self, align 16
  store <2 x i64> %0, ptr %_0, align 16
  ret void
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h53d21f240cc892fcE"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_7 = alloca { i64, i64 }, align 8
  %_3 = alloca %"core::str::pattern::SearchStep", align 8
  %_2 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %0 = icmp eq i64 %_2, 0
  br i1 %0, label %bb2, label %bb1

bb2:                                              ; preds = %bb4, %start
; call <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
  call void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h2fd3ae5e5766a2e1E"(ptr sret(%"core::str::pattern::SearchStep") align 8 %_3, ptr align 8 %self)
  %_4 = load i64, ptr %_3, align 8, !range !11, !noundef !3
  switch i64 %_4, label %bb14 [
    i64 0, label %bb5
    i64 1, label %bb4
    i64 2, label %bb6
  ]

bb1:                                              ; preds = %start
  %searcher = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", ptr %self, i32 0, i32 1
  %1 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", ptr %self, i32 0, i32 1
  %2 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %1, i32 0, i32 6
  %_10 = load i64, ptr %2, align 8, !noundef !3
  %is_long = icmp eq i64 %_10, -1
  br i1 %is_long, label %bb7, label %bb9

bb14:                                             ; preds = %bb2
  unreachable

bb5:                                              ; preds = %bb2
  %3 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", ptr %_3, i32 0, i32 1
  %a = load i64, ptr %3, align 8, !noundef !3
  %4 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", ptr %_3, i32 0, i32 2
  %b = load i64, ptr %4, align 8, !noundef !3
  store i64 %a, ptr %_7, align 8
  %5 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %b, ptr %5, align 8
  %6 = load i64, ptr %_7, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_7, i64 8
  %8 = load i64, ptr %7, align 8, !noundef !3
  %9 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %_0, i32 0, i32 1
  store i64 %6, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  store i64 %8, ptr %10, align 8
  store i64 1, ptr %_0, align 8
  br label %bb12

bb4:                                              ; preds = %bb2
  br label %bb2

bb6:                                              ; preds = %bb2
  store i64 0, ptr %_0, align 8
  br label %bb12

bb12:                                             ; preds = %bb6, %bb5
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  ret void

bb9:                                              ; preds = %bb1
  %_14 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", ptr %self, i32 0, i32 1
  %11 = getelementptr inbounds %"core::str::pattern::StrSearcher<'_, '_>", ptr %self, i32 0, i32 1
  %self.0 = load ptr, ptr %11, align 8, !nonnull !3, !align !4, !noundef !3
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  %self.1 = load i64, ptr %12, align 8, !noundef !3
  %13 = getelementptr inbounds %"core::str::pattern::StrSearcher<'_, '_>", ptr %self, i32 0, i32 2
  %self.01 = load ptr, ptr %13, align 8, !nonnull !3, !align !4, !noundef !3
  %14 = getelementptr inbounds i8, ptr %13, i64 8
  %self.12 = load i64, ptr %14, align 8, !noundef !3
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h24e5d5ba5981a663E(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_0, ptr align 8 %_14, ptr align 1 %self.0, i64 %self.1, ptr align 1 %self.01, i64 %self.12, i1 zeroext false)
  br label %bb11

bb7:                                              ; preds = %bb1
  %_11 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", ptr %self, i32 0, i32 1
  %15 = getelementptr inbounds %"core::str::pattern::StrSearcher<'_, '_>", ptr %self, i32 0, i32 1
  %self.03 = load ptr, ptr %15, align 8, !nonnull !3, !align !4, !noundef !3
  %16 = getelementptr inbounds i8, ptr %15, i64 8
  %self.14 = load i64, ptr %16, align 8, !noundef !3
  %17 = getelementptr inbounds %"core::str::pattern::StrSearcher<'_, '_>", ptr %self, i32 0, i32 2
  %self.05 = load ptr, ptr %17, align 8, !nonnull !3, !align !4, !noundef !3
  %18 = getelementptr inbounds i8, ptr %17, i64 8
  %self.16 = load i64, ptr %18, align 8, !noundef !3
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h24e5d5ba5981a663E(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_0, ptr align 8 %_11, ptr align 1 %self.03, i64 %self.14, ptr align 1 %self.05, i64 %self.16, i1 zeroext true)
  br label %bb11

bb11:                                             ; preds = %bb7, %bb9
  br label %bb13
}

; <core::str::pattern::StrSearcher as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN80_$LT$core..str..pattern..StrSearcher$u20$as$u20$core..str..pattern..Searcher$GT$4next17h2fd3ae5e5766a2e1E"(ptr sret(%"core::str::pattern::SearchStep") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %self1 = alloca %"core::option::Option<u32>", align 4
  %_53 = alloca ptr, align 8
  %_47 = alloca %"core::slice::iter::Iter<'_, u8>", align 8
  %_43 = alloca %"core::option::Option<&str>", align 8
  %b = alloca i64, align 8
  %otherwise = alloca %"core::str::pattern::SearchStep", align 8
  %_15 = alloca i64, align 8
  %index = alloca i64, align 8
  %_10 = alloca %"core::str::iter::Chars<'_>", align 8
  %_8 = alloca i32, align 4
  %_2 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %0 = icmp eq i64 %_2, 0
  br i1 %0, label %bb2, label %bb1

bb2:                                              ; preds = %start
  %searcher = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", ptr %self, i32 0, i32 1
  %1 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", ptr %self, i32 0, i32 1
  %2 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", ptr %1, i32 0, i32 4
  %3 = load i8, ptr %2, align 2, !range !10, !noundef !3
  %_4 = trunc i8 %3 to i1
  br i1 %_4, label %bb3, label %bb4

bb1:                                              ; preds = %start
  %searcher2 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", ptr %self, i32 0, i32 1
  %4 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", ptr %self, i32 0, i32 1
  %5 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %4, i32 0, i32 4
  %_19 = load i64, ptr %5, align 8, !noundef !3
  %6 = getelementptr inbounds %"core::str::pattern::StrSearcher<'_, '_>", ptr %self, i32 0, i32 1
  %self.03 = load ptr, ptr %6, align 8, !nonnull !3, !align !4, !noundef !3
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  %self.14 = load i64, ptr %7, align 8, !noundef !3
  %_18 = icmp eq i64 %_19, %self.14
  br i1 %_18, label %bb10, label %bb11

bb4:                                              ; preds = %bb2
  %8 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", ptr %self, i32 0, i32 1
  %9 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", ptr %8, i32 0, i32 2
  %10 = load i8, ptr %9, align 8, !range !10, !noundef !3
  %is_match = trunc i8 %10 to i1
  %11 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", ptr %self, i32 0, i32 1
  %12 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", ptr %11, i32 0, i32 2
  %13 = load i8, ptr %12, align 8, !range !10, !noundef !3
  %_6 = trunc i8 %13 to i1
  %14 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", ptr %self, i32 0, i32 1
  %15 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", ptr %14, i32 0, i32 2
  %16 = xor i1 %_6, true
  %17 = zext i1 %16 to i8
  store i8 %17, ptr %15, align 8
  %18 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", ptr %self, i32 0, i32 1
  %pos = load i64, ptr %18, align 8, !noundef !3
  %19 = getelementptr inbounds %"core::str::pattern::StrSearcher<'_, '_>", ptr %self, i32 0, i32 1
  %self.0 = load ptr, ptr %19, align 8, !nonnull !3, !align !4, !noundef !3
  %20 = getelementptr inbounds i8, ptr %19, i64 8
  %self.1 = load i64, ptr %20, align 8, !noundef !3
  store i64 %pos, ptr %index, align 8
  %21 = load i64, ptr %index, align 8, !noundef !3
; call core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get
  %22 = call { ptr, i64 } @"_ZN4core3str6traits112_$LT$impl$u20$core..slice..index..SliceIndex$LT$str$GT$$u20$for$u20$core..ops..range..RangeFrom$LT$usize$GT$$GT$3get17ha14e1e946f0efbd3E"(i64 %21, ptr align 1 %self.0, i64 %self.1)
  %23 = extractvalue { ptr, i64 } %22, 0
  %24 = extractvalue { ptr, i64 } %22, 1
  store ptr %23, ptr %_43, align 8
  %25 = getelementptr inbounds i8, ptr %_43, i64 8
  store i64 %24, ptr %25, align 8
  %26 = load ptr, ptr %_43, align 8, !noundef !3
  %27 = ptrtoint ptr %26 to i64
  %28 = icmp eq i64 %27, 0
  %_44 = select i1 %28, i64 0, i64 1
  %29 = icmp eq i64 %_44, 0
  br i1 %29, label %bb22, label %bb23

bb3:                                              ; preds = %bb2
  store i64 2, ptr %_0, align 8
  br label %bb20

bb22:                                             ; preds = %bb4
; call core::str::slice_error_fail
  call void @_ZN4core3str16slice_error_fail17h9c5d67f5de864a44E(ptr align 1 %self.0, i64 %self.1, i64 %pos, i64 %self.1, ptr align 8 @alloc_d885dc34a6ac7ffd29f75383ab60ea71) #27
  unreachable

bb23:                                             ; preds = %bb4
  %s.0 = load ptr, ptr %_43, align 8, !nonnull !3, !align !4, !noundef !3
  %30 = getelementptr inbounds i8, ptr %_43, i64 8
  %s.1 = load i64, ptr %30, align 8, !noundef !3
  %end_or_len = getelementptr inbounds i8, ptr %s.0, i64 %s.1
  store ptr %s.0, ptr %_53, align 8
  %31 = load ptr, ptr %_53, align 8, !nonnull !3, !noundef !3
  store ptr %31, ptr %_47, align 8
  %32 = getelementptr inbounds i8, ptr %_47, i64 8
  store ptr %end_or_len, ptr %32, align 8
  %33 = load ptr, ptr %_47, align 8, !nonnull !3, !noundef !3
  %34 = getelementptr inbounds i8, ptr %_47, i64 8
  %35 = load ptr, ptr %34, align 8, !noundef !3
  store ptr %33, ptr %_10, align 8
  %36 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr %35, ptr %36, align 8
; call core::str::validations::next_code_point
  %37 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17hbfd8799dd98e3d98E(ptr align 8 %_10)
  %38 = extractvalue { i32, i32 } %37, 0
  %39 = extractvalue { i32, i32 } %37, 1
  store i32 %38, ptr %self1, align 4
  %40 = getelementptr inbounds i8, ptr %self1, i64 4
  store i32 %39, ptr %40, align 4
  %41 = load i32, ptr %self1, align 4, !range !6, !noundef !3
  %_61 = zext i32 %41 to i64
  %42 = icmp eq i64 %_61, 0
  br i1 %42, label %bb25, label %bb26

bb25:                                             ; preds = %bb23
  store i32 1114112, ptr %_8, align 4
  br label %bb27

bb26:                                             ; preds = %bb23
  %43 = getelementptr inbounds i8, ptr %self1, i64 4
  %x = load i32, ptr %43, align 4, !noundef !3
  store i32 %x, ptr %_8, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %bb25
  br i1 %is_match, label %bb6, label %bb7

bb7:                                              ; preds = %bb27
  %44 = load i32, ptr %_8, align 4, !range !7, !noundef !3
  %45 = icmp eq i32 %44, 1114112
  %_13 = select i1 %45, i64 0, i64 1
  %46 = icmp eq i64 %_13, 0
  br i1 %46, label %bb8, label %bb5

bb6:                                              ; preds = %bb27
  %47 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", ptr %_0, i32 0, i32 1
  store i64 %pos, ptr %47, align 8
  %48 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", ptr %_0, i32 0, i32 2
  store i64 %pos, ptr %48, align 8
  store i64 0, ptr %_0, align 8
  br label %bb9

bb8:                                              ; preds = %bb7
  %49 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", ptr %self, i32 0, i32 1
  %50 = getelementptr inbounds %"core::str::pattern::EmptyNeedle", ptr %49, i32 0, i32 4
  store i8 1, ptr %50, align 2
  store i64 2, ptr %_0, align 8
  br label %bb9

bb5:                                              ; preds = %bb7
  %ch = load i32, ptr %_8, align 4, !range !8, !noundef !3
  %_68 = icmp ult i32 %ch, 128
  br i1 %_68, label %bb28, label %bb29

bb9:                                              ; preds = %bb6, %bb36, %bb8
  br label %bb20

bb29:                                             ; preds = %bb5
  %_69 = icmp ult i32 %ch, 2048
  br i1 %_69, label %bb30, label %bb31

bb28:                                             ; preds = %bb5
  store i64 1, ptr %_15, align 8
  br label %bb36

bb31:                                             ; preds = %bb29
  %_70 = icmp ult i32 %ch, 65536
  br i1 %_70, label %bb32, label %bb33

bb30:                                             ; preds = %bb29
  store i64 2, ptr %_15, align 8
  br label %bb35

bb33:                                             ; preds = %bb31
  store i64 4, ptr %_15, align 8
  br label %bb34

bb32:                                             ; preds = %bb31
  store i64 3, ptr %_15, align 8
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  br label %bb35

bb35:                                             ; preds = %bb30, %bb34
  br label %bb36

bb36:                                             ; preds = %bb28, %bb35
  %51 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", ptr %self, i32 0, i32 1
  %52 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", ptr %self, i32 0, i32 1
  %53 = load i64, ptr %52, align 8, !noundef !3
  %54 = load i64, ptr %_15, align 8, !noundef !3
  %55 = add i64 %53, %54
  store i64 %55, ptr %51, align 8
  %56 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::Empty", ptr %self, i32 0, i32 1
  %_16 = load i64, ptr %56, align 8, !noundef !3
  %57 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_0, i32 0, i32 1
  store i64 %pos, ptr %57, align 8
  %58 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_0, i32 0, i32 2
  store i64 %_16, ptr %58, align 8
  store i64 1, ptr %_0, align 8
  br label %bb9

bb20:                                             ; preds = %bb10, %bb19, %bb3, %bb9
  ret void

bb11:                                             ; preds = %bb1
  %59 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", ptr %self, i32 0, i32 1
  %60 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %59, i32 0, i32 6
  %_22 = load i64, ptr %60, align 8, !noundef !3
  %is_long = icmp eq i64 %_22, -1
  %_24 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", ptr %self, i32 0, i32 1
  %61 = getelementptr inbounds %"core::str::pattern::StrSearcher<'_, '_>", ptr %self, i32 0, i32 1
  %self.05 = load ptr, ptr %61, align 8, !nonnull !3, !align !4, !noundef !3
  %62 = getelementptr inbounds i8, ptr %61, i64 8
  %self.16 = load i64, ptr %62, align 8, !noundef !3
  %63 = getelementptr inbounds %"core::str::pattern::StrSearcher<'_, '_>", ptr %self, i32 0, i32 2
  %self.07 = load ptr, ptr %63, align 8, !nonnull !3, !align !4, !noundef !3
  %64 = getelementptr inbounds i8, ptr %63, i64 8
  %self.18 = load i64, ptr %64, align 8, !noundef !3
; call core::str::pattern::TwoWaySearcher::next
  call void @_ZN4core3str7pattern14TwoWaySearcher4next17h69f2ae0fda8ddec9E(ptr sret(%"core::str::pattern::SearchStep") align 8 %otherwise, ptr align 8 %_24, ptr align 1 %self.05, i64 %self.16, ptr align 1 %self.07, i64 %self.18, i1 zeroext %is_long)
  %_27 = load i64, ptr %otherwise, align 8, !range !11, !noundef !3
  %65 = icmp eq i64 %_27, 1
  br i1 %65, label %bb14, label %bb13

bb10:                                             ; preds = %bb1
  store i64 2, ptr %_0, align 8
  br label %bb20

bb14:                                             ; preds = %bb11
  %66 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %otherwise, i32 0, i32 1
  %a = load i64, ptr %66, align 8, !noundef !3
  %67 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %otherwise, i32 0, i32 2
  %68 = load i64, ptr %67, align 8, !noundef !3
  store i64 %68, ptr %b, align 8
  br label %bb15

bb13:                                             ; preds = %bb11
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %otherwise, i64 24, i1 false)
  br label %bb19

bb15:                                             ; preds = %bb18, %bb14
  %69 = getelementptr inbounds %"core::str::pattern::StrSearcher<'_, '_>", ptr %self, i32 0, i32 1
  %_40.0 = load ptr, ptr %69, align 8, !nonnull !3, !align !4, !noundef !3
  %70 = getelementptr inbounds i8, ptr %69, i64 8
  %_40.1 = load i64, ptr %70, align 8, !noundef !3
  %_31 = load i64, ptr %b, align 8, !noundef !3
; call core::str::<impl str>::is_char_boundary
  %_30 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$16is_char_boundary17hfa18a7820c8f7afbE"(ptr align 1 %_40.0, i64 %_40.1, i64 %_31)
  br i1 %_30, label %bb17, label %bb18

bb18:                                             ; preds = %bb15
  %71 = load i64, ptr %b, align 8, !noundef !3
  %72 = add i64 %71, 1
  store i64 %72, ptr %b, align 8
  br label %bb15

bb17:                                             ; preds = %bb15
  %v1 = load i64, ptr %b, align 8, !noundef !3
  %73 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", ptr %self, i32 0, i32 1
  %74 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %73, i32 0, i32 4
  %v2 = load i64, ptr %74, align 8, !noundef !3
; call core::cmp::max_by
  %_32 = call i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 %v1, i64 %v2)
  %75 = getelementptr inbounds %"core::str::pattern::StrSearcherImpl::TwoWay", ptr %self, i32 0, i32 1
  %76 = getelementptr inbounds %"core::str::pattern::TwoWaySearcher", ptr %75, i32 0, i32 4
  store i64 %_32, ptr %76, align 8
  %_35 = load i64, ptr %b, align 8, !noundef !3
  %77 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_0, i32 0, i32 1
  store i64 %a, ptr %77, align 8
  %78 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_0, i32 0, i32 2
  store i64 %_35, ptr %78, align 8
  store i64 1, ptr %_0, align 8
  br label %bb19

bb19:                                             ; preds = %bb13, %bb17
  br label %bb20

bb38:                                             ; No predecessors!
  unreachable
}

; <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN80_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$9write_str17h902807423469e47aE"(ptr align 8 %self, ptr align 1 %s.0, i64 %s.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_7 = alloca ptr, align 8
  %_3 = alloca ptr, align 8
  %_0 = alloca i8, align 1
  %_8 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
; call std::io::Write::write_all
  %1 = call ptr @_ZN3std2io5Write9write_all17hdaf622f06a6ae349E(ptr align 1 %_8, ptr align 1 %s.0, i64 %s.1)
  store ptr %1, ptr %_3, align 8
  %2 = load ptr, ptr %_3, align 8, !noundef !3
  %3 = ptrtoint ptr %2 to i64
  %4 = icmp eq i64 %3, 0
  %_5 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_5, 0
  br i1 %5, label %bb3, label %bb2

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb6

bb2:                                              ; preds = %start
  %e = load ptr, ptr %_3, align 8, !nonnull !3, !noundef !3
  store ptr %e, ptr %_7, align 8
  %6 = getelementptr inbounds i8, ptr %self, i64 8
; invoke core::ptr::drop_in_place<core::result::Result<(),std::io::error::Error>>
  invoke void @"_ZN4core3ptr81drop_in_place$LT$core..result..Result$LT$$LP$$RP$$C$std..io..error..Error$GT$$GT$17h35920f8a41514dc6E"(ptr align 8 %6)
          to label %bb4 unwind label %cleanup

bb6:                                              ; preds = %bb4, %bb3
  %7 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %8 = trunc i8 %7 to i1
  ret i1 %8

bb5:                                              ; preds = %cleanup
  %9 = getelementptr inbounds i8, ptr %self, i64 8
  %10 = load ptr, ptr %_7, align 8, !noundef !3
  store ptr %10, ptr %9, align 8
  %11 = load ptr, ptr %0, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  %13 = load i32, ptr %12, align 8, !noundef !3
  %14 = insertvalue { ptr, i32 } poison, ptr %11, 0
  %15 = insertvalue { ptr, i32 } %14, i32 %13, 1
  resume { ptr, i32 } %15

cleanup:                                          ; preds = %bb2
  %16 = landingpad { ptr, i32 }
          cleanup
  %17 = extractvalue { ptr, i32 } %16, 0
  %18 = extractvalue { ptr, i32 } %16, 1
  store ptr %17, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %18, ptr %19, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %20 = getelementptr inbounds i8, ptr %self, i64 8
  %21 = load ptr, ptr %_7, align 8, !noundef !3
  store ptr %21, ptr %20, align 8
  store i8 1, ptr %_0, align 1
  br label %bb6

bb7:                                              ; No predecessors!
  unreachable
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h098f681c7a009a98E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %self1 = alloca %"core::option::Option<u32>", align 4
  %_0 = alloca i32, align 4
; call core::str::validations::next_code_point
  %0 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17hbfd8799dd98e3d98E(ptr align 8 %self)
  %1 = extractvalue { i32, i32 } %0, 0
  %2 = extractvalue { i32, i32 } %0, 1
  store i32 %1, ptr %self1, align 4
  %3 = getelementptr inbounds i8, ptr %self1, i64 4
  store i32 %2, ptr %3, align 4
  %4 = load i32, ptr %self1, align 4, !range !6, !noundef !3
  %_4 = zext i32 %4 to i64
  %5 = icmp eq i64 %_4, 0
  br i1 %5, label %bb2, label %bb3

bb2:                                              ; preds = %start
  store i32 1114112, ptr %_0, align 4
  br label %bb4

bb3:                                              ; preds = %start
  %6 = getelementptr inbounds i8, ptr %self1, i64 4
  %x = load i32, ptr %6, align 4, !noundef !3
  store i32 %x, ptr %_0, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %7 = load i32, ptr %_0, align 4, !range !7, !noundef !3
  ret i32 %7

bb5:                                              ; No predecessors!
  unreachable
}

; <core::str::iter::Chars as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN81_$LT$core..str..iter..Chars$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h49b4213afe646129E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_0.i = alloca i64, align 8
  %_6 = alloca %"core::option::Option<usize>", align 8
  %self1.i = getelementptr inbounds i8, ptr %self, i64 8
  %end.i = load ptr, ptr %self1.i, align 8, !nonnull !3, !noundef !3
  %subtracted.i = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %0 = ptrtoint ptr %end.i to i64
  %1 = ptrtoint ptr %subtracted.i to i64
  %2 = sub nuw i64 %0, %1
  store i64 %2, ptr %_0.i, align 8
  %3 = load i64, ptr %_0.i, align 8, !noundef !3
  %_5 = add i64 %3, 3
  %_4 = udiv i64 %_5, 4
  %4 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 %3, ptr %4, align 8
  store i64 1, ptr %_6, align 8
  store i64 %_4, ptr %_0, align 8
  %5 = load i64, ptr %_6, align 8, !range !9, !noundef !3
  %6 = getelementptr inbounds i8, ptr %_6, i64 8
  %7 = load i64, ptr %6, align 8
  %8 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_0, i32 0, i32 1
  store i64 %5, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %7, ptr %9, align 8
  ret void
}

; <core::str::iter::Lines as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN81_$LT$core..str..iter..Lines$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb05e96caa1284e5eE"(ptr align 8 %self) unnamed_addr #0 {
start:
; call <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  %0 = call { ptr, i64 } @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hf28dc2eb23ac047eE"(ptr align 8 %self)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$10next_match17h18939037b139c541E"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_52 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_39 = alloca { i64, i64 }, align 8
  %index3 = alloca %"core::ops::range::Range<usize>", align 8
  %_34 = alloca { ptr, i64 }, align 8
  %slice = alloca { ptr, i64 }, align 8
  %index2 = alloca %"core::ops::range::Range<usize>", align 8
  %_25 = alloca %"core::option::Option<&[u8]>", align 8
  %_15 = alloca %"core::option::Option<usize>", align 8
  %index = alloca %"core::ops::range::Range<usize>", align 8
  %self1 = alloca %"core::option::Option<&[u8]>", align 8
  %_2 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, &[u8]>", align 8
  br label %bb1

bb1:                                              ; preds = %bb11, %start
  %self.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self.1 = load i64, ptr %0, align 8, !noundef !3
  %1 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 1
  %_6 = load i64, ptr %1, align 8, !noundef !3
  %2 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 2
  %_7 = load i64, ptr %2, align 8, !noundef !3
  store i64 %_6, ptr %index, align 8
  %3 = getelementptr inbounds i8, ptr %index, i64 8
  store i64 %_7, ptr %3, align 8
  %4 = load i64, ptr %index, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %index, i64 8
  %6 = load i64, ptr %5, align 8, !noundef !3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %7 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hd664443c145fffb1E"(i64 %4, i64 %6, ptr align 1 %self.0, i64 %self.1)
  %8 = extractvalue { ptr, i64 } %7, 0
  %9 = extractvalue { ptr, i64 } %7, 1
  store ptr %8, ptr %self1, align 8
  %10 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %9, ptr %10, align 8
  %11 = load ptr, ptr %self1, align 8, !noundef !3
  %12 = ptrtoint ptr %11 to i64
  %13 = icmp eq i64 %12, 0
  %_44 = select i1 %13, i64 0, i64 1
  %14 = icmp eq i64 %_44, 0
  br i1 %14, label %bb17, label %bb18

bb17:                                             ; preds = %bb1
  %15 = load ptr, ptr @1, align 8, !align !4, !noundef !3
  %16 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %15, ptr %_2, align 8
  %17 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %16, ptr %17, align 8
  br label %bb16

bb18:                                             ; preds = %bb1
  %v.0 = load ptr, ptr %self1, align 8, !nonnull !3, !align !4, !noundef !3
  %18 = getelementptr inbounds i8, ptr %self1, i64 8
  %v.1 = load i64, ptr %18, align 8, !noundef !3
  store ptr %v.0, ptr %_2, align 8
  %19 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %v.1, ptr %19, align 8
  br label %bb16

bb16:                                             ; preds = %bb18, %bb17
  %20 = load ptr, ptr %_2, align 8, !noundef !3
  %21 = ptrtoint ptr %20 to i64
  %22 = icmp eq i64 %21, 0
  %_8 = select i1 %22, i64 1, i64 0
  %23 = icmp eq i64 %_8, 0
  br i1 %23, label %bb2, label %bb3

bb2:                                              ; preds = %bb16
  %bytes.0 = load ptr, ptr %_2, align 8, !nonnull !3, !align !4, !noundef !3
  %24 = getelementptr inbounds i8, ptr %_2, i64 8
  %bytes.1 = load i64, ptr %24, align 8, !noundef !3
  %_12 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 4
  %25 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 3
  %_14 = load i64, ptr %25, align 8, !noundef !3
  %index4 = sub i64 %_14, 1
  store ptr %_12, ptr %_52, align 8
  %26 = getelementptr inbounds i8, ptr %_52, i64 8
  store i64 4, ptr %26, align 8
  %27 = getelementptr inbounds i8, ptr %_52, i64 8
  %_50 = load i64, ptr %27, align 8, !noundef !3
  %cond = icmp ult i64 %index4, %_50
  call void @llvm.assume(i1 %cond)
  %_46 = getelementptr inbounds i8, ptr %_12, i64 %index4
  %last_byte = load i8, ptr %_46, align 1, !noundef !3
  %_54 = icmp ult i64 %bytes.1, 16
  br i1 %_54, label %bb20, label %bb22

bb3:                                              ; preds = %bb16
  store i64 0, ptr %_0, align 8
  br label %bb14

bb22:                                             ; preds = %bb2
; call core::slice::memchr::memchr_aligned
  %28 = call { i64, i64 } @_ZN4core5slice6memchr14memchr_aligned17h2b2455b94ee89b25E(i8 %last_byte, ptr align 1 %bytes.0, i64 %bytes.1)
  %29 = extractvalue { i64, i64 } %28, 0
  %30 = extractvalue { i64, i64 } %28, 1
  store i64 %29, ptr %_15, align 8
  %31 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %30, ptr %31, align 8
  br label %bb19

bb20:                                             ; preds = %bb2
; call core::slice::memchr::memchr_naive
  %32 = call { i64, i64 } @_ZN4core5slice6memchr12memchr_naive17h0ed90e9383abf351E(i8 %last_byte, ptr align 1 %bytes.0, i64 %bytes.1)
  %33 = extractvalue { i64, i64 } %32, 0
  %34 = extractvalue { i64, i64 } %32, 1
  store i64 %33, ptr %_15, align 8
  %35 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %34, ptr %35, align 8
  br label %bb19

bb19:                                             ; preds = %bb20, %bb22
  %_16 = load i64, ptr %_15, align 8, !range !9, !noundef !3
  %36 = icmp eq i64 %_16, 1
  br i1 %36, label %bb4, label %bb12

bb4:                                              ; preds = %bb19
  %37 = getelementptr inbounds i8, ptr %_15, i64 8
  %index5 = load i64, ptr %37, align 8, !noundef !3
  %_18 = add i64 %index5, 1
  %38 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 1
  %39 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 1
  %40 = load i64, ptr %39, align 8, !noundef !3
  %41 = add i64 %40, %_18
  store i64 %41, ptr %38, align 8
  %42 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 1
  %_20 = load i64, ptr %42, align 8, !noundef !3
  %43 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 3
  %_21 = load i64, ptr %43, align 8, !noundef !3
  %_19 = icmp uge i64 %_20, %_21
  br i1 %_19, label %bb5, label %bb10

bb12:                                             ; preds = %bb19
  %44 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 2
  %_41 = load i64, ptr %44, align 8, !noundef !3
  %45 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 1
  store i64 %_41, ptr %45, align 8
  store i64 0, ptr %_0, align 8
  br label %bb13

bb10:                                             ; preds = %bb4
  br label %bb11

bb5:                                              ; preds = %bb4
  %46 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 1
  %_23 = load i64, ptr %46, align 8, !noundef !3
  %47 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 3
  %_24 = load i64, ptr %47, align 8, !noundef !3
  %found_char = sub i64 %_23, %_24
  %self.06 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %48 = getelementptr inbounds i8, ptr %self, i64 8
  %self.17 = load i64, ptr %48, align 8, !noundef !3
  %49 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 1
  %_28 = load i64, ptr %49, align 8, !noundef !3
  store i64 %found_char, ptr %index2, align 8
  %50 = getelementptr inbounds i8, ptr %index2, i64 8
  store i64 %_28, ptr %50, align 8
  %51 = load i64, ptr %index2, align 8, !noundef !3
  %52 = getelementptr inbounds i8, ptr %index2, i64 8
  %53 = load i64, ptr %52, align 8, !noundef !3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get
  %54 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$3get17hd664443c145fffb1E"(i64 %51, i64 %53, ptr align 1 %self.06, i64 %self.17)
  %55 = extractvalue { ptr, i64 } %54, 0
  %56 = extractvalue { ptr, i64 } %54, 1
  store ptr %55, ptr %_25, align 8
  %57 = getelementptr inbounds i8, ptr %_25, i64 8
  store i64 %56, ptr %57, align 8
  %58 = load ptr, ptr %_25, align 8, !noundef !3
  %59 = ptrtoint ptr %58 to i64
  %60 = icmp eq i64 %59, 0
  %_29 = select i1 %60, i64 0, i64 1
  %61 = icmp eq i64 %_29, 1
  br i1 %61, label %bb6, label %bb9

bb11:                                             ; preds = %bb9, %bb10
  br label %bb1

bb6:                                              ; preds = %bb5
  %62 = load ptr, ptr %_25, align 8, !nonnull !3, !align !4, !noundef !3
  %63 = getelementptr inbounds i8, ptr %_25, i64 8
  %64 = load i64, ptr %63, align 8, !noundef !3
  store ptr %62, ptr %slice, align 8
  %65 = getelementptr inbounds i8, ptr %slice, i64 8
  store i64 %64, ptr %65, align 8
  %self8 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 4
  %66 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 3
  %_38 = load i64, ptr %66, align 8, !noundef !3
  store i64 0, ptr %index3, align 8
  %67 = getelementptr inbounds i8, ptr %index3, i64 8
  store i64 %_38, ptr %67, align 8
  %68 = load i64, ptr %index3, align 8, !noundef !3
  %69 = getelementptr inbounds i8, ptr %index3, i64 8
  %70 = load i64, ptr %69, align 8, !noundef !3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %71 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h2d503f3440bc826bE"(i64 %68, i64 %70, ptr align 1 %self8, i64 4, ptr align 8 @alloc_b4da369ef54df77252123b7302c79f68)
  %_35.0 = extractvalue { ptr, i64 } %71, 0
  %_35.1 = extractvalue { ptr, i64 } %71, 1
  store ptr %_35.0, ptr %_34, align 8
  %72 = getelementptr inbounds i8, ptr %_34, i64 8
  store i64 %_35.1, ptr %72, align 8
  %self.09 = load ptr, ptr %slice, align 8, !nonnull !3, !align !4, !noundef !3
  %73 = getelementptr inbounds i8, ptr %slice, i64 8
  %self.110 = load i64, ptr %73, align 8, !noundef !3
  %other.0 = load ptr, ptr %_34, align 8, !nonnull !3, !align !4, !noundef !3
  %74 = getelementptr inbounds i8, ptr %_34, i64 8
  %other.1 = load i64, ptr %74, align 8, !noundef !3
; call <[A] as core::slice::cmp::SlicePartialEq<B>>::equal
  %_31 = call zeroext i1 @"_ZN73_$LT$$u5b$A$u5d$$u20$as$u20$core..slice..cmp..SlicePartialEq$LT$B$GT$$GT$5equal17hf2d9586e25ea8362E"(ptr align 1 %self.09, i64 %self.110, ptr align 1 %other.0, i64 %other.1)
  br i1 %_31, label %bb7, label %bb8

bb9:                                              ; preds = %bb8, %bb5
  br label %bb11

bb8:                                              ; preds = %bb6
  br label %bb9

bb7:                                              ; preds = %bb6
  %75 = getelementptr inbounds %"core::str::pattern::CharSearcher<'_>", ptr %self, i32 0, i32 1
  %_40 = load i64, ptr %75, align 8, !noundef !3
  store i64 %found_char, ptr %_39, align 8
  %76 = getelementptr inbounds i8, ptr %_39, i64 8
  store i64 %_40, ptr %76, align 8
  %77 = load i64, ptr %_39, align 8, !noundef !3
  %78 = getelementptr inbounds i8, ptr %_39, i64 8
  %79 = load i64, ptr %78, align 8, !noundef !3
  %80 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %_0, i32 0, i32 1
  store i64 %77, ptr %80, align 8
  %81 = getelementptr inbounds i8, ptr %80, i64 8
  store i64 %79, ptr %81, align 8
  store i64 1, ptr %_0, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb7
  br label %bb14

bb14:                                             ; preds = %bb3, %bb13
  ret void

bb26:                                             ; No predecessors!
  unreachable
}

; <core::str::pattern::CharSearcher as core::str::pattern::Searcher>::haystack
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN81_$LT$core..str..pattern..CharSearcher$u20$as$u20$core..str..pattern..Searcher$GT$8haystack17he1deb599f4fa24a1E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_0.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_0.1 = load i64, ptr %0, align 8, !noundef !3
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <std::path::PathBuf as core::convert::AsRef<std::path::Path>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN82_$LT$std..path..PathBuf$u20$as$u20$core..convert..AsRef$LT$std..path..Path$GT$$GT$6as_ref17h7fc5d97eeb749120E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_18 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_17 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_18, align 8
  %2 = getelementptr inbounds i8, ptr %_18, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_18, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_18, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_17, align 8
  %6 = getelementptr inbounds i8, ptr %_17, i64 8
  store i64 %5, ptr %6, align 8
  %_15.0 = load ptr, ptr %_17, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_17, i64 8
  %_15.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %_15.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %_15.1, 1
  ret { ptr, i64 } %9
}

; <I as alloc::vec::in_place_collect::SpecInPlaceCollect<T,I>>::collect_in_place
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN83_$LT$I$u20$as$u20$alloc..vec..in_place_collect..SpecInPlaceCollect$LT$T$C$I$GT$$GT$16collect_in_place17hcc39f85e3c7000e9E"(ptr align 8 %self, ptr %dst_buf, ptr %end) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %src = alloca %"alloc::string::String", align 8
  %_8 = alloca %"core::option::Option<usize>", align 8
  %iter = alloca %"core::ops::range::Range<usize>", align 8
  %self1 = alloca %"core::ops::range::Range<usize>", align 8
  %drop_guard = alloca %"alloc::vec::in_place_drop::InPlaceDrop<alloc::string::String>", align 8
; call core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size
  %len = call i64 @_ZN4core4iter8adapters3zip27TrustedRandomAccessNoCoerce4size17h65f65e456bf3a40dE(ptr align 8 %self)
  store ptr %dst_buf, ptr %drop_guard, align 8
  %1 = getelementptr inbounds i8, ptr %drop_guard, i64 8
  store ptr %dst_buf, ptr %1, align 8
  store i64 0, ptr %self1, align 8
  %2 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load i64, ptr %self1, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %self1, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store i64 %3, ptr %iter, align 8
  %6 = getelementptr inbounds i8, ptr %iter, i64 8
  store i64 %5, ptr %6, align 8
  br label %bb2

bb2:                                              ; preds = %bb5, %start
  %other = getelementptr inbounds i8, ptr %iter, i64 8
  %_21 = load i64, ptr %iter, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %iter, i64 8
  %_22 = load i64, ptr %7, align 8, !noundef !3
  %_16 = icmp ult i64 %_21, %_22
  br i1 %_16, label %bb8, label %bb10

bb10:                                             ; preds = %bb2
  %8 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %9 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %8, ptr %_8, align 8
  %10 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %9, ptr %10, align 8
  br label %bb11

bb8:                                              ; preds = %bb2
  %old = load i64, ptr %iter, align 8, !noundef !3
; invoke <usize as core::iter::range::Step>::forward_unchecked
  %_20 = invoke i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hfc82dfa8f57a0e81E"(i64 %old, i64 1)
          to label %bb9 unwind label %cleanup

bb11:                                             ; preds = %bb9, %bb10
  %_10 = load i64, ptr %_8, align 8, !range !9, !noundef !3
  %11 = icmp eq i64 %_10, 0
  br i1 %11, label %bb4, label %bb3

bb7:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::in_place_drop::InPlaceDrop<alloc::string::String>>
  invoke void @"_ZN4core3ptr88drop_in_place$LT$alloc..vec..in_place_drop..InPlaceDrop$LT$alloc..string..String$GT$$GT$17h4760d421c4dc525aE"(ptr align 8 %drop_guard) #28
          to label %bb6 unwind label %terminate

cleanup:                                          ; preds = %bb3, %bb8
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %0, align 8
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb7

bb9:                                              ; preds = %bb8
  store i64 %_20, ptr %iter, align 8
  %16 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %old, ptr %16, align 8
  store i64 1, ptr %_8, align 8
  br label %bb11

bb4:                                              ; preds = %bb11
  %t = load ptr, ptr %drop_guard, align 8, !noundef !3
  %17 = getelementptr inbounds i8, ptr %drop_guard, i64 8
  %t2 = load ptr, ptr %17, align 8, !noundef !3
  ret i64 %len

bb3:                                              ; preds = %bb11
  %18 = getelementptr inbounds i8, ptr %_8, i64 8
  %i = load i64, ptr %18, align 8, !noundef !3
  %dst = getelementptr inbounds %"alloc::string::String", ptr %dst_buf, i64 %i
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h6bac7a9a37e29ed5E"(ptr sret(%"alloc::string::String") align 8 %src, ptr align 8 %self, i64 %i)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb3
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %dst, ptr align 8 %src, i64 24, i1 false)
  %_15 = getelementptr inbounds %"alloc::string::String", ptr %dst, i64 1
  %19 = getelementptr inbounds i8, ptr %drop_guard, i64 8
  store ptr %_15, ptr %19, align 8
  br label %bb2

bb12:                                             ; No predecessors!
  unreachable

terminate:                                        ; preds = %bb7
  %20 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %21 = extractvalue { ptr, i32 } %20, 0
  %22 = extractvalue { ptr, i32 } %20, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb6:                                              ; preds = %bb7
  %23 = load ptr, ptr %0, align 8, !noundef !3
  %24 = getelementptr inbounds i8, ptr %0, i64 8
  %25 = load i32, ptr %24, align 8, !noundef !3
  %26 = insertvalue { ptr, i32 } poison, ptr %23, 0
  %27 = insertvalue { ptr, i32 } %26, i32 %25, 1
  resume { ptr, i32 } %27
}

; <alloc::vec::set_len_on_drop::SetLenOnDrop as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN83_$LT$alloc..vec..set_len_on_drop..SetLenOnDrop$u20$as$u20$core..ops..drop..Drop$GT$4drop17h1142536fa3c60f46E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_2 = load i64, ptr %0, align 8, !noundef !3
  %_3 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
  store i64 %_2, ptr %_3, align 8
  ret void
}

; <core::option::Option<T> as core::ops::try_trait::FromResidual>::from_residual
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN84_$LT$core..option..Option$LT$T$GT$$u20$as$u20$core..ops..try_trait..FromResidual$GT$13from_residual17ha3c359b751cf9c63E"() unnamed_addr #0 {
start:
  %_0 = alloca %"core::option::Option<usize>", align 8
  store i64 0, ptr %_0, align 8
  %0 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  %2 = load i64, ptr %1, align 8
  %3 = insertvalue { i64, i64 } poison, i64 %0, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h3b53a318bcdd5331E"() unnamed_addr #0 {
start:
  ret i1 false
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17hb250a879796ae40eE"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_0, i64 %a, i64 %b) unnamed_addr #0 {
start:
  %_3 = alloca { i64, i64 }, align 8
  store i64 %a, ptr %_3, align 8
  %0 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %b, ptr %0, align 8
  %1 = load i64, ptr %_3, align 8, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_3, i64 8
  %3 = load i64, ptr %2, align 8, !noundef !3
  %4 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %_0, i32 0, i32 1
  store i64 %1, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  store i64 %3, ptr %5, align 8
  store i64 1, ptr %_0, align 8
  ret void
}

; <core::str::pattern::MatchOnly as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN84_$LT$core..str..pattern..MatchOnly$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hef60b80cf46bac51E"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_0, i64 %_a, i64 %_b) unnamed_addr #0 {
start:
  store i64 0, ptr %_0, align 8
  ret void
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN86_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hb132c755adba50faE"(ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %guard = alloca ptr, align 8
  store ptr %self, ptr %guard, align 8
  %_5 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
; invoke alloc::vec::into_iter::IntoIter<T,A>::as_raw_mut_slice
  %1 = invoke { ptr, i64 } @"_ZN5alloc3vec9into_iter21IntoIter$LT$T$C$A$GT$16as_raw_mut_slice17hcdee6a37b3c42aa6E"(ptr align 8 %_5)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<&str,alloc::alloc::Global>>
  invoke void @"_ZN4core3ptr161drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$$RF$str$C$alloc..alloc..Global$GT$$GT$17he92e84dcb9c98850E"(ptr align 8 %guard) #28
          to label %bb5 unwind label %terminate

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_4.0 = extractvalue { ptr, i64 } %1, 0
  %_4.1 = extractvalue { ptr, i64 } %1, 1
  br label %bb2

bb2:                                              ; preds = %bb1
; call core::ptr::drop_in_place<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<&str,alloc::alloc::Global>>
  call void @"_ZN4core3ptr161drop_in_place$LT$$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$$RF$str$C$alloc..alloc..Global$GT$$GT$17he92e84dcb9c98850E"(ptr align 8 %guard)
  ret void

terminate:                                        ; preds = %bb4
  %6 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb5:                                              ; preds = %bb4
  %9 = load ptr, ptr %0, align 8, !noundef !3
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  %11 = load i32, ptr %10, align 8, !noundef !3
  %12 = insertvalue { ptr, i32 } poison, ptr %9, 0
  %13 = insertvalue { ptr, i32 } %12, i32 %11, 1
  resume { ptr, i32 } %13
}

; <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h04ac740dbb31bb16E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_0.i2 = alloca i64, align 8
  %_0.i = alloca i64, align 8
  %self1 = alloca %"core::option::Option<u32>", align 4
  %_12 = alloca { i64, i32, [1 x i32] }, align 8
  %_4 = alloca i32, align 4
  %_0 = alloca %"core::option::Option<(usize, char)>", align 8
  %self1.i3 = getelementptr inbounds i8, ptr %self, i64 8
  %end.i4 = load ptr, ptr %self1.i3, align 8, !nonnull !3, !noundef !3
  %subtracted.i5 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %0 = ptrtoint ptr %end.i4 to i64
  %1 = ptrtoint ptr %subtracted.i5 to i64
  %2 = sub nuw i64 %0, %1
  store i64 %2, ptr %_0.i2, align 8
  %3 = load i64, ptr %_0.i2, align 8, !noundef !3
; call core::str::validations::next_code_point
  %4 = call { i32, i32 } @_ZN4core3str11validations15next_code_point17hbfd8799dd98e3d98E(ptr align 8 %self)
  %5 = extractvalue { i32, i32 } %4, 0
  %6 = extractvalue { i32, i32 } %4, 1
  store i32 %5, ptr %self1, align 4
  %7 = getelementptr inbounds i8, ptr %self1, i64 4
  store i32 %6, ptr %7, align 4
  %8 = load i32, ptr %self1, align 4, !range !6, !noundef !3
  %_15 = zext i32 %8 to i64
  %9 = icmp eq i64 %_15, 0
  br i1 %9, label %bb7, label %bb8

bb7:                                              ; preds = %start
  store i32 1114112, ptr %_4, align 4
  br label %bb9

bb8:                                              ; preds = %start
  %10 = getelementptr inbounds i8, ptr %self1, i64 4
  %x = load i32, ptr %10, align 4, !noundef !3
  store i32 %x, ptr %_4, align 4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %11 = load i32, ptr %_4, align 4, !range !7, !noundef !3
  %12 = icmp eq i32 %11, 1114112
  %_6 = select i1 %12, i64 0, i64 1
  %13 = icmp eq i64 %_6, 0
  br i1 %13, label %bb3, label %bb2

bb3:                                              ; preds = %bb9
  %14 = load i64, ptr @0, align 8
  %15 = load i32, ptr getelementptr inbounds (i8, ptr @0, i64 8), align 8, !range !7, !noundef !3
  store i64 %14, ptr %_0, align 8
  %16 = getelementptr inbounds i8, ptr %_0, i64 8
  store i32 %15, ptr %16, align 8
  br label %bb5

bb2:                                              ; preds = %bb9
  %ch = load i32, ptr %_4, align 4, !range !8, !noundef !3
  %17 = getelementptr inbounds %"core::str::iter::CharIndices<'_>", ptr %self, i32 0, i32 1
  %index = load i64, ptr %17, align 8, !noundef !3
  %self1.i = getelementptr inbounds i8, ptr %self, i64 8
  %end.i = load ptr, ptr %self1.i, align 8, !nonnull !3, !noundef !3
  %subtracted.i = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %18 = ptrtoint ptr %end.i to i64
  %19 = ptrtoint ptr %subtracted.i to i64
  %20 = sub nuw i64 %18, %19
  store i64 %20, ptr %_0.i, align 8
  %21 = load i64, ptr %_0.i, align 8, !noundef !3
  %_11 = sub i64 %3, %21
  %22 = getelementptr inbounds %"core::str::iter::CharIndices<'_>", ptr %self, i32 0, i32 1
  %23 = getelementptr inbounds %"core::str::iter::CharIndices<'_>", ptr %self, i32 0, i32 1
  %24 = load i64, ptr %23, align 8, !noundef !3
  %25 = add i64 %24, %_11
  store i64 %25, ptr %22, align 8
  store i64 %index, ptr %_12, align 8
  %26 = getelementptr inbounds i8, ptr %_12, i64 8
  store i32 %ch, ptr %26, align 8
  %27 = load i64, ptr %_12, align 8, !noundef !3
  %28 = getelementptr inbounds i8, ptr %_12, i64 8
  %29 = load i32, ptr %28, align 8, !range !8, !noundef !3
  store i64 %27, ptr %_0, align 8
  %30 = getelementptr inbounds i8, ptr %_0, i64 8
  store i32 %29, ptr %30, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb3
  %31 = load i64, ptr %_0, align 8
  %32 = getelementptr inbounds i8, ptr %_0, i64 8
  %33 = load i32, ptr %32, align 8, !range !7, !noundef !3
  %34 = insertvalue { i64, i32 } poison, i64 %31, 0
  %35 = insertvalue { i64, i32 } %34, i32 %33, 1
  ret { i64, i32 } %35

bb10:                                             ; No predecessors!
  unreachable
}

; <std::path::Path as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN87_$LT$std..path..Path$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17h06af80081eb91ceaE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, i64 } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, i64 } %0, i64 %self.1, 1
  ret { ptr, i64 } %1
}

; <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN88_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hc38f35ea2bfa9ce9E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_4 = alloca ptr, align 8
  %_3 = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}>", ptr %self, i32 0, i32 1
  store ptr %self, ptr %_4, align 8
  %0 = load ptr, ptr %_4, align 8, !nonnull !3, !align !5, !noundef !3
; call hashbrown::raw::RawTableInner::rehash_in_place::{{closure}}
  call void @"_ZN9hashbrown3raw13RawTableInner15rehash_in_place28_$u7b$$u7b$closure$u7d$$u7d$17h3058961e8b7711feE"(ptr align 8 %_3, ptr align 8 %0)
  ret void
}

; <hashbrown::scopeguard::ScopeGuard<T,F> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN88_$LT$hashbrown..scopeguard..ScopeGuard$LT$T$C$F$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hcc7546c83e431074E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_4 = alloca ptr, align 8
  %_5 = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", ptr %self, i32 0, i32 1
  store ptr %_5, ptr %_4, align 8
  %0 = load ptr, ptr %_4, align 8, !nonnull !3, !align !5, !noundef !3
; call hashbrown::raw::RawTableInner::prepare_resize::{{closure}}
  call void @"_ZN9hashbrown3raw13RawTableInner14prepare_resize28_$u7b$$u7b$closure$u7d$$u7d$17h40258f59cb19a339E"(ptr align 8 %self, ptr align 8 %0)
  ret void
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17hf212a4e69a7bf586E"(ptr align 8 %self, ptr %iter.0, ptr %iter.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_11 = alloca i8, align 1
  %_10 = alloca ptr, align 8
  %_5 = alloca { i64, %"core::option::Option<usize>" }, align 8
  %iterator = alloca %"core::iter::adapters::map::Map<core::iter::adapters::map::Map<core::str::iter::Chars<'_>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1032:14: 1032:17}>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1033:14: 1033:17}>", align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %1 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5acc009586ae1387E"(ptr %iter.0, ptr %iter.1)
  %2 = extractvalue { ptr, ptr } %1, 0
  %3 = extractvalue { ptr, ptr } %1, 1
  store ptr %2, ptr %iterator, align 8
  %4 = getelementptr inbounds i8, ptr %iterator, i64 8
  store ptr %3, ptr %4, align 8
  store i8 1, ptr %_11, align 1
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::size_hint
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h7b9f2f09ea692becE"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_5, ptr align 8 %iterator)
          to label %bb2 unwind label %cleanup

bb6:                                              ; preds = %cleanup
  %5 = load i8, ptr %_11, align 1, !range !10, !noundef !3
  %6 = trunc i8 %5 to i1
  br i1 %6, label %bb5, label %bb4

cleanup:                                          ; preds = %bb7, %bb2, %start
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %0, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb6

bb2:                                              ; preds = %start
  %lower_bound = load i64, ptr %_5, align 8, !noundef !3
; invoke alloc::vec::Vec<T,A>::reserve
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$7reserve17h19c8589e8d2b1e26E"(ptr align 8 %self, i64 %lower_bound)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_11, align 1
  %_9.0 = load ptr, ptr %iterator, align 8, !nonnull !3, !noundef !3
  %11 = getelementptr inbounds i8, ptr %iterator, i64 8
  %_9.1 = load ptr, ptr %11, align 8, !noundef !3
  store ptr %self, ptr %_10, align 8
  %12 = load ptr, ptr %_10, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::iter::traits::iterator::Iterator::for_each
  invoke void @_ZN4core4iter6traits8iterator8Iterator8for_each17hf5e2ad6063a780e5E(ptr %_9.0, ptr %_9.1, ptr align 8 %12)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb7
  ret void

bb4:                                              ; preds = %bb5, %bb6
  %13 = load ptr, ptr %0, align 8, !noundef !3
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8, !noundef !3
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17

bb5:                                              ; preds = %bb6
  br label %bb4
}

; <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend28_$u7b$$u7b$closure$u7d$$u7d$17h71bd49155108cbabE"(ptr align 8 %_1, i32 %c) unnamed_addr #0 {
start:
  %_3 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
; call alloc::string::String::push
  call void @_ZN5alloc6string6String4push17h15f1d932223e61d3E(ptr align 8 %_3, i32 %c)
  ret void
}

; <alloc::vec::in_place_drop::InPlaceDrop<T> as core::ops::drop::Drop>::drop
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN89_$LT$alloc..vec..in_place_drop..InPlaceDrop$LT$T$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7b213ce82e503aebE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_10 = alloca %"core::ptr::metadata::PtrComponents<[alloc::string::String]>", align 8
  %_9 = alloca %"core::ptr::metadata::PtrRepr<[alloc::string::String]>", align 8
  %data = load ptr, ptr %self, align 8, !noundef !3
; call alloc::vec::in_place_drop::InPlaceDrop<T>::len
  %len = call i64 @"_ZN5alloc3vec13in_place_drop20InPlaceDrop$LT$T$GT$3len17h706e86b2957421c8E"(ptr align 8 %self)
  store ptr %data, ptr %_10, align 8
  %0 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %len, ptr %0, align 8
  %1 = load ptr, ptr %_10, align 8, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_10, i64 8
  %3 = load i64, ptr %2, align 8, !noundef !3
  store ptr %1, ptr %_9, align 8
  %4 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %3, ptr %4, align 8
  %_7.0 = load ptr, ptr %_9, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_9, i64 8
  %_7.1 = load i64, ptr %5, align 8, !noundef !3
; call core::ptr::drop_in_place<[alloc::string::String]>
  call void @"_ZN4core3ptr52drop_in_place$LT$$u5b$alloc..string..String$u5d$$GT$17hdec1d56981c42602E"(ptr align 8 %_7.0, i64 %_7.1)
  ret void
}

; <core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next_back
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN89_$LT$core..ops..range..Range$LT$T$GT$$u20$as$u20$core..iter..range..RangeIteratorImpl$GT$14spec_next_back17hff9c671eaed9b48fE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_0 = alloca %"core::option::Option<usize>", align 8
  %_4 = getelementptr inbounds i8, ptr %self, i64 8
  %_3.i = load i64, ptr %self, align 8, !noundef !3
  %_4.i = load i64, ptr %_4, align 8, !noundef !3
  %_0.i = icmp ult i64 %_3.i, %_4.i
  br i1 %_0.i, label %bb2, label %bb4

bb4:                                              ; preds = %start
  store i64 0, ptr %_0, align 8
  br label %bb5

bb2:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %_6 = load i64, ptr %0, align 8, !noundef !3
; call <usize as core::iter::range::Step>::backward_unchecked
  %_5 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$18backward_unchecked17hdfa41aa916aeefe3E"(i64 %_6, i64 1)
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %_5, ptr %1, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %_7 = load i64, ptr %2, align 8, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_7, ptr %3, align 8
  store i64 1, ptr %_0, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  %4 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  %6 = load i64, ptr %5, align 8
  %7 = insertvalue { i64, i64 } poison, i64 %4, 0
  %8 = insertvalue { i64, i64 } %7, i64 %6, 1
  ret { i64, i64 } %8
}

; <core::str::LinesMap as core::ops::function::Fn<(&str,)>>::call
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN89_$LT$core..str..LinesMap$u20$as$u20$core..ops..function..Fn$LT$$LP$$RF$str$C$$RP$$GT$$GT$4call17hdf5111c82ec5c1bcE"(ptr align 1 %self, ptr align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_20 = alloca [4 x i8], align 1
  %_13 = alloca [4 x i8], align 1
  %_8 = alloca %"core::option::Option<&str>", align 8
  %_5 = alloca %"core::option::Option<&str>", align 8
  %_0 = alloca { ptr, i64 }, align 8
  %_2 = alloca { { ptr, i64 } }, align 8
  store ptr %0, ptr %_2, align 8
  %2 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %1, ptr %2, align 8
  %line.0 = load ptr, ptr %_2, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_2, i64 8
  %line.1 = load i64, ptr %3, align 8, !noundef !3
  %4 = getelementptr inbounds [4 x i8], ptr %_13, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 1 %4, i8 0, i64 4, i1 false)
; call core::char::methods::encode_utf8_raw
  %5 = call { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17hce4a0e0468f969f6E(i32 10, ptr align 1 %_13, i64 4)
  %v.0 = extractvalue { ptr, i64 } %5, 0
  %v.1 = extractvalue { ptr, i64 } %5, 1
; call <&str as core::str::pattern::Pattern>::strip_suffix_of
  %6 = call { ptr, i64 } @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$15strip_suffix_of17h69de660b1de2e60cE"(ptr align 1 %v.0, i64 %v.1, ptr align 1 %line.0, i64 %line.1)
  %7 = extractvalue { ptr, i64 } %6, 0
  %8 = extractvalue { ptr, i64 } %6, 1
  store ptr %7, ptr %_5, align 8
  %9 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %8, ptr %9, align 8
  %10 = load ptr, ptr %_5, align 8, !noundef !3
  %11 = ptrtoint ptr %10 to i64
  %12 = icmp eq i64 %11, 0
  %_6 = select i1 %12, i64 0, i64 1
  %13 = icmp eq i64 %_6, 1
  br i1 %13, label %bb1, label %bb2

bb1:                                              ; preds = %start
  %line.01 = load ptr, ptr %_5, align 8, !nonnull !3, !align !4, !noundef !3
  %14 = getelementptr inbounds i8, ptr %_5, i64 8
  %line.12 = load i64, ptr %14, align 8, !noundef !3
  %15 = getelementptr inbounds [4 x i8], ptr %_20, i64 0, i64 0
  call void @llvm.memset.p0.i64(ptr align 1 %15, i8 0, i64 4, i1 false)
; call core::char::methods::encode_utf8_raw
  %16 = call { ptr, i64 } @_ZN4core4char7methods15encode_utf8_raw17hce4a0e0468f969f6E(i32 13, ptr align 1 %_20, i64 4)
  %v.03 = extractvalue { ptr, i64 } %16, 0
  %v.14 = extractvalue { ptr, i64 } %16, 1
; call <&str as core::str::pattern::Pattern>::strip_suffix_of
  %17 = call { ptr, i64 } @"_ZN55_$LT$$RF$str$u20$as$u20$core..str..pattern..Pattern$GT$15strip_suffix_of17h69de660b1de2e60cE"(ptr align 1 %v.03, i64 %v.14, ptr align 1 %line.01, i64 %line.12)
  %18 = extractvalue { ptr, i64 } %17, 0
  %19 = extractvalue { ptr, i64 } %17, 1
  store ptr %18, ptr %_8, align 8
  %20 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %19, ptr %20, align 8
  %21 = load ptr, ptr %_8, align 8, !noundef !3
  %22 = ptrtoint ptr %21 to i64
  %23 = icmp eq i64 %22, 0
  %_9 = select i1 %23, i64 0, i64 1
  %24 = icmp eq i64 %_9, 1
  br i1 %24, label %bb3, label %bb4

bb2:                                              ; preds = %start
  store ptr %line.0, ptr %_0, align 8
  %25 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %line.1, ptr %25, align 8
  br label %bb5

bb3:                                              ; preds = %bb1
  %line.05 = load ptr, ptr %_8, align 8, !nonnull !3, !align !4, !noundef !3
  %26 = getelementptr inbounds i8, ptr %_8, i64 8
  %line.16 = load i64, ptr %26, align 8, !noundef !3
  store ptr %line.05, ptr %_0, align 8
  %27 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %line.16, ptr %27, align 8
  br label %bb5

bb4:                                              ; preds = %bb1
  store ptr %line.01, ptr %_0, align 8
  %28 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %line.12, ptr %28, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4, %bb3
  %29 = load ptr, ptr %_0, align 8, !nonnull !3, !align !4, !noundef !3
  %30 = getelementptr inbounds i8, ptr %_0, i64 8
  %31 = load i64, ptr %30, align 8, !noundef !3
  %32 = insertvalue { ptr, i64 } poison, ptr %29, 0
  %33 = insertvalue { ptr, i64 } %32, i64 %31, 1
  ret { ptr, i64 } %33
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::use_early_reject
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$16use_early_reject17h78243f5fba1cc480E"() unnamed_addr #0 {
start:
  ret i1 true
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::matching
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$8matching17h1c29df2ddb8ce6c9E"(ptr sret(%"core::str::pattern::SearchStep") align 8 %_0, i64 %a, i64 %b) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", ptr %_0, i32 0, i32 1
  store i64 %a, ptr %0, align 8
  %1 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", ptr %_0, i32 0, i32 2
  store i64 %b, ptr %1, align 8
  store i64 0, ptr %_0, align 8
  ret void
}

; <core::str::pattern::RejectAndMatch as core::str::pattern::TwoWayStrategy>::rejecting
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN89_$LT$core..str..pattern..RejectAndMatch$u20$as$u20$core..str..pattern..TwoWayStrategy$GT$9rejecting17hfb1d85daa5354553E"(ptr sret(%"core::str::pattern::SearchStep") align 8 %_0, i64 %a, i64 %b) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_0, i32 0, i32 1
  store i64 %a, ptr %0, align 8
  %1 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_0, i32 0, i32 2
  store i64 %b, ptr %1, align 8
  store i64 1, ptr %_0, align 8
  ret void
}

; <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hea4a6b49e6435c75E"(ptr sret(%"alloc::vec::into_iter::IntoIter<&str>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca ptr, align 8
  %_42 = alloca %"core::ptr::metadata::PtrComponents<&str>", align 8
  %_41 = alloca %"core::ptr::metadata::PtrRepr<&str>", align 8
  %buf = alloca ptr, align 8
  %cap = alloca i64, align 8
  %end = alloca ptr, align 8
  %me = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::vec::Vec<&str>>", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %me, ptr align 8 %self, i64 24, i1 false)
  %src = getelementptr inbounds i8, ptr %me, i64 16
  %1 = getelementptr inbounds i8, ptr %me, i64 8
  %self1 = load ptr, ptr %1, align 8, !nonnull !3, !noundef !3
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %2 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %me, i32 0, i32 1
  %count = load i64, ptr %2, align 8, !noundef !3
  %_18 = getelementptr inbounds { ptr, i64 }, ptr %self1, i64 %count
  store ptr %_18, ptr %end, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds %"alloc::vec::Vec<&str>", ptr %me, i32 0, i32 1
  %count2 = load i64, ptr %3, align 8, !noundef !3
  %4 = getelementptr i8, ptr %self1, i64 %count2
  store ptr %4, ptr %0, align 8
  %_38 = load ptr, ptr %0, align 8, !noundef !3
  store ptr %_38, ptr %_42, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_41, ptr align 8 %_42, i64 8, i1 false)
  %_13 = load ptr, ptr %_41, align 8, !noundef !3
  store ptr %_13, ptr %end, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  br i1 false, label %bb5, label %bb6

bb6:                                              ; preds = %bb3
  %5 = load i64, ptr %me, align 8, !noundef !3
  store i64 %5, ptr %cap, align 8
  br label %bb7

bb5:                                              ; preds = %bb3
  store i64 -1, ptr %cap, align 8
  br label %bb7

bb7:                                              ; preds = %bb5, %bb6
  store ptr %self1, ptr %buf, align 8
  %_26 = load i64, ptr %cap, align 8, !noundef !3
  %_27 = load ptr, ptr %end, align 8, !noundef !3
  %6 = load ptr, ptr %buf, align 8, !nonnull !3, !noundef !3
  store ptr %6, ptr %_0, align 8
  %7 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %_0, i32 0, i32 2
  store i64 %_26, ptr %7, align 8
  %8 = load ptr, ptr %buf, align 8, !nonnull !3, !noundef !3
  %9 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %_0, i32 0, i32 1
  store ptr %8, ptr %9, align 8
  %10 = getelementptr inbounds %"alloc::vec::into_iter::IntoIter<&str>", ptr %_0, i32 0, i32 3
  store ptr %_27, ptr %10, align 8
  ret void
}

; <core::ops::control_flow::ControlFlow<B,C> as core::cmp::PartialEq>::eq
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN90_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..cmp..PartialEq$GT$2eq17hf62ef10f6dfb7828E"(ptr align 1 %self, ptr align 1 %other) unnamed_addr #0 {
start:
  %_0 = alloca i8, align 1
  %0 = load i8, ptr %self, align 1, !range !10, !noundef !3
  %1 = trunc i8 %0 to i1
  %__self_tag = zext i1 %1 to i64
  %2 = load i8, ptr %other, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  %__arg1_tag = zext i1 %3 to i64
  %_5 = icmp eq i64 %__self_tag, %__arg1_tag
  br i1 %_5, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb8

bb1:                                              ; preds = %start
  %4 = load i8, ptr %self, align 1, !range !10, !noundef !3
  %5 = trunc i8 %4 to i1
  %_8 = zext i1 %5 to i64
  %6 = icmp eq i64 %_8, 0
  br i1 %6, label %bb3, label %bb5

bb8:                                              ; preds = %bb5, %bb3, %bb2
  %7 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %8 = trunc i8 %7 to i1
  ret i1 %8

bb3:                                              ; preds = %bb1
  %9 = load i8, ptr %other, align 1, !range !10, !noundef !3
  %10 = trunc i8 %9 to i1
  %_6 = zext i1 %10 to i64
  %_18 = icmp eq i64 %_6, 0
  call void @llvm.assume(i1 %_18)
  %__self_0 = getelementptr i8, ptr %self, i64 1
  %__arg1_0 = getelementptr i8, ptr %other, i64 1
  %_11 = getelementptr i8, ptr %self, i64 1
  %_12 = getelementptr i8, ptr %other, i64 1
; call core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
  %11 = call zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17he66466b4c93fbbdfE"(ptr align 1 %_11, ptr align 1 %_12)
  %12 = zext i1 %11 to i8
  store i8 %12, ptr %_0, align 1
  br label %bb8

bb5:                                              ; preds = %bb1
  %13 = load i8, ptr %other, align 1, !range !10, !noundef !3
  %14 = trunc i8 %13 to i1
  %_7 = zext i1 %14 to i64
  %_17 = icmp eq i64 %_7, 1
  call void @llvm.assume(i1 %_17)
  %__self_01 = getelementptr i8, ptr %self, i64 1
  %__arg1_02 = getelementptr i8, ptr %other, i64 1
  %_15 = getelementptr i8, ptr %self, i64 1
  %_16 = getelementptr i8, ptr %other, i64 1
; call core::cmp::impls::<impl core::cmp::PartialEq for ()>::eq
  %15 = call zeroext i1 @"_ZN4core3cmp5impls59_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$$LP$$RP$$GT$2eq17he66466b4c93fbbdfE"(ptr align 1 %_15, ptr align 1 %_16)
  %16 = zext i1 %15 to i8
  store i8 %16, ptr %_0, align 1
  br label %bb8

bb4:                                              ; No predecessors!
  unreachable
}

; <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0568ea1bfd125502E"(ptr align 8 %self) unnamed_addr #0 {
start:
; call core::str::iter::SplitInternal<P>::next
  %0 = call { ptr, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$4next17ha8e4d857a9a726a7E"(ptr align 8 %self)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::__iterator_get_unchecked
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$24__iterator_get_unchecked17h2351ebbf568da19dE"(ptr align 8 %self, i64 %idx) unnamed_addr #0 {
start:
  %self1 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_3 = getelementptr inbounds i8, ptr %self1, i64 %idx
  ret ptr %_3
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h15818eeed413592dE"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_8 = alloca ptr, align 8
  %_3 = alloca ptr, align 8
  %_0 = alloca i8, align 1
  %f = alloca ptr, align 8
  store ptr %0, ptr %f, align 8
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8cba68a285d0a8e1E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  %3 = load ptr, ptr %1, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8, !noundef !3
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %bb3, %bb1
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  store ptr %2, ptr %_3, align 8
  %12 = load ptr, ptr %_3, align 8, !noundef !3
  %13 = ptrtoint ptr %12 to i64
  %14 = icmp eq i64 %13, 0
  %_4 = select i1 %14, i64 0, i64 1
  %15 = icmp eq i64 %_4, 1
  br i1 %15, label %bb3, label %bb7

bb3:                                              ; preds = %bb2
  %x = load ptr, ptr %_3, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %x, ptr %_8, align 8
  %16 = load ptr, ptr %_8, align 8, !nonnull !3, !align !5, !noundef !3
; invoke pkg_config::is_static_available::{{closure}}::{{closure}}
  %_6 = invoke zeroext i1 @"_ZN10pkg_config19is_static_available28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17he9599d1f1cc6b711E"(ptr align 8 %f, ptr align 8 %16)
          to label %bb4 unwind label %cleanup

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1
  br label %bb8

bb4:                                              ; preds = %bb3
  br i1 %_6, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  br label %bb1

bb5:                                              ; preds = %bb4
  store i8 1, ptr %_0, align 1
  br label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %17 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %18 = trunc i8 %17 to i1
  ret i1 %18
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h19dd25b11bc238d1E"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_8 = alloca ptr, align 8
  %_3 = alloca ptr, align 8
  %_0 = alloca i8, align 1
  %f = alloca ptr, align 8
  store ptr %0, ptr %f, align 8
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9cd2dfb86b854212E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  %3 = load ptr, ptr %1, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8, !noundef !3
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %bb3, %bb1
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  store ptr %2, ptr %_3, align 8
  %12 = load ptr, ptr %_3, align 8, !noundef !3
  %13 = ptrtoint ptr %12 to i64
  %14 = icmp eq i64 %13, 0
  %_4 = select i1 %14, i64 0, i64 1
  %15 = icmp eq i64 %_4, 1
  br i1 %15, label %bb3, label %bb7

bb3:                                              ; preds = %bb2
  %x = load ptr, ptr %_3, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %x, ptr %_8, align 8
  %16 = load ptr, ptr %_8, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <T as core::slice::cmp::SliceContains>::slice_contains::{{closure}}
  %_6 = invoke zeroext i1 @"_ZN53_$LT$T$u20$as$u20$core..slice..cmp..SliceContains$GT$14slice_contains28_$u7b$$u7b$closure$u7d$$u7d$17ha68945d2dc69b214E"(ptr align 8 %f, ptr align 8 %16)
          to label %bb4 unwind label %cleanup

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1
  br label %bb8

bb4:                                              ; preds = %bb3
  br i1 %_6, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  br label %bb1

bb5:                                              ; preds = %bb4
  store i8 1, ptr %_0, align 1
  br label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %17 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %18 = trunc i8 %17 to i1
  ret i1 %18
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h9a4ba2ef200b552fE"(ptr align 8 %self, ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_8 = alloca ptr, align 8
  %_3 = alloca ptr, align 8
  %_0 = alloca i8, align 1
  %f = alloca ptr, align 8
  store ptr %0, ptr %f, align 8
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h110c6469a9eca750E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  %3 = load ptr, ptr %1, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8, !noundef !3
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %bb3, %bb1
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  store ptr %2, ptr %_3, align 8
  %12 = load ptr, ptr %_3, align 8, !noundef !3
  %13 = ptrtoint ptr %12 to i64
  %14 = icmp eq i64 %13, 0
  %_4 = select i1 %14, i64 0, i64 1
  %15 = icmp eq i64 %_4, 1
  br i1 %15, label %bb3, label %bb7

bb3:                                              ; preds = %bb2
  %x = load ptr, ptr %_3, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %x, ptr %_8, align 8
  %16 = load ptr, ptr %_8, align 8, !nonnull !3, !align !5, !noundef !3
; invoke pkg_config::is_static_available::{{closure}}::{{closure}}
  %_6 = invoke zeroext i1 @"_ZN10pkg_config19is_static_available28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h150d26c40966e162E"(ptr align 8 %f, ptr align 8 %16)
          to label %bb4 unwind label %cleanup

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1
  br label %bb8

bb4:                                              ; preds = %bb3
  br i1 %_6, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  br label %bb1

bb5:                                              ; preds = %bb4
  store i8 1, ptr %_0, align 1
  br label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %17 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %18 = trunc i8 %17 to i1
  ret i1 %18
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17hf354645fb402e899E"(ptr align 8 %self, ptr align 8 %0, ptr align 8 %1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_8 = alloca ptr, align 8
  %_3 = alloca ptr, align 8
  %_0 = alloca i8, align 1
  %f = alloca %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1049:21: 1049:26}", align 8
  store ptr %0, ptr %f, align 8
  %3 = getelementptr inbounds i8, ptr %f, i64 8
  store ptr %1, ptr %3, align 8
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %4 = invoke align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h110c6469a9eca750E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  %5 = load ptr, ptr %2, align 8, !noundef !3
  %6 = getelementptr inbounds i8, ptr %2, i64 8
  %7 = load i32, ptr %6, align 8, !noundef !3
  %8 = insertvalue { ptr, i32 } poison, ptr %5, 0
  %9 = insertvalue { ptr, i32 } %8, i32 %7, 1
  resume { ptr, i32 } %9

cleanup:                                          ; preds = %bb3, %bb1
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  %12 = extractvalue { ptr, i32 } %10, 1
  store ptr %11, ptr %2, align 8
  %13 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  store ptr %4, ptr %_3, align 8
  %14 = load ptr, ptr %_3, align 8, !noundef !3
  %15 = ptrtoint ptr %14 to i64
  %16 = icmp eq i64 %15, 0
  %_4 = select i1 %16, i64 0, i64 1
  %17 = icmp eq i64 %_4, 1
  br i1 %17, label %bb3, label %bb7

bb3:                                              ; preds = %bb2
  %x = load ptr, ptr %_3, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %x, ptr %_8, align 8
  %18 = load ptr, ptr %_8, align 8, !nonnull !3, !align !5, !noundef !3
; invoke pkg_config::is_static_available::{{closure}}
  %_6 = invoke zeroext i1 @"_ZN10pkg_config19is_static_available28_$u7b$$u7b$closure$u7d$$u7d$17h69cf82c723a76363E"(ptr align 8 %f, ptr align 8 %18)
          to label %bb4 unwind label %cleanup

bb7:                                              ; preds = %bb2
  store i8 0, ptr %_0, align 1
  br label %bb8

bb4:                                              ; preds = %bb3
  br i1 %_6, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  br label %bb1

bb5:                                              ; preds = %bb4
  store i8 1, ptr %_0, align 1
  br label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %19 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %20 = trunc i8 %19 to i1
  ret i1 %20
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::find
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4find17hb4633606a4c43892E"(ptr align 8 %self, ptr align 1 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_8 = alloca ptr, align 8
  %x = alloca ptr, align 8
  %_3 = alloca ptr, align 8
  %_0 = alloca ptr, align 8
  %predicate = alloca ptr, align 8
  store ptr %0, ptr %predicate, align 8
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8cba68a285d0a8e1E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  %3 = load ptr, ptr %1, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8, !noundef !3
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %bb3, %bb1
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  store ptr %2, ptr %_3, align 8
  %12 = load ptr, ptr %_3, align 8, !noundef !3
  %13 = ptrtoint ptr %12 to i64
  %14 = icmp eq i64 %13, 0
  %_4 = select i1 %14, i64 0, i64 1
  %15 = icmp eq i64 %_4, 1
  br i1 %15, label %bb3, label %bb7

bb3:                                              ; preds = %bb2
  %16 = load ptr, ptr %_3, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %16, ptr %x, align 8
  store ptr %x, ptr %_8, align 8
  %17 = load ptr, ptr %_8, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_6 = invoke zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h8d36f1ada60d25faE"(ptr align 8 %predicate, ptr align 8 %17)
          to label %bb4 unwind label %cleanup

bb7:                                              ; preds = %bb2
  store ptr null, ptr %_0, align 8
  br label %bb8

bb4:                                              ; preds = %bb3
  br i1 %_6, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  br label %bb1

bb5:                                              ; preds = %bb4
  %_10 = load ptr, ptr %x, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %_10, ptr %_0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %18 = load ptr, ptr %_0, align 8, !align !5, !noundef !3
  ret ptr %18
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::find
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4find17hcc5f9f427a6dd053E"(ptr align 8 %self, ptr align 1 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_8 = alloca ptr, align 8
  %x = alloca ptr, align 8
  %_3 = alloca ptr, align 8
  %_0 = alloca ptr, align 8
  %predicate = alloca ptr, align 8
  store ptr %0, ptr %predicate, align 8
  br label %bb1

bb1:                                              ; preds = %bb6, %start
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = invoke align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8cba68a285d0a8e1E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb9:                                              ; preds = %cleanup
  %3 = load ptr, ptr %1, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8, !noundef !3
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %bb3, %bb1
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb9

bb2:                                              ; preds = %bb1
  store ptr %2, ptr %_3, align 8
  %12 = load ptr, ptr %_3, align 8, !noundef !3
  %13 = ptrtoint ptr %12 to i64
  %14 = icmp eq i64 %13, 0
  %_4 = select i1 %14, i64 0, i64 1
  %15 = icmp eq i64 %_4, 1
  br i1 %15, label %bb3, label %bb7

bb3:                                              ; preds = %bb2
  %16 = load ptr, ptr %_3, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %16, ptr %x, align 8
  store ptr %x, ptr %_8, align 8
  %17 = load ptr, ptr %_8, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::ops::function::impls::<impl core::ops::function::FnMut<A> for &mut F>::call_mut
  %_6 = invoke zeroext i1 @"_ZN4core3ops8function5impls79_$LT$impl$u20$core..ops..function..FnMut$LT$A$GT$$u20$for$u20$$RF$mut$u20$F$GT$8call_mut17h679c97a00d84fb7bE"(ptr align 8 %predicate, ptr align 8 %17)
          to label %bb4 unwind label %cleanup

bb7:                                              ; preds = %bb2
  store ptr null, ptr %_0, align 8
  br label %bb8

bb4:                                              ; preds = %bb3
  br i1 %_6, label %bb5, label %bb6

bb6:                                              ; preds = %bb4
  br label %bb1

bb5:                                              ; preds = %bb4
  %_10 = load ptr, ptr %x, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %_10, ptr %_0, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %18 = load ptr, ptr %_0, align 8, !align !5, !noundef !3
  ret ptr %18
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h3e3133eb39dfbda7E"(ptr %0, ptr %1, ptr align 8 %f) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_38 = alloca i8, align 1
  %_37 = alloca i8, align 1
  %self1 = alloca ptr, align 8
  %_25 = alloca ptr, align 8
  %len = alloca i64, align 8
  %i = alloca i64, align 8
  %end = alloca ptr, align 8
  %_4 = alloca i8, align 1
  %self = alloca %"core::slice::iter::Iter<'_, std::ffi::os_str::OsString>", align 8
  store ptr %0, ptr %self, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %1, ptr %3, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self2 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load ptr, ptr %self2, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %end, align 8
  %self3 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %self4 = load ptr, ptr %end, align 8, !nonnull !3, !noundef !3
  %5 = icmp eq ptr %self3, %self4
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_4, align 1
  br label %bb3

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self, i64 8
  %self5 = load ptr, ptr %7, align 8, !noundef !3
  %len6 = ptrtoint ptr %self5 to i64
  %8 = icmp eq i64 %len6, 0
  %9 = zext i1 %8 to i8
  store i8 %9, ptr %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %10 = load i8, ptr %_4, align 1, !range !10, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  store i8 0, ptr %_38, align 1
  store i8 1, ptr %_37, align 1
  store i64 0, ptr %i, align 8
  br i1 false, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  store i8 0, ptr %_38, align 1
; invoke core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&std::ffi::os_str::OsString,std::ffi::os_str::OsString,(),pkg_config::WrappedCommand::args<&alloc::vec::Vec<std::ffi::os_str::OsString>,&std::ffi::os_str::OsString>::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString,alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,pkg_config::WrappedCommand::args<&alloc::vec::Vec<std::ffi::os_str::OsString>,&std::ffi::os_str::OsString>::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr799drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$C$$LP$$RP$$C$pkg_config..WrappedCommand..args$LT$$RF$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$C$$RF$std..ffi..os_str..OsString$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$std..ffi..os_str..OsString$C$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$C$$RF$std..ffi..os_str..OsString$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17he543fc64d9e13fb5E"(ptr align 8 %f)
          to label %bb13 unwind label %cleanup13

bb7:                                              ; preds = %bb5
  %self7 = getelementptr inbounds i8, ptr %self, i64 8
  %end8 = load ptr, ptr %self7, align 8, !nonnull !3, !noundef !3
  %subtracted = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  br i1 true, label %bb21, label %bb23

bb6:                                              ; preds = %bb5
  %12 = getelementptr inbounds i8, ptr %self, i64 8
  %self9 = load ptr, ptr %12, align 8, !noundef !3
  %len10 = ptrtoint ptr %self9 to i64
  store i64 %len10, ptr %len, align 8
  br label %bb8

bb23:                                             ; preds = %bb21, %bb7
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_768f4da2d83915fa9ce0d03164202475) #27
          to label %unreachable unwind label %cleanup

bb21:                                             ; preds = %bb7
  br i1 true, label %bb22, label %bb23

bb22:                                             ; preds = %bb21
  %13 = ptrtoint ptr %end8 to i64
  %14 = ptrtoint ptr %subtracted to i64
  %15 = sub nuw i64 %13, %14
  %16 = udiv exact i64 %15, 24
  store i64 %16, ptr %len, align 8
  br label %bb8

bb17:                                             ; preds = %cleanup
  %17 = load i8, ptr %_37, align 1, !range !10, !noundef !3
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb16, label %bb14

cleanup:                                          ; preds = %bb9, %bb23
  %19 = landingpad { ptr, i32 }
          cleanup
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
  store ptr %20, ptr %2, align 8
  %22 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %21, ptr %22, align 8
  br label %bb17

unreachable:                                      ; preds = %bb23
  unreachable

bb8:                                              ; preds = %bb6, %bb22
  br label %bb9

bb9:                                              ; preds = %bb12, %bb8
  store i8 0, ptr %_37, align 1
  %self11 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %count = load i64, ptr %i, align 8, !noundef !3
  %_55 = getelementptr inbounds %"std::ffi::os_str::OsString", ptr %self11, i64 %count
  store ptr %_55, ptr %self1, align 8
  store ptr %_55, ptr %_25, align 8
  %23 = load ptr, ptr %_25, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::iter::adapters::map::map_fold::{{closure}}
  invoke void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h020f7469564c4560E"(ptr align 8 %f, ptr align 8 %23)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %self12 = load i64, ptr %i, align 8, !noundef !3
  %_32 = add nuw i64 %self12, 1
  store i64 %_32, ptr %i, align 8
  %_35 = load i64, ptr %i, align 8, !noundef !3
  %_36 = load i64, ptr %len, align 8, !noundef !3
  %_34 = icmp eq i64 %_35, %_36
  br i1 %_34, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  br label %bb9

bb11:                                             ; preds = %bb10
; invoke core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&std::ffi::os_str::OsString,std::ffi::os_str::OsString,(),pkg_config::WrappedCommand::args<&alloc::vec::Vec<std::ffi::os_str::OsString>,&std::ffi::os_str::OsString>::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString,alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,pkg_config::WrappedCommand::args<&alloc::vec::Vec<std::ffi::os_str::OsString>,&std::ffi::os_str::OsString>::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr799drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$C$$LP$$RP$$C$pkg_config..WrappedCommand..args$LT$$RF$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$C$$RF$std..ffi..os_str..OsString$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$std..ffi..os_str..OsString$C$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$C$$RF$std..ffi..os_str..OsString$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17he543fc64d9e13fb5E"(ptr align 8 %f)
          to label %bb13 unwind label %cleanup13

bb19:                                             ; preds = %bb14, %cleanup13
  %24 = load i8, ptr %_38, align 1, !range !10, !noundef !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb18, label %bb15

cleanup13:                                        ; preds = %bb4, %bb11
  %26 = landingpad { ptr, i32 }
          cleanup
  %27 = extractvalue { ptr, i32 } %26, 0
  %28 = extractvalue { ptr, i32 } %26, 1
  store ptr %27, ptr %2, align 8
  %29 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %28, ptr %29, align 8
  br label %bb19

bb13:                                             ; preds = %bb4, %bb11
  ret void

bb14:                                             ; preds = %bb16, %bb17
; invoke core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&std::ffi::os_str::OsString,std::ffi::os_str::OsString,(),pkg_config::WrappedCommand::args<&alloc::vec::Vec<std::ffi::os_str::OsString>,&std::ffi::os_str::OsString>::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString,alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,pkg_config::WrappedCommand::args<&alloc::vec::Vec<std::ffi::os_str::OsString>,&std::ffi::os_str::OsString>::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr799drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$C$$LP$$RP$$C$pkg_config..WrappedCommand..args$LT$$RF$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$C$$RF$std..ffi..os_str..OsString$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$std..ffi..os_str..OsString$C$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$$C$$RF$std..ffi..os_str..OsString$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17he543fc64d9e13fb5E"(ptr align 8 %f) #28
          to label %bb19 unwind label %terminate

bb16:                                             ; preds = %bb17
  br label %bb14

terminate:                                        ; preds = %bb14
  %30 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %31 = extractvalue { ptr, i32 } %30, 0
  %32 = extractvalue { ptr, i32 } %30, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb15:                                             ; preds = %bb18, %bb19
  %33 = load ptr, ptr %2, align 8, !noundef !3
  %34 = getelementptr inbounds i8, ptr %2, i64 8
  %35 = load i32, ptr %34, align 8, !noundef !3
  %36 = insertvalue { ptr, i32 } poison, ptr %33, 0
  %37 = insertvalue { ptr, i32 } %36, i32 %35, 1
  resume { ptr, i32 } %37

bb18:                                             ; preds = %bb19
  br label %bb15
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h6dca5a64fc64febcE"(ptr %0, ptr %1, ptr align 8 %f) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_38 = alloca i8, align 1
  %_37 = alloca i8, align 1
  %self1 = alloca ptr, align 8
  %_25 = alloca ptr, align 8
  %len = alloca i64, align 8
  %i = alloca i64, align 8
  %end = alloca ptr, align 8
  %_4 = alloca i8, align 1
  %self = alloca %"core::slice::iter::Iter<'_, &str>", align 8
  store ptr %0, ptr %self, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %1, ptr %3, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self2 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load ptr, ptr %self2, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %end, align 8
  %self3 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %self4 = load ptr, ptr %end, align 8, !nonnull !3, !noundef !3
  %5 = icmp eq ptr %self3, %self4
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_4, align 1
  br label %bb3

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self, i64 8
  %self5 = load ptr, ptr %7, align 8, !noundef !3
  %len6 = ptrtoint ptr %self5 to i64
  %8 = icmp eq i64 %len6, 0
  %9 = zext i1 %8 to i8
  store i8 %9, ptr %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %10 = load i8, ptr %_4, align 1, !range !10, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  store i8 0, ptr %_38, align 1
  store i8 1, ptr %_37, align 1
  store i64 0, ptr %i, align 8
  br i1 false, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  store i8 0, ptr %_38, align 1
; invoke core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&&str,std::ffi::os_str::OsString,(),pkg_config::WrappedCommand::args<&[&str],&&str>::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString,alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>,pkg_config::WrappedCommand::args<&[&str],&&str>::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr659drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$$RF$str$C$std..ffi..os_str..OsString$C$$LP$$RP$$C$pkg_config..WrappedCommand..args$LT$$RF$$u5b$$RF$str$u5d$$C$$RF$$RF$str$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$std..ffi..os_str..OsString$C$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$RF$str$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$$u5b$$RF$str$u5d$$C$$RF$$RF$str$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h83be0319d7007e1dE"(ptr align 8 %f)
          to label %bb13 unwind label %cleanup13

bb7:                                              ; preds = %bb5
  %self7 = getelementptr inbounds i8, ptr %self, i64 8
  %end8 = load ptr, ptr %self7, align 8, !nonnull !3, !noundef !3
  %subtracted = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  br i1 true, label %bb21, label %bb23

bb6:                                              ; preds = %bb5
  %12 = getelementptr inbounds i8, ptr %self, i64 8
  %self9 = load ptr, ptr %12, align 8, !noundef !3
  %len10 = ptrtoint ptr %self9 to i64
  store i64 %len10, ptr %len, align 8
  br label %bb8

bb23:                                             ; preds = %bb21, %bb7
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_768f4da2d83915fa9ce0d03164202475) #27
          to label %unreachable unwind label %cleanup

bb21:                                             ; preds = %bb7
  br i1 true, label %bb22, label %bb23

bb22:                                             ; preds = %bb21
  %13 = ptrtoint ptr %end8 to i64
  %14 = ptrtoint ptr %subtracted to i64
  %15 = sub nuw i64 %13, %14
  %16 = udiv exact i64 %15, 16
  store i64 %16, ptr %len, align 8
  br label %bb8

bb17:                                             ; preds = %cleanup
  %17 = load i8, ptr %_37, align 1, !range !10, !noundef !3
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb16, label %bb14

cleanup:                                          ; preds = %bb9, %bb23
  %19 = landingpad { ptr, i32 }
          cleanup
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
  store ptr %20, ptr %2, align 8
  %22 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %21, ptr %22, align 8
  br label %bb17

unreachable:                                      ; preds = %bb23
  unreachable

bb8:                                              ; preds = %bb6, %bb22
  br label %bb9

bb9:                                              ; preds = %bb12, %bb8
  store i8 0, ptr %_37, align 1
  %self11 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %count = load i64, ptr %i, align 8, !noundef !3
  %_55 = getelementptr inbounds { ptr, i64 }, ptr %self11, i64 %count
  store ptr %_55, ptr %self1, align 8
  store ptr %_55, ptr %_25, align 8
  %23 = load ptr, ptr %_25, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::iter::adapters::map::map_fold::{{closure}}
  invoke void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17he3379851e85982c2E"(ptr align 8 %f, ptr align 8 %23)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %self12 = load i64, ptr %i, align 8, !noundef !3
  %_32 = add nuw i64 %self12, 1
  store i64 %_32, ptr %i, align 8
  %_35 = load i64, ptr %i, align 8, !noundef !3
  %_36 = load i64, ptr %len, align 8, !noundef !3
  %_34 = icmp eq i64 %_35, %_36
  br i1 %_34, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  br label %bb9

bb11:                                             ; preds = %bb10
; invoke core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&&str,std::ffi::os_str::OsString,(),pkg_config::WrappedCommand::args<&[&str],&&str>::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString,alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>,pkg_config::WrappedCommand::args<&[&str],&&str>::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr659drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$$RF$str$C$std..ffi..os_str..OsString$C$$LP$$RP$$C$pkg_config..WrappedCommand..args$LT$$RF$$u5b$$RF$str$u5d$$C$$RF$$RF$str$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$std..ffi..os_str..OsString$C$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$RF$str$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$$u5b$$RF$str$u5d$$C$$RF$$RF$str$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h83be0319d7007e1dE"(ptr align 8 %f)
          to label %bb13 unwind label %cleanup13

bb19:                                             ; preds = %bb14, %cleanup13
  %24 = load i8, ptr %_38, align 1, !range !10, !noundef !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb18, label %bb15

cleanup13:                                        ; preds = %bb4, %bb11
  %26 = landingpad { ptr, i32 }
          cleanup
  %27 = extractvalue { ptr, i32 } %26, 0
  %28 = extractvalue { ptr, i32 } %26, 1
  store ptr %27, ptr %2, align 8
  %29 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %28, ptr %29, align 8
  br label %bb19

bb13:                                             ; preds = %bb4, %bb11
  ret void

bb14:                                             ; preds = %bb16, %bb17
; invoke core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&&str,std::ffi::os_str::OsString,(),pkg_config::WrappedCommand::args<&[&str],&&str>::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<std::ffi::os_str::OsString,alloc::vec::Vec<std::ffi::os_str::OsString>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<&str>,pkg_config::WrappedCommand::args<&[&str],&&str>::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr659drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$$RF$str$C$std..ffi..os_str..OsString$C$$LP$$RP$$C$pkg_config..WrappedCommand..args$LT$$RF$$u5b$$RF$str$u5d$$C$$RF$$RF$str$GT$..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$std..ffi..os_str..OsString$C$alloc..vec..Vec$LT$std..ffi..os_str..OsString$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$RF$str$GT$$C$pkg_config..WrappedCommand..args$LT$$RF$$u5b$$RF$str$u5d$$C$$RF$$RF$str$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h83be0319d7007e1dE"(ptr align 8 %f) #28
          to label %bb19 unwind label %terminate

bb16:                                             ; preds = %bb17
  br label %bb14

terminate:                                        ; preds = %bb14
  %30 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %31 = extractvalue { ptr, i32 } %30, 0
  %32 = extractvalue { ptr, i32 } %30, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb15:                                             ; preds = %bb18, %bb19
  %33 = load ptr, ptr %2, align 8, !noundef !3
  %34 = getelementptr inbounds i8, ptr %2, i64 8
  %35 = load i32, ptr %34, align 8, !noundef !3
  %36 = insertvalue { ptr, i32 } poison, ptr %33, 0
  %37 = insertvalue { ptr, i32 } %36, i32 %35, 1
  resume { ptr, i32 } %37

bb18:                                             ; preds = %bb19
  br label %bb15
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h807317e3f1997786E"(ptr %0, ptr %1, ptr align 8 %f) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_38 = alloca i8, align 1
  %_37 = alloca i8, align 1
  %self1 = alloca ptr, align 8
  %_25 = alloca ptr, align 8
  %len = alloca i64, align 8
  %i = alloca i64, align 8
  %end = alloca ptr, align 8
  %_4 = alloca i8, align 1
  %self = alloca %"core::slice::iter::Iter<'_, (std::ffi::os_str::OsString, std::ffi::os_str::OsString)>", align 8
  store ptr %0, ptr %self, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %1, ptr %3, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self2 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load ptr, ptr %self2, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %end, align 8
  %self3 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %self4 = load ptr, ptr %end, align 8, !nonnull !3, !noundef !3
  %5 = icmp eq ptr %self3, %self4
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_4, align 1
  br label %bb3

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self, i64 8
  %self5 = load ptr, ptr %7, align 8, !noundef !3
  %len6 = ptrtoint ptr %self5 to i64
  %8 = icmp eq i64 %len6, 0
  %9 = zext i1 %8 to i8
  store i8 %9, ptr %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %10 = load i8, ptr %_4, align 1, !range !10, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  store i8 0, ptr %_38, align 1
  store i8 1, ptr %_37, align 1
  store i64 0, ptr %i, align 8
  br i1 false, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  store i8 0, ptr %_38, align 1
; invoke core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&(std::ffi::os_str::OsString,std::ffi::os_str::OsString),alloc::string::String,(),<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr744drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$C$alloc..string..String$C$$LP$$RP$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hada194198debcdf1E"(ptr align 8 %f)
          to label %bb13 unwind label %cleanup13

bb7:                                              ; preds = %bb5
  %self7 = getelementptr inbounds i8, ptr %self, i64 8
  %end8 = load ptr, ptr %self7, align 8, !nonnull !3, !noundef !3
  %subtracted = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  br i1 true, label %bb21, label %bb23

bb6:                                              ; preds = %bb5
  %12 = getelementptr inbounds i8, ptr %self, i64 8
  %self9 = load ptr, ptr %12, align 8, !noundef !3
  %len10 = ptrtoint ptr %self9 to i64
  store i64 %len10, ptr %len, align 8
  br label %bb8

bb23:                                             ; preds = %bb21, %bb7
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_768f4da2d83915fa9ce0d03164202475) #27
          to label %unreachable unwind label %cleanup

bb21:                                             ; preds = %bb7
  br i1 true, label %bb22, label %bb23

bb22:                                             ; preds = %bb21
  %13 = ptrtoint ptr %end8 to i64
  %14 = ptrtoint ptr %subtracted to i64
  %15 = sub nuw i64 %13, %14
  %16 = udiv exact i64 %15, 48
  store i64 %16, ptr %len, align 8
  br label %bb8

bb17:                                             ; preds = %cleanup
  %17 = load i8, ptr %_37, align 1, !range !10, !noundef !3
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb16, label %bb14

cleanup:                                          ; preds = %bb9, %bb23
  %19 = landingpad { ptr, i32 }
          cleanup
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
  store ptr %20, ptr %2, align 8
  %22 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %21, ptr %22, align 8
  br label %bb17

unreachable:                                      ; preds = %bb23
  unreachable

bb8:                                              ; preds = %bb6, %bb22
  br label %bb9

bb9:                                              ; preds = %bb12, %bb8
  store i8 0, ptr %_37, align 1
  %self11 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %count = load i64, ptr %i, align 8, !noundef !3
  %_55 = getelementptr inbounds { %"std::ffi::os_str::OsString", %"std::ffi::os_str::OsString" }, ptr %self11, i64 %count
  store ptr %_55, ptr %self1, align 8
  store ptr %_55, ptr %_25, align 8
  %23 = load ptr, ptr %_25, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::iter::adapters::map::map_fold::{{closure}}
  invoke void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17h399e2510ede9aa8bE"(ptr align 8 %f, ptr align 8 %23)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %self12 = load i64, ptr %i, align 8, !noundef !3
  %_32 = add nuw i64 %self12, 1
  store i64 %_32, ptr %i, align 8
  %_35 = load i64, ptr %i, align 8, !noundef !3
  %_36 = load i64, ptr %len, align 8, !noundef !3
  %_34 = icmp eq i64 %_35, %_36
  br i1 %_34, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  br label %bb9

bb11:                                             ; preds = %bb10
; invoke core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&(std::ffi::os_str::OsString,std::ffi::os_str::OsString),alloc::string::String,(),<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr744drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$C$alloc..string..String$C$$LP$$RP$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hada194198debcdf1E"(ptr align 8 %f)
          to label %bb13 unwind label %cleanup13

bb19:                                             ; preds = %bb14, %cleanup13
  %24 = load i8, ptr %_38, align 1, !range !10, !noundef !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb18, label %bb15

cleanup13:                                        ; preds = %bb4, %bb11
  %26 = landingpad { ptr, i32 }
          cleanup
  %27 = extractvalue { ptr, i32 } %26, 0
  %28 = extractvalue { ptr, i32 } %26, 1
  store ptr %27, ptr %2, align 8
  %29 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %28, ptr %29, align 8
  br label %bb19

bb13:                                             ; preds = %bb4, %bb11
  ret void

bb14:                                             ; preds = %bb16, %bb17
; invoke core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&(std::ffi::os_str::OsString,std::ffi::os_str::OsString),alloc::string::String,(),<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr744drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$C$alloc..string..String$C$$LP$$RP$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17hada194198debcdf1E"(ptr align 8 %f) #28
          to label %bb19 unwind label %terminate

bb16:                                             ; preds = %bb17
  br label %bb14

terminate:                                        ; preds = %bb14
  %30 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %31 = extractvalue { ptr, i32 } %30, 0
  %32 = extractvalue { ptr, i32 } %30, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb15:                                             ; preds = %bb18, %bb19
  %33 = load ptr, ptr %2, align 8, !noundef !3
  %34 = getelementptr inbounds i8, ptr %2, i64 8
  %35 = load i32, ptr %34, align 8, !noundef !3
  %36 = insertvalue { ptr, i32 } poison, ptr %33, 0
  %37 = insertvalue { ptr, i32 } %36, i32 %35, 1
  resume { ptr, i32 } %37

bb18:                                             ; preds = %bb19
  br label %bb15
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4fold17h9b8f93cac941e4b8E"(ptr %0, ptr %1, ptr align 8 %f) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_38 = alloca i8, align 1
  %_37 = alloca i8, align 1
  %self1 = alloca ptr, align 8
  %_25 = alloca ptr, align 8
  %len = alloca i64, align 8
  %i = alloca i64, align 8
  %end = alloca ptr, align 8
  %_4 = alloca i8, align 1
  %self = alloca %"core::slice::iter::Iter<'_, std::ffi::os_str::OsString>", align 8
  store ptr %0, ptr %self, align 8
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  store ptr %1, ptr %3, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self2 = getelementptr inbounds i8, ptr %self, i64 8
  %4 = load ptr, ptr %self2, align 8, !nonnull !3, !noundef !3
  store ptr %4, ptr %end, align 8
  %self3 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %self4 = load ptr, ptr %end, align 8, !nonnull !3, !noundef !3
  %5 = icmp eq ptr %self3, %self4
  %6 = zext i1 %5 to i8
  store i8 %6, ptr %_4, align 1
  br label %bb3

bb1:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self, i64 8
  %self5 = load ptr, ptr %7, align 8, !noundef !3
  %len6 = ptrtoint ptr %self5 to i64
  %8 = icmp eq i64 %len6, 0
  %9 = zext i1 %8 to i8
  store i8 %9, ptr %_4, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %10 = load i8, ptr %_4, align 1, !range !10, !noundef !3
  %11 = trunc i8 %10 to i1
  br i1 %11, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  store i8 0, ptr %_38, align 1
  store i8 1, ptr %_37, align 1
  store i64 0, ptr %i, align 8
  br i1 false, label %bb6, label %bb7

bb4:                                              ; preds = %bb3
  store i8 0, ptr %_38, align 1
; invoke core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&std::ffi::os_str::OsString,alloc::string::String,(),<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr670drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$std..ffi..os_str..OsString$C$alloc..string..String$C$$LP$$RP$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5e4ba4094b6a1d50E"(ptr align 8 %f)
          to label %bb13 unwind label %cleanup13

bb7:                                              ; preds = %bb5
  %self7 = getelementptr inbounds i8, ptr %self, i64 8
  %end8 = load ptr, ptr %self7, align 8, !nonnull !3, !noundef !3
  %subtracted = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  br i1 true, label %bb21, label %bb23

bb6:                                              ; preds = %bb5
  %12 = getelementptr inbounds i8, ptr %self, i64 8
  %self9 = load ptr, ptr %12, align 8, !noundef !3
  %len10 = ptrtoint ptr %self9 to i64
  store i64 %len10, ptr %len, align 8
  br label %bb8

bb23:                                             ; preds = %bb21, %bb7
; invoke core::panicking::panic
  invoke void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_768f4da2d83915fa9ce0d03164202475) #27
          to label %unreachable unwind label %cleanup

bb21:                                             ; preds = %bb7
  br i1 true, label %bb22, label %bb23

bb22:                                             ; preds = %bb21
  %13 = ptrtoint ptr %end8 to i64
  %14 = ptrtoint ptr %subtracted to i64
  %15 = sub nuw i64 %13, %14
  %16 = udiv exact i64 %15, 24
  store i64 %16, ptr %len, align 8
  br label %bb8

bb17:                                             ; preds = %cleanup
  %17 = load i8, ptr %_37, align 1, !range !10, !noundef !3
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb16, label %bb14

cleanup:                                          ; preds = %bb9, %bb23
  %19 = landingpad { ptr, i32 }
          cleanup
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
  store ptr %20, ptr %2, align 8
  %22 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %21, ptr %22, align 8
  br label %bb17

unreachable:                                      ; preds = %bb23
  unreachable

bb8:                                              ; preds = %bb6, %bb22
  br label %bb9

bb9:                                              ; preds = %bb12, %bb8
  store i8 0, ptr %_37, align 1
  %self11 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %count = load i64, ptr %i, align 8, !noundef !3
  %_55 = getelementptr inbounds %"std::ffi::os_str::OsString", ptr %self11, i64 %count
  store ptr %_55, ptr %self1, align 8
  store ptr %_55, ptr %_25, align 8
  %23 = load ptr, ptr %_25, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::iter::adapters::map::map_fold::{{closure}}
  invoke void @"_ZN4core4iter8adapters3map8map_fold28_$u7b$$u7b$closure$u7d$$u7d$17hed146b6de3032fafE"(ptr align 8 %f, ptr align 8 %23)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  %self12 = load i64, ptr %i, align 8, !noundef !3
  %_32 = add nuw i64 %self12, 1
  store i64 %_32, ptr %i, align 8
  %_35 = load i64, ptr %i, align 8, !noundef !3
  %_36 = load i64, ptr %len, align 8, !noundef !3
  %_34 = icmp eq i64 %_35, %_36
  br i1 %_34, label %bb11, label %bb12

bb12:                                             ; preds = %bb10
  br label %bb9

bb11:                                             ; preds = %bb10
; invoke core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&std::ffi::os_str::OsString,alloc::string::String,(),<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr670drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$std..ffi..os_str..OsString$C$alloc..string..String$C$$LP$$RP$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5e4ba4094b6a1d50E"(ptr align 8 %f)
          to label %bb13 unwind label %cleanup13

bb19:                                             ; preds = %bb14, %cleanup13
  %24 = load i8, ptr %_38, align 1, !range !10, !noundef !3
  %25 = trunc i8 %24 to i1
  br i1 %25, label %bb18, label %bb15

cleanup13:                                        ; preds = %bb4, %bb11
  %26 = landingpad { ptr, i32 }
          cleanup
  %27 = extractvalue { ptr, i32 } %26, 0
  %28 = extractvalue { ptr, i32 } %26, 1
  store ptr %27, ptr %2, align 8
  %29 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %28, ptr %29, align 8
  br label %bb19

bb13:                                             ; preds = %bb4, %bb11
  ret void

bb14:                                             ; preds = %bb16, %bb17
; invoke core::ptr::drop_in_place<core::iter::adapters::map::map_fold<&std::ffi::os_str::OsString,alloc::string::String,(),<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}},core::iter::traits::iterator::Iterator::for_each::call<alloc::string::String,alloc::vec::Vec<alloc::string::String>::extend_trusted<core::iter::adapters::map::Map<core::slice::iter::Iter<std::ffi::os_str::OsString>,<pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}>>::{{closure}}>::{{closure}}>::{{closure}}>
  invoke void @"_ZN4core3ptr670drop_in_place$LT$core..iter..adapters..map..map_fold$LT$$RF$std..ffi..os_str..OsString$C$alloc..string..String$C$$LP$$RP$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$C$core..iter..traits..iterator..Iterator..for_each..call$LT$alloc..string..String$C$alloc..vec..Vec$LT$alloc..string..String$GT$..extend_trusted$LT$core..iter..adapters..map..Map$LT$core..slice..iter..Iter$LT$std..ffi..os_str..OsString$GT$$C$$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$..fmt..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h5e4ba4094b6a1d50E"(ptr align 8 %f) #28
          to label %bb19 unwind label %terminate

bb16:                                             ; preds = %bb17
  br label %bb14

terminate:                                        ; preds = %bb14
  %30 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %31 = extractvalue { ptr, i32 } %30, 0
  %32 = extractvalue { ptr, i32 } %30, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb15:                                             ; preds = %bb18, %bb19
  %33 = load ptr, ptr %2, align 8, !noundef !3
  %34 = getelementptr inbounds i8, ptr %2, i64 8
  %35 = load i32, ptr %34, align 8, !noundef !3
  %36 = insertvalue { ptr, i32 } poison, ptr %33, 0
  %37 = insertvalue { ptr, i32 } %36, i32 %35, 1
  resume { ptr, i32 } %37

bb18:                                             ; preds = %bb19
  br label %bb15
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h110c6469a9eca750E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_28 = alloca ptr, align 8
  %old = alloca ptr, align 8
  %end = alloca ptr, align 8
  %_2 = alloca i8, align 1
  %_0 = alloca ptr, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %0 = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  store ptr %0, ptr %end, align 8
  %self2 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %self3 = load ptr, ptr %end, align 8, !nonnull !3, !noundef !3
  %1 = icmp eq ptr %self2, %self3
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_2, align 1
  br label %bb3

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self4 = load ptr, ptr %3, align 8, !noundef !3
  %len = ptrtoint ptr %self4 to i64
  %4 = icmp eq i64 %len, 0
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %6 = load i8, ptr %_2, align 1, !range !10, !noundef !3
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %8 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store ptr %8, ptr %old, align 8
  br i1 false, label %bb7, label %bb8

bb4:                                              ; preds = %bb3
  store ptr null, ptr %_0, align 8
  br label %bb6

bb8:                                              ; preds = %bb5
  %self5 = getelementptr inbounds i8, ptr %self, i64 8
  %self6 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_30 = getelementptr inbounds %"std::path::PathBuf", ptr %self6, i64 1
  store ptr %_30, ptr %_28, align 8
  %9 = load ptr, ptr %_28, align 8, !nonnull !3, !noundef !3
  store ptr %9, ptr %self, align 8
  br label %bb9

bb7:                                              ; preds = %bb5
  %self7 = getelementptr inbounds i8, ptr %self, i64 8
  %self8 = load i64, ptr %self7, align 8, !noundef !3
  %_24 = sub nuw i64 %self8, 1
  store i64 %_24, ptr %self7, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %self9 = load ptr, ptr %old, align 8, !nonnull !3, !noundef !3
  store ptr %self9, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb9
  %10 = load ptr, ptr %_0, align 8, !align !5, !noundef !3
  ret ptr %10
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h69318d5203c4c54aE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_28 = alloca ptr, align 8
  %old = alloca ptr, align 8
  %end = alloca ptr, align 8
  %_2 = alloca i8, align 1
  %_0 = alloca ptr, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %0 = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  store ptr %0, ptr %end, align 8
  %self2 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %self3 = load ptr, ptr %end, align 8, !nonnull !3, !noundef !3
  %1 = icmp eq ptr %self2, %self3
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_2, align 1
  br label %bb3

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self4 = load ptr, ptr %3, align 8, !noundef !3
  %len = ptrtoint ptr %self4 to i64
  %4 = icmp eq i64 %len, 0
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %6 = load i8, ptr %_2, align 1, !range !10, !noundef !3
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %8 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store ptr %8, ptr %old, align 8
  br i1 false, label %bb7, label %bb8

bb4:                                              ; preds = %bb3
  store ptr null, ptr %_0, align 8
  br label %bb6

bb8:                                              ; preds = %bb5
  %self5 = getelementptr inbounds i8, ptr %self, i64 8
  %self6 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_30 = getelementptr inbounds %"std::ffi::os_str::OsString", ptr %self6, i64 1
  store ptr %_30, ptr %_28, align 8
  %9 = load ptr, ptr %_28, align 8, !nonnull !3, !noundef !3
  store ptr %9, ptr %self, align 8
  br label %bb9

bb7:                                              ; preds = %bb5
  %self7 = getelementptr inbounds i8, ptr %self, i64 8
  %self8 = load i64, ptr %self7, align 8, !noundef !3
  %_24 = sub nuw i64 %self8, 1
  store i64 %_24, ptr %self7, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %self9 = load ptr, ptr %old, align 8, !nonnull !3, !noundef !3
  store ptr %self9, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb9
  %10 = load ptr, ptr %_0, align 8, !align !5, !noundef !3
  ret ptr %10
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8cba68a285d0a8e1E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_28 = alloca ptr, align 8
  %old = alloca ptr, align 8
  %end = alloca ptr, align 8
  %_2 = alloca i8, align 1
  %_0 = alloca ptr, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %0 = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  store ptr %0, ptr %end, align 8
  %self2 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %self3 = load ptr, ptr %end, align 8, !nonnull !3, !noundef !3
  %1 = icmp eq ptr %self2, %self3
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_2, align 1
  br label %bb3

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self4 = load ptr, ptr %3, align 8, !noundef !3
  %len = ptrtoint ptr %self4 to i64
  %4 = icmp eq i64 %len, 0
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %6 = load i8, ptr %_2, align 1, !range !10, !noundef !3
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %8 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store ptr %8, ptr %old, align 8
  br i1 false, label %bb7, label %bb8

bb4:                                              ; preds = %bb3
  store ptr null, ptr %_0, align 8
  br label %bb6

bb8:                                              ; preds = %bb5
  %self5 = getelementptr inbounds i8, ptr %self, i64 8
  %self6 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_30 = getelementptr inbounds %"alloc::string::String", ptr %self6, i64 1
  store ptr %_30, ptr %_28, align 8
  %9 = load ptr, ptr %_28, align 8, !nonnull !3, !noundef !3
  store ptr %9, ptr %self, align 8
  br label %bb9

bb7:                                              ; preds = %bb5
  %self7 = getelementptr inbounds i8, ptr %self, i64 8
  %self8 = load i64, ptr %self7, align 8, !noundef !3
  %_24 = sub nuw i64 %self8, 1
  store i64 %_24, ptr %self7, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %self9 = load ptr, ptr %old, align 8, !nonnull !3, !noundef !3
  store ptr %self9, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb9
  %10 = load ptr, ptr %_0, align 8, !align !5, !noundef !3
  ret ptr %10
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9cd2dfb86b854212E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_28 = alloca ptr, align 8
  %old = alloca ptr, align 8
  %end = alloca ptr, align 8
  %_2 = alloca i8, align 1
  %_0 = alloca ptr, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %0 = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  store ptr %0, ptr %end, align 8
  %self2 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %self3 = load ptr, ptr %end, align 8, !nonnull !3, !noundef !3
  %1 = icmp eq ptr %self2, %self3
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_2, align 1
  br label %bb3

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self4 = load ptr, ptr %3, align 8, !noundef !3
  %len = ptrtoint ptr %self4 to i64
  %4 = icmp eq i64 %len, 0
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %6 = load i8, ptr %_2, align 1, !range !10, !noundef !3
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %8 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store ptr %8, ptr %old, align 8
  br i1 false, label %bb7, label %bb8

bb4:                                              ; preds = %bb3
  store ptr null, ptr %_0, align 8
  br label %bb6

bb8:                                              ; preds = %bb5
  %self5 = getelementptr inbounds i8, ptr %self, i64 8
  %self6 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_30 = getelementptr inbounds { ptr, i64 }, ptr %self6, i64 1
  store ptr %_30, ptr %_28, align 8
  %9 = load ptr, ptr %_28, align 8, !nonnull !3, !noundef !3
  store ptr %9, ptr %self, align 8
  br label %bb9

bb7:                                              ; preds = %bb5
  %self7 = getelementptr inbounds i8, ptr %self, i64 8
  %self8 = load i64, ptr %self7, align 8, !noundef !3
  %_24 = sub nuw i64 %self8, 1
  store i64 %_24, ptr %self7, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %self9 = load ptr, ptr %old, align 8, !nonnull !3, !noundef !3
  store ptr %self9, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb9
  %10 = load ptr, ptr %_0, align 8, !align !5, !noundef !3
  ret ptr %10
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcae68254e9640bb1E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_28 = alloca ptr, align 8
  %old = alloca ptr, align 8
  %end = alloca ptr, align 8
  %_2 = alloca i8, align 1
  %_0 = alloca ptr, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %0 = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  store ptr %0, ptr %end, align 8
  %self2 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %self3 = load ptr, ptr %end, align 8, !nonnull !3, !noundef !3
  %1 = icmp eq ptr %self2, %self3
  %2 = zext i1 %1 to i8
  store i8 %2, ptr %_2, align 1
  br label %bb3

bb1:                                              ; preds = %start
  %3 = getelementptr inbounds i8, ptr %self, i64 8
  %self4 = load ptr, ptr %3, align 8, !noundef !3
  %len = ptrtoint ptr %self4 to i64
  %4 = icmp eq i64 %len, 0
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %_2, align 1
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %6 = load i8, ptr %_2, align 1, !range !10, !noundef !3
  %7 = trunc i8 %6 to i1
  br i1 %7, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %8 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store ptr %8, ptr %old, align 8
  br i1 false, label %bb7, label %bb8

bb4:                                              ; preds = %bb3
  store ptr null, ptr %_0, align 8
  br label %bb6

bb8:                                              ; preds = %bb5
  %self5 = getelementptr inbounds i8, ptr %self, i64 8
  %self6 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_30 = getelementptr inbounds i8, ptr %self6, i64 1
  store ptr %_30, ptr %_28, align 8
  %9 = load ptr, ptr %_28, align 8, !nonnull !3, !noundef !3
  store ptr %9, ptr %self, align 8
  br label %bb9

bb7:                                              ; preds = %bb5
  %self7 = getelementptr inbounds i8, ptr %self, i64 8
  %self8 = load i64, ptr %self7, align 8, !noundef !3
  %_24 = sub nuw i64 %self8, 1
  store i64 %_24, ptr %self7, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %self9 = load ptr, ptr %old, align 8, !nonnull !3, !noundef !3
  store ptr %self9, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb9
  %10 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  ret ptr %10
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h3a2bc17cfb1d663bE"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_11 = alloca %"core::option::Option<usize>", align 8
  %exact = alloca i64, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %end = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  %subtracted = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  br i1 true, label %bb5, label %bb7

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self2 = load ptr, ptr %0, align 8, !noundef !3
  %len = ptrtoint ptr %self2 to i64
  store i64 %len, ptr %exact, align 8
  br label %bb3

bb7:                                              ; preds = %bb5, %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_768f4da2d83915fa9ce0d03164202475) #27
  unreachable

bb5:                                              ; preds = %bb2
  br i1 true, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %1 = ptrtoint ptr %end to i64
  %2 = ptrtoint ptr %subtracted to i64
  %3 = sub nuw i64 %1, %2
  %4 = udiv exact i64 %3, 16
  store i64 %4, ptr %exact, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb6
  %_10 = load i64, ptr %exact, align 8, !noundef !3
  %_12 = load i64, ptr %exact, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %_12, ptr %5, align 8
  store i64 1, ptr %_11, align 8
  store i64 %_10, ptr %_0, align 8
  %6 = load i64, ptr %_11, align 8, !range !9, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_11, i64 8
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_0, i32 0, i32 1
  store i64 %6, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  store i64 %8, ptr %10, align 8
  ret void
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17h77635ce11fcebab3E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_11 = alloca %"core::option::Option<usize>", align 8
  %exact = alloca i64, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %end = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  %subtracted = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  br i1 true, label %bb5, label %bb7

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self2 = load ptr, ptr %0, align 8, !noundef !3
  %len = ptrtoint ptr %self2 to i64
  store i64 %len, ptr %exact, align 8
  br label %bb3

bb7:                                              ; preds = %bb5, %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_768f4da2d83915fa9ce0d03164202475) #27
  unreachable

bb5:                                              ; preds = %bb2
  br i1 true, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %1 = ptrtoint ptr %end to i64
  %2 = ptrtoint ptr %subtracted to i64
  %3 = sub nuw i64 %1, %2
  %4 = udiv exact i64 %3, 24
  store i64 %4, ptr %exact, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb6
  %_10 = load i64, ptr %exact, align 8, !noundef !3
  %_12 = load i64, ptr %exact, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %_12, ptr %5, align 8
  store i64 1, ptr %_11, align 8
  store i64 %_10, ptr %_0, align 8
  %6 = load i64, ptr %_11, align 8, !range !9, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_11, i64 8
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_0, i32 0, i32 1
  store i64 %6, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  store i64 %8, ptr %10, align 8
  ret void
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hb90bafba762f574eE"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_11 = alloca %"core::option::Option<usize>", align 8
  %exact = alloca i64, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %end = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  %subtracted = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  br i1 true, label %bb5, label %bb7

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self2 = load ptr, ptr %0, align 8, !noundef !3
  %len = ptrtoint ptr %self2 to i64
  store i64 %len, ptr %exact, align 8
  br label %bb3

bb7:                                              ; preds = %bb5, %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_768f4da2d83915fa9ce0d03164202475) #27
  unreachable

bb5:                                              ; preds = %bb2
  br i1 true, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %1 = ptrtoint ptr %end to i64
  %2 = ptrtoint ptr %subtracted to i64
  %3 = sub nuw i64 %1, %2
  %4 = udiv exact i64 %3, 1
  store i64 %4, ptr %exact, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb6
  %_10 = load i64, ptr %exact, align 8, !noundef !3
  %_12 = load i64, ptr %exact, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %_12, ptr %5, align 8
  store i64 1, ptr %_11, align 8
  store i64 %_10, ptr %_0, align 8
  %6 = load i64, ptr %_11, align 8, !range !9, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_11, i64 8
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_0, i32 0, i32 1
  store i64 %6, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  store i64 %8, ptr %10, align 8
  ret void
}

; <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::size_hint
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$9size_hint17hd1cd2cf0edbd16e0E"(ptr sret({ i64, %"core::option::Option<usize>" }) align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_11 = alloca %"core::option::Option<usize>", align 8
  %exact = alloca i64, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self1 = getelementptr inbounds i8, ptr %self, i64 8
  %end = load ptr, ptr %self1, align 8, !nonnull !3, !noundef !3
  %subtracted = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  br i1 true, label %bb5, label %bb7

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self2 = load ptr, ptr %0, align 8, !noundef !3
  %len = ptrtoint ptr %self2 to i64
  store i64 %len, ptr %exact, align 8
  br label %bb3

bb7:                                              ; preds = %bb5, %bb2
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @alloc_ec595fc0e82ef92fc59bd74f68296eae, i64 73, ptr align 8 @alloc_768f4da2d83915fa9ce0d03164202475) #27
  unreachable

bb5:                                              ; preds = %bb2
  br i1 true, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %1 = ptrtoint ptr %end to i64
  %2 = ptrtoint ptr %subtracted to i64
  %3 = sub nuw i64 %1, %2
  %4 = udiv exact i64 %3, 48
  store i64 %4, ptr %exact, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb6
  %_10 = load i64, ptr %exact, align 8, !noundef !3
  %_12 = load i64, ptr %exact, align 8, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %_12, ptr %5, align 8
  store i64 1, ptr %_11, align 8
  store i64 %_10, ptr %_0, align 8
  %6 = load i64, ptr %_11, align 8, !range !9, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_11, i64 8
  %8 = load i64, ptr %7, align 8
  %9 = getelementptr inbounds { i64, %"core::option::Option<usize>" }, ptr %_0, i32 0, i32 1
  store i64 %6, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  store i64 %8, ptr %10, align 8
  ret void
}

; <hashbrown::raw::RawIter<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: nonlazybind uwtable
define ptr @"_ZN91_$LT$hashbrown..raw..RawIter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb98725b58d820163E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_0 = alloca ptr, align 8
  %0 = getelementptr inbounds %"hashbrown::raw::RawIter<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %self, i32 0, i32 1
  %_2 = load i64, ptr %0, align 8, !noundef !3
  %1 = icmp eq i64 %_2, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb4

bb2:                                              ; preds = %start
; call hashbrown::raw::RawIterRange<T>::next_impl
  %nxt = call ptr @"_ZN9hashbrown3raw21RawIterRange$LT$T$GT$9next_impl17hc8632cd1be0c66e1E"(ptr align 8 %self)
  %2 = getelementptr inbounds %"hashbrown::raw::RawIter<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %self, i32 0, i32 1
  %3 = getelementptr inbounds %"hashbrown::raw::RawIter<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %self, i32 0, i32 1
  %4 = load i64, ptr %3, align 8, !noundef !3
  %5 = sub i64 %4, 1
  store i64 %5, ptr %2, align 8
  store ptr %nxt, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb1
  %6 = load ptr, ptr %_0, align 8, !noundef !3
  ret ptr %6
}

; <std::panicking::begin_panic::Payload<A> as core::panic::PanicPayload>::get
; Function Attrs: nonlazybind uwtable
define { ptr, ptr } @"_ZN91_$LT$std..panicking..begin_panic..Payload$LT$A$GT$$u20$as$u20$core..panic..PanicPayload$GT$3get17h27df7c34460fc30fE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = load ptr, ptr %self, align 8, !noundef !3
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_2 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb1, label %bb3

bb1:                                              ; preds = %start
; call std::process::abort
  call void @_ZN3std7process5abort17hc349207d9ba9ad71E() #27
  unreachable

bb3:                                              ; preds = %start
  %4 = insertvalue { ptr, ptr } poison, ptr %self, 0
  %5 = insertvalue { ptr, ptr } %4, ptr @vtable.h, 1
  ret { ptr, ptr } %5

bb2:                                              ; No predecessors!
  unreachable
}

; <std::panicking::begin_panic::Payload<A> as core::panic::PanicPayload>::take_box
; Function Attrs: nonlazybind uwtable
define { ptr, ptr } @"_ZN91_$LT$std..panicking..begin_panic..Payload$LT$A$GT$$u20$as$u20$core..panic..PanicPayload$GT$8take_box17h52fb4b684d31f22eE"(ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %leaked = alloca %"core::ptr::non_null::NonNull<dyn core::any::Any + core::marker::Send>", align 8
  %_19 = alloca %"core::mem::manually_drop::ManuallyDrop<alloc::boxed::Box<dyn core::any::Any + core::marker::Send>>", align 8
  %b = alloca %"alloc::boxed::Box<dyn core::any::Any + core::marker::Send>", align 8
  %src = alloca %"core::option::Option<&str>", align 8
  %result = alloca %"core::option::Option<&str>", align 8
  store ptr null, ptr %src, align 8
  %1 = load ptr, ptr %self, align 8, !align !4, !noundef !3
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %3 = load i64, ptr %2, align 8
  store ptr %1, ptr %result, align 8
  %4 = getelementptr inbounds i8, ptr %result, i64 8
  store i64 %3, ptr %4, align 8
  %5 = load ptr, ptr %src, align 8, !align !4, !noundef !3
  %6 = getelementptr inbounds i8, ptr %src, i64 8
  %7 = load i64, ptr %6, align 8
  store ptr %5, ptr %self, align 8
  %8 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %7, ptr %8, align 8
  %9 = load ptr, ptr %result, align 8, !noundef !3
  %10 = ptrtoint ptr %9 to i64
  %11 = icmp eq i64 %10, 0
  %_4 = select i1 %11, i64 0, i64 1
  %12 = icmp eq i64 %_4, 0
  br i1 %12, label %bb1, label %bb3

bb1:                                              ; preds = %start
; call std::process::abort
  call void @_ZN3std7process5abort17hc349207d9ba9ad71E() #27
  unreachable

bb3:                                              ; preds = %start
  %a.0 = load ptr, ptr %result, align 8, !nonnull !3, !align !4, !noundef !3
  %13 = getelementptr inbounds i8, ptr %result, i64 8
  %a.1 = load i64, ptr %13, align 8, !noundef !3
; invoke alloc::alloc::exchange_malloc
  %_4.i = invoke ptr @_ZN5alloc5alloc15exchange_malloc17hd3112a05f766f5e6E(i64 16, i64 8)
          to label %"_ZN5alloc5boxed12Box$LT$T$GT$3new17hb27757f289e19795E.exit" unwind label %cleanup.i

cleanup.i:                                        ; preds = %bb3
  %14 = landingpad { ptr, i32 }
          cleanup
  %15 = extractvalue { ptr, i32 } %14, 0
  %16 = extractvalue { ptr, i32 } %14, 1
  store ptr %15, ptr %0, align 8
  %17 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %16, ptr %17, align 8
  %18 = load ptr, ptr %0, align 8, !noundef !3
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  %20 = load i32, ptr %19, align 8, !noundef !3
  %21 = insertvalue { ptr, i32 } poison, ptr %18, 0
  %22 = insertvalue { ptr, i32 } %21, i32 %20, 1
  resume { ptr, i32 } %22

"_ZN5alloc5boxed12Box$LT$T$GT$3new17hb27757f289e19795E.exit": ; preds = %bb3
  store ptr %a.0, ptr %_4.i, align 8
  %23 = getelementptr inbounds i8, ptr %_4.i, i64 8
  store i64 %a.1, ptr %23, align 8
  store ptr %_4.i, ptr %b, align 8
  %24 = getelementptr inbounds i8, ptr %b, i64 8
  store ptr @vtable.h, ptr %24, align 8
  %src1 = getelementptr inbounds i8, ptr %b, i64 16
  %b.0 = load ptr, ptr %b, align 8, !nonnull !3, !align !4, !noundef !3
  %25 = getelementptr inbounds i8, ptr %b, i64 8
  %b.1 = load ptr, ptr %25, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %b.0, ptr %_19, align 8
  %26 = getelementptr inbounds i8, ptr %_19, i64 8
  store ptr %b.1, ptr %26, align 8
  %self.0 = load ptr, ptr %_19, align 8, !nonnull !3, !noundef !3
  %27 = getelementptr inbounds i8, ptr %_19, i64 8
  %self.1 = load ptr, ptr %27, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %self.0, ptr %leaked, align 8
  %28 = getelementptr inbounds i8, ptr %leaked, i64 8
  store ptr %self.1, ptr %28, align 8
  %29 = insertvalue { ptr, ptr } poison, ptr %self.0, 0
  %30 = insertvalue { ptr, ptr } %29, ptr %self.1, 1
  ret { ptr, ptr } %30

bb2:                                              ; No predecessors!
  unreachable
}

; <core::str::LinesMap as core::ops::function::FnMut<(&str,)>>::call_mut
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN92_$LT$core..str..LinesMap$u20$as$u20$core..ops..function..FnMut$LT$$LP$$RF$str$C$$RP$$GT$$GT$8call_mut17h7d4d345c85004250E"(ptr align 1 %self, ptr align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_5 = alloca { { ptr, i64 } }, align 8
  %_2 = alloca { { ptr, i64 } }, align 8
  store ptr %0, ptr %_2, align 8
  %2 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %1, ptr %2, align 8
  %line.0 = load ptr, ptr %_2, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_2, i64 8
  %line.1 = load i64, ptr %3, align 8, !noundef !3
  store ptr %line.0, ptr %_5, align 8
  %4 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %line.1, ptr %4, align 8
  %5 = load ptr, ptr %_5, align 8, !nonnull !3, !align !4, !noundef !3
  %6 = getelementptr inbounds i8, ptr %_5, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
; call <core::str::LinesMap as core::ops::function::Fn<(&str,)>>::call
  %8 = call { ptr, i64 } @"_ZN89_$LT$core..str..LinesMap$u20$as$u20$core..ops..function..Fn$LT$$LP$$RF$str$C$$RP$$GT$$GT$4call17hdf5111c82ec5c1bcE"(ptr align 1 %self, ptr align 1 %5, i64 %7)
  %_0.0 = extractvalue { ptr, i64 } %8, 0
  %_0.1 = extractvalue { ptr, i64 } %8, 1
  %9 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %10 = insertvalue { ptr, i64 } %9, i64 %_0.1, 1
  ret { ptr, i64 } %10
}

; <std::path::PathBuf as core::convert::From<std::ffi::os_str::OsString>>::from
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN92_$LT$std..path..PathBuf$u20$as$u20$core..convert..From$LT$std..ffi..os_str..OsString$GT$$GT$4from17h376abd3f6a35428eE"(ptr sret(%"std::path::PathBuf") align 8 %_0, ptr align 8 %s) unnamed_addr #0 {
start:
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %s, i64 24, i1 false)
  ret void
}

; <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN93_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$T$GT$$GT$6extend17h6188ccffea00bf92E"(ptr align 8 %self, ptr %iter.0, ptr %iter.1) unnamed_addr #0 {
start:
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %0 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h715c49fc680ca833E"(ptr %iter.0, ptr %iter.1)
  %_3.0 = extractvalue { ptr, ptr } %0, 0
  %_3.1 = extractvalue { ptr, ptr } %0, 1
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17he036c8d36319fb6bE"(ptr align 8 %self, ptr %_3.0, ptr %_3.1)
  ret void
}

; <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN93_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$T$GT$$GT$6extend17he5399b5ee912d23cE"(ptr align 8 %self, ptr %iter.0, ptr %iter.1) unnamed_addr #0 {
start:
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %0 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hce236b4cd3f73ffeE"(ptr %iter.0, ptr %iter.1)
  %_3.0 = extractvalue { ptr, ptr } %0, 0
  %_3.1 = extractvalue { ptr, ptr } %0, 1
; call <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
  call void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17he5d469d2769a9fb1E"(ptr align 8 %self, ptr %_3.0, ptr %_3.1)
  ret void
}

; <&alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
; Function Attrs: nonlazybind uwtable
define { ptr, ptr } @"_ZN94_$LT$$RF$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb9b69899005e7b4dE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_17 = alloca ptr, align 8
  %end_or_len = alloca ptr, align 8
  %_11 = alloca %"core::ptr::metadata::PtrComponents<[std::ffi::os_str::OsString]>", align 8
  %_10 = alloca %"core::ptr::metadata::PtrRepr<[std::ffi::os_str::OsString]>", align 8
  %_0 = alloca %"core::slice::iter::Iter<'_, std::ffi::os_str::OsString>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<std::ffi::os_str::OsString>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_11, align 8
  %2 = getelementptr inbounds i8, ptr %_11, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_11, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_11, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_10, align 8
  %6 = getelementptr inbounds i8, ptr %_10, i64 8
  store i64 %5, ptr %6, align 8
  %self.0 = load ptr, ptr %_10, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_10, i64 8
  %self.1 = load i64, ptr %7, align 8, !noundef !3
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %8 = getelementptr inbounds %"std::ffi::os_str::OsString", ptr %self.0, i64 %self.1
  store ptr %8, ptr %end_or_len, align 8
  br label %bb3

bb1:                                              ; preds = %start
  %9 = inttoptr i64 %self.1 to ptr
  store ptr %9, ptr %end_or_len, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  store ptr %self.0, ptr %_17, align 8
  %_19 = load ptr, ptr %end_or_len, align 8, !noundef !3
  %10 = load ptr, ptr %_17, align 8, !nonnull !3, !noundef !3
  store ptr %10, ptr %_0, align 8
  %11 = getelementptr inbounds i8, ptr %_0, i64 8
  store ptr %_19, ptr %11, align 8
  %12 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  %13 = getelementptr inbounds i8, ptr %_0, i64 8
  %14 = load ptr, ptr %13, align 8, !noundef !3
  %15 = insertvalue { ptr, ptr } poison, ptr %12, 0
  %16 = insertvalue { ptr, ptr } %15, ptr %14, 1
  ret { ptr, ptr } %16
}

; <core::slice::iter::Windows<T> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN94_$LT$core..slice..iter..Windows$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h2a20eba02417e047E"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_31 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_30 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_24 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %_16 = alloca %"core::ops::range::Range<usize>", align 8
  %ret = alloca %"core::option::Option<&[u8]>", align 8
  %_0 = alloca %"core::option::Option<&[u8]>", align 8
  %0 = getelementptr inbounds %"core::slice::iter::Windows<'_, u8>", ptr %self, i32 0, i32 1
  %self1 = load i64, ptr %0, align 8, !range !24, !noundef !3
  %_14 = icmp ne i64 %self1, 0
  call void @llvm.assume(i1 %_14)
  %_11.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %1 = getelementptr inbounds i8, ptr %self, i64 8
  %_11.1 = load i64, ptr %1, align 8, !noundef !3
  %_2 = icmp ugt i64 %self1, %_11.1
  br i1 %_2, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self.0 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  %self.1 = load i64, ptr %2, align 8, !noundef !3
  %3 = getelementptr inbounds %"core::slice::iter::Windows<'_, u8>", ptr %self, i32 0, i32 1
  %self2 = load i64, ptr %3, align 8, !range !24, !noundef !3
  %_15 = icmp ne i64 %self2, 0
  call void @llvm.assume(i1 %_15)
  store i64 0, ptr %_16, align 8
  %4 = getelementptr inbounds i8, ptr %_16, i64 8
  store i64 %self2, ptr %4, align 8
  %5 = load i64, ptr %_16, align 8, !noundef !3
  %6 = getelementptr inbounds i8, ptr %_16, i64 8
  %7 = load i64, ptr %6, align 8, !noundef !3
; call <core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index
  %8 = call { ptr, i64 } @"_ZN106_$LT$core..ops..range..Range$LT$usize$GT$$u20$as$u20$core..slice..index..SliceIndex$LT$$u5b$T$u5d$$GT$$GT$5index17h2d503f3440bc826bE"(i64 %5, i64 %7, ptr align 1 %self.0, i64 %self.1, ptr align 8 @alloc_5708c263f989adfc7221fdf77b018441)
  %_7.0 = extractvalue { ptr, i64 } %8, 0
  %_7.1 = extractvalue { ptr, i64 } %8, 1
  store ptr %_7.0, ptr %ret, align 8
  %9 = getelementptr inbounds i8, ptr %ret, i64 8
  store i64 %_7.1, ptr %9, align 8
  %self.03 = load ptr, ptr %self, align 8, !nonnull !3, !align !4, !noundef !3
  %10 = getelementptr inbounds i8, ptr %self, i64 8
  %self.14 = load i64, ptr %10, align 8, !noundef !3
  %_17 = icmp ugt i64 1, %self.14
  br i1 %_17, label %bb5, label %bb6

bb1:                                              ; preds = %start
  %11 = load ptr, ptr @1, align 8, !align !4, !noundef !3
  %12 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store ptr %11, ptr %_0, align 8
  %13 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %12, ptr %13, align 8
  br label %bb3

bb6:                                              ; preds = %bb2
  store ptr %self.03, ptr %_24, align 8
  %14 = getelementptr inbounds i8, ptr %_24, i64 8
  store i64 %self.14, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %_24, i64 8
  %self5 = load i64, ptr %15, align 8, !noundef !3
  %new_len = sub nuw i64 %self5, 1
  %data = getelementptr inbounds i8, ptr %self.03, i64 1
  store ptr %data, ptr %_31, align 8
  %16 = getelementptr inbounds i8, ptr %_31, i64 8
  store i64 %new_len, ptr %16, align 8
  %17 = load ptr, ptr %_31, align 8, !noundef !3
  %18 = getelementptr inbounds i8, ptr %_31, i64 8
  %19 = load i64, ptr %18, align 8, !noundef !3
  store ptr %17, ptr %_30, align 8
  %20 = getelementptr inbounds i8, ptr %_30, i64 8
  store i64 %19, ptr %20, align 8
  %_21.0 = load ptr, ptr %_30, align 8, !noundef !3
  %21 = getelementptr inbounds i8, ptr %_30, i64 8
  %_21.1 = load i64, ptr %21, align 8, !noundef !3
  store ptr %_21.0, ptr %self, align 8
  %22 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %_21.1, ptr %22, align 8
  %23 = load ptr, ptr %ret, align 8, !align !4, !noundef !3
  %24 = getelementptr inbounds i8, ptr %ret, i64 8
  %25 = load i64, ptr %24, align 8
  store ptr %23, ptr %_0, align 8
  %26 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %25, ptr %26, align 8
  br label %bb3

bb5:                                              ; preds = %bb2
; call core::slice::index::slice_start_index_len_fail
  call void @_ZN4core5slice5index26slice_start_index_len_fail17hd7aab39f3024a402E(i64 1, i64 %self.14, ptr align 8 @alloc_0343f61185722ebfa248546bc3c57e60) #27
  unreachable

bb3:                                              ; preds = %bb1, %bb6
  %27 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %28 = getelementptr inbounds i8, ptr %_0, i64 8
  %29 = load i64, ptr %28, align 8
  %30 = insertvalue { ptr, i64 } poison, ptr %27, 0
  %31 = insertvalue { ptr, i64 } %30, i64 %29, 1
  ret { ptr, i64 } %31
}

; <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN95_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..FromIterator$LT$char$GT$$GT$9from_iter17h28e19a76a7303037E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_5 = alloca %"alloc::vec::Vec<u8>", align 8
  %buf = alloca %"alloc::string::String", align 8
  store i64 0, ptr %_5, align 8
  %1 = getelementptr inbounds i8, ptr %_5, i64 8
  store ptr inttoptr (i64 1 to ptr), ptr %1, align 8
  %2 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %_5, i32 0, i32 1
  store i64 0, ptr %2, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %buf, ptr align 8 %_5, i64 24, i1 false)
; invoke <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend
  invoke void @"_ZN89_$LT$alloc..string..String$u20$as$u20$core..iter..traits..collect..Extend$LT$char$GT$$GT$6extend17hf212a4e69a7bf586E"(ptr align 8 %buf, ptr %iter.0, ptr %iter.1)
          to label %bb1 unwind label %cleanup

bb2:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %buf) #28
          to label %bb3 unwind label %terminate

cleanup:                                          ; preds = %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb2

bb1:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %buf, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb2
  %7 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb3:                                              ; preds = %bb2
  %10 = load ptr, ptr %0, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  %12 = load i32, ptr %11, align 8, !noundef !3
  %13 = insertvalue { ptr, i32 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i32 } %13, i32 %12, 1
  resume { ptr, i32 } %14
}

; <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h24f476f892424a52E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %iter) unnamed_addr #0 {
start:
  %_2 = alloca %"core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>", align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h4f355ed30dd53161E"(ptr sret(%"core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>") align 8 %_2, ptr align 8 %iter)
; call alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter
  call void @"_ZN5alloc3vec16in_place_collect108_$LT$impl$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$u20$for$u20$alloc..vec..Vec$LT$T$GT$$GT$9from_iter17h0ac88415c9c7fffeE"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %_2)
  ret void
}

; <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h726e8ccc3d1e06dbE"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #0 {
start:
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %0 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb116f9e308cbf188E"(ptr %iter.0, ptr %iter.1)
  %_2.0 = extractvalue { ptr, ptr } %0, 0
  %_2.1 = extractvalue { ptr, ptr } %0, 1
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
  call void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h7696aab54bc0452bE"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr %_2.0, ptr %_2.1)
  ret void
}

; <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h749bf32decee7bb8E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %iter) unnamed_addr #0 {
start:
  %_2 = alloca %"core::iter::adapters::map::Map<core::str::iter::Split<'_, char>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:372:38: 372:44}>", align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h5e78dac8093339d9E"(ptr sret(%"core::iter::adapters::map::Map<core::str::iter::Split<'_, char>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:372:38: 372:44}>") align 8 %_2, ptr align 8 %iter)
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
  call void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17hdd3a253ff4b8f270E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %_2)
  ret void
}

; <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h8c42a4777c1ece21E"(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 8 %iter) unnamed_addr #0 {
start:
  %_2 = alloca %"core::str::iter::Split<'_, char>", align 8
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h18d0da7106718c14E"(ptr sret(%"core::str::iter::Split<'_, char>") align 8 %_2, ptr align 8 %iter)
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
  call void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17hd391d7c45160aa50E"(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 8 %_2)
  ret void
}

; <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN95_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$core..iter..traits..collect..FromIterator$LT$T$GT$$GT$9from_iter17h9a5047d828fe7605E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr %iter.0, ptr %iter.1) unnamed_addr #0 {
start:
; call <I as core::iter::traits::collect::IntoIterator>::into_iter
  %0 = call { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hdb2f8b9c6c5dbe6cE"(ptr %iter.0, ptr %iter.1)
  %_2.0 = extractvalue { ptr, ptr } %0, 0
  %_2.1 = extractvalue { ptr, ptr } %0, 1
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
  call void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17ha2ae4b9d3d16e8a4E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr %_2.0, ptr %_2.1)
  ret void
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hb07594878107dab7E"() unnamed_addr #0 {
start:
  %_0 = alloca %"core::ops::control_flow::ControlFlow<usize>", align 8
  store i64 0, ptr %_0, align 8
  %0 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  %2 = load i64, ptr %1, align 8
  %3 = insertvalue { i64, i64 } poison, i64 %0, 0
  %4 = insertvalue { i64, i64 } %3, i64 %2, 1
  ret { i64, i64 } %4
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::from_output
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$11from_output17hb6a9d9105c393883E"() unnamed_addr #0 {
start:
  %_0 = alloca i8, align 1
  store i8 0, ptr %_0, align 1
  %0 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %1 = trunc i8 %0 to i1
  ret i1 %1
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define { i64, i64 } @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17h46bb841108471f95E"(i64 %0, i64 %1) unnamed_addr #0 {
start:
  %_5 = alloca i64, align 8
  %_0 = alloca %"core::ops::control_flow::ControlFlow<core::ops::control_flow::ControlFlow<usize, core::convert::Infallible>>", align 8
  %self = alloca %"core::ops::control_flow::ControlFlow<usize>", align 8
  store i64 %0, ptr %self, align 8
  %2 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %1, ptr %2, align 8
  %_2 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %3 = icmp eq i64 %_2, 0
  br i1 %3, label %bb3, label %bb1

bb3:                                              ; preds = %start
  store i64 0, ptr %_0, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %4 = getelementptr inbounds i8, ptr %self, i64 8
  %b = load i64, ptr %4, align 8, !noundef !3
  store i64 %b, ptr %_5, align 8
  %5 = load i64, ptr %_5, align 8, !noundef !3
  %6 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %5, ptr %6, align 8
  store i64 1, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %7 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_0, i64 8
  %9 = load i64, ptr %8, align 8
  %10 = insertvalue { i64, i64 } poison, i64 %7, 0
  %11 = insertvalue { i64, i64 } %10, i64 %9, 1
  ret { i64, i64 } %11

bb2:                                              ; No predecessors!
  unreachable
}

; <core::ops::control_flow::ControlFlow<B,C> as core::ops::try_trait::Try>::branch
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN95_$LT$core..ops..control_flow..ControlFlow$LT$B$C$C$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hc1923e2a87ed3b15E"(i1 zeroext %0) unnamed_addr #0 {
start:
  %_0 = alloca i8, align 1
  %self = alloca i8, align 1
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %self, align 1
  %2 = load i8, ptr %self, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  %_2 = zext i1 %3 to i64
  %4 = icmp eq i64 %_2, 0
  br i1 %4, label %bb3, label %bb1

bb3:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb4

bb1:                                              ; preds = %start
  store i8 1, ptr %_0, align 1
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %5 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %6 = trunc i8 %5 to i1
  ret i1 %6

bb2:                                              ; No predecessors!
  unreachable
}

; <hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @"_ZN95_$LT$hashbrown..raw..bitmask..BitMaskIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb21ce954e445f1a9E"(ptr align 2 %self) unnamed_addr #0 {
start:
  %_7 = alloca i16, align 2
  %self1 = alloca %"core::option::Option<usize>", align 8
  %_2 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>", align 8
  %_0 = alloca %"core::option::Option<usize>", align 8
  %_4 = load i16, ptr %self, align 2, !noundef !3
; call hashbrown::raw::bitmask::BitMask::lowest_set_bit
  %0 = call { i64, i64 } @_ZN9hashbrown3raw7bitmask7BitMask14lowest_set_bit17h9bb00bc7a31e6b77E(i16 %_4)
  %1 = extractvalue { i64, i64 } %0, 0
  %2 = extractvalue { i64, i64 } %0, 1
  store i64 %1, ptr %self1, align 8
  %3 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %2, ptr %3, align 8
  %_8 = load i64, ptr %self1, align 8, !range !9, !noundef !3
  %4 = icmp eq i64 %_8, 0
  br i1 %4, label %bb6, label %bb7

bb6:                                              ; preds = %start
  %5 = load i64, ptr @6, align 8, !range !9, !noundef !3
  %6 = load i64, ptr getelementptr inbounds (i8, ptr @6, i64 8), align 8
  store i64 %5, ptr %_2, align 8
  %7 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %6, ptr %7, align 8
  br label %bb5

bb7:                                              ; preds = %start
  %8 = getelementptr inbounds i8, ptr %self1, i64 8
  %v = load i64, ptr %8, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %v, ptr %9, align 8
  store i64 0, ptr %_2, align 8
  br label %bb5

bb5:                                              ; preds = %bb7, %bb6
  %_5 = load i64, ptr %_2, align 8, !range !9, !noundef !3
  %10 = icmp eq i64 %_5, 0
  br i1 %10, label %bb2, label %bb3

bb2:                                              ; preds = %bb5
  %11 = getelementptr inbounds i8, ptr %_2, i64 8
  %bit = load i64, ptr %11, align 8, !noundef !3
  %self2 = load i16, ptr %self, align 2, !noundef !3
  %_11 = sub i16 %self2, 1
  %_10 = and i16 %self2, %_11
  store i16 %_10, ptr %_7, align 2
  %12 = load i16, ptr %_7, align 2, !noundef !3
  store i16 %12, ptr %self, align 2
  %13 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %bit, ptr %13, align 8
  store i64 1, ptr %_0, align 8
  br label %bb4

bb3:                                              ; preds = %bb5
  %14 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %15 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %14, ptr %_0, align 8
  %16 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %15, ptr %16, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %17 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %18 = getelementptr inbounds i8, ptr %_0, i64 8
  %19 = load i64, ptr %18, align 8
  %20 = insertvalue { i64, i64 } poison, i64 %17, 0
  %21 = insertvalue { i64, i64 } %20, i64 %19, 1
  ret { i64, i64 } %21

bb8:                                              ; No predecessors!
  unreachable
}

; <std::ffi::os_str::OsStr as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN95_$LT$std..ffi..os_str..OsStr$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17hfb5d85951a93dfeaE"(ptr align 1 %self.0, i64 %self.1) unnamed_addr #0 {
start:
  %0 = insertvalue { ptr, i64 } poison, ptr %self.0, 0
  %1 = insertvalue { ptr, i64 } %0, i64 %self.1, 1
  ret { ptr, i64 } %1
}

; <core::iter::adapters::map::Map<I,F> as core::iter::adapters::SourceIter>::as_inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN96_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..adapters..SourceIter$GT$8as_inner17ha0b9a40bb87190e8E"(ptr align 8 %self) unnamed_addr #0 {
start:
; call <alloc::vec::into_iter::IntoIter<T,A> as core::iter::adapters::SourceIter>::as_inner
  %_0 = call align 8 ptr @"_ZN97_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..adapters..SourceIter$GT$8as_inner17h8d10ca23f7eb390cE"(ptr align 8 %self)
  ret ptr %_0
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h2dbd599b81093188E"(ptr align 8 %self, ptr align 8 %iterator) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::extend_trusted
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted17h511ba7731480d3a0E"(ptr align 8 %self, ptr align 8 %iterator)
  ret void
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h6efed079dc455e66E"(ptr align 8 %self, ptr align 8 %iter) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::extend_desugared
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17hcb20da7da0c89201E"(ptr align 8 %self, ptr align 8 %iter)
  ret void
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h8e4d772b1a00d641E"(ptr align 8 %self, ptr align 8 %iter) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::extend_desugared
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$16extend_desugared17hde698a6e3434e772E"(ptr align 8 %self, ptr align 8 %iter)
  ret void
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17h916261b782df9f55E"(ptr align 8 %self, ptr %iterator.0, ptr %iterator.1) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::extend_trusted
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted17he737cf463ceaec9bE"(ptr align 8 %self, ptr %iterator.0, ptr %iterator.1)
  ret void
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17he036c8d36319fb6bE"(ptr align 8 %self, ptr %iterator.0, ptr %iterator.1) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::extend_trusted
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted17h21cc5af85e765449E"(ptr align 8 %self, ptr %iterator.0, ptr %iterator.1)
  ret void
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17he5d469d2769a9fb1E"(ptr align 8 %self, ptr %iterator.0, ptr %iterator.1) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::extend_trusted
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted17ha046b2547886790cE"(ptr align 8 %self, ptr %iterator.0, ptr %iterator.1)
  ret void
}

; <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<T,I>>::spec_extend
; Function Attrs: nonlazybind uwtable
define void @"_ZN97_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$alloc..vec..spec_extend..SpecExtend$LT$T$C$I$GT$$GT$11spec_extend17heb4065c39c79fba0E"(ptr align 8 %self, ptr %iterator.0, ptr %iterator.1) unnamed_addr #1 {
start:
; call alloc::vec::Vec<T,A>::extend_trusted
  call void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$14extend_trusted17hbc18df39680fd4a5E"(ptr align 8 %self, ptr %iterator.0, ptr %iterator.1)
  ret void
}

; <alloc::vec::into_iter::IntoIter<T,A> as core::iter::adapters::SourceIter>::as_inner
; Function Attrs: inlinehint nonlazybind uwtable
define align 8 ptr @"_ZN97_$LT$alloc..vec..into_iter..IntoIter$LT$T$C$A$GT$$u20$as$u20$core..iter..adapters..SourceIter$GT$8as_inner17h8d10ca23f7eb390cE"(ptr align 8 %self) unnamed_addr #0 {
start:
  ret ptr %self
}

; <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17he08e0a3c7f17290dE"(ptr sret(%"core::str::pattern::SearchStep") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_0.i1 = alloca i64, align 8
  %_0.i = alloca i64, align 8
  %_5 = alloca %"core::option::Option<(usize, char)>", align 8
  %s = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>", ptr %self, i32 0, i32 1
  %_4 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>", ptr %self, i32 0, i32 1
  %self1.i2 = getelementptr inbounds i8, ptr %_4, i64 8
  %end.i3 = load ptr, ptr %self1.i2, align 8, !nonnull !3, !noundef !3
  %subtracted.i4 = load ptr, ptr %_4, align 8, !nonnull !3, !noundef !3
  %0 = ptrtoint ptr %end.i3 to i64
  %1 = ptrtoint ptr %subtracted.i4 to i64
  %2 = sub nuw i64 %0, %1
  store i64 %2, ptr %_0.i1, align 8
  %3 = load i64, ptr %_0.i1, align 8, !noundef !3
  %_6 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>", ptr %self, i32 0, i32 1
; call <core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next
  %4 = call { i64, i32 } @"_ZN87_$LT$core..str..iter..CharIndices$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h04ac740dbb31bb16E"(ptr align 8 %_6)
  %5 = extractvalue { i64, i32 } %4, 0
  %6 = extractvalue { i64, i32 } %4, 1
  store i64 %5, ptr %_5, align 8
  %7 = getelementptr inbounds i8, ptr %_5, i64 8
  store i32 %6, ptr %7, align 8
  %8 = getelementptr inbounds i8, ptr %_5, i64 8
  %9 = load i32, ptr %8, align 8, !range !7, !noundef !3
  %10 = icmp eq i32 %9, 1114112
  %_7 = select i1 %10, i64 0, i64 1
  %11 = icmp eq i64 %_7, 1
  br i1 %11, label %bb3, label %bb8

bb3:                                              ; preds = %start
  %i = load i64, ptr %_5, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %_5, i64 8
  %c = load i32, ptr %12, align 8, !range !8, !noundef !3
  %_11 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>", ptr %self, i32 0, i32 1
  %self1.i = getelementptr inbounds i8, ptr %_11, i64 8
  %end.i = load ptr, ptr %self1.i, align 8, !nonnull !3, !noundef !3
  %subtracted.i = load ptr, ptr %_11, align 8, !nonnull !3, !noundef !3
  %13 = ptrtoint ptr %end.i to i64
  %14 = ptrtoint ptr %subtracted.i to i64
  %15 = sub nuw i64 %13, %14
  store i64 %15, ptr %_0.i, align 8
  %16 = load i64, ptr %_0.i, align 8, !noundef !3
  %char_len = sub i64 %3, %16
  %_14 = getelementptr inbounds %"core::str::pattern::MultiCharEqSearcher<'_, {closure@core::str::<impl str>::trim::{closure#0}}>", ptr %self, i32 0, i32 2
; call <F as core::str::pattern::MultiCharEq>::matches
  %_13 = call zeroext i1 @"_ZN53_$LT$F$u20$as$u20$core..str..pattern..MultiCharEq$GT$7matches17hee7562c40f4d4452E"(ptr align 1 %_14, i32 %c)
  br i1 %_13, label %bb6, label %bb7

bb8:                                              ; preds = %start
  store i64 2, ptr %_0, align 8
  br label %bb10

bb7:                                              ; preds = %bb3
  %_16 = add i64 %i, %char_len
  %17 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_0, i32 0, i32 1
  store i64 %i, ptr %17, align 8
  %18 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_0, i32 0, i32 2
  store i64 %_16, ptr %18, align 8
  store i64 1, ptr %_0, align 8
  br label %bb9

bb6:                                              ; preds = %bb3
  %_15 = add i64 %i, %char_len
  %19 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", ptr %_0, i32 0, i32 1
  store i64 %i, ptr %19, align 8
  %20 = getelementptr inbounds %"core::str::pattern::SearchStep::Match", ptr %_0, i32 0, i32 2
  store i64 %_15, ptr %20, align 8
  store i64 0, ptr %_0, align 8
  br label %bb9

bb9:                                              ; preds = %bb6, %bb7
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  ret void
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17h7696aab54bc0452bE"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr %iterator.0, ptr %iterator.1) unnamed_addr #1 {
start:
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
  call void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h3393564f8a4cd22cE"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr %iterator.0, ptr %iterator.1)
  ret void
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17ha2ae4b9d3d16e8a4E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr %iterator.0, ptr %iterator.1) unnamed_addr #1 {
start:
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
  call void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17hbbb4a2a3d57daa2bE"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr %iterator.0, ptr %iterator.1)
  ret void
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17hd391d7c45160aa50E"(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 8 %iterator) unnamed_addr #1 {
start:
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
  call void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h305fcec9134755f6E"(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 8 %iterator)
  ret void
}

; <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter
; Function Attrs: nonlazybind uwtable
define void @"_ZN98_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter..SpecFromIter$LT$T$C$I$GT$$GT$9from_iter17hdd3a253ff4b8f270E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %iterator) unnamed_addr #1 {
start:
; call <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter
  call void @"_ZN111_$LT$alloc..vec..Vec$LT$T$GT$$u20$as$u20$alloc..vec..spec_from_iter_nested..SpecFromIterNested$LT$T$C$I$GT$$GT$9from_iter17h8dacfb235d4c1b6aE"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 8 %iterator)
  ret void
}

; <std::ffi::os_str::OsString as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
; Function Attrs: inlinehint nonlazybind uwtable
define internal { ptr, i64 } @"_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17h6fc72231a91e2f9fE"(ptr align 8 %self) unnamed_addr #0 {
start:
  %_15 = alloca %"core::ptr::metadata::PtrComponents<[u8]>", align 8
  %_14 = alloca %"core::ptr::metadata::PtrRepr<[u8]>", align 8
  %0 = getelementptr inbounds i8, ptr %self, i64 8
  %self1 = load ptr, ptr %0, align 8, !nonnull !3, !noundef !3
  %1 = getelementptr inbounds %"alloc::vec::Vec<u8>", ptr %self, i32 0, i32 1
  %len = load i64, ptr %1, align 8, !noundef !3
  store ptr %self1, ptr %_15, align 8
  %2 = getelementptr inbounds i8, ptr %_15, i64 8
  store i64 %len, ptr %2, align 8
  %3 = load ptr, ptr %_15, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_15, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  store ptr %3, ptr %_14, align 8
  %6 = getelementptr inbounds i8, ptr %_14, i64 8
  store i64 %5, ptr %6, align 8
  %_12.0 = load ptr, ptr %_14, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_14, i64 8
  %_12.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = insertvalue { ptr, i64 } poison, ptr %_12.0, 0
  %9 = insertvalue { ptr, i64 } %8, i64 %_12.1, 1
  ret { ptr, i64 } %9
}

; <alloc::collections::btree::map::BTreeMap<K,V,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN99_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17ha020abbd51d32c16E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %_3 = alloca %"alloc::collections::btree::map::BTreeMap<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  %_x = alloca %"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>", align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %self, i64 24, i1 false)
; call <alloc::collections::btree::map::BTreeMap<K,V,A> as core::iter::traits::collect::IntoIterator>::into_iter
  call void @"_ZN119_$LT$alloc..collections..btree..map..BTreeMap$LT$K$C$V$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h07ec5246e2a90958E"(ptr sret(%"alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>>") align 8 %_x, ptr align 8 %_3)
; call core::ptr::drop_in_place<alloc::collections::btree::map::IntoIter<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>>>
  call void @"_ZN4core3ptr152drop_in_place$LT$alloc..collections..btree..map..IntoIter$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$$GT$17h41591acd5f92b2e7E"(ptr align 8 %_x)
  ret void
}

; <alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN99_$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h34c183411471e298E"(ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %guard = alloca ptr, align 8
  %kv = alloca %"alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>", align 8
  %_2 = alloca %"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>", align 8
  br label %bb1

bb1:                                              ; preds = %bb4, %start
; call alloc::collections::btree::map::IntoIter<K,V,A>::dying_next
  call void @"_ZN5alloc11collections5btree3map25IntoIter$LT$K$C$V$C$A$GT$10dying_next17he878847a6e2c6d8bE"(ptr sret(%"core::option::Option<alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying, std::ffi::os_str::OsString, core::option::Option<std::ffi::os_str::OsString>, alloc::collections::btree::node::marker::LeafOrInternal>, alloc::collections::btree::node::marker::KV>>") align 8 %_2, ptr align 8 %self)
  %1 = load ptr, ptr %_2, align 8, !noundef !3
  %2 = ptrtoint ptr %1 to i64
  %3 = icmp eq i64 %2, 0
  %_3 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_3, 1
  br i1 %4, label %bb3, label %bb5

bb3:                                              ; preds = %bb1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %kv, ptr align 8 %_2, i64 24, i1 false)
  store ptr %self, ptr %guard, align 8
; invoke alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Dying,K,V,NodeType>,alloc::collections::btree::node::marker::KV>::drop_key_val
  invoke void @"_ZN5alloc11collections5btree4node173Handle$LT$alloc..collections..btree..node..NodeRef$LT$alloc..collections..btree..node..marker..Dying$C$K$C$V$C$NodeType$GT$$C$alloc..collections..btree..node..marker..KV$GT$12drop_key_val17h6ee72494bcf30979E"(ptr align 8 %kv)
          to label %bb4 unwind label %cleanup

bb5:                                              ; preds = %bb1
  ret void

bb7:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<<alloc::collections::btree::map::IntoIter<K,V,A> as core::ops::drop::Drop>::drop::DropGuard<std::ffi::os_str::OsString,core::option::Option<std::ffi::os_str::OsString>,alloc::alloc::Global>>
  invoke void @"_ZN4core3ptr250drop_in_place$LT$$LT$alloc..collections..btree..map..IntoIter$LT$K$C$V$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$..drop..DropGuard$LT$std..ffi..os_str..OsString$C$core..option..Option$LT$std..ffi..os_str..OsString$GT$$C$alloc..alloc..Global$GT$$GT$17h14b9c21236e481aeE"(ptr align 8 %guard) #28
          to label %bb6 unwind label %terminate

cleanup:                                          ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %0, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb7

bb4:                                              ; preds = %bb3
  %t = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
  br label %bb1

terminate:                                        ; preds = %bb7
  %9 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb6:                                              ; preds = %bb7
  %12 = load ptr, ptr %0, align 8, !noundef !3
  %13 = getelementptr inbounds i8, ptr %0, i64 8
  %14 = load i32, ptr %13, align 8, !noundef !3
  %15 = insertvalue { ptr, i32 } poison, ptr %12, 0
  %16 = insertvalue { ptr, i32 } %15, i32 %14, 1
  resume { ptr, i32 } %16
}

; <core::str::iter::SplitInclusive<P> as core::iter::traits::iterator::Iterator>::next
; Function Attrs: inlinehint nonlazybind uwtable
define { ptr, i64 } @"_ZN99_$LT$core..str..iter..SplitInclusive$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hdb16a39e8eea015bE"(ptr align 8 %self) unnamed_addr #0 {
start:
; call core::str::iter::SplitInternal<P>::next_inclusive
  %0 = call { ptr, i64 } @"_ZN4core3str4iter22SplitInternal$LT$P$GT$14next_inclusive17hcea748b7cfe582e4E"(ptr align 8 %self)
  %_0.0 = extractvalue { ptr, i64 } %0, 0
  %_0.1 = extractvalue { ptr, i64 } %0, 1
  %1 = insertvalue { ptr, i64 } poison, ptr %_0.0, 0
  %2 = insertvalue { ptr, i64 } %1, i64 %_0.1, 1
  ret { ptr, i64 } %2
}

; <core::str::pattern::CharPredicateSearcher<F> as core::str::pattern::Searcher>::next_reject
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN99_$LT$core..str..pattern..CharPredicateSearcher$LT$F$GT$$u20$as$u20$core..str..pattern..Searcher$GT$11next_reject17h36703f93ad8dc2d2E"(ptr sret(%"core::option::Option<(usize, usize)>") align 8 %_0, ptr align 8 %self) unnamed_addr #0 {
start:
  %_7 = alloca { i64, i64 }, align 8
  %_3 = alloca %"core::str::pattern::SearchStep", align 8
  br label %bb1

bb1:                                              ; preds = %bb5, %start
; call <core::str::pattern::MultiCharEqSearcher<C> as core::str::pattern::Searcher>::next
  call void @"_ZN97_$LT$core..str..pattern..MultiCharEqSearcher$LT$C$GT$$u20$as$u20$core..str..pattern..Searcher$GT$4next17he08e0a3c7f17290dE"(ptr sret(%"core::str::pattern::SearchStep") align 8 %_3, ptr align 8 %self)
  %_4 = load i64, ptr %_3, align 8, !range !11, !noundef !3
  switch i64 %_4, label %bb5 [
    i64 1, label %bb3
    i64 2, label %bb4
  ]

bb5:                                              ; preds = %bb1
  br label %bb1

bb3:                                              ; preds = %bb1
  %0 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_3, i32 0, i32 1
  %a = load i64, ptr %0, align 8, !noundef !3
  %1 = getelementptr inbounds %"core::str::pattern::SearchStep::Reject", ptr %_3, i32 0, i32 2
  %b = load i64, ptr %1, align 8, !noundef !3
  store i64 %a, ptr %_7, align 8
  %2 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %b, ptr %2, align 8
  %3 = load i64, ptr %_7, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_7, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  %6 = getelementptr inbounds %"core::option::Option<(usize, usize)>::Some", ptr %_0, i32 0, i32 1
  store i64 %3, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  store i64 %5, ptr %7, align 8
  store i64 1, ptr %_0, align 8
  br label %bb6

bb4:                                              ; preds = %bb1
  store i64 0, ptr %_0, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb3
  ret void
}

; hashbrown::map::make_hasher::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN9hashbrown3map11make_hasher28_$u7b$$u7b$closure$u7d$$u7d$17h175961b592b2f445E"(ptr align 8 %_1, ptr align 8 %val) unnamed_addr #0 {
start:
  %hash_builder = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
; call core::hash::BuildHasher::hash_one
  %_0 = call i64 @_ZN4core4hash11BuildHasher8hash_one17he58ada0dd0f33080E(ptr align 8 %hash_builder, ptr align 8 %val)
  ret i64 %_0
}

; hashbrown::map::equivalent_key::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN9hashbrown3map14equivalent_key28_$u7b$$u7b$closure$u7d$$u7d$17h552e1fbae4d9e89fE"(ptr align 8 %_1, ptr align 8 %x) unnamed_addr #0 {
start:
  %_4 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
; call <Q as hashbrown::Equivalent<K>>::equivalent
  %_0 = call zeroext i1 @"_ZN52_$LT$Q$u20$as$u20$hashbrown..Equivalent$LT$K$GT$$GT$10equivalent17h113a5744e374d3d6E"(ptr align 8 %_4, ptr align 8 %x)
  ret i1 %_0
}

; hashbrown::map::HashMap<K,V,S,A>::insert
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3map28HashMap$LT$K$C$V$C$S$C$A$GT$6insert17h6ba4d1f3ba59c3b0E"(ptr sret(%"core::option::Option<core::option::Option<alloc::string::String>>") align 8 %_0, ptr align 8 %self, ptr align 8 %k, ptr align 8 %v) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_28 = alloca ptr, align 8
  %_27 = alloca i8, align 1
  %_26 = alloca i8, align 1
  %_25 = alloca %"core::option::Option<alloc::string::String>", align 8
  %_24 = alloca %"alloc::string::String", align 8
  %_23 = alloca { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, align 8
  %src = alloca %"core::option::Option<alloc::string::String>", align 8
  %result = alloca %"core::option::Option<alloc::string::String>", align 8
  %bucket = alloca ptr, align 8
  %_11 = alloca ptr, align 8
  %_9 = alloca %"core::result::Result<hashbrown::raw::Bucket<(alloc::string::String, core::option::Option<alloc::string::String>)>, hashbrown::raw::InsertSlot>", align 8
  %hasher = alloca ptr, align 8
  store i8 1, ptr %_26, align 1
  store i8 1, ptr %_27, align 1
  %hash_builder = getelementptr inbounds %"hashbrown::map::HashMap<alloc::string::String, core::option::Option<alloc::string::String>, std::hash::random::RandomState>", ptr %self, i32 0, i32 1
; invoke core::hash::BuildHasher::hash_one
  %hash = invoke i64 @_ZN4core4hash11BuildHasher8hash_one17he58ada0dd0f33080E(ptr align 8 %hash_builder, ptr align 8 %k)
          to label %bb13 unwind label %cleanup

bb11:                                             ; preds = %cleanup
  %1 = load i8, ptr %_27, align 1, !range !10, !noundef !3
  %2 = trunc i8 %1 to i1
  br i1 %2, label %bb10, label %bb7

cleanup:                                          ; preds = %bb2, %bb13, %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb11

bb13:                                             ; preds = %start
  %hash_builder1 = getelementptr inbounds %"hashbrown::map::HashMap<alloc::string::String, core::option::Option<alloc::string::String>, std::hash::random::RandomState>", ptr %self, i32 0, i32 1
  store ptr %hash_builder1, ptr %hasher, align 8
  store ptr %k, ptr %_11, align 8
  %7 = load ptr, ptr %_11, align 8, !nonnull !3, !align !5, !noundef !3
  %8 = load ptr, ptr %hasher, align 8, !nonnull !3, !align !5, !noundef !3
; invoke hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot
  invoke void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$24find_or_find_insert_slot17hd32cb9a1d9ffa2cfE"(ptr sret(%"core::result::Result<hashbrown::raw::Bucket<(alloc::string::String, core::option::Option<alloc::string::String>)>, hashbrown::raw::InsertSlot>") align 8 %_9, ptr align 8 %self, i64 %hash, ptr align 8 %7, ptr align 8 %8)
          to label %bb1 unwind label %cleanup

bb1:                                              ; preds = %bb13
  %_13 = load i64, ptr %_9, align 8, !range !9, !noundef !3
  %9 = icmp eq i64 %_13, 0
  br i1 %9, label %bb3, label %bb2

bb3:                                              ; preds = %bb1
  %10 = getelementptr inbounds %"core::result::Result<hashbrown::raw::Bucket<(alloc::string::String, core::option::Option<alloc::string::String>)>, hashbrown::raw::InsertSlot>::Ok", ptr %_9, i32 0, i32 1
  %11 = load ptr, ptr %10, align 8, !nonnull !3, !noundef !3
  store ptr %11, ptr %bucket, align 8
  br i1 false, label %bb14, label %bb15

bb2:                                              ; preds = %bb1
  %12 = getelementptr inbounds %"core::result::Result<hashbrown::raw::Bucket<(alloc::string::String, core::option::Option<alloc::string::String>)>, hashbrown::raw::InsertSlot>::Err", ptr %_9, i32 0, i32 1
  %slot = load i64, ptr %12, align 8, !noundef !3
  store i8 0, ptr %_26, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_24, ptr align 8 %k, i64 24, i1 false)
  store i8 0, ptr %_27, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_25, ptr align 8 %v, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_23, ptr align 8 %_24, i64 24, i1 false)
  %13 = getelementptr inbounds { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, ptr %_23, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %_25, i64 24, i1 false)
; invoke hashbrown::raw::RawTable<T,A>::insert_in_slot
  %_21 = invoke ptr @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14insert_in_slot17h7ae4897927fe3ea4E"(ptr align 8 %self, i64 %hash, i64 %slot, ptr align 8 %_23)
          to label %bb4 unwind label %cleanup

bb15:                                             ; preds = %bb3
  %self2 = load ptr, ptr %bucket, align 8, !nonnull !3, !noundef !3
  br i1 false, label %bb17, label %bb18

bb14:                                             ; preds = %bb3
  store ptr inttoptr (i64 8 to ptr), ptr %_28, align 8
  br label %bb16

bb18:                                             ; preds = %bb15
  %14 = getelementptr inbounds { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, ptr %self2, i64 -1
  store ptr %14, ptr %_28, align 8
  br label %bb19

bb17:                                             ; preds = %bb15
  store ptr %self2, ptr %_28, align 8
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  br label %bb16

bb16:                                             ; preds = %bb14, %bb19
  %_17 = load ptr, ptr %_28, align 8, !noundef !3
  %dest = getelementptr inbounds { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, ptr %_17, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %src, ptr align 8 %v, i64 24, i1 false)
  %15 = getelementptr inbounds { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, ptr %_17, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %result, ptr align 8 %15, i64 24, i1 false)
  %16 = getelementptr inbounds { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, ptr %_17, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %src, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %result, i64 24, i1 false)
  br label %bb5

bb5:                                              ; preds = %bb4, %bb16
  %17 = load i8, ptr %_26, align 1, !range !10, !noundef !3
  %18 = trunc i8 %17 to i1
  br i1 %18, label %bb9, label %bb6

bb4:                                              ; preds = %bb2
  store i64 -9223372036854775807, ptr %_0, align 8
  br label %bb5

bb6:                                              ; preds = %bb9, %bb5
  ret void

bb9:                                              ; preds = %bb5
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %k)
  br label %bb6

bb20:                                             ; No predecessors!
  unreachable

bb7:                                              ; preds = %bb10, %bb11
  %19 = load i8, ptr %_26, align 1, !range !10, !noundef !3
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb12, label %bb8

bb10:                                             ; preds = %bb11
; invoke core::ptr::drop_in_place<core::option::Option<alloc::string::String>>
  invoke void @"_ZN4core3ptr70drop_in_place$LT$core..option..Option$LT$alloc..string..String$GT$$GT$17h77bf297a2e36d6aaE"(ptr align 8 %v) #28
          to label %bb7 unwind label %terminate

terminate:                                        ; preds = %bb12, %bb10
  %21 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %22 = extractvalue { ptr, i32 } %21, 0
  %23 = extractvalue { ptr, i32 } %21, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb8:                                              ; preds = %bb12, %bb7
  %24 = load ptr, ptr %0, align 8, !noundef !3
  %25 = getelementptr inbounds i8, ptr %0, i64 8
  %26 = load i32, ptr %25, align 8, !noundef !3
  %27 = insertvalue { ptr, i32 } poison, ptr %24, 0
  %28 = insertvalue { ptr, i32 } %27, i32 %26, 1
  resume { ptr, i32 } %28

bb12:                                             ; preds = %bb7
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %k) #28
          to label %bb8 unwind label %terminate
}

; hashbrown::raw::TableLayout::calculate_layout_for
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN9hashbrown3raw11TableLayout20calculate_layout_for17h73c7acaa5db218adE(ptr sret(%"core::option::Option<(core::alloc::layout::Layout, usize)>") align 8 %_0, i64 %self.0, i64 %self.1, i64 %buckets) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = alloca i8, align 1
  %2 = alloca i8, align 1
  %_25 = alloca %"core::alloc::layout::Layout", align 8
  %_24 = alloca { %"core::alloc::layout::Layout", i64 }, align 8
  %self2 = alloca %"core::option::Option<usize>", align 8
  %_17 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>", align 8
  %self1 = alloca %"core::option::Option<usize>", align 8
  %_9 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>", align 8
  %self = alloca %"core::option::Option<usize>", align 8
  %_7 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>", align 8
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %self.0, i64 %buckets)
  %_29.0 = extractvalue { i64, i1 } %3, 0
  %_29.1 = extractvalue { i64, i1 } %3, 1
  %4 = call i1 @llvm.expect.i1(i1 %_29.1, i1 false)
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %2, align 1
  %6 = load i8, ptr %2, align 1, !range !10, !noundef !3
  %_26 = trunc i8 %6 to i1
  br i1 %_26, label %bb13, label %bb14

bb14:                                             ; preds = %start
  %7 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %_29.0, ptr %7, align 8
  store i64 1, ptr %self1, align 8
  br label %bb15

bb13:                                             ; preds = %start
  %8 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %9 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %8, ptr %self1, align 8
  %10 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %9, ptr %10, align 8
  br label %bb15

bb15:                                             ; preds = %bb13, %bb14
  %_33 = load i64, ptr %self1, align 8, !range !9, !noundef !3
  %11 = icmp eq i64 %_33, 0
  br i1 %11, label %bb17, label %bb18

bb17:                                             ; preds = %bb15
  %12 = load i64, ptr @6, align 8, !range !9, !noundef !3
  %13 = load i64, ptr getelementptr inbounds (i8, ptr @6, i64 8), align 8
  store i64 %12, ptr %_9, align 8
  %14 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %13, ptr %14, align 8
  br label %bb16

bb18:                                             ; preds = %bb15
  %15 = getelementptr inbounds i8, ptr %self1, i64 8
  %v = load i64, ptr %15, align 8, !noundef !3
  %16 = getelementptr inbounds i8, ptr %_9, i64 8
  store i64 %v, ptr %16, align 8
  store i64 0, ptr %_9, align 8
  br label %bb16

bb16:                                             ; preds = %bb18, %bb17
  %_11 = load i64, ptr %_9, align 8, !range !9, !noundef !3
  %17 = icmp eq i64 %_11, 0
  br i1 %17, label %bb1, label %bb2

bb1:                                              ; preds = %bb16
  %18 = getelementptr inbounds i8, ptr %_9, i64 8
  %val = load i64, ptr %18, align 8, !noundef !3
  %rhs = sub i64 %self.1, 1
  %19 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %val, i64 %rhs)
  %_38.0 = extractvalue { i64, i1 } %19, 0
  %_38.1 = extractvalue { i64, i1 } %19, 1
  %20 = call i1 @llvm.expect.i1(i1 %_38.1, i1 false)
  %21 = zext i1 %20 to i8
  store i8 %21, ptr %1, align 1
  %22 = load i8, ptr %1, align 1, !range !10, !noundef !3
  %_35 = trunc i8 %22 to i1
  br i1 %_35, label %bb20, label %bb21

bb2:                                              ; preds = %bb16
  store i64 0, ptr %_0, align 8
  br label %bb10

bb21:                                             ; preds = %bb1
  %23 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %_38.0, ptr %23, align 8
  store i64 1, ptr %self, align 8
  br label %bb22

bb20:                                             ; preds = %bb1
  %24 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %25 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %24, ptr %self, align 8
  %26 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %25, ptr %26, align 8
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %_42 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %27 = icmp eq i64 %_42, 0
  br i1 %27, label %bb24, label %bb25

bb24:                                             ; preds = %bb22
  %28 = load i64, ptr @6, align 8, !range !9, !noundef !3
  %29 = load i64, ptr getelementptr inbounds (i8, ptr @6, i64 8), align 8
  store i64 %28, ptr %_7, align 8
  %30 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %29, ptr %30, align 8
  br label %bb23

bb25:                                             ; preds = %bb22
  %31 = getelementptr inbounds i8, ptr %self, i64 8
  %v3 = load i64, ptr %31, align 8, !noundef !3
  %32 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %v3, ptr %32, align 8
  store i64 0, ptr %_7, align 8
  br label %bb23

bb23:                                             ; preds = %bb25, %bb24
  %_14 = load i64, ptr %_7, align 8, !range !9, !noundef !3
  %33 = icmp eq i64 %_14, 0
  br i1 %33, label %bb3, label %bb4

bb3:                                              ; preds = %bb23
  %34 = getelementptr inbounds i8, ptr %_7, i64 8
  %val4 = load i64, ptr %34, align 8, !noundef !3
  %_16 = xor i64 %rhs, -1
  %ctrl_offset = and i64 %val4, %_16
  %rhs5 = add i64 %buckets, 16
  %35 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %ctrl_offset, i64 %rhs5)
  %_47.0 = extractvalue { i64, i1 } %35, 0
  %_47.1 = extractvalue { i64, i1 } %35, 1
  %36 = call i1 @llvm.expect.i1(i1 %_47.1, i1 false)
  %37 = zext i1 %36 to i8
  store i8 %37, ptr %0, align 1
  %38 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_44 = trunc i8 %38 to i1
  br i1 %_44, label %bb27, label %bb28

bb4:                                              ; preds = %bb23
  store i64 0, ptr %_0, align 8
  br label %bb10

bb28:                                             ; preds = %bb3
  %39 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %_47.0, ptr %39, align 8
  store i64 1, ptr %self2, align 8
  br label %bb29

bb27:                                             ; preds = %bb3
  %40 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %41 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %40, ptr %self2, align 8
  %42 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %41, ptr %42, align 8
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %_51 = load i64, ptr %self2, align 8, !range !9, !noundef !3
  %43 = icmp eq i64 %_51, 0
  br i1 %43, label %bb31, label %bb32

bb31:                                             ; preds = %bb29
  %44 = load i64, ptr @6, align 8, !range !9, !noundef !3
  %45 = load i64, ptr getelementptr inbounds (i8, ptr @6, i64 8), align 8
  store i64 %44, ptr %_17, align 8
  %46 = getelementptr inbounds i8, ptr %_17, i64 8
  store i64 %45, ptr %46, align 8
  br label %bb30

bb32:                                             ; preds = %bb29
  %47 = getelementptr inbounds i8, ptr %self2, i64 8
  %v6 = load i64, ptr %47, align 8, !noundef !3
  %48 = getelementptr inbounds i8, ptr %_17, i64 8
  store i64 %v6, ptr %48, align 8
  store i64 0, ptr %_17, align 8
  br label %bb30

bb30:                                             ; preds = %bb32, %bb31
  %_20 = load i64, ptr %_17, align 8, !range !9, !noundef !3
  %49 = icmp eq i64 %_20, 0
  br i1 %49, label %bb5, label %bb6

bb5:                                              ; preds = %bb30
  %50 = getelementptr inbounds i8, ptr %_17, i64 8
  %len = load i64, ptr %50, align 8, !noundef !3
  %_23 = sub i64 9223372036854775807, %rhs
  %_22 = icmp ugt i64 %len, %_23
  br i1 %_22, label %bb7, label %bb8

bb6:                                              ; preds = %bb30
  store i64 0, ptr %_0, align 8
  br label %bb9

bb8:                                              ; preds = %bb5
  %51 = getelementptr inbounds i8, ptr %_25, i64 8
  store i64 %len, ptr %51, align 8
  store i64 %self.1, ptr %_25, align 8
  %52 = load i64, ptr %_25, align 8, !range !26, !noundef !3
  %53 = getelementptr inbounds i8, ptr %_25, i64 8
  %54 = load i64, ptr %53, align 8, !noundef !3
  store i64 %52, ptr %_24, align 8
  %55 = getelementptr inbounds i8, ptr %_24, i64 8
  store i64 %54, ptr %55, align 8
  %56 = getelementptr inbounds { %"core::alloc::layout::Layout", i64 }, ptr %_24, i32 0, i32 1
  store i64 %ctrl_offset, ptr %56, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_24, i64 24, i1 false)
  br label %bb11

bb7:                                              ; preds = %bb5
  store i64 0, ptr %_0, align 8
  br label %bb9

bb11:                                             ; preds = %bb10, %bb9, %bb8
  ret void

bb9:                                              ; preds = %bb6, %bb7
  br label %bb11

bb10:                                             ; preds = %bb2, %bb4
  br label %bb11

bb33:                                             ; No predecessors!
  unreachable
}

; hashbrown::raw::RawTableInner::free_buckets
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN9hashbrown3raw13RawTableInner12free_buckets17h7cc4d77386d0ced6E(ptr align 8 %self, ptr align 1 %alloc, i64 %table_layout.0, i64 %table_layout.1) unnamed_addr #0 {
start:
  %ptr = alloca ptr, align 8
  %_6 = alloca %"core::option::Option<(core::alloc::layout::Layout, usize)>", align 8
  %0 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 1
  %_13 = load i64, ptr %0, align 8, !noundef !3
  %_7 = add i64 %_13, 1
; call hashbrown::raw::TableLayout::calculate_layout_for
  call void @_ZN9hashbrown3raw11TableLayout20calculate_layout_for17h73c7acaa5db218adE(ptr sret(%"core::option::Option<(core::alloc::layout::Layout, usize)>") align 8 %_6, i64 %table_layout.0, i64 %table_layout.1, i64 %_7)
  %1 = load i64, ptr %_6, align 8, !range !12, !noundef !3
  %2 = icmp eq i64 %1, 0
  %_8 = select i1 %2, i64 0, i64 1
  %_20 = icmp eq i64 %_8, 1
  call void @llvm.assume(i1 %_20)
  %layout.0 = load i64, ptr %_6, align 8, !range !26, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_6, i64 8
  %layout.1 = load i64, ptr %3, align 8, !noundef !3
  %4 = getelementptr inbounds { %"core::alloc::layout::Layout", i64 }, ptr %_6, i32 0, i32 1
  %ctrl_offset = load i64, ptr %4, align 8, !noundef !3
  %self1 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %count = sub nsw i64 0, %ctrl_offset
  %ptr2 = getelementptr inbounds i8, ptr %self1, i64 %count
  store ptr %ptr2, ptr %ptr, align 8
  %5 = load ptr, ptr %ptr, align 8, !nonnull !3, !noundef !3
; call <alloc::alloc::Global as core::alloc::Allocator>::deallocate
  call void @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$10deallocate17h26261b652b3ecafbE"(ptr align 1 %alloc, ptr %5, i64 %layout.0, i64 %layout.1)
  ret void
}

; hashbrown::raw::RawTableInner::drop_elements
; Function Attrs: nonlazybind uwtable
define void @_ZN9hashbrown3raw13RawTableInner13drop_elements17h16c06ba38d8f473eE(ptr align 8 %self) unnamed_addr #1 {
start:
  %_14 = alloca %"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>", align 8
  %_13 = alloca ptr, align 8
  %item = alloca ptr, align 8
  %_6 = alloca ptr, align 8
  %iter = alloca %"hashbrown::raw::RawIter<(alloc::string::String, core::option::Option<alloc::string::String>)>", align 8
  %self1 = alloca %"hashbrown::raw::RawIter<(alloc::string::String, core::option::Option<alloc::string::String>)>", align 8
  br i1 true, label %bb1, label %bb9

bb9:                                              ; preds = %bb6, %bb8, %start
  ret void

bb1:                                              ; preds = %start
  %0 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 3
  %_3 = load i64, ptr %0, align 8, !noundef !3
  %1 = icmp eq i64 %_3, 0
  br i1 %1, label %bb8, label %bb2

bb8:                                              ; preds = %bb1
  br label %bb9

bb2:                                              ; preds = %bb1
  %self2 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store ptr %self2, ptr %_13, align 8
  %2 = load ptr, ptr %_13, align 8, !nonnull !3, !noundef !3
; call hashbrown::raw::Bucket<T>::from_base_index
  %data = call ptr @"_ZN9hashbrown3raw15Bucket$LT$T$GT$15from_base_index17hd169070a6b8948a4E"(ptr %2, i64 0)
  %3 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 1
  %_25 = load i64, ptr %3, align 8, !noundef !3
  %_16 = add i64 %_25, 1
; call hashbrown::raw::RawIterRange<T>::new
  call void @"_ZN9hashbrown3raw21RawIterRange$LT$T$GT$3new17h0d09eb2087c5f73cE"(ptr sret(%"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>") align 8 %_14, ptr %self2, ptr %data, i64 %_16)
  %4 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 3
  %_17 = load i64, ptr %4, align 8, !noundef !3
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self1, ptr align 8 %_14, i64 32, i1 false)
  %5 = getelementptr inbounds %"hashbrown::raw::RawIter<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %self1, i32 0, i32 1
  store i64 %_17, ptr %5, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %self1, i64 40, i1 false)
  br label %bb3

bb3:                                              ; preds = %bb5, %bb2
; call <hashbrown::raw::RawIter<T> as core::iter::traits::iterator::Iterator>::next
  %6 = call ptr @"_ZN91_$LT$hashbrown..raw..RawIter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb98725b58d820163E"(ptr align 8 %iter)
  store ptr %6, ptr %_6, align 8
  %7 = load ptr, ptr %_6, align 8, !noundef !3
  %8 = ptrtoint ptr %7 to i64
  %9 = icmp eq i64 %8, 0
  %_8 = select i1 %9, i64 0, i64 1
  %10 = icmp eq i64 %_8, 0
  br i1 %10, label %bb6, label %bb5

bb6:                                              ; preds = %bb3
  br label %bb9

bb5:                                              ; preds = %bb3
  %11 = load ptr, ptr %_6, align 8, !nonnull !3, !noundef !3
  store ptr %11, ptr %item, align 8
; call hashbrown::raw::Bucket<T>::drop
  call void @"_ZN9hashbrown3raw15Bucket$LT$T$GT$4drop17hcd3ddbe90bae4b9bE"(ptr align 8 %item)
  br label %bb3

bb12:                                             ; No predecessors!
  unreachable
}

; hashbrown::raw::RawTableInner::prepare_resize
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN9hashbrown3raw13RawTableInner14prepare_resize17h73610dfd0f93f006E(ptr sret(%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>, hashbrown::TryReserveError>") align 8 %_0, ptr align 8 %self, ptr align 1 %alloc, i64 %table_layout.0, i64 %table_layout.1, i64 %capacity, i1 zeroext %fallibility) unnamed_addr #0 {
start:
  %_16 = alloca %"core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>::Err", align 8
  %v = alloca %"hashbrown::raw::RawTableInner", align 8
  %dropfn = alloca %"{closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}", align 8
  %_11 = alloca %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", align 8
  %new_table = alloca %"hashbrown::raw::RawTableInner", align 8
  %residual = alloca %"core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>::Err", align 8
  %self1 = alloca %"core::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>", align 8
  %_6 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner>", align 8
; call hashbrown::raw::RawTableInner::fallible_with_capacity
  call void @_ZN9hashbrown3raw13RawTableInner22fallible_with_capacity17h088cd00d1d7c3c17E(ptr sret(%"core::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>") align 8 %self1, ptr align 1 %alloc, i64 %table_layout.0, i64 %table_layout.1, i64 %capacity, i1 zeroext %fallibility)
  %0 = load ptr, ptr %self1, align 8, !noundef !3
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_13 = select i1 %2, i64 1, i64 0
  %3 = icmp eq i64 %_13, 0
  br i1 %3, label %bb7, label %bb6

bb7:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v, ptr align 8 %self1, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_6, ptr align 8 %v, i64 32, i1 false)
  br label %bb5

bb6:                                              ; preds = %start
  %4 = getelementptr inbounds %"core::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>::Err", ptr %self1, i32 0, i32 1
  %e.0 = load i64, ptr %4, align 8, !range !12, !noundef !3
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  %e.1 = load i64, ptr %5, align 8
  store i64 %e.0, ptr %_16, align 8
  %6 = getelementptr inbounds i8, ptr %_16, i64 8
  store i64 %e.1, ptr %6, align 8
  %7 = load i64, ptr %_16, align 8, !range !12, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_16, i64 8
  %9 = load i64, ptr %8, align 8
  %10 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner>::Break", ptr %_6, i32 0, i32 1
  store i64 %7, ptr %10, align 8
  %11 = getelementptr inbounds i8, ptr %10, i64 8
  store i64 %9, ptr %11, align 8
  store ptr null, ptr %_6, align 8
  br label %bb5

bb5:                                              ; preds = %bb6, %bb7
  %12 = load ptr, ptr %_6, align 8, !noundef !3
  %13 = ptrtoint ptr %12 to i64
  %14 = icmp eq i64 %13, 0
  %_8 = select i1 %14, i64 1, i64 0
  %15 = icmp eq i64 %_8, 0
  br i1 %15, label %bb2, label %bb3

bb2:                                              ; preds = %bb5
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %new_table, ptr align 8 %_6, i64 32, i1 false)
  store ptr %alloc, ptr %dropfn, align 8
  %16 = getelementptr inbounds %"{closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}", ptr %dropfn, i32 0, i32 1
  store i64 %table_layout.0, ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %16, i64 8
  store i64 %table_layout.1, ptr %17, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_11, ptr align 8 %dropfn, i64 24, i1 false)
  %18 = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", ptr %_11, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr align 8 %new_table, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_11, i64 56, i1 false)
  br label %bb4

bb3:                                              ; preds = %bb5
  %19 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner>::Break", ptr %_6, i32 0, i32 1
  %20 = load i64, ptr %19, align 8, !range !12, !noundef !3
  %21 = getelementptr inbounds i8, ptr %19, i64 8
  %22 = load i64, ptr %21, align 8
  store i64 %20, ptr %residual, align 8
  %23 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %22, ptr %23, align 8
  %e.02 = load i64, ptr %residual, align 8, !range !12, !noundef !3
  %24 = getelementptr inbounds i8, ptr %residual, i64 8
  %e.13 = load i64, ptr %24, align 8
  %25 = getelementptr inbounds %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>, hashbrown::TryReserveError>::Err", ptr %_0, i32 0, i32 1
  store i64 %e.02, ptr %25, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 8
  store i64 %e.13, ptr %26, align 8
  store ptr null, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  ret void

bb8:                                              ; No predecessors!
  unreachable
}

; hashbrown::raw::RawTableInner::prepare_resize::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN9hashbrown3raw13RawTableInner14prepare_resize28_$u7b$$u7b$closure$u7d$$u7d$17h40258f59cb19a339E"(ptr align 8 %_1, ptr align 8 %self_) unnamed_addr #0 {
start:
  %0 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self_, i32 0, i32 1
  %_6 = load i64, ptr %0, align 8, !noundef !3
  %1 = icmp eq i64 %_6, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %start
  br label %bb4

bb2:                                              ; preds = %start
  %_5 = load ptr, ptr %_1, align 8, !nonnull !3, !align !4, !noundef !3
  %2 = getelementptr inbounds %"{closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}", ptr %_1, i32 0, i32 1
  %_4.0 = load i64, ptr %2, align 8, !noundef !3
  %3 = getelementptr inbounds i8, ptr %2, i64 8
  %_4.1 = load i64, ptr %3, align 8, !noundef !3
; call hashbrown::raw::RawTableInner::free_buckets
  call void @_ZN9hashbrown3raw13RawTableInner12free_buckets17h7cc4d77386d0ced6E(ptr align 8 %self_, ptr align 1 %_5, i64 %_4.0, i64 %_4.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb1
  ret void
}

; hashbrown::raw::RawTableInner::fix_insert_slot
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN9hashbrown3raw13RawTableInner15fix_insert_slot17h70803c16935db921E(ptr align 8 %self, i64 %0) unnamed_addr #0 {
start:
  %1 = alloca <2 x i64>, align 16
  %2 = alloca <2 x i64>, align 16
  %3 = alloca i8, align 1
  %_8 = alloca i16, align 2
  %self1 = alloca %"core::option::Option<usize>", align 8
  %_0 = alloca i64, align 8
  %index = alloca i64, align 8
  store i64 %0, ptr %index, align 8
  %index2 = load i64, ptr %index, align 8, !noundef !3
  %self3 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_12 = getelementptr inbounds i8, ptr %self3, i64 %index2
  %ctrl = load i8, ptr %_12, align 1, !noundef !3
  %_16 = and i8 %ctrl, -128
  %_4 = icmp eq i8 %_16, 0
  %4 = call i1 @llvm.expect.i1(i1 %_4, i1 false)
  %5 = zext i1 %4 to i8
  store i8 %5, ptr %3, align 1
  %6 = load i8, ptr %3, align 1, !range !10, !noundef !3
  %_3 = trunc i8 %6 to i1
  br i1 %_3, label %bb2, label %bb4

bb4:                                              ; preds = %start
  br label %bb5

bb2:                                              ; preds = %start
; call core::core_arch::x86::sse2::_mm_load_si128
  call void @_ZN4core9core_arch3x864sse214_mm_load_si12817h0fff7d8714e4d2bdE(ptr sret(<2 x i64>) align 16 %2, ptr %self3)
  %self4 = load <2 x i64>, ptr %2, align 16
  store <2 x i64> %self4, ptr %1, align 16
; call core::core_arch::x86::sse2::_mm_movemask_epi8
  %_21 = call i32 @_ZN4core9core_arch3x864sse217_mm_movemask_epi817h5ebf5ba4849673e8E(ptr align 16 %1)
  %_20 = trunc i32 %_21 to i16
  store i16 %_20, ptr %_8, align 2
  %7 = load i16, ptr %_8, align 2, !noundef !3
; call hashbrown::raw::bitmask::BitMask::lowest_set_bit
  %8 = call { i64, i64 } @_ZN9hashbrown3raw7bitmask7BitMask14lowest_set_bit17h9bb00bc7a31e6b77E(i16 %7)
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  store i64 %9, ptr %self1, align 8
  %11 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %10, ptr %11, align 8
  %_23 = load i64, ptr %self1, align 8, !range !9, !noundef !3
  %_24 = icmp eq i64 %_23, 1
  call void @llvm.assume(i1 %_24)
  %12 = getelementptr inbounds i8, ptr %self1, i64 8
  %val = load i64, ptr %12, align 8, !noundef !3
  store i64 %val, ptr %index, align 8
  br label %bb5

bb5:                                              ; preds = %bb2, %bb4
  %_10 = load i64, ptr %index, align 8, !noundef !3
  store i64 %_10, ptr %_0, align 8
  %13 = load i64, ptr %_0, align 8, !noundef !3
  ret i64 %13
}

; hashbrown::raw::RawTableInner::rehash_in_place
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN9hashbrown3raw13RawTableInner15rehash_in_place17h237388950c3db53bE(ptr align 8 %self, ptr align 1 %hasher.0, ptr align 8 %hasher.1, i64 %size_of, ptr %drop) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca i8, align 1
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %self3 = alloca ptr, align 8
  %probe_seq_pos = alloca i64, align 8
  %self2 = alloca ptr, align 8
  %_42 = alloca i64, align 8
  %_23 = alloca { ptr, i64 }, align 8
  %_12 = alloca %"core::option::Option<usize>", align 8
  %iter = alloca %"core::ops::range::Range<usize>", align 8
  %self1 = alloca %"core::ops::range::Range<usize>", align 8
  %dropfn = alloca %"{closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}", align 8
  %guard = alloca %"hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}>", align 8
; call hashbrown::raw::RawTableInner::prepare_rehash_in_place
  call void @_ZN9hashbrown3raw13RawTableInner23prepare_rehash_in_place17h9299bb914af564d0E(ptr align 8 %self)
  store ptr %drop, ptr %dropfn, align 8
  %2 = getelementptr inbounds i8, ptr %dropfn, i64 8
  store i64 %size_of, ptr %2, align 8
  %3 = load ptr, ptr %dropfn, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %dropfn, i64 8
  %5 = load i64, ptr %4, align 8, !noundef !3
  %6 = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}>", ptr %guard, i32 0, i32 1
  store ptr %3, ptr %6, align 8
  %7 = getelementptr inbounds i8, ptr %6, i64 8
  store i64 %5, ptr %7, align 8
  store ptr %self, ptr %guard, align 8
  %self4 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
  %8 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self4, i32 0, i32 1
  %_61 = load i64, ptr %8, align 8, !noundef !3
  %_9 = add i64 %_61, 1
  store i64 0, ptr %self1, align 8
  %9 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %_9, ptr %9, align 8
  %10 = load i64, ptr %self1, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %self1, i64 8
  %12 = load i64, ptr %11, align 8, !noundef !3
  store i64 %10, ptr %iter, align 8
  %13 = getelementptr inbounds i8, ptr %iter, i64 8
  store i64 %12, ptr %13, align 8
  br label %bb2

bb2:                                              ; preds = %bb16, %start
  %other = getelementptr inbounds i8, ptr %iter, i64 8
  %_67 = load i64, ptr %iter, align 8, !noundef !3
  %14 = getelementptr inbounds i8, ptr %iter, i64 8
  %_68 = load i64, ptr %14, align 8, !noundef !3
  %_62 = icmp ult i64 %_67, %_68
  br i1 %_62, label %bb19, label %bb21

bb21:                                             ; preds = %bb2
  %15 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %16 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %15, ptr %_12, align 8
  %17 = getelementptr inbounds i8, ptr %_12, i64 8
  store i64 %16, ptr %17, align 8
  br label %bb22

bb19:                                             ; preds = %bb2
  %old = load i64, ptr %iter, align 8, !noundef !3
; invoke <usize as core::iter::range::Step>::forward_unchecked
  %_66 = invoke i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hfc82dfa8f57a0e81E"(i64 %old, i64 1)
          to label %bb20 unwind label %cleanup

bb22:                                             ; preds = %bb20, %bb21
  %_14 = load i64, ptr %_12, align 8, !range !9, !noundef !3
  %18 = icmp eq i64 %_14, 0
  br i1 %18, label %bb4, label %bb3

bb18:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner,hashbrown::raw::RawTableInner::rehash_in_place::{{closure}}>>
  invoke void @"_ZN4core3ptr181drop_in_place$LT$hashbrown..scopeguard..ScopeGuard$LT$$RF$mut$u20$hashbrown..raw..RawTableInner$C$hashbrown..raw..RawTableInner..rehash_in_place..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h1a45db85834700c2E"(ptr align 8 %guard) #28
          to label %bb17 unwind label %terminate

cleanup:                                          ; preds = %bb14, %bb8, %bb7, %bb19
  %19 = landingpad { ptr, i32 }
          cleanup
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
  store ptr %20, ptr %1, align 8
  %22 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %21, ptr %22, align 8
  br label %bb18

bb20:                                             ; preds = %bb19
  store i64 %_66, ptr %iter, align 8
  %23 = getelementptr inbounds i8, ptr %_12, i64 8
  store i64 %old, ptr %23, align 8
  store i64 1, ptr %_12, align 8
  br label %bb22

bb4:                                              ; preds = %bb22
  %_58 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
  %24 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %_58, i32 0, i32 1
  %bucket_mask = load i64, ptr %24, align 8, !noundef !3
  %_156 = icmp ult i64 %bucket_mask, 8
  br i1 %_156, label %bb23, label %bb24

bb3:                                              ; preds = %bb22
  %25 = getelementptr inbounds i8, ptr %_12, i64 8
  %i = load i64, ptr %25, align 8, !noundef !3
  %self7 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
  %self8 = load ptr, ptr %self7, align 8, !nonnull !3, !noundef !3
  %_18 = getelementptr inbounds i8, ptr %self8, i64 %i
  %_17 = load i8, ptr %_18, align 1, !noundef !3
  %_16 = icmp ne i8 %_17, -128
  br i1 %_16, label %bb5, label %bb6

bb24:                                             ; preds = %bb4
  %_158 = add i64 %bucket_mask, 1
  %_157 = udiv i64 %_158, 8
  %26 = mul i64 %_157, 7
  store i64 %26, ptr %_42, align 8
  br label %bb25

bb23:                                             ; preds = %bb4
  store i64 %bucket_mask, ptr %_42, align 8
  br label %bb25

bb25:                                             ; preds = %bb23, %bb24
  %_59 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
  %27 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %_59, i32 0, i32 3
  %_45 = load i64, ptr %27, align 8, !noundef !3
  %_60 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
  %28 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %_60, i32 0, i32 2
  %29 = load i64, ptr %_42, align 8, !noundef !3
  %30 = sub i64 %29, %_45
  store i64 %30, ptr %28, align 8
  %31 = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}>", ptr %guard, i32 0, i32 1
  %t = load ptr, ptr %31, align 8, !noundef !3
  %32 = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<&mut hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::rehash_in_place::{closure#0}}>", ptr %guard, i32 0, i32 1
  %33 = getelementptr inbounds i8, ptr %32, i64 8
  %t5 = load i64, ptr %33, align 8, !noundef !3
  %t6 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
  ret void

bb6:                                              ; preds = %bb3
  %self9 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
  %self10 = load ptr, ptr %self9, align 8, !nonnull !3, !noundef !3
  store ptr %self10, ptr %self2, align 8
  %_76 = add i64 %i, 1
  %count = mul i64 %_76, %size_of
  %count11 = sub nsw i64 0, %count
  %i_p = getelementptr inbounds i8, ptr %self10, i64 %count11
  br label %bb7

bb5:                                              ; preds = %bb3
  br label %bb16

bb7:                                              ; preds = %bb15, %bb6
  %_51 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %_51, ptr %_23, align 8
  %34 = getelementptr inbounds i8, ptr %_23, i64 8
  store i64 %i, ptr %34, align 8
  %35 = getelementptr inbounds ptr, ptr %hasher.1, i64 5
  %36 = load ptr, ptr %35, align 8, !invariant.load !3, !nonnull !3
  %37 = load ptr, ptr %_23, align 8, !nonnull !3, !align !5, !noundef !3
  %38 = getelementptr inbounds i8, ptr %_23, i64 8
  %39 = load i64, ptr %38, align 8, !noundef !3
  %hash = invoke i64 %36(ptr align 1 %hasher.0, ptr align 8 %37, i64 %39)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %_52 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
; invoke hashbrown::raw::RawTableInner::find_insert_slot
  %_26 = invoke i64 @_ZN9hashbrown3raw13RawTableInner16find_insert_slot17hda5cf35259fe5eecE(ptr align 8 %_52, i64 %hash)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %self12 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
  %40 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self12, i32 0, i32 1
  %_91 = load i64, ptr %40, align 8, !noundef !3
  %_89 = and i64 %hash, %_91
  store i64 %_89, ptr %probe_seq_pos, align 8
  %rhs = load i64, ptr %probe_seq_pos, align 8, !noundef !3
  %_93 = sub i64 %i, %rhs
  %_92 = and i64 %_93, %_91
  %_87 = udiv i64 %_92, 16
  %_96 = sub i64 %_26, %rhs
  %_95 = and i64 %_96, %_91
  %_88 = udiv i64 %_95, 16
  %_30 = icmp eq i64 %_87, %_88
  %41 = call i1 @llvm.expect.i1(i1 %_30, i1 true)
  %42 = zext i1 %41 to i8
  store i8 %42, ptr %0, align 1
  %43 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_29 = trunc i8 %43 to i1
  br i1 %_29, label %bb11, label %bb12

bb12:                                             ; preds = %bb9
  %self13 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
  %self14 = load ptr, ptr %self13, align 8, !nonnull !3, !noundef !3
  store ptr %self14, ptr %self3, align 8
  %_116 = add i64 %_26, 1
  %count15 = mul i64 %_116, %size_of
  %count16 = sub nsw i64 0, %count15
  %new_i_p = getelementptr inbounds i8, ptr %self14, i64 %count16
  %self17 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
  %self18 = load ptr, ptr %self17, align 8, !nonnull !3, !noundef !3
  %_125 = getelementptr inbounds i8, ptr %self18, i64 %_26
  %prev_ctrl = load i8, ptr %_125, align 1, !noundef !3
  %top7 = lshr i64 %hash, 57
  %_131 = and i64 %top7, 127
  %ctrl = trunc i64 %_131 to i8
  %_134 = sub i64 %_26, 16
  %44 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self17, i32 0, i32 1
  %_135 = load i64, ptr %44, align 8, !noundef !3
  %_133 = and i64 %_134, %_135
  %index2 = add i64 %_133, 16
  %self19 = load ptr, ptr %self17, align 8, !nonnull !3, !noundef !3
  %_136 = getelementptr inbounds i8, ptr %self19, i64 %_26
  store i8 %ctrl, ptr %_136, align 1
  %self20 = load ptr, ptr %self17, align 8, !nonnull !3, !noundef !3
  %_137 = getelementptr inbounds i8, ptr %self20, i64 %index2
  store i8 %ctrl, ptr %_137, align 1
  %_37 = icmp eq i8 %prev_ctrl, -1
  br i1 %_37, label %bb13, label %bb14

bb11:                                             ; preds = %bb9
  %self25 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
  %top726 = lshr i64 %hash, 57
  %_99 = and i64 %top726, 127
  %ctrl27 = trunc i64 %_99 to i8
  %_102 = sub i64 %i, 16
  %45 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self25, i32 0, i32 1
  %_103 = load i64, ptr %45, align 8, !noundef !3
  %_101 = and i64 %_102, %_103
  %index228 = add i64 %_101, 16
  %self29 = load ptr, ptr %self25, align 8, !nonnull !3, !noundef !3
  %_104 = getelementptr inbounds i8, ptr %self29, i64 %i
  store i8 %ctrl27, ptr %_104, align 1
  %self30 = load ptr, ptr %self25, align 8, !nonnull !3, !noundef !3
  %_105 = getelementptr inbounds i8, ptr %self30, i64 %index228
  store i8 %ctrl27, ptr %_105, align 1
  br label %bb16

bb14:                                             ; preds = %bb12
; invoke core::ptr::swap_nonoverlapping
  invoke void @_ZN4core3ptr19swap_nonoverlapping17hfe6a6152c953d515E(ptr %i_p, ptr %new_i_p, i64 %size_of)
          to label %bb15 unwind label %cleanup

bb13:                                             ; preds = %bb12
  %self21 = load ptr, ptr %guard, align 8, !nonnull !3, !align !5, !noundef !3
  %_146 = sub i64 %i, 16
  %46 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self21, i32 0, i32 1
  %_147 = load i64, ptr %46, align 8, !noundef !3
  %_145 = and i64 %_146, %_147
  %index222 = add i64 %_145, 16
  %self23 = load ptr, ptr %self21, align 8, !nonnull !3, !noundef !3
  %_148 = getelementptr inbounds i8, ptr %self23, i64 %i
  store i8 -1, ptr %_148, align 1
  %self24 = load ptr, ptr %self21, align 8, !nonnull !3, !noundef !3
  %_149 = getelementptr inbounds i8, ptr %self24, i64 %index222
  store i8 -1, ptr %_149, align 1
  %47 = mul i64 %size_of, 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %new_i_p, ptr align 1 %i_p, i64 %47, i1 false)
  br label %bb16

bb15:                                             ; preds = %bb14
  br label %bb7

bb16:                                             ; preds = %bb5, %bb11, %bb13
  br label %bb2

bb26:                                             ; No predecessors!
  unreachable

terminate:                                        ; preds = %bb18
  %48 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %49 = extractvalue { ptr, i32 } %48, 0
  %50 = extractvalue { ptr, i32 } %48, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb17:                                             ; preds = %bb18
  %51 = load ptr, ptr %1, align 8, !noundef !3
  %52 = getelementptr inbounds i8, ptr %1, i64 8
  %53 = load i32, ptr %52, align 8, !noundef !3
  %54 = insertvalue { ptr, i32 } poison, ptr %51, 0
  %55 = insertvalue { ptr, i32 } %54, i32 %53, 1
  resume { ptr, i32 } %55
}

; hashbrown::raw::RawTableInner::rehash_in_place::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN9hashbrown3raw13RawTableInner15rehash_in_place28_$u7b$$u7b$closure$u7d$$u7d$17h3058961e8b7711feE"(ptr align 8 %_1, ptr align 8 %self_) unnamed_addr #0 {
start:
  %self1 = alloca ptr, align 8
  %_18 = alloca i64, align 8
  %_8 = alloca %"core::option::Option<usize>", align 8
  %iter = alloca %"core::ops::range::Range<usize>", align 8
  %self = alloca %"core::ops::range::Range<usize>", align 8
  %0 = load ptr, ptr %_1, align 8, !noundef !3
  %1 = ptrtoint ptr %0 to i64
  %2 = icmp eq i64 %1, 0
  %_3 = select i1 %2, i64 0, i64 1
  %3 = icmp eq i64 %_3, 1
  br i1 %3, label %bb1, label %bb9

bb1:                                              ; preds = %start
  %drop = load ptr, ptr %_1, align 8, !nonnull !3, !noundef !3
  %self2 = load ptr, ptr %self_, align 8, !nonnull !3, !align !5, !noundef !3
  %4 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self2, i32 0, i32 1
  %_30 = load i64, ptr %4, align 8, !noundef !3
  %_6 = add i64 %_30, 1
  store i64 0, ptr %self, align 8
  %5 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %_6, ptr %5, align 8
  %6 = load i64, ptr %self, align 8, !noundef !3
  %7 = getelementptr inbounds i8, ptr %self, i64 8
  %8 = load i64, ptr %7, align 8, !noundef !3
  store i64 %6, ptr %iter, align 8
  %9 = getelementptr inbounds i8, ptr %iter, i64 8
  store i64 %8, ptr %9, align 8
  br label %bb2

bb9:                                              ; preds = %bb4, %start
  %_27 = load ptr, ptr %self_, align 8, !nonnull !3, !align !5, !noundef !3
  %10 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %_27, i32 0, i32 1
  %bucket_mask = load i64, ptr %10, align 8, !noundef !3
  %_66 = icmp ult i64 %bucket_mask, 8
  br i1 %_66, label %bb14, label %bb15

bb2:                                              ; preds = %bb8, %bb1
  %other = getelementptr inbounds i8, ptr %iter, i64 8
  %_36 = load i64, ptr %iter, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %iter, i64 8
  %_37 = load i64, ptr %11, align 8, !noundef !3
  %_31 = icmp ult i64 %_36, %_37
  br i1 %_31, label %bb10, label %bb12

bb12:                                             ; preds = %bb2
  %12 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %13 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %12, ptr %_8, align 8
  %14 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %13, ptr %14, align 8
  br label %bb13

bb10:                                             ; preds = %bb2
  %old = load i64, ptr %iter, align 8, !noundef !3
; call <usize as core::iter::range::Step>::forward_unchecked
  %_35 = call i64 @"_ZN49_$LT$usize$u20$as$u20$core..iter..range..Step$GT$17forward_unchecked17hfc82dfa8f57a0e81E"(i64 %old, i64 1)
  store i64 %_35, ptr %iter, align 8
  %15 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %old, ptr %15, align 8
  store i64 1, ptr %_8, align 8
  br label %bb13

bb13:                                             ; preds = %bb10, %bb12
  %_10 = load i64, ptr %_8, align 8, !range !9, !noundef !3
  %16 = icmp eq i64 %_10, 0
  br i1 %16, label %bb4, label %bb3

bb4:                                              ; preds = %bb13
  br label %bb9

bb3:                                              ; preds = %bb13
  %17 = getelementptr inbounds i8, ptr %_8, i64 8
  %i = load i64, ptr %17, align 8, !noundef !3
  %self3 = load ptr, ptr %self_, align 8, !nonnull !3, !align !5, !noundef !3
  %self4 = load ptr, ptr %self3, align 8, !nonnull !3, !noundef !3
  %_14 = getelementptr inbounds i8, ptr %self4, i64 %i
  %_13 = load i8, ptr %_14, align 1, !noundef !3
  %_12 = icmp eq i8 %_13, -128
  br i1 %_12, label %bb5, label %bb7

bb7:                                              ; preds = %bb3
  br label %bb8

bb5:                                              ; preds = %bb3
  %self5 = load ptr, ptr %self_, align 8, !nonnull !3, !align !5, !noundef !3
  %_43 = sub i64 %i, 16
  %18 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self5, i32 0, i32 1
  %_44 = load i64, ptr %18, align 8, !noundef !3
  %_42 = and i64 %_43, %_44
  %index2 = add i64 %_42, 16
  %self6 = load ptr, ptr %self5, align 8, !nonnull !3, !noundef !3
  %_45 = getelementptr inbounds i8, ptr %self6, i64 %i
  store i8 -1, ptr %_45, align 1
  %self7 = load ptr, ptr %self5, align 8, !nonnull !3, !noundef !3
  %_46 = getelementptr inbounds i8, ptr %self7, i64 %index2
  store i8 -1, ptr %_46, align 1
  %self8 = load ptr, ptr %self_, align 8, !nonnull !3, !align !5, !noundef !3
  %19 = getelementptr inbounds i8, ptr %_1, i64 8
  %size_of = load i64, ptr %19, align 8, !noundef !3
  %self9 = load ptr, ptr %self8, align 8, !nonnull !3, !noundef !3
  store ptr %self9, ptr %self1, align 8
  %_57 = add i64 %i, 1
  %count = mul i64 %_57, %size_of
  %count10 = sub nsw i64 0, %count
  %_16 = getelementptr inbounds i8, ptr %self9, i64 %count10
  call void %drop(ptr %_16)
  %_25 = load ptr, ptr %self_, align 8, !nonnull !3, !align !5, !noundef !3
  %_26 = load ptr, ptr %self_, align 8, !nonnull !3, !align !5, !noundef !3
  %20 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %_25, i32 0, i32 3
  %21 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %_26, i32 0, i32 3
  %22 = load i64, ptr %21, align 8, !noundef !3
  %23 = sub i64 %22, 1
  store i64 %23, ptr %20, align 8
  br label %bb8

bb8:                                              ; preds = %bb5, %bb7
  br label %bb2

bb17:                                             ; No predecessors!
  unreachable

bb15:                                             ; preds = %bb9
  %_68 = add i64 %bucket_mask, 1
  %_67 = udiv i64 %_68, 8
  %24 = mul i64 %_67, 7
  store i64 %24, ptr %_18, align 8
  br label %bb16

bb14:                                             ; preds = %bb9
  store i64 %bucket_mask, ptr %_18, align 8
  br label %bb16

bb16:                                             ; preds = %bb14, %bb15
  %_28 = load ptr, ptr %self_, align 8, !nonnull !3, !align !5, !noundef !3
  %25 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %_28, i32 0, i32 3
  %_20 = load i64, ptr %25, align 8, !noundef !3
  %_29 = load ptr, ptr %self_, align 8, !nonnull !3, !align !5, !noundef !3
  %26 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %_29, i32 0, i32 2
  %27 = load i64, ptr %_18, align 8, !noundef !3
  %28 = sub i64 %27, %_20
  store i64 %28, ptr %26, align 8
  ret void
}

; hashbrown::raw::RawTableInner::drop_inner_table
; Function Attrs: nonlazybind uwtable
define void @_ZN9hashbrown3raw13RawTableInner16drop_inner_table17h5350a4e497f391d5E(ptr align 8 %self, ptr align 1 %alloc, i64 %table_layout.0, i64 %table_layout.1) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 1
  %_6 = load i64, ptr %0, align 8, !noundef !3
  %1 = icmp eq i64 %_6, 0
  br i1 %1, label %bb1, label %bb2

bb1:                                              ; preds = %start
  br label %bb4

bb2:                                              ; preds = %start
; call hashbrown::raw::RawTableInner::drop_elements
  call void @_ZN9hashbrown3raw13RawTableInner13drop_elements17h16c06ba38d8f473eE(ptr align 8 %self)
; call hashbrown::raw::RawTableInner::free_buckets
  call void @_ZN9hashbrown3raw13RawTableInner12free_buckets17h7cc4d77386d0ced6E(ptr align 8 %self, ptr align 1 %alloc, i64 %table_layout.0, i64 %table_layout.1)
  br label %bb4

bb4:                                              ; preds = %bb2, %bb1
  ret void
}

; hashbrown::raw::RawTableInner::find_insert_slot
; Function Attrs: inlinehint nonlazybind uwtable
define internal i64 @_ZN9hashbrown3raw13RawTableInner16find_insert_slot17hda5cf35259fe5eecE(ptr align 8 %self, i64 %hash) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = alloca <2 x i64>, align 16
  %self1 = alloca %"core::option::Option<usize>", align 8
  %index = alloca %"core::option::Option<usize>", align 8
  %group = alloca <2 x i64>, align 16
  %probe_seq = alloca %"hashbrown::raw::ProbeSeq", align 8
  %2 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 1
  %bucket_mask = load i64, ptr %2, align 8, !noundef !3
  %_17 = and i64 %hash, %bucket_mask
  store i64 %_17, ptr %probe_seq, align 8
  %3 = getelementptr inbounds i8, ptr %probe_seq, i64 8
  store i64 0, ptr %3, align 8
  br label %bb1

bb1:                                              ; preds = %bb6, %start
  %index2 = load i64, ptr %probe_seq, align 8, !noundef !3
  %self3 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_6 = getelementptr inbounds i8, ptr %self3, i64 %index2
; call core::core_arch::x86::sse2::_mm_loadu_si128
  call void @_ZN4core9core_arch3x864sse215_mm_loadu_si12817ha1d2e2bdd862a6b7E(ptr sret(<2 x i64>) align 16 %1, ptr %_6)
  %_23 = load <2 x i64>, ptr %1, align 16
  store <2 x i64> %_23, ptr %group, align 16
; call hashbrown::raw::RawTableInner::find_insert_slot_in_group
  %4 = call { i64, i64 } @_ZN9hashbrown3raw13RawTableInner25find_insert_slot_in_group17hf32d211408d76c07E(ptr align 8 %self, ptr align 16 %group, ptr align 8 %probe_seq)
  %5 = extractvalue { i64, i64 } %4, 0
  %6 = extractvalue { i64, i64 } %4, 1
  store i64 %5, ptr %index, align 8
  %7 = getelementptr inbounds i8, ptr %index, i64 8
  store i64 %6, ptr %7, align 8
  %_25 = load i64, ptr %index, align 8, !range !9, !noundef !3
  %_12 = icmp eq i64 %_25, 1
  %8 = call i1 @llvm.expect.i1(i1 %_12, i1 true)
  %9 = zext i1 %8 to i8
  store i8 %9, ptr %0, align 1
  %10 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_11 = trunc i8 %10 to i1
  br i1 %_11, label %bb4, label %bb6

bb6:                                              ; preds = %bb1
  %11 = getelementptr inbounds i8, ptr %probe_seq, i64 8
  %12 = getelementptr inbounds i8, ptr %probe_seq, i64 8
  %13 = load i64, ptr %12, align 8, !noundef !3
  %14 = add i64 %13, 16
  store i64 %14, ptr %11, align 8
  %15 = getelementptr inbounds i8, ptr %probe_seq, i64 8
  %_30 = load i64, ptr %15, align 8, !noundef !3
  %16 = load i64, ptr %probe_seq, align 8, !noundef !3
  %17 = add i64 %16, %_30
  store i64 %17, ptr %probe_seq, align 8
  %18 = load i64, ptr %probe_seq, align 8, !noundef !3
  %19 = and i64 %18, %bucket_mask
  store i64 %19, ptr %probe_seq, align 8
  br label %bb1

bb4:                                              ; preds = %bb1
  %20 = load i64, ptr %index, align 8, !range !9, !noundef !3
  %21 = getelementptr inbounds i8, ptr %index, i64 8
  %22 = load i64, ptr %21, align 8
  store i64 %20, ptr %self1, align 8
  %23 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %22, ptr %23, align 8
  %_27 = load i64, ptr %self1, align 8, !range !9, !noundef !3
  %_28 = icmp eq i64 %_27, 1
  call void @llvm.assume(i1 %_28)
  %24 = getelementptr inbounds i8, ptr %self1, i64 8
  %val = load i64, ptr %24, align 8, !noundef !3
; call hashbrown::raw::RawTableInner::fix_insert_slot
  %_0 = call i64 @_ZN9hashbrown3raw13RawTableInner15fix_insert_slot17h70803c16935db921E(ptr align 8 %self, i64 %val)
  ret i64 %_0
}

; hashbrown::raw::RawTableInner::new_uninitialized
; Function Attrs: nonlazybind uwtable
define void @_ZN9hashbrown3raw13RawTableInner17new_uninitialized17ha555d4be5d22c206E(ptr sret(%"core::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>") align 8 %_0, ptr align 1 %alloc, i64 %table_layout.0, i64 %table_layout.1, i64 %buckets, i1 zeroext %fallibility) unnamed_addr #1 {
start:
  %_19 = alloca i64, align 8
  %_17 = alloca %"hashbrown::raw::RawTableInner", align 8
  %ctrl = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %_6 = alloca %"core::option::Option<(core::alloc::layout::Layout, usize)>", align 8
; call hashbrown::raw::TableLayout::calculate_layout_for
  call void @_ZN9hashbrown3raw11TableLayout20calculate_layout_for17h73c7acaa5db218adE(ptr sret(%"core::option::Option<(core::alloc::layout::Layout, usize)>") align 8 %_6, i64 %table_layout.0, i64 %table_layout.1, i64 %buckets)
  %0 = load i64, ptr %_6, align 8, !range !12, !noundef !3
  %1 = icmp eq i64 %0, 0
  %_7 = select i1 %1, i64 0, i64 1
  %2 = icmp eq i64 %_7, 0
  br i1 %2, label %bb2, label %bb3

bb2:                                              ; preds = %start
; call hashbrown::raw::Fallibility::capacity_overflow
  %3 = call { i64, i64 } @_ZN9hashbrown3raw11Fallibility17capacity_overflow17h1c17936991031757E(i1 zeroext %fallibility)
  %_8.0 = extractvalue { i64, i64 } %3, 0
  %_8.1 = extractvalue { i64, i64 } %3, 1
  %4 = getelementptr inbounds %"core::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>::Err", ptr %_0, i32 0, i32 1
  store i64 %_8.0, ptr %4, align 8
  %5 = getelementptr inbounds i8, ptr %4, i64 8
  store i64 %_8.1, ptr %5, align 8
  store ptr null, ptr %_0, align 8
  br label %bb9

bb3:                                              ; preds = %start
  %layout.0 = load i64, ptr %_6, align 8, !range !26, !noundef !3
  %6 = getelementptr inbounds i8, ptr %_6, i64 8
  %layout.1 = load i64, ptr %6, align 8, !noundef !3
  %7 = getelementptr inbounds { %"core::alloc::layout::Layout", i64 }, ptr %_6, i32 0, i32 1
  %ctrl_offset = load i64, ptr %7, align 8, !noundef !3
; call hashbrown::raw::alloc::inner::do_alloc
  %8 = call ptr @_ZN9hashbrown3raw5alloc5inner8do_alloc17ha6157db6988222cbE(ptr align 1 %alloc, i64 %layout.0, i64 %layout.1)
  store ptr %8, ptr %_10, align 8
  %9 = load ptr, ptr %_10, align 8, !noundef !3
  %10 = ptrtoint ptr %9 to i64
  %11 = icmp eq i64 %10, 0
  %_11 = select i1 %11, i64 1, i64 0
  %12 = icmp eq i64 %_11, 0
  br i1 %12, label %bb7, label %bb6

bb9:                                              ; preds = %bb6, %bb12, %bb2
  ret void

bb7:                                              ; preds = %bb3
  %block = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
  store ptr %block, ptr %ptr, align 8
  %ptr1 = getelementptr inbounds i8, ptr %block, i64 %ctrl_offset
  store ptr %ptr1, ptr %ctrl, align 8
  %bucket_mask = sub i64 %buckets, 1
  %_28 = icmp ult i64 %bucket_mask, 8
  br i1 %_28, label %bb10, label %bb11

bb6:                                              ; preds = %bb3
; call hashbrown::raw::Fallibility::alloc_err
  %13 = call { i64, i64 } @_ZN9hashbrown3raw11Fallibility9alloc_err17h30b3981f862c146eE(i1 zeroext %fallibility, i64 %layout.0, i64 %layout.1)
  %_13.0 = extractvalue { i64, i64 } %13, 0
  %_13.1 = extractvalue { i64, i64 } %13, 1
  %14 = getelementptr inbounds %"core::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>::Err", ptr %_0, i32 0, i32 1
  store i64 %_13.0, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %14, i64 8
  store i64 %_13.1, ptr %15, align 8
  store ptr null, ptr %_0, align 8
  br label %bb9

bb11:                                             ; preds = %bb7
  %_30 = add i64 %bucket_mask, 1
  %_29 = udiv i64 %_30, 8
  %16 = mul i64 %_29, 7
  store i64 %16, ptr %_19, align 8
  br label %bb12

bb10:                                             ; preds = %bb7
  store i64 %bucket_mask, ptr %_19, align 8
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %17 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %_17, i32 0, i32 1
  store i64 %bucket_mask, ptr %17, align 8
  %18 = load ptr, ptr %ctrl, align 8, !nonnull !3, !noundef !3
  store ptr %18, ptr %_17, align 8
  %19 = load i64, ptr %_19, align 8, !noundef !3
  %20 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %_17, i32 0, i32 2
  store i64 %19, ptr %20, align 8
  %21 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %_17, i32 0, i32 3
  store i64 0, ptr %21, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_17, i64 32, i1 false)
  br label %bb9

bb13:                                             ; No predecessors!
  unreachable
}

; hashbrown::raw::RawTableInner::prepare_insert_slot
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i8 } @_ZN9hashbrown3raw13RawTableInner19prepare_insert_slot17h543b4452009bdc4bE(ptr align 8 %self, i64 %hash) unnamed_addr #0 {
start:
  %_0 = alloca { i64, i8, [7 x i8] }, align 8
; call hashbrown::raw::RawTableInner::find_insert_slot
  %_4 = call i64 @_ZN9hashbrown3raw13RawTableInner16find_insert_slot17hda5cf35259fe5eecE(ptr align 8 %self, i64 %hash)
  %self1 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_7 = getelementptr inbounds i8, ptr %self1, i64 %_4
  %old_ctrl = load i8, ptr %_7, align 1, !noundef !3
  %top7 = lshr i64 %hash, 57
  %_13 = and i64 %top7, 127
  %ctrl = trunc i64 %_13 to i8
  %_16 = sub i64 %_4, 16
  %0 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 1
  %_17 = load i64, ptr %0, align 8, !noundef !3
  %_15 = and i64 %_16, %_17
  %index2 = add i64 %_15, 16
  %self2 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_18 = getelementptr inbounds i8, ptr %self2, i64 %_4
  store i8 %ctrl, ptr %_18, align 1
  %self3 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_19 = getelementptr inbounds i8, ptr %self3, i64 %index2
  store i8 %ctrl, ptr %_19, align 1
  store i64 %_4, ptr %_0, align 8
  %1 = getelementptr inbounds i8, ptr %_0, i64 8
  store i8 %old_ctrl, ptr %1, align 8
  %2 = load i64, ptr %_0, align 8, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_0, i64 8
  %4 = load i8, ptr %3, align 8, !noundef !3
  %5 = insertvalue { i64, i8 } poison, i64 %2, 0
  %6 = insertvalue { i64, i8 } %5, i8 %4, 1
  ret { i64, i8 } %6
}

; hashbrown::raw::RawTableInner::fallible_with_capacity
; Function Attrs: inlinehint nonlazybind uwtable
define void @_ZN9hashbrown3raw13RawTableInner22fallible_with_capacity17h088cd00d1d7c3c17E(ptr sret(%"core::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>") align 8 %_0, ptr align 1 %alloc, i64 %table_layout.0, i64 %table_layout.1, i64 %capacity, i1 zeroext %0) unnamed_addr #0 {
start:
  %_36 = alloca %"core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>::Err", align 8
  %v = alloca %"hashbrown::raw::RawTableInner", align 8
  %_31 = alloca %"core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>::Err", align 8
  %_23 = alloca %"hashbrown::raw::RawTableInner", align 8
  %val = alloca %"hashbrown::raw::RawTableInner", align 8
  %residual3 = alloca %"core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>::Err", align 8
  %self2 = alloca %"core::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>", align 8
  %_13 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner>", align 8
  %result = alloca %"hashbrown::raw::RawTableInner", align 8
  %residual = alloca %"core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>::Err", align 8
  %self1 = alloca %"core::option::Option<usize>", align 8
  %self = alloca %"core::result::Result<usize, hashbrown::TryReserveError>", align 8
  %_5 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>", align 8
  %fallibility = alloca i8, align 1
  %1 = zext i1 %0 to i8
  store i8 %1, ptr %fallibility, align 1
  %2 = icmp eq i64 %capacity, 0
  br i1 %2, label %bb1, label %bb2

bb1:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 @2, i64 32, i1 false)
  br label %bb9

bb2:                                              ; preds = %start
; call hashbrown::raw::capacity_to_buckets
  %3 = call { i64, i64 } @_ZN9hashbrown3raw19capacity_to_buckets17h276839bd41adc83cE(i64 %capacity)
  %4 = extractvalue { i64, i64 } %3, 0
  %5 = extractvalue { i64, i64 } %3, 1
  store i64 %4, ptr %self1, align 8
  %6 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %5, ptr %6, align 8
  %_24 = load i64, ptr %self1, align 8, !range !9, !noundef !3
  %7 = icmp eq i64 %_24, 0
  br i1 %7, label %bb12, label %bb13

bb9:                                              ; preds = %bb7, %bb1
  br label %bb11

bb12:                                             ; preds = %bb2
  %8 = load i8, ptr %fallibility, align 1, !range !10, !noundef !3
  %_27 = trunc i8 %8 to i1
; call hashbrown::raw::Fallibility::capacity_overflow
  %9 = call { i64, i64 } @_ZN9hashbrown3raw11Fallibility17capacity_overflow17h1c17936991031757E(i1 zeroext %_27)
  %_26.0 = extractvalue { i64, i64 } %9, 0
  %_26.1 = extractvalue { i64, i64 } %9, 1
  store i64 %_26.0, ptr %self, align 8
  %10 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %_26.1, ptr %10, align 8
  br label %bb14

bb13:                                             ; preds = %bb2
  %11 = getelementptr inbounds i8, ptr %self1, i64 8
  %v4 = load i64, ptr %11, align 8, !noundef !3
  %12 = getelementptr inbounds %"core::result::Result<usize, hashbrown::TryReserveError>::Ok", ptr %self, i32 0, i32 1
  store i64 %v4, ptr %12, align 8
  store i64 -9223372036854775807, ptr %self, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  %13 = load i64, ptr %self, align 8, !range !23, !noundef !3
  %14 = icmp eq i64 %13, -9223372036854775807
  %_28 = select i1 %14, i64 0, i64 1
  %15 = icmp eq i64 %_28, 0
  br i1 %15, label %bb18, label %bb17

bb18:                                             ; preds = %bb14
  %16 = getelementptr inbounds %"core::result::Result<usize, hashbrown::TryReserveError>::Ok", ptr %self, i32 0, i32 1
  %v5 = load i64, ptr %16, align 8, !noundef !3
  %17 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Continue", ptr %_5, i32 0, i32 1
  store i64 %v5, ptr %17, align 8
  store i64 -9223372036854775807, ptr %_5, align 8
  br label %bb16

bb17:                                             ; preds = %bb14
  %e.0 = load i64, ptr %self, align 8, !range !12, !noundef !3
  %18 = getelementptr inbounds i8, ptr %self, i64 8
  %e.1 = load i64, ptr %18, align 8
  store i64 %e.0, ptr %_31, align 8
  %19 = getelementptr inbounds i8, ptr %_31, i64 8
  store i64 %e.1, ptr %19, align 8
  %20 = load i64, ptr %_31, align 8, !range !12, !noundef !3
  %21 = getelementptr inbounds i8, ptr %_31, i64 8
  %22 = load i64, ptr %21, align 8
  store i64 %20, ptr %_5, align 8
  %23 = getelementptr inbounds i8, ptr %_5, i64 8
  store i64 %22, ptr %23, align 8
  br label %bb16

bb16:                                             ; preds = %bb17, %bb18
  %24 = load i64, ptr %_5, align 8, !range !23, !noundef !3
  %25 = icmp eq i64 %24, -9223372036854775807
  %_9 = select i1 %25, i64 0, i64 1
  %26 = icmp eq i64 %_9, 0
  br i1 %26, label %bb4, label %bb5

bb4:                                              ; preds = %bb16
  %27 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, usize>::Continue", ptr %_5, i32 0, i32 1
  %buckets = load i64, ptr %27, align 8, !noundef !3
  %28 = load i8, ptr %fallibility, align 1, !range !10, !noundef !3
  %_15 = trunc i8 %28 to i1
; call hashbrown::raw::RawTableInner::new_uninitialized
  call void @_ZN9hashbrown3raw13RawTableInner17new_uninitialized17ha555d4be5d22c206E(ptr sret(%"core::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>") align 8 %self2, ptr align 1 %alloc, i64 %table_layout.0, i64 %table_layout.1, i64 %buckets, i1 zeroext %_15)
  %29 = load ptr, ptr %self2, align 8, !noundef !3
  %30 = ptrtoint ptr %29 to i64
  %31 = icmp eq i64 %30, 0
  %_33 = select i1 %31, i64 1, i64 0
  %32 = icmp eq i64 %_33, 0
  br i1 %32, label %bb21, label %bb20

bb5:                                              ; preds = %bb16
  %33 = load i64, ptr %_5, align 8, !range !12, !noundef !3
  %34 = getelementptr inbounds i8, ptr %_5, i64 8
  %35 = load i64, ptr %34, align 8
  store i64 %33, ptr %residual, align 8
  %36 = getelementptr inbounds i8, ptr %residual, i64 8
  store i64 %35, ptr %36, align 8
  %e.011 = load i64, ptr %residual, align 8, !range !12, !noundef !3
  %37 = getelementptr inbounds i8, ptr %residual, i64 8
  %e.112 = load i64, ptr %37, align 8
  %38 = getelementptr inbounds %"core::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>::Err", ptr %_0, i32 0, i32 1
  store i64 %e.011, ptr %38, align 8
  %39 = getelementptr inbounds i8, ptr %38, i64 8
  store i64 %e.112, ptr %39, align 8
  store ptr null, ptr %_0, align 8
  br label %bb10

bb21:                                             ; preds = %bb4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v, ptr align 8 %self2, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_13, ptr align 8 %v, i64 32, i1 false)
  br label %bb19

bb20:                                             ; preds = %bb4
  %40 = getelementptr inbounds %"core::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>::Err", ptr %self2, i32 0, i32 1
  %e.06 = load i64, ptr %40, align 8, !range !12, !noundef !3
  %41 = getelementptr inbounds i8, ptr %40, i64 8
  %e.17 = load i64, ptr %41, align 8
  store i64 %e.06, ptr %_36, align 8
  %42 = getelementptr inbounds i8, ptr %_36, i64 8
  store i64 %e.17, ptr %42, align 8
  %43 = load i64, ptr %_36, align 8, !range !12, !noundef !3
  %44 = getelementptr inbounds i8, ptr %_36, i64 8
  %45 = load i64, ptr %44, align 8
  %46 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner>::Break", ptr %_13, i32 0, i32 1
  store i64 %43, ptr %46, align 8
  %47 = getelementptr inbounds i8, ptr %46, i64 8
  store i64 %45, ptr %47, align 8
  store ptr null, ptr %_13, align 8
  br label %bb19

bb19:                                             ; preds = %bb20, %bb21
  %48 = load ptr, ptr %_13, align 8, !noundef !3
  %49 = ptrtoint ptr %48 to i64
  %50 = icmp eq i64 %49, 0
  %_16 = select i1 %50, i64 1, i64 0
  %51 = icmp eq i64 %_16, 0
  br i1 %51, label %bb7, label %bb8

bb7:                                              ; preds = %bb19
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %_13, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %result, ptr align 8 %val, i64 32, i1 false)
  %self8 = load ptr, ptr %result, align 8, !nonnull !3, !noundef !3
  %52 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %result, i32 0, i32 1
  %_42 = load i64, ptr %52, align 8, !noundef !3
  %_41 = add i64 %_42, 1
  %count = add i64 %_41, 16
  %53 = mul i64 1, %count
  call void @llvm.memset.p0.i64(ptr align 1 %self8, i8 -1, i64 %53, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_23, ptr align 8 %result, i64 32, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_23, i64 32, i1 false)
  br label %bb9

bb8:                                              ; preds = %bb19
  %54 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::raw::RawTableInner>::Break", ptr %_13, i32 0, i32 1
  %55 = load i64, ptr %54, align 8, !range !12, !noundef !3
  %56 = getelementptr inbounds i8, ptr %54, i64 8
  %57 = load i64, ptr %56, align 8
  store i64 %55, ptr %residual3, align 8
  %58 = getelementptr inbounds i8, ptr %residual3, i64 8
  store i64 %57, ptr %58, align 8
  %e.09 = load i64, ptr %residual3, align 8, !range !12, !noundef !3
  %59 = getelementptr inbounds i8, ptr %residual3, i64 8
  %e.110 = load i64, ptr %59, align 8
  %60 = getelementptr inbounds %"core::result::Result<hashbrown::raw::RawTableInner, hashbrown::TryReserveError>::Err", ptr %_0, i32 0, i32 1
  store i64 %e.09, ptr %60, align 8
  %61 = getelementptr inbounds i8, ptr %60, i64 8
  store i64 %e.110, ptr %61, align 8
  store ptr null, ptr %_0, align 8
  br label %bb10

bb11:                                             ; preds = %bb10, %bb9
  ret void

bb10:                                             ; preds = %bb5, %bb8
  br label %bb11

bb23:                                             ; No predecessors!
  unreachable
}

; hashbrown::raw::RawTableInner::prepare_rehash_in_place
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN9hashbrown3raw13RawTableInner23prepare_rehash_in_place17h9299bb914af564d0E(ptr align 8 %self) unnamed_addr #0 {
start:
  %0 = alloca <2 x i64>, align 16
  %1 = alloca <2 x i64>, align 16
  %2 = alloca <2 x i64>, align 16
  %3 = alloca <2 x i64>, align 16
  %4 = alloca i8, align 1
  %self3 = alloca i64, align 8
  %group = alloca <2 x i64>, align 16
  %_6 = alloca %"core::option::Option<usize>", align 8
  %iter = alloca %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>", align 8
  %self2 = alloca %"core::ops::range::Range<usize>", align 8
  %self1 = alloca %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>", align 8
  %5 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 1
  %_24 = load i64, ptr %5, align 8, !noundef !3
  %_4 = add i64 %_24, 1
  store i64 0, ptr %self2, align 8
  %6 = getelementptr inbounds i8, ptr %self2, i64 8
  store i64 %_4, ptr %6, align 8
  %7 = load i64, ptr %self2, align 8, !noundef !3
  %8 = getelementptr inbounds i8, ptr %self2, i64 8
  %9 = load i64, ptr %8, align 8, !noundef !3
; call core::iter::adapters::step_by::StepBy<I>::new
  call void @"_ZN4core4iter8adapters7step_by15StepBy$LT$I$GT$3new17h12e77c4fdde7c810E"(ptr sret(%"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>") align 8 %self1, i64 %7, i64 %9, i64 16)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter, ptr align 8 %self1, i64 32, i1 false)
  br label %bb1

bb1:                                              ; preds = %bb2, %start
  %10 = getelementptr inbounds %"core::iter::adapters::step_by::StepBy<core::ops::range::Range<usize>>", ptr %iter, i32 0, i32 1
  %_27 = load i64, ptr %10, align 8, !noundef !3
  %step = add i64 %_27, 1
  store i64 %step, ptr %self3, align 8
  %11 = getelementptr inbounds i8, ptr %iter, i64 8
  %remaining = load i64, ptr %11, align 8, !noundef !3
  %_29 = icmp ugt i64 %remaining, 0
  br i1 %_29, label %bb10, label %bb11

bb11:                                             ; preds = %bb1
  %12 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %13 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %12, ptr %_6, align 8
  %14 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 %13, ptr %14, align 8
  br label %bb12

bb10:                                             ; preds = %bb1
  %val = load i64, ptr %iter, align 8, !noundef !3
  %_31 = add i64 %val, %step
  store i64 %_31, ptr %iter, align 8
  %15 = getelementptr inbounds i8, ptr %iter, i64 8
  %16 = sub i64 %remaining, 1
  store i64 %16, ptr %15, align 8
  %17 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 %val, ptr %17, align 8
  store i64 1, ptr %_6, align 8
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %_8 = load i64, ptr %_6, align 8, !range !9, !noundef !3
  %18 = icmp eq i64 %_8, 0
  br i1 %18, label %bb3, label %bb2

bb3:                                              ; preds = %bb12
  %19 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 1
  %_35 = load i64, ptr %19, align 8, !noundef !3
  %_17 = add i64 %_35, 1
  %_16 = icmp ult i64 %_17, 16
  %20 = call i1 @llvm.expect.i1(i1 %_16, i1 false)
  %21 = zext i1 %20 to i8
  store i8 %21, ptr %4, align 1
  %22 = load i8, ptr %4, align 1, !range !10, !noundef !3
  %_15 = trunc i8 %22 to i1
  br i1 %_15, label %bb6, label %bb7

bb2:                                              ; preds = %bb12
  %23 = getelementptr inbounds i8, ptr %_6, i64 8
  %i = load i64, ptr %23, align 8, !noundef !3
  %self9 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_12 = getelementptr inbounds i8, ptr %self9, i64 %i
; call core::core_arch::x86::sse2::_mm_load_si128
  call void @_ZN4core9core_arch3x864sse214_mm_load_si12817h0fff7d8714e4d2bdE(ptr sret(<2 x i64>) align 16 %3, ptr %_12)
  %_37 = load <2 x i64>, ptr %3, align 16
  store <2 x i64> %_37, ptr %group, align 16
  %24 = load <2 x i64>, ptr %group, align 16
  store <2 x i64> %24, ptr %1, align 16
; call hashbrown::raw::sse2::Group::convert_special_to_empty_and_full_to_deleted
  call void @_ZN9hashbrown3raw4sse25Group44convert_special_to_empty_and_full_to_deleted17h6f09278036099cbeE(ptr sret(<2 x i64>) align 16 %2, ptr align 16 %1)
  %group10 = load <2 x i64>, ptr %2, align 16
  %self11 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %ptr = getelementptr inbounds i8, ptr %self11, i64 %i
  store <2 x i64> %group10, ptr %0, align 16
; call core::core_arch::x86::sse2::_mm_store_si128
  call void @_ZN4core9core_arch3x864sse215_mm_store_si12817hee68af34262be4d4E(ptr %ptr, ptr align 16 %0)
  br label %bb1

bb7:                                              ; preds = %bb3
  %self4 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %25 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 1
  %_56 = load i64, ptr %25, align 8, !noundef !3
  %index = add i64 %_56, 1
  %self5 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %dest = getelementptr inbounds i8, ptr %self5, i64 %index
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %dest, ptr align 1 %self4, i64 16, i1 false)
  br label %bb8

bb6:                                              ; preds = %bb3
  %self6 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %self7 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %dest8 = getelementptr inbounds i8, ptr %self7, i64 16
  %26 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 1
  %_51 = load i64, ptr %26, align 8, !noundef !3
  %count = add i64 %_51, 1
  %27 = mul i64 1, %count
  call void @llvm.memmove.p0.p0.i64(ptr align 1 %dest8, ptr align 1 %self6, i64 %27, i1 false)
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret void

bb17:                                             ; No predecessors!
  unreachable
}

; hashbrown::raw::RawTableInner::find_insert_slot_in_group
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN9hashbrown3raw13RawTableInner25find_insert_slot_in_group17hf32d211408d76c07E(ptr align 8 %self, ptr align 16 %group, ptr align 8 %probe_seq) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = alloca <2 x i64>, align 16
  %self1 = alloca %"core::option::Option<usize>", align 8
  %_5 = alloca i16, align 2
  %bit = alloca %"core::option::Option<usize>", align 8
  %_0 = alloca %"core::option::Option<usize>", align 8
  %self2 = load <2 x i64>, ptr %group, align 16
  store <2 x i64> %self2, ptr %1, align 16
; call core::core_arch::x86::sse2::_mm_movemask_epi8
  %_16 = call i32 @_ZN4core9core_arch3x864sse217_mm_movemask_epi817h5ebf5ba4849673e8E(ptr align 16 %1)
  %_15 = trunc i32 %_16 to i16
  store i16 %_15, ptr %_5, align 2
  %2 = load i16, ptr %_5, align 2, !noundef !3
; call hashbrown::raw::bitmask::BitMask::lowest_set_bit
  %3 = call { i64, i64 } @_ZN9hashbrown3raw7bitmask7BitMask14lowest_set_bit17h9bb00bc7a31e6b77E(i16 %2)
  %4 = extractvalue { i64, i64 } %3, 0
  %5 = extractvalue { i64, i64 } %3, 1
  store i64 %4, ptr %bit, align 8
  %6 = getelementptr inbounds i8, ptr %bit, i64 8
  store i64 %5, ptr %6, align 8
  %_17 = load i64, ptr %bit, align 8, !range !9, !noundef !3
  %_7 = icmp eq i64 %_17, 1
  %7 = call i1 @llvm.expect.i1(i1 %_7, i1 true)
  %8 = zext i1 %7 to i8
  store i8 %8, ptr %0, align 1
  %9 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_6 = trunc i8 %9 to i1
  br i1 %_6, label %bb3, label %bb4

bb4:                                              ; preds = %start
  %10 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %11 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %10, ptr %_0, align 8
  %12 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %11, ptr %12, align 8
  br label %bb5

bb3:                                              ; preds = %start
  %_11 = load i64, ptr %probe_seq, align 8, !noundef !3
  %13 = load i64, ptr %bit, align 8, !range !9, !noundef !3
  %14 = getelementptr inbounds i8, ptr %bit, i64 8
  %15 = load i64, ptr %14, align 8
  store i64 %13, ptr %self1, align 8
  %16 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %15, ptr %16, align 8
  %_18 = load i64, ptr %self1, align 8, !range !9, !noundef !3
  %17 = icmp eq i64 %_18, 0
  br i1 %17, label %bb7, label %bb8

bb5:                                              ; preds = %bb8, %bb4
  %18 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %19 = getelementptr inbounds i8, ptr %_0, i64 8
  %20 = load i64, ptr %19, align 8
  %21 = insertvalue { i64, i64 } poison, i64 %18, 0
  %22 = insertvalue { i64, i64 } %21, i64 %20, 1
  ret { i64, i64 } %22

bb7:                                              ; preds = %bb3
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h630ca121a67dc3e4E(ptr align 8 @alloc_7fdd578fc20d48c7b024df126e168bd1) #27
  unreachable

bb8:                                              ; preds = %bb3
  %23 = getelementptr inbounds i8, ptr %self1, i64 8
  %val = load i64, ptr %23, align 8, !noundef !3
  %_10 = add i64 %_11, %val
  %24 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 1
  %_14 = load i64, ptr %24, align 8, !noundef !3
  %_9 = and i64 %_10, %_14
  %25 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_9, ptr %25, align 8
  store i64 1, ptr %_0, align 8
  br label %bb5

bb9:                                              ; No predecessors!
  unreachable
}

; hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN9hashbrown3raw13RawTableInner30find_or_find_insert_slot_inner17h2d6350d0706b6453E(ptr align 8 %self, i64 %hash, ptr align 1 %eq.0, ptr align 8 %eq.1) unnamed_addr #0 {
start:
  %0 = alloca i8, align 1
  %1 = alloca i8, align 1
  %2 = alloca <2 x i64>, align 16
  %3 = alloca <2 x i64>, align 16
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = alloca i8, align 1
  %8 = alloca <2 x i64>, align 16
  %9 = alloca <2 x i64>, align 16
  %10 = alloca <2 x i64>, align 16
  %11 = alloca <2 x i64>, align 16
  %12 = alloca <2 x i64>, align 16
  %13 = alloca <2 x i64>, align 16
  %_50 = alloca i16, align 2
  %self1 = alloca %"core::option::Option<usize>", align 8
  %_22 = alloca i64, align 8
  %_13 = alloca %"core::option::Option<usize>", align 8
  %iter = alloca i16, align 2
  %_11 = alloca i16, align 2
  %group = alloca <2 x i64>, align 16
  %probe_seq = alloca %"hashbrown::raw::ProbeSeq", align 8
  %insert_slot = alloca %"core::option::Option<usize>", align 8
  %_0 = alloca %"core::result::Result<usize, hashbrown::raw::InsertSlot>", align 8
  %14 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %15 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %14, ptr %insert_slot, align 8
  %16 = getelementptr inbounds i8, ptr %insert_slot, i64 8
  store i64 %15, ptr %16, align 8
  %top7 = lshr i64 %hash, 57
  %_36 = and i64 %top7, 127
  %h2_hash = trunc i64 %_36 to i8
  %17 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 1
  %bucket_mask = load i64, ptr %17, align 8, !noundef !3
  %_37 = and i64 %hash, %bucket_mask
  store i64 %_37, ptr %probe_seq, align 8
  %18 = getelementptr inbounds i8, ptr %probe_seq, i64 8
  store i64 0, ptr %18, align 8
  br label %bb1

bb1:                                              ; preds = %bb18, %start
  %index = load i64, ptr %probe_seq, align 8, !noundef !3
  %self2 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_9 = getelementptr inbounds i8, ptr %self2, i64 %index
; call core::core_arch::x86::sse2::_mm_loadu_si128
  call void @_ZN4core9core_arch3x864sse215_mm_loadu_si12817ha1d2e2bdd862a6b7E(ptr sret(<2 x i64>) align 16 %13, ptr %_9)
  %_43 = load <2 x i64>, ptr %13, align 16
  store <2 x i64> %_43, ptr %group, align 16
  %self3 = load <2 x i64>, ptr %group, align 16
; call core::core_arch::x86::sse2::_mm_set1_epi8
  call void @_ZN4core9core_arch3x864sse213_mm_set1_epi817ha78ed8defa5638e9E(ptr sret(<2 x i64>) align 16 %12, i8 %h2_hash)
  %_46 = load <2 x i64>, ptr %12, align 16
  store <2 x i64> %self3, ptr %10, align 16
  store <2 x i64> %_46, ptr %9, align 16
; call core::core_arch::x86::sse2::_mm_cmpeq_epi8
  call void @_ZN4core9core_arch3x864sse214_mm_cmpeq_epi817h1a3c97347aef0309E(ptr sret(<2 x i64>) align 16 %11, ptr align 16 %10, ptr align 16 %9)
  %cmp = load <2 x i64>, ptr %11, align 16
  store <2 x i64> %cmp, ptr %8, align 16
; call core::core_arch::x86::sse2::_mm_movemask_epi8
  %_49 = call i32 @_ZN4core9core_arch3x864sse217_mm_movemask_epi817h5ebf5ba4849673e8E(ptr align 16 %8)
  %self4 = trunc i32 %_49 to i16
  store i16 %self4, ptr %_50, align 2
  %19 = load i16, ptr %_50, align 2, !noundef !3
  store i16 %19, ptr %_11, align 2
  %20 = load i16, ptr %_11, align 2, !noundef !3
  store i16 %20, ptr %iter, align 2
  br label %bb2

bb2:                                              ; preds = %bb9, %bb1
; call <hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator>::next
  %21 = call { i64, i64 } @"_ZN95_$LT$hashbrown..raw..bitmask..BitMaskIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb21ce954e445f1a9E"(ptr align 2 %iter)
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  store i64 %22, ptr %_13, align 8
  %24 = getelementptr inbounds i8, ptr %_13, i64 8
  store i64 %23, ptr %24, align 8
  %_15 = load i64, ptr %_13, align 8, !range !9, !noundef !3
  %25 = icmp eq i64 %_15, 0
  br i1 %25, label %bb5, label %bb4

bb5:                                              ; preds = %bb2
  %_52 = load i64, ptr %insert_slot, align 8, !range !9, !noundef !3
  %_51 = icmp eq i64 %_52, 1
  %_24 = xor i1 %_51, true
  %26 = call i1 @llvm.expect.i1(i1 %_24, i1 true)
  %27 = zext i1 %26 to i8
  store i8 %27, ptr %7, align 1
  %28 = load i8, ptr %7, align 1, !range !10, !noundef !3
  %_23 = trunc i8 %28 to i1
  br i1 %_23, label %bb11, label %bb13

bb4:                                              ; preds = %bb2
  %29 = getelementptr inbounds i8, ptr %_13, i64 8
  %bit = load i64, ptr %29, align 8, !noundef !3
  %_19 = load i64, ptr %probe_seq, align 8, !noundef !3
  %_18 = add i64 %_19, %bit
  %index8 = and i64 %_18, %bucket_mask
  store i64 %index8, ptr %_22, align 8
  %30 = getelementptr inbounds ptr, ptr %eq.1, i64 4
  %31 = load ptr, ptr %30, align 8, !invariant.load !3, !nonnull !3
  %32 = load i64, ptr %_22, align 8, !noundef !3
  %_21 = call zeroext i1 %31(ptr align 1 %eq.0, i64 %32)
  %33 = call i1 @llvm.expect.i1(i1 %_21, i1 true)
  %34 = zext i1 %33 to i8
  store i8 %34, ptr %0, align 1
  %35 = load i8, ptr %0, align 1, !range !10, !noundef !3
  %_20 = trunc i8 %35 to i1
  br i1 %_20, label %bb8, label %bb9

bb13:                                             ; preds = %bb5
  br label %bb14

bb11:                                             ; preds = %bb5
; call hashbrown::raw::RawTableInner::find_insert_slot_in_group
  %36 = call { i64, i64 } @_ZN9hashbrown3raw13RawTableInner25find_insert_slot_in_group17hf32d211408d76c07E(ptr align 8 %self, ptr align 16 %group, ptr align 8 %probe_seq)
  %_26.0 = extractvalue { i64, i64 } %36, 0
  %_26.1 = extractvalue { i64, i64 } %36, 1
  store i64 %_26.0, ptr %insert_slot, align 8
  %37 = getelementptr inbounds i8, ptr %insert_slot, i64 8
  store i64 %_26.1, ptr %37, align 8
  br label %bb14

bb14:                                             ; preds = %bb11, %bb13
  %self5 = load <2 x i64>, ptr %group, align 16
; call core::core_arch::x86::sse2::_mm_set1_epi8
  call void @_ZN4core9core_arch3x864sse213_mm_set1_epi817ha78ed8defa5638e9E(ptr sret(<2 x i64>) align 16 %6, i8 -1)
  %_54 = load <2 x i64>, ptr %6, align 16
  store <2 x i64> %self5, ptr %4, align 16
  store <2 x i64> %_54, ptr %3, align 16
; call core::core_arch::x86::sse2::_mm_cmpeq_epi8
  call void @_ZN4core9core_arch3x864sse214_mm_cmpeq_epi817h1a3c97347aef0309E(ptr sret(<2 x i64>) align 16 %5, ptr align 16 %4, ptr align 16 %3)
  %cmp6 = load <2 x i64>, ptr %5, align 16
  store <2 x i64> %cmp6, ptr %2, align 16
; call core::core_arch::x86::sse2::_mm_movemask_epi8
  %_56 = call i32 @_ZN4core9core_arch3x864sse217_mm_movemask_epi817h5ebf5ba4849673e8E(ptr align 16 %2)
  %self7 = trunc i32 %_56 to i16
  %_30 = icmp ne i16 %self7, 0
  %38 = call i1 @llvm.expect.i1(i1 %_30, i1 true)
  %39 = zext i1 %38 to i8
  store i8 %39, ptr %1, align 1
  %40 = load i8, ptr %1, align 1, !range !10, !noundef !3
  %_29 = trunc i8 %40 to i1
  br i1 %_29, label %bb16, label %bb18

bb18:                                             ; preds = %bb14
  %41 = getelementptr inbounds i8, ptr %probe_seq, i64 8
  %42 = getelementptr inbounds i8, ptr %probe_seq, i64 8
  %43 = load i64, ptr %42, align 8, !noundef !3
  %44 = add i64 %43, 16
  store i64 %44, ptr %41, align 8
  %45 = getelementptr inbounds i8, ptr %probe_seq, i64 8
  %_61 = load i64, ptr %45, align 8, !noundef !3
  %46 = load i64, ptr %probe_seq, align 8, !noundef !3
  %47 = add i64 %46, %_61
  store i64 %47, ptr %probe_seq, align 8
  %48 = load i64, ptr %probe_seq, align 8, !noundef !3
  %49 = and i64 %48, %bucket_mask
  store i64 %49, ptr %probe_seq, align 8
  br label %bb1

bb16:                                             ; preds = %bb14
  %50 = load i64, ptr %insert_slot, align 8, !range !9, !noundef !3
  %51 = getelementptr inbounds i8, ptr %insert_slot, i64 8
  %52 = load i64, ptr %51, align 8
  store i64 %50, ptr %self1, align 8
  %53 = getelementptr inbounds i8, ptr %self1, i64 8
  store i64 %52, ptr %53, align 8
  %_58 = load i64, ptr %self1, align 8, !range !9, !noundef !3
  %_59 = icmp eq i64 %_58, 1
  call void @llvm.assume(i1 %_59)
  %54 = getelementptr inbounds i8, ptr %self1, i64 8
  %val = load i64, ptr %54, align 8, !noundef !3
; call hashbrown::raw::RawTableInner::fix_insert_slot
  %_31 = call i64 @_ZN9hashbrown3raw13RawTableInner15fix_insert_slot17h70803c16935db921E(ptr align 8 %self, i64 %val)
  %55 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_31, ptr %55, align 8
  store i64 1, ptr %_0, align 8
  br label %bb19

bb19:                                             ; preds = %bb8, %bb16
  %56 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %57 = getelementptr inbounds i8, ptr %_0, i64 8
  %58 = load i64, ptr %57, align 8, !noundef !3
  %59 = insertvalue { i64, i64 } poison, i64 %56, 0
  %60 = insertvalue { i64, i64 } %59, i64 %58, 1
  ret { i64, i64 } %60

bb9:                                              ; preds = %bb4
  br label %bb2

bb8:                                              ; preds = %bb4
  %61 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %index8, ptr %61, align 8
  store i64 0, ptr %_0, align 8
  br label %bb19

bb27:                                             ; No predecessors!
  unreachable
}

; hashbrown::raw::Bucket<T>::from_base_index
; Function Attrs: inlinehint nonlazybind uwtable
define ptr @"_ZN9hashbrown3raw15Bucket$LT$T$GT$15from_base_index17hd169070a6b8948a4E"(ptr %base, i64 %index) unnamed_addr #0 {
start:
  %_7 = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %_0 = alloca ptr, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  br i1 false, label %bb4, label %bb5

bb1:                                              ; preds = %start
  %addr = add i64 %index, 1
  %0 = inttoptr i64 %addr to ptr
  store ptr %0, ptr %ptr, align 8
  br label %bb3

bb5:                                              ; preds = %bb2
  %count = sub nsw i64 0, %index
  %1 = getelementptr inbounds { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, ptr %base, i64 %count
  store ptr %1, ptr %ptr, align 8
  br label %bb6

bb4:                                              ; preds = %bb2
  store ptr %base, ptr %ptr, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  br label %bb3

bb3:                                              ; preds = %bb1, %bb6
  %ptr1 = load ptr, ptr %ptr, align 8, !noundef !3
  store ptr %ptr1, ptr %_7, align 8
  %2 = load ptr, ptr %_7, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %_0, align 8
  %3 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  ret ptr %3
}

; hashbrown::raw::Bucket<T>::drop
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw15Bucket$LT$T$GT$4drop17hcd3ddbe90bae4b9bE"(ptr align 8 %self) unnamed_addr #1 {
start:
  %self1 = alloca ptr, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self2 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  br i1 false, label %bb4, label %bb5

bb1:                                              ; preds = %start
  store ptr inttoptr (i64 8 to ptr), ptr %self1, align 8
  br label %bb3

bb5:                                              ; preds = %bb2
  %0 = getelementptr inbounds { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, ptr %self2, i64 -1
  store ptr %0, ptr %self1, align 8
  br label %bb6

bb4:                                              ; preds = %bb2
  store ptr %self2, ptr %self1, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  br label %bb3

bb3:                                              ; preds = %bb1, %bb6
  %1 = load ptr, ptr %self1, align 8, !noundef !3
; call core::ptr::drop_in_place<(alloc::string::String,core::option::Option<alloc::string::String>)>
  call void @"_ZN4core3ptr102drop_in_place$LT$$LP$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$RP$$GT$17hd5c989e80d38ed15E"(ptr align 8 %1)
  ret void
}

; hashbrown::raw::Bucket<T>::next_n
; Function Attrs: inlinehint nonlazybind uwtable
define ptr @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6next_n17hff01d9fbcd5a6450E"(ptr align 8 %self, i64 %offset) unnamed_addr #0 {
start:
  %_11 = alloca ptr, align 8
  %ptr = alloca ptr, align 8
  %_0 = alloca ptr, align 8
  br i1 false, label %bb1, label %bb2

bb2:                                              ; preds = %start
  %self1 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  br i1 false, label %bb4, label %bb5

bb1:                                              ; preds = %start
  %self2 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_6 = ptrtoint ptr %self2 to i64
  %addr = add i64 %_6, %offset
  %0 = inttoptr i64 %addr to ptr
  store ptr %0, ptr %ptr, align 8
  br label %bb3

bb5:                                              ; preds = %bb2
  %count = sub nsw i64 0, %offset
  %1 = getelementptr inbounds { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, ptr %self1, i64 %count
  store ptr %1, ptr %ptr, align 8
  br label %bb6

bb4:                                              ; preds = %bb2
  store ptr %self1, ptr %ptr, align 8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  br label %bb3

bb3:                                              ; preds = %bb1, %bb6
  %ptr3 = load ptr, ptr %ptr, align 8, !noundef !3
  store ptr %ptr3, ptr %_11, align 8
  %2 = load ptr, ptr %_11, align 8, !nonnull !3, !noundef !3
  store ptr %2, ptr %_0, align 8
  %3 = load ptr, ptr %_0, align 8, !nonnull !3, !noundef !3
  ret ptr %3
}

; hashbrown::raw::capacity_to_buckets
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN9hashbrown3raw19capacity_to_buckets17h276839bd41adc83cE(i64 %cap) unnamed_addr #0 {
start:
  %0 = alloca i64, align 8
  %1 = alloca i8, align 1
  %_20 = alloca i64, align 8
  %self = alloca %"core::option::Option<usize>", align 8
  %_7 = alloca %"core::ops::control_flow::ControlFlow<core::option::Option<core::convert::Infallible>, usize>", align 8
  %_4 = alloca i64, align 8
  %_0 = alloca %"core::option::Option<usize>", align 8
  %_3 = icmp ult i64 %cap, 8
  br i1 %_3, label %bb1, label %bb5

bb5:                                              ; preds = %start
  %2 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %cap, i64 8)
  %_15.0 = extractvalue { i64, i1 } %2, 0
  %_15.1 = extractvalue { i64, i1 } %2, 1
  %3 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false)
  %4 = zext i1 %3 to i8
  store i8 %4, ptr %1, align 1
  %5 = load i8, ptr %1, align 1, !range !10, !noundef !3
  %_12 = trunc i8 %5 to i1
  br i1 %_12, label %bb10, label %bb11

bb1:                                              ; preds = %start
  %_5 = icmp ult i64 %cap, 4
  br i1 %_5, label %bb2, label %bb3

bb11:                                             ; preds = %bb5
  %6 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %_15.0, ptr %6, align 8
  store i64 1, ptr %self, align 8
  br label %bb12

bb10:                                             ; preds = %bb5
  %7 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %8 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %7, ptr %self, align 8
  %9 = getelementptr inbounds i8, ptr %self, i64 8
  store i64 %8, ptr %9, align 8
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %_18 = load i64, ptr %self, align 8, !range !9, !noundef !3
  %10 = icmp eq i64 %_18, 0
  br i1 %10, label %bb14, label %bb15

bb14:                                             ; preds = %bb12
  %11 = load i64, ptr @6, align 8, !range !9, !noundef !3
  %12 = load i64, ptr getelementptr inbounds (i8, ptr @6, i64 8), align 8
  store i64 %11, ptr %_7, align 8
  %13 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %12, ptr %13, align 8
  br label %bb13

bb15:                                             ; preds = %bb12
  %14 = getelementptr inbounds i8, ptr %self, i64 8
  %v = load i64, ptr %14, align 8, !noundef !3
  %15 = getelementptr inbounds i8, ptr %_7, i64 8
  store i64 %v, ptr %15, align 8
  store i64 0, ptr %_7, align 8
  br label %bb13

bb13:                                             ; preds = %bb15, %bb14
  %_9 = load i64, ptr %_7, align 8, !range !9, !noundef !3
  %16 = icmp eq i64 %_9, 0
  br i1 %16, label %bb6, label %bb7

bb6:                                              ; preds = %bb13
  %17 = getelementptr inbounds i8, ptr %_7, i64 8
  %val = load i64, ptr %17, align 8, !noundef !3
  %adjusted_cap = udiv i64 %val, 7
  %_22 = icmp ule i64 %adjusted_cap, 1
  br i1 %_22, label %bb18, label %bb19

bb7:                                              ; preds = %bb13
  %18 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %19 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %18, ptr %_0, align 8
  %20 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %19, ptr %20, align 8
  br label %bb8

bb19:                                             ; preds = %bb6
  %p = sub i64 %adjusted_cap, 1
  %21 = call i64 @llvm.ctlz.i64(i64 %p, i1 true)
  store i64 %21, ptr %0, align 8
  %z = load i64, ptr %0, align 8, !noundef !3
  %22 = and i64 %z, 63
  %23 = lshr i64 -1, %22
  store i64 %23, ptr %_20, align 8
  br label %bb17

bb18:                                             ; preds = %bb6
  store i64 0, ptr %_20, align 8
  br label %bb17

bb17:                                             ; preds = %bb18, %bb19
  %24 = load i64, ptr %_20, align 8, !noundef !3
  %25 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %24, i64 1)
  %_21.0 = extractvalue { i64, i1 } %25, 0
  %_21.1 = extractvalue { i64, i1 } %25, 1
  %26 = call i1 @llvm.expect.i1(i1 %_21.1, i1 false)
  br i1 %26, label %panic, label %bb16

bb16:                                             ; preds = %bb17
  %27 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_21.0, ptr %27, align 8
  store i64 1, ptr %_0, align 8
  br label %bb8

panic:                                            ; preds = %bb17
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @str.i, i64 28, ptr align 8 @alloc_48cc1937a43f011ed300e26a9f1ec808) #27
  unreachable

bb8:                                              ; preds = %bb4, %bb7, %bb16
  %28 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %29 = getelementptr inbounds i8, ptr %_0, i64 8
  %30 = load i64, ptr %29, align 8
  %31 = insertvalue { i64, i64 } poison, i64 %28, 0
  %32 = insertvalue { i64, i64 } %31, i64 %30, 1
  ret { i64, i64 } %32

bb21:                                             ; No predecessors!
  unreachable

bb3:                                              ; preds = %bb1
  store i64 8, ptr %_4, align 8
  br label %bb4

bb2:                                              ; preds = %bb1
  store i64 4, ptr %_4, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %33 = load i64, ptr %_4, align 8, !noundef !3
  %34 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %33, ptr %34, align 8
  store i64 1, ptr %_0, align 8
  br label %bb8
}

; hashbrown::raw::RawIterRange<T>::new
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw21RawIterRange$LT$T$GT$3new17h0d09eb2087c5f73cE"(ptr sret(%"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>") align 8 %_0, ptr %ctrl, ptr %data, i64 %len) unnamed_addr #1 {
start:
  %0 = alloca <2 x i64>, align 16
  %1 = alloca <2 x i64>, align 16
  %_18 = alloca i16, align 2
  %_10 = alloca i16, align 2
  %_8 = alloca <2 x i64>, align 16
  %end = getelementptr inbounds i8, ptr %ctrl, i64 %len
; call core::core_arch::x86::sse2::_mm_load_si128
  call void @_ZN4core9core_arch3x864sse214_mm_load_si12817h0fff7d8714e4d2bdE(ptr sret(<2 x i64>) align 16 %1, ptr %ctrl)
  %_12 = load <2 x i64>, ptr %1, align 16
  store <2 x i64> %_12, ptr %_8, align 16
  %self = load <2 x i64>, ptr %_8, align 16
  store <2 x i64> %self, ptr %0, align 16
; call core::core_arch::x86::sse2::_mm_movemask_epi8
  %_15 = call i32 @_ZN4core9core_arch3x864sse217_mm_movemask_epi817h5ebf5ba4849673e8E(ptr align 16 %0)
  %self1 = trunc i32 %_15 to i16
  %current_group = xor i16 %self1, -1
  %next_ctrl = getelementptr inbounds i8, ptr %ctrl, i64 16
  store i16 %current_group, ptr %_18, align 2
  %2 = load i16, ptr %_18, align 2, !noundef !3
  store i16 %2, ptr %_10, align 2
  %3 = load i16, ptr %_10, align 2, !noundef !3
  %4 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %_0, i32 0, i32 3
  store i16 %3, ptr %4, align 8
  store ptr %data, ptr %_0, align 8
  %5 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %_0, i32 0, i32 1
  store ptr %next_ctrl, ptr %5, align 8
  %6 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %_0, i32 0, i32 2
  store ptr %end, ptr %6, align 8
  ret void
}

; hashbrown::raw::RawIterRange<T>::next_impl
; Function Attrs: nonlazybind uwtable
define ptr @"_ZN9hashbrown3raw21RawIterRange$LT$T$GT$9next_impl17hc8632cd1be0c66e1E"(ptr align 8 %self) unnamed_addr #1 {
start:
  %0 = alloca <2 x i64>, align 16
  %1 = alloca <2 x i64>, align 16
  %_26 = alloca i16, align 2
  %_13 = alloca <2 x i64>, align 16
  %_11 = alloca i16, align 2
  %_2 = alloca %"core::option::Option<usize>", align 8
  %_0 = alloca ptr, align 8
  br label %bb1

bb1:                                              ; preds = %bb9, %start
  %_3 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %self, i32 0, i32 3
; call <hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator>::next
  %2 = call { i64, i64 } @"_ZN95_$LT$hashbrown..raw..bitmask..BitMaskIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb21ce954e445f1a9E"(ptr align 2 %_3)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  store i64 %3, ptr %_2, align 8
  %5 = getelementptr inbounds i8, ptr %_2, i64 8
  store i64 %4, ptr %5, align 8
  %_4 = load i64, ptr %_2, align 8, !range !9, !noundef !3
  %6 = icmp eq i64 %_4, 1
  br i1 %6, label %bb3, label %bb5

bb3:                                              ; preds = %bb1
  %7 = getelementptr inbounds i8, ptr %_2, i64 8
  %index = load i64, ptr %7, align 8, !noundef !3
; call hashbrown::raw::Bucket<T>::next_n
  %_6 = call ptr @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6next_n17hff01d9fbcd5a6450E"(ptr align 8 %self, i64 %index)
  store ptr %_6, ptr %_0, align 8
  br label %bb11

bb5:                                              ; preds = %bb1
  br i1 false, label %bb6, label %bb9

bb11:                                             ; preds = %bb7, %bb3
  %8 = load ptr, ptr %_0, align 8, !noundef !3
  ret ptr %8

bb9:                                              ; preds = %bb8, %bb5
  %9 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %self, i32 0, i32 1
  %ptr = load ptr, ptr %9, align 8, !noundef !3
; call core::core_arch::x86::sse2::_mm_load_si128
  call void @_ZN4core9core_arch3x864sse214_mm_load_si12817h0fff7d8714e4d2bdE(ptr sret(<2 x i64>) align 16 %1, ptr %ptr)
  %_20 = load <2 x i64>, ptr %1, align 16
  store <2 x i64> %_20, ptr %_13, align 16
  %self1 = load <2 x i64>, ptr %_13, align 16
  store <2 x i64> %self1, ptr %0, align 16
; call core::core_arch::x86::sse2::_mm_movemask_epi8
  %_23 = call i32 @_ZN4core9core_arch3x864sse217_mm_movemask_epi817h5ebf5ba4849673e8E(ptr align 16 %0)
  %self2 = trunc i32 %_23 to i16
  %self3 = xor i16 %self2, -1
  store i16 %self3, ptr %_26, align 2
  %10 = load i16, ptr %_26, align 2, !noundef !3
  store i16 %10, ptr %_11, align 2
  %11 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %self, i32 0, i32 3
  %12 = load i16, ptr %_11, align 2, !noundef !3
  store i16 %12, ptr %11, align 8
; call hashbrown::raw::Bucket<T>::next_n
  %_15 = call ptr @"_ZN9hashbrown3raw15Bucket$LT$T$GT$6next_n17hff01d9fbcd5a6450E"(ptr align 8 %self, i64 16)
  store ptr %_15, ptr %self, align 8
  %13 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %self, i32 0, i32 1
  %self4 = load ptr, ptr %13, align 8, !noundef !3
  %_17 = getelementptr inbounds i8, ptr %self4, i64 16
  %14 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %self, i32 0, i32 1
  store ptr %_17, ptr %14, align 8
  br label %bb1

bb6:                                              ; preds = %bb5
  %15 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %self, i32 0, i32 1
  %_9 = load ptr, ptr %15, align 8, !noundef !3
  %16 = getelementptr inbounds %"hashbrown::raw::RawIterRange<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %self, i32 0, i32 2
  %_10 = load ptr, ptr %16, align 8, !noundef !3
  %_8 = icmp uge ptr %_9, %_10
  br i1 %_8, label %bb7, label %bb8

bb8:                                              ; preds = %bb6
  br label %bb9

bb7:                                              ; preds = %bb6
  store ptr null, ptr %_0, align 8
  br label %bb11
}

; hashbrown::raw::RawTable<T,A>::insert_in_slot
; Function Attrs: inlinehint nonlazybind uwtable
define ptr @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14insert_in_slot17h7ae4897927fe3ea4E"(ptr align 8 %self, i64 %hash, i64 %slot, ptr align 8 %value) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %self1 = alloca ptr, align 8
  %_36 = alloca ptr, align 8
  %val = alloca { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, align 8
  %bucket = alloca ptr, align 8
  %self2 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_6 = getelementptr inbounds i8, ptr %self2, i64 %slot
  %old_ctrl = load i8, ptr %_6, align 1, !noundef !3
  %_19 = and i8 %old_ctrl, 1
  %small = icmp ne i8 %_19, 0
  %_16 = zext i1 %small to i64
  %1 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 2
  %2 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 2
  %3 = load i64, ptr %2, align 8, !noundef !3
  %4 = sub i64 %3, %_16
  store i64 %4, ptr %1, align 8
  %top7 = lshr i64 %hash, 57
  %_22 = and i64 %top7, 127
  %ctrl = trunc i64 %_22 to i8
  %_25 = sub i64 %slot, 16
  %5 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 1
  %_26 = load i64, ptr %5, align 8, !noundef !3
  %_24 = and i64 %_25, %_26
  %index2 = add i64 %_24, 16
  %self3 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_27 = getelementptr inbounds i8, ptr %self3, i64 %slot
  store i8 %ctrl, ptr %_27, align 1
  %self4 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  %_28 = getelementptr inbounds i8, ptr %self4, i64 %index2
  store i8 %ctrl, ptr %_28, align 1
  %6 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 3
  %7 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 3
  %8 = load i64, ptr %7, align 8, !noundef !3
  %9 = add i64 %8, 1
  store i64 %9, ptr %6, align 8
  %self5 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store ptr %self5, ptr %_36, align 8
  %10 = load ptr, ptr %_36, align 8, !nonnull !3, !noundef !3
; invoke hashbrown::raw::Bucket<T>::from_base_index
  %11 = invoke ptr @"_ZN9hashbrown3raw15Bucket$LT$T$GT$15from_base_index17hd169070a6b8948a4E"(ptr %10, i64 %slot)
          to label %bb3 unwind label %cleanup

bb2:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<(alloc::string::String,core::option::Option<alloc::string::String>)>
  invoke void @"_ZN4core3ptr102drop_in_place$LT$$LP$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$RP$$GT$17hd5c989e80d38ed15E"(ptr align 8 %value) #28
          to label %bb1 unwind label %terminate

cleanup:                                          ; preds = %start
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %0, align 8
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb2

bb3:                                              ; preds = %start
  store ptr %11, ptr %bucket, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %value, i64 48, i1 false)
  br i1 false, label %bb4, label %bb5

bb5:                                              ; preds = %bb3
  %self6 = load ptr, ptr %bucket, align 8, !nonnull !3, !noundef !3
  br i1 false, label %bb7, label %bb8

bb4:                                              ; preds = %bb3
  store ptr inttoptr (i64 8 to ptr), ptr %self1, align 8
  br label %bb6

bb8:                                              ; preds = %bb5
  %16 = getelementptr inbounds { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, ptr %self6, i64 -1
  store ptr %16, ptr %self1, align 8
  br label %bb9

bb7:                                              ; preds = %bb5
  store ptr %self6, ptr %self1, align 8
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  br label %bb6

bb6:                                              ; preds = %bb4, %bb9
  %17 = load ptr, ptr %self1, align 8, !noundef !3
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %val, i64 48, i1 false)
  %_0 = load ptr, ptr %bucket, align 8, !nonnull !3, !noundef !3
  ret ptr %_0

terminate:                                        ; preds = %bb2
  %18 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb1:                                              ; preds = %bb2
  %21 = load ptr, ptr %0, align 8, !noundef !3
  %22 = getelementptr inbounds i8, ptr %0, i64 8
  %23 = load i32, ptr %22, align 8, !noundef !3
  %24 = insertvalue { ptr, i32 } poison, ptr %21, 0
  %25 = insertvalue { ptr, i32 } %24, i32 %23, 1
  resume { ptr, i32 } %25
}

; hashbrown::raw::RawTable<T,A>::reserve_rehash
; Function Attrs: cold noinline nonlazybind uwtable
define { i64, i64 } @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17hef28c907f58d5632E"(ptr align 8 %self, i64 %additional, ptr align 8 %0, i1 zeroext %fallibility) unnamed_addr #10 personality ptr @rust_eh_personality {
start:
  %1 = alloca <2 x i64>, align 16
  %2 = alloca <2 x i64>, align 16
  %_30.i5 = alloca i16, align 2
  %_14.i = alloca <2 x i64>, align 16
  %_12.i = alloca i16, align 2
  %_8.i6 = alloca ptr, align 8
  %_2.i = alloca %"core::option::Option<usize>", align 8
  %_0.i7 = alloca %"core::option::Option<usize>", align 8
  %3 = alloca <2 x i64>, align 16
  %4 = alloca <2 x i64>, align 16
  %_22.i2.i = alloca i16, align 2
  %_5.i.i = alloca <2 x i64>, align 16
  %_3.i.i = alloca i16, align 2
  %ctrl.i.i = alloca ptr, align 8
  %5 = alloca { ptr, i32, [1 x i32] }, align 8
  %self4.i.i = alloca ptr, align 8
  %self3.i.i = alloca ptr, align 8
  %_44.i.i = alloca %"core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>::Err", align 8
  %v.i.i = alloca %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", align 8
  %_40.i.i = alloca %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", align 8
  %_22.i.i = alloca { ptr, i64 }, align 8
  %_17.i.i = alloca %"core::option::Option<usize>", align 8
  %iter.i.i = alloca %"hashbrown::raw::FullBucketsIndices", align 8
  %self2.i.i = alloca %"hashbrown::raw::FullBucketsIndices", align 8
  %val.i.i = alloca %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", align 8
  %residual.i.i = alloca %"core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>::Err", align 8
  %self1.i.i = alloca %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>, hashbrown::TryReserveError>", align 8
  %_8.i.i = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>>", align 8
  %new_table.i.i = alloca %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", align 8
  %_0.i.i = alloca %"core::result::Result<(), hashbrown::TryReserveError>", align 8
  %6 = alloca i8, align 1
  %full_capacity.i = alloca i64, align 8
  %_8.i = alloca %"core::option::Option<usize>", align 8
  %_0.i = alloca %"core::result::Result<(), hashbrown::TryReserveError>", align 8
  %7 = alloca { ptr, i32, [1 x i32] }, align 8
  %_11 = alloca ptr, align 8
  %_9 = alloca ptr, align 8
  %hasher = alloca ptr, align 8
  store ptr %0, ptr %hasher, align 8
  %_6 = getelementptr inbounds %"hashbrown::raw::RawTable<(alloc::string::String, core::option::Option<alloc::string::String>)>", ptr %self, i32 0, i32 1
  store ptr %hasher, ptr %_9, align 8
  br i1 true, label %bb1, label %bb2

bb2:                                              ; preds = %start
  store ptr null, ptr %_11, align 8
  br label %bb3

bb1:                                              ; preds = %start
  store ptr @"_ZN4core3ptr102drop_in_place$LT$$LP$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$RP$$GT$17hd5c989e80d38ed15E", ptr %_11, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %8 = load ptr, ptr %_11, align 8, !noundef !3
  %9 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 3
  %self1.i = load i64, ptr %9, align 8, !noundef !3
  %10 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %self1.i, i64 %additional)
  %_26.0.i = extractvalue { i64, i1 } %10, 0
  %_26.1.i = extractvalue { i64, i1 } %10, 1
  %11 = call i1 @llvm.expect.i1(i1 %_26.1.i, i1 false)
  %12 = zext i1 %11 to i8
  store i8 %12, ptr %6, align 1
  %13 = load i8, ptr %6, align 1, !range !10, !noundef !3
  %_23.i = trunc i8 %13 to i1
  br i1 %_23.i, label %bb11.i, label %bb12.i

bb12.i:                                           ; preds = %bb3
  %14 = getelementptr inbounds i8, ptr %_8.i, i64 8
  store i64 %_26.0.i, ptr %14, align 8
  store i64 1, ptr %_8.i, align 8
  br label %bb13.i

bb11.i:                                           ; preds = %bb3
  store i64 0, ptr %_8.i, align 8
  %15 = getelementptr inbounds i8, ptr %_8.i, i64 8
  store i64 undef, ptr %15, align 8
  br label %bb13.i

bb13.i:                                           ; preds = %bb11.i, %bb12.i
  %_10.i = load i64, ptr %_8.i, align 8, !range !9, !noundef !3
  %16 = icmp eq i64 %_10.i, 0
  br i1 %16, label %bb1.i, label %bb2.i

bb1.i:                                            ; preds = %bb13.i
; invoke hashbrown::raw::Fallibility::capacity_overflow
  %17 = invoke { i64, i64 } @_ZN9hashbrown3raw11Fallibility17capacity_overflow17h1c17936991031757E(i1 zeroext %fallibility)
          to label %.noexc unwind label %cleanup

.noexc:                                           ; preds = %bb1.i
  %_12.0.i = extractvalue { i64, i64 } %17, 0
  %_12.1.i = extractvalue { i64, i64 } %17, 1
  store i64 %_12.0.i, ptr %_0.i, align 8
  %18 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store i64 %_12.1.i, ptr %18, align 8
  br label %_ZN9hashbrown3raw13RawTableInner20reserve_rehash_inner17hbab467d0f3a1b9fbE.exit

bb2.i:                                            ; preds = %bb13.i
  %19 = getelementptr inbounds i8, ptr %_8.i, i64 8
  %new_items.i = load i64, ptr %19, align 8, !noundef !3
  %20 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 1
  %bucket_mask.i = load i64, ptr %20, align 8, !noundef !3
  %_30.i = icmp ult i64 %bucket_mask.i, 8
  br i1 %_30.i, label %bb14.i, label %bb15.i

bb15.i:                                           ; preds = %bb2.i
  %_32.i = add i64 %bucket_mask.i, 1
  %_31.i = udiv i64 %_32.i, 8
  %21 = mul i64 %_31.i, 7
  store i64 %21, ptr %full_capacity.i, align 8
  br label %bb16.i

bb14.i:                                           ; preds = %bb2.i
  store i64 %bucket_mask.i, ptr %full_capacity.i, align 8
  br label %bb16.i

bb16.i:                                           ; preds = %bb14.i, %bb15.i
  %_17.i = load i64, ptr %full_capacity.i, align 8, !noundef !3
  %_16.i = udiv i64 %_17.i, 2
  %_15.i = icmp ule i64 %new_items.i, %_16.i
  br i1 %_15.i, label %bb4.i, label %bb6.i

bb6.i:                                            ; preds = %bb16.i
  %_22.i = load i64, ptr %full_capacity.i, align 8, !noundef !3
  %other.i = add i64 %_22.i, 1
; invoke core::cmp::max_by
  %_20.i1 = invoke i64 @_ZN4core3cmp6max_by17h6698c56507d4b445E(i64 %new_items.i, i64 %other.i)
          to label %_20.i.noexc unwind label %cleanup

_20.i.noexc:                                      ; preds = %bb6.i
; invoke hashbrown::raw::RawTableInner::prepare_resize
  invoke void @_ZN9hashbrown3raw13RawTableInner14prepare_resize17h73610dfd0f93f006E(ptr sret(%"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>, hashbrown::TryReserveError>") align 8 %self1.i.i, ptr align 8 %self, ptr align 1 %_6, i64 48, i64 16, i64 %_20.i1, i1 zeroext %fallibility)
          to label %.noexc2 unwind label %cleanup

.noexc2:                                          ; preds = %_20.i.noexc
  %22 = load ptr, ptr %self1.i.i, align 8, !noundef !3
  %23 = ptrtoint ptr %22 to i64
  %24 = icmp eq i64 %23, 0
  %_41.i.i = select i1 %24, i64 1, i64 0
  %25 = icmp eq i64 %_41.i.i, 0
  br i1 %25, label %bb16.i.i, label %bb15.i.i

bb16.i.i:                                         ; preds = %.noexc2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %v.i.i, ptr align 8 %self1.i.i, i64 56, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_8.i.i, ptr align 8 %v.i.i, i64 56, i1 false)
  br label %bb14.i.i

bb15.i.i:                                         ; preds = %.noexc2
  %26 = getelementptr inbounds %"core::result::Result<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>, hashbrown::TryReserveError>::Err", ptr %self1.i.i, i32 0, i32 1
  %e.0.i.i = load i64, ptr %26, align 8, !range !12, !noundef !3
  %27 = getelementptr inbounds i8, ptr %26, i64 8
  %e.1.i.i = load i64, ptr %27, align 8
  store i64 %e.0.i.i, ptr %_44.i.i, align 8
  %28 = getelementptr inbounds i8, ptr %_44.i.i, i64 8
  store i64 %e.1.i.i, ptr %28, align 8
  %29 = load i64, ptr %_44.i.i, align 8, !range !12, !noundef !3
  %30 = getelementptr inbounds i8, ptr %_44.i.i, i64 8
  %31 = load i64, ptr %30, align 8
  %32 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>>::Break", ptr %_8.i.i, i32 0, i32 1
  store i64 %29, ptr %32, align 8
  %33 = getelementptr inbounds i8, ptr %32, i64 8
  store i64 %31, ptr %33, align 8
  store ptr null, ptr %_8.i.i, align 8
  br label %bb14.i.i

bb14.i.i:                                         ; preds = %bb15.i.i, %bb16.i.i
  %34 = load ptr, ptr %_8.i.i, align 8, !noundef !3
  %35 = ptrtoint ptr %34 to i64
  %36 = icmp eq i64 %35, 0
  %_11.i.i = select i1 %36, i64 1, i64 0
  %37 = icmp eq i64 %_11.i.i, 0
  br i1 %37, label %bb2.i.i, label %bb3.i.i

bb2.i.i:                                          ; preds = %bb14.i.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_40.i.i, ptr align 8 %_8.i.i, i64 56, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val.i.i, ptr align 8 %_40.i.i, i64 56, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %new_table.i.i, ptr align 8 %val.i.i, i64 56, i1 false)
  %self1.i3.i = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store ptr %self1.i3.i, ptr %ctrl.i.i, align 8
; invoke core::core_arch::x86::sse2::_mm_load_si128
  invoke void @_ZN4core9core_arch3x864sse214_mm_load_si12817h0fff7d8714e4d2bdE(ptr sret(<2 x i64>) align 16 %4, ptr %self1.i3.i)
          to label %.noexc.i unwind label %cleanup.i.i

.noexc.i:                                         ; preds = %bb2.i.i
  %_16.i.i = load <2 x i64>, ptr %4, align 16
  store <2 x i64> %_16.i.i, ptr %_5.i.i, align 16
  %self2.i4.i = load <2 x i64>, ptr %_5.i.i, align 16
  store <2 x i64> %self2.i4.i, ptr %3, align 16
; invoke core::core_arch::x86::sse2::_mm_movemask_epi8
  %_19.i59.i = invoke i32 @_ZN4core9core_arch3x864sse217_mm_movemask_epi817h5ebf5ba4849673e8E(ptr align 16 %3)
          to label %_ZN9hashbrown3raw13RawTableInner20full_buckets_indices17hb4f4f3628fbb6110E.exit.i unwind label %cleanup.i.i

_ZN9hashbrown3raw13RawTableInner20full_buckets_indices17hb4f4f3628fbb6110E.exit.i: ; preds = %.noexc.i
  %self3.i6.i = trunc i32 %_19.i59.i to i16
  %self4.i7.i = xor i16 %self3.i6.i, -1
  store i16 %self4.i7.i, ptr %_22.i2.i, align 2
  %38 = load i16, ptr %_22.i2.i, align 2, !noundef !3
  store i16 %38, ptr %_3.i.i, align 2
  %39 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 3
  %_8.i8.i = load i64, ptr %39, align 8, !noundef !3
  %40 = load i16, ptr %_3.i.i, align 2, !noundef !3
  %41 = getelementptr inbounds %"hashbrown::raw::FullBucketsIndices", ptr %self2.i.i, i32 0, i32 3
  store i16 %40, ptr %41, align 8
  %42 = getelementptr inbounds %"hashbrown::raw::FullBucketsIndices", ptr %self2.i.i, i32 0, i32 1
  store i64 0, ptr %42, align 8
  %43 = load ptr, ptr %ctrl.i.i, align 8, !nonnull !3, !noundef !3
  store ptr %43, ptr %self2.i.i, align 8
  %44 = getelementptr inbounds %"hashbrown::raw::FullBucketsIndices", ptr %self2.i.i, i32 0, i32 2
  store i64 %_8.i8.i, ptr %44, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter.i.i, ptr align 8 %self2.i.i, i64 32, i1 false)
  br label %bb5.i.i

bb3.i.i:                                          ; preds = %bb14.i.i
  %45 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, hashbrown::TryReserveError>, hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>>::Break", ptr %_8.i.i, i32 0, i32 1
  %46 = load i64, ptr %45, align 8, !range !12, !noundef !3
  %47 = getelementptr inbounds i8, ptr %45, i64 8
  %48 = load i64, ptr %47, align 8
  store i64 %46, ptr %residual.i.i, align 8
  %49 = getelementptr inbounds i8, ptr %residual.i.i, i64 8
  store i64 %48, ptr %49, align 8
  %e.011.i.i = load i64, ptr %residual.i.i, align 8, !range !12, !noundef !3
  %50 = getelementptr inbounds i8, ptr %residual.i.i, i64 8
  %e.112.i.i = load i64, ptr %50, align 8
  store i64 %e.011.i.i, ptr %_0.i.i, align 8
  %51 = getelementptr inbounds i8, ptr %_0.i.i, i64 8
  store i64 %e.112.i.i, ptr %51, align 8
  br label %_ZN9hashbrown3raw13RawTableInner12resize_inner17h5f4ab487145848b0E.exit.i

cleanup.i.i:                                      ; preds = %.noexc12, %bb4.i9, %bb1.i8, %bb8.i.i, %bb6.i.i, %bb7.i.i, %.noexc.i, %bb2.i.i
  %52 = landingpad { ptr, i32 }
          cleanup
  %53 = extractvalue { ptr, i32 } %52, 0
  %54 = extractvalue { ptr, i32 } %52, 1
  store ptr %53, ptr %5, align 8
  %55 = getelementptr inbounds i8, ptr %5, i64 8
  store i32 %54, ptr %55, align 8
; invoke core::ptr::drop_in_place<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner,hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{{closure}}>>
  invoke void @"_ZN4core3ptr196drop_in_place$LT$hashbrown..scopeguard..ScopeGuard$LT$hashbrown..raw..RawTableInner$C$hashbrown..raw..RawTableInner..prepare_resize$LT$alloc..alloc..Global$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17hdddd2c14527df78dE"(ptr align 8 %new_table.i.i) #28
          to label %bb13.i.i unwind label %terminate.i.i

bb5.i.i:                                          ; preds = %bb9.i.i, %_ZN9hashbrown3raw13RawTableInner20full_buckets_indices17hb4f4f3628fbb6110E.exit.i
  %56 = getelementptr inbounds %"hashbrown::raw::FullBucketsIndices", ptr %iter.i.i, i32 0, i32 2
  %_46.i.i = load i64, ptr %56, align 8, !noundef !3
  %57 = icmp eq i64 %_46.i.i, 0
  br i1 %57, label %bb18.i.i, label %bb19.i.i

bb18.i.i:                                         ; preds = %bb5.i.i
  store i64 0, ptr %_17.i.i, align 8
  %58 = getelementptr inbounds i8, ptr %_17.i.i, i64 8
  store i64 undef, ptr %58, align 8
  br label %bb17.i.i

bb19.i.i:                                         ; preds = %bb5.i.i
  br label %bb1.i8

bb1.i8:                                           ; preds = %_27.i.noexc, %bb19.i.i
  %_3.i = getelementptr inbounds %"hashbrown::raw::FullBucketsIndices", ptr %iter.i.i, i32 0, i32 3
; invoke <hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator>::next
  %59 = invoke { i64, i64 } @"_ZN95_$LT$hashbrown..raw..bitmask..BitMaskIter$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb21ce954e445f1a9E"(ptr align 2 %_3.i)
          to label %.noexc11 unwind label %cleanup.i.i

.noexc11:                                         ; preds = %bb1.i8
  %60 = extractvalue { i64, i64 } %59, 0
  %61 = extractvalue { i64, i64 } %59, 1
  store i64 %60, ptr %_2.i, align 8
  %62 = getelementptr inbounds i8, ptr %_2.i, i64 8
  store i64 %61, ptr %62, align 8
  %_4.i = load i64, ptr %_2.i, align 8, !range !9, !noundef !3
  %63 = icmp eq i64 %_4.i, 1
  br i1 %63, label %_ZN9hashbrown3raw18FullBucketsIndices9next_impl17h2c930e38901c3ea3E.exit, label %bb4.i9

bb4.i9:                                           ; preds = %.noexc11
  %self1.i10 = load ptr, ptr %iter.i.i, align 8, !nonnull !3, !noundef !3
  %ptr.i = getelementptr inbounds i8, ptr %self1.i10, i64 16
  store ptr %ptr.i, ptr %_8.i6, align 8
  %64 = load ptr, ptr %_8.i6, align 8, !nonnull !3, !noundef !3
  store ptr %64, ptr %iter.i.i, align 8
  %self2.i = load ptr, ptr %iter.i.i, align 8, !nonnull !3, !noundef !3
; invoke core::core_arch::x86::sse2::_mm_load_si128
  invoke void @_ZN4core9core_arch3x864sse214_mm_load_si12817h0fff7d8714e4d2bdE(ptr sret(<2 x i64>) align 16 %2, ptr %self2.i)
          to label %.noexc12 unwind label %cleanup.i.i

.noexc12:                                         ; preds = %bb4.i9
  %_24.i = load <2 x i64>, ptr %2, align 16
  store <2 x i64> %_24.i, ptr %_14.i, align 16
  %self3.i = load <2 x i64>, ptr %_14.i, align 16
  store <2 x i64> %self3.i, ptr %1, align 16
; invoke core::core_arch::x86::sse2::_mm_movemask_epi8
  %_27.i13 = invoke i32 @_ZN4core9core_arch3x864sse217_mm_movemask_epi817h5ebf5ba4849673e8E(ptr align 16 %1)
          to label %_27.i.noexc unwind label %cleanup.i.i

_27.i.noexc:                                      ; preds = %.noexc12
  %self4.i = trunc i32 %_27.i13 to i16
  %self5.i = xor i16 %self4.i, -1
  store i16 %self5.i, ptr %_30.i5, align 2
  %65 = load i16, ptr %_30.i5, align 2, !noundef !3
  store i16 %65, ptr %_12.i, align 2
  %66 = getelementptr inbounds %"hashbrown::raw::FullBucketsIndices", ptr %iter.i.i, i32 0, i32 3
  %67 = load i16, ptr %_12.i, align 2, !noundef !3
  store i16 %67, ptr %66, align 8
  %68 = getelementptr inbounds %"hashbrown::raw::FullBucketsIndices", ptr %iter.i.i, i32 0, i32 1
  %69 = getelementptr inbounds %"hashbrown::raw::FullBucketsIndices", ptr %iter.i.i, i32 0, i32 1
  %70 = load i64, ptr %69, align 8, !noundef !3
  %71 = add i64 %70, 16
  store i64 %71, ptr %68, align 8
  br label %bb1.i8

_ZN9hashbrown3raw18FullBucketsIndices9next_impl17h2c930e38901c3ea3E.exit: ; preds = %.noexc11
  %72 = getelementptr inbounds i8, ptr %_2.i, i64 8
  %index.i = load i64, ptr %72, align 8, !noundef !3
  %73 = getelementptr inbounds %"hashbrown::raw::FullBucketsIndices", ptr %iter.i.i, i32 0, i32 1
  %_7.i = load i64, ptr %73, align 8, !noundef !3
  %_6.i = add i64 %_7.i, %index.i
  %74 = getelementptr inbounds i8, ptr %_0.i7, i64 8
  store i64 %_6.i, ptr %74, align 8
  store i64 1, ptr %_0.i7, align 8
  %75 = load i64, ptr %_0.i7, align 8, !range !9, !noundef !3
  %76 = getelementptr inbounds i8, ptr %_0.i7, i64 8
  %77 = load i64, ptr %76, align 8
  %78 = insertvalue { i64, i64 } poison, i64 %75, 0
  %79 = insertvalue { i64, i64 } %78, i64 %77, 1
  br label %bb20.i.i

bb17.i.i:                                         ; preds = %bb20.i.i, %bb18.i.i
  %_19.i.i = load i64, ptr %_17.i.i, align 8, !range !9, !noundef !3
  %80 = icmp eq i64 %_19.i.i, 0
  br i1 %80, label %bb7.i.i, label %bb6.i.i

bb20.i.i:                                         ; preds = %_ZN9hashbrown3raw18FullBucketsIndices9next_impl17h2c930e38901c3ea3E.exit
  %nxt.0.i.i = extractvalue { i64, i64 } %79, 0
  %nxt.1.i.i = extractvalue { i64, i64 } %79, 1
  %81 = getelementptr inbounds %"hashbrown::raw::FullBucketsIndices", ptr %iter.i.i, i32 0, i32 2
  %82 = getelementptr inbounds %"hashbrown::raw::FullBucketsIndices", ptr %iter.i.i, i32 0, i32 2
  %83 = load i64, ptr %82, align 8, !noundef !3
  %84 = sub i64 %83, 1
  store i64 %84, ptr %81, align 8
  store i64 %nxt.0.i.i, ptr %_17.i.i, align 8
  %85 = getelementptr inbounds i8, ptr %_17.i.i, i64 8
  store i64 %nxt.1.i.i, ptr %85, align 8
  br label %bb17.i.i

bb7.i.i:                                          ; preds = %bb17.i.i
  %86 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 3
  %_33.i.i = load i64, ptr %86, align 8, !noundef !3
  %87 = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", ptr %new_table.i.i, i32 0, i32 1
  %88 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %87, i32 0, i32 2
  %89 = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", ptr %new_table.i.i, i32 0, i32 1
  %90 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %89, i32 0, i32 2
  %91 = load i64, ptr %90, align 8, !noundef !3
  %92 = sub i64 %91, %_33.i.i
  store i64 %92, ptr %88, align 8
  %93 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 3
  %_35.i.i = load i64, ptr %93, align 8, !noundef !3
  %94 = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", ptr %new_table.i.i, i32 0, i32 1
  %95 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %94, i32 0, i32 3
  store i64 %_35.i.i, ptr %95, align 8
  %y.i.i = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", ptr %new_table.i.i, i32 0, i32 1
  %_76.i.i = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", ptr %new_table.i.i, i32 0, i32 1
; invoke core::ptr::swap_nonoverlapping
  invoke void @_ZN4core3ptr19swap_nonoverlapping17h71c7c88427d9cc68E(ptr %self, ptr %_76.i.i, i64 1)
          to label %bb21.i.i unwind label %cleanup.i.i

bb6.i.i:                                          ; preds = %bb17.i.i
  %96 = getelementptr inbounds i8, ptr %_17.i.i, i64 8
  %full_byte_index.i.i = load i64, ptr %96, align 8, !noundef !3
  store ptr %self, ptr %_22.i.i, align 8
  %97 = getelementptr inbounds i8, ptr %_22.i.i, i64 8
  store i64 %full_byte_index.i.i, ptr %97, align 8
  %98 = load ptr, ptr %_22.i.i, align 8, !nonnull !3, !align !5, !noundef !3
  %99 = getelementptr inbounds i8, ptr %_22.i.i, i64 8
  %100 = load i64, ptr %99, align 8, !noundef !3
; invoke hashbrown::raw::RawTable<T,A>::reserve_rehash::{{closure}}
  %hash.i.i = invoke i64 @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash28_$u7b$$u7b$closure$u7d$$u7d$17h8d8ec22d2225dab1E"(ptr align 1 %_9, ptr align 8 %98, i64 %100)
          to label %bb8.i.i unwind label %cleanup.i.i

bb21.i.i:                                         ; preds = %bb7.i.i
  store i64 -9223372036854775807, ptr %_0.i.i, align 8
  %101 = getelementptr inbounds i8, ptr %_0.i.i, i64 8
  store i64 undef, ptr %101, align 8
; invoke core::ptr::drop_in_place<hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner,hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{{closure}}>>
  invoke void @"_ZN4core3ptr196drop_in_place$LT$hashbrown..scopeguard..ScopeGuard$LT$hashbrown..raw..RawTableInner$C$hashbrown..raw..RawTableInner..prepare_resize$LT$alloc..alloc..Global$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17hdddd2c14527df78dE"(ptr align 8 %new_table.i.i)
          to label %.noexc3 unwind label %cleanup

.noexc3:                                          ; preds = %bb21.i.i
  br label %_ZN9hashbrown3raw13RawTableInner12resize_inner17h5f4ab487145848b0E.exit.i

bb8.i.i:                                          ; preds = %bb6.i.i
  %_25.i.i = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", ptr %new_table.i.i, i32 0, i32 1
; invoke hashbrown::raw::RawTableInner::prepare_insert_slot
  %102 = invoke { i64, i8 } @_ZN9hashbrown3raw13RawTableInner19prepare_insert_slot17h543b4452009bdc4bE(ptr align 8 %_25.i.i, i64 %hash.i.i)
          to label %bb9.i.i unwind label %cleanup.i.i

bb9.i.i:                                          ; preds = %bb8.i.i
  %_24.0.i.i = extractvalue { i64, i8 } %102, 0
  %_24.1.i.i = extractvalue { i64, i8 } %102, 1
  %self5.i.i = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store ptr %self5.i.i, ptr %self3.i.i, align 8
  %_53.i.i = add i64 %full_byte_index.i.i, 1
  %count.i.i = mul i64 %_53.i.i, 48
  %count6.i.i = sub nsw i64 0, %count.i.i
  %_28.i.i = getelementptr inbounds i8, ptr %self5.i.i, i64 %count6.i.i
  %self7.i.i = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", ptr %new_table.i.i, i32 0, i32 1
  %103 = getelementptr inbounds %"hashbrown::scopeguard::ScopeGuard<hashbrown::raw::RawTableInner, {closure@hashbrown::raw::RawTableInner::prepare_resize<alloc::alloc::Global>::{closure#0}}>", ptr %new_table.i.i, i32 0, i32 1
  %self8.i.i = load ptr, ptr %103, align 8, !nonnull !3, !noundef !3
  store ptr %self8.i.i, ptr %self4.i.i, align 8
  %_66.i.i = add i64 %_24.0.i.i, 1
  %count9.i.i = mul i64 %_66.i.i, 48
  %count10.i.i = sub nsw i64 0, %count9.i.i
  %dst.i.i = getelementptr inbounds i8, ptr %self8.i.i, i64 %count10.i.i
  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %dst.i.i, ptr align 1 %_28.i.i, i64 48, i1 false)
  br label %bb5.i.i

terminate.i.i:                                    ; preds = %cleanup.i.i
  %104 = landingpad { ptr, i32 }
          cleanup
          filter [0 x ptr] zeroinitializer
  %105 = extractvalue { ptr, i32 } %104, 0
  %106 = extractvalue { ptr, i32 } %104, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb13.i.i:                                         ; preds = %cleanup.i.i
  %107 = load ptr, ptr %5, align 8, !noundef !3
  %108 = getelementptr inbounds i8, ptr %5, i64 8
  %109 = load i32, ptr %108, align 8, !noundef !3
  %110 = insertvalue { ptr, i32 } poison, ptr %107, 0
  %111 = insertvalue { ptr, i32 } %110, i32 %109, 1
  br label %cleanup.body

_ZN9hashbrown3raw13RawTableInner12resize_inner17h5f4ab487145848b0E.exit.i: ; preds = %.noexc3, %bb3.i.i
  %112 = load i64, ptr %_0.i.i, align 8, !range !23, !noundef !3
  %113 = getelementptr inbounds i8, ptr %_0.i.i, i64 8
  %114 = load i64, ptr %113, align 8
  %115 = insertvalue { i64, i64 } poison, i64 %112, 0
  %116 = insertvalue { i64, i64 } %115, i64 %114, 1
  store i64 %112, ptr %_0.i, align 8
  %117 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store i64 %114, ptr %117, align 8
  br label %bb8.i

bb4.i:                                            ; preds = %bb16.i
; invoke hashbrown::raw::RawTableInner::rehash_in_place
  invoke void @_ZN9hashbrown3raw13RawTableInner15rehash_in_place17h237388950c3db53bE(ptr align 8 %self, ptr align 1 %_9, ptr align 8 @vtable.j, i64 48, ptr %8)
          to label %.noexc4 unwind label %cleanup

.noexc4:                                          ; preds = %bb4.i
  store i64 -9223372036854775807, ptr %_0.i, align 8
  %118 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store i64 undef, ptr %118, align 8
  br label %bb8.i

bb8.i:                                            ; preds = %.noexc4, %_ZN9hashbrown3raw13RawTableInner12resize_inner17h5f4ab487145848b0E.exit.i
  br label %_ZN9hashbrown3raw13RawTableInner20reserve_rehash_inner17hbab467d0f3a1b9fbE.exit

_ZN9hashbrown3raw13RawTableInner20reserve_rehash_inner17hbab467d0f3a1b9fbE.exit: ; preds = %.noexc, %bb8.i
  %119 = load i64, ptr %_0.i, align 8, !range !23, !noundef !3
  %120 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %121 = load i64, ptr %120, align 8
  %122 = insertvalue { i64, i64 } poison, i64 %119, 0
  %123 = insertvalue { i64, i64 } %122, i64 %121, 1
  br label %bb4

bb6:                                              ; preds = %cleanup.body
  %124 = load ptr, ptr %7, align 8, !noundef !3
  %125 = getelementptr inbounds i8, ptr %7, i64 8
  %126 = load i32, ptr %125, align 8, !noundef !3
  %127 = insertvalue { ptr, i32 } poison, ptr %124, 0
  %128 = insertvalue { ptr, i32 } %127, i32 %126, 1
  resume { ptr, i32 } %128

cleanup:                                          ; preds = %bb4.i, %bb21.i.i, %_20.i.noexc, %bb6.i, %bb1.i
  %129 = landingpad { ptr, i32 }
          cleanup
  br label %cleanup.body

cleanup.body:                                     ; preds = %bb13.i.i, %cleanup
  %eh.lpad-body = phi { ptr, i32 } [ %129, %cleanup ], [ %111, %bb13.i.i ]
  %130 = extractvalue { ptr, i32 } %eh.lpad-body, 0
  %131 = extractvalue { ptr, i32 } %eh.lpad-body, 1
  store ptr %130, ptr %7, align 8
  %132 = getelementptr inbounds i8, ptr %7, i64 8
  store i32 %131, ptr %132, align 8
  br label %bb6

bb4:                                              ; preds = %_ZN9hashbrown3raw13RawTableInner20reserve_rehash_inner17hbab467d0f3a1b9fbE.exit
  %_0.0 = extractvalue { i64, i64 } %123, 0
  %_0.1 = extractvalue { i64, i64 } %123, 1
  %133 = insertvalue { i64, i64 } poison, i64 %_0.0, 0
  %134 = insertvalue { i64, i64 } %133, i64 %_0.1, 1
  ret { i64, i64 } %134
}

; hashbrown::raw::RawTable<T,A>::reserve_rehash::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define i64 @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash28_$u7b$$u7b$closure$u7d$$u7d$17h8d8ec22d2225dab1E"(ptr align 8 %_1, ptr align 8 %table, i64 %index) unnamed_addr #0 {
start:
  %_18 = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  %_7 = alloca ptr, align 8
  %_4 = alloca ptr, align 8
  %_8 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  %self = load ptr, ptr %table, align 8, !nonnull !3, !noundef !3
  store ptr %self, ptr %_10, align 8
  %0 = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
; call hashbrown::raw::Bucket<T>::from_base_index
  %1 = call ptr @"_ZN9hashbrown3raw15Bucket$LT$T$GT$15from_base_index17hd169070a6b8948a4E"(ptr %0, i64 %index)
  store ptr %1, ptr %_7, align 8
  br i1 false, label %bb3, label %bb4

bb4:                                              ; preds = %start
  %self1 = load ptr, ptr %_7, align 8, !nonnull !3, !noundef !3
  br i1 false, label %bb6, label %bb7

bb3:                                              ; preds = %start
  store ptr inttoptr (i64 8 to ptr), ptr %_18, align 8
  br label %bb5

bb7:                                              ; preds = %bb4
  %2 = getelementptr inbounds { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, ptr %self1, i64 -1
  store ptr %2, ptr %_18, align 8
  br label %bb8

bb6:                                              ; preds = %bb4
  store ptr %self1, ptr %_18, align 8
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  br label %bb5

bb5:                                              ; preds = %bb3, %bb8
  %_5 = load ptr, ptr %_18, align 8, !noundef !3
  store ptr %_5, ptr %_4, align 8
  %3 = load ptr, ptr %_4, align 8, !nonnull !3, !align !5, !noundef !3
; call hashbrown::map::make_hasher::{{closure}}
  %_0 = call i64 @"_ZN9hashbrown3map11make_hasher28_$u7b$$u7b$closure$u7d$$u7d$17h175961b592b2f445E"(ptr align 8 %_8, ptr align 8 %3)
  ret i64 %_0
}

; hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot
; Function Attrs: inlinehint nonlazybind uwtable
define void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$24find_or_find_insert_slot17hd32cb9a1d9ffa2cfE"(ptr sret(%"core::result::Result<hashbrown::raw::Bucket<(alloc::string::String, core::option::Option<alloc::string::String>)>, hashbrown::raw::InsertSlot>") align 8 %_0, ptr align 8 %self, i64 %hash, ptr align 8 %0, ptr align 8 %hasher) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_18 = alloca ptr, align 8
  %_10 = alloca %"{closure@hashbrown::raw::RawTable<(alloc::string::String, core::option::Option<alloc::string::String>)>::find_or_find_insert_slot<{closure@hashbrown::map::equivalent_key<alloc::string::String, alloc::string::String, core::option::Option<alloc::string::String>>::{closure#0}}, {closure@hashbrown::map::make_hasher<alloc::string::String, core::option::Option<alloc::string::String>, std::hash::random::RandomState>::{closure#0}}>::{closure#0}}", align 8
  %_6 = alloca %"core::result::Result<usize, hashbrown::raw::InsertSlot>", align 8
  %eq = alloca ptr, align 8
  store ptr %0, ptr %eq, align 8
; invoke hashbrown::raw::RawTable<T,A>::reserve
  invoke void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$7reserve17hde75273feada07c3E"(ptr align 8 %self, i64 1, ptr align 8 %hasher)
          to label %bb1 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %2 = load ptr, ptr %1, align 8, !noundef !3
  %3 = getelementptr inbounds i8, ptr %1, i64 8
  %4 = load i32, ptr %3, align 8, !noundef !3
  %5 = insertvalue { ptr, i32 } poison, ptr %2, 0
  %6 = insertvalue { ptr, i32 } %5, i32 %4, 1
  resume { ptr, i32 } %6

cleanup:                                          ; preds = %bb4, %bb1, %start
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %1, align 8
  %10 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb7

bb1:                                              ; preds = %start
  store ptr %eq, ptr %_10, align 8
  %11 = getelementptr inbounds i8, ptr %_10, i64 8
  store ptr %self, ptr %11, align 8
; invoke hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner
  %12 = invoke { i64, i64 } @_ZN9hashbrown3raw13RawTableInner30find_or_find_insert_slot_inner17h2d6350d0706b6453E(ptr align 8 %self, i64 %hash, ptr align 1 %_10, ptr align 8 @vtable.k)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %13 = extractvalue { i64, i64 } %12, 0
  %14 = extractvalue { i64, i64 } %12, 1
  store i64 %13, ptr %_6, align 8
  %15 = getelementptr inbounds i8, ptr %_6, i64 8
  store i64 %14, ptr %15, align 8
  %_13 = load i64, ptr %_6, align 8, !range !9, !noundef !3
  %16 = icmp eq i64 %_13, 0
  br i1 %16, label %bb4, label %bb3

bb4:                                              ; preds = %bb2
  %17 = getelementptr inbounds i8, ptr %_6, i64 8
  %index = load i64, ptr %17, align 8, !noundef !3
  %self1 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store ptr %self1, ptr %_18, align 8
  %18 = load ptr, ptr %_18, align 8, !nonnull !3, !noundef !3
; invoke hashbrown::raw::Bucket<T>::from_base_index
  %_15 = invoke ptr @"_ZN9hashbrown3raw15Bucket$LT$T$GT$15from_base_index17hd169070a6b8948a4E"(ptr %18, i64 %index)
          to label %bb9 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %19 = getelementptr inbounds i8, ptr %_6, i64 8
  %slot = load i64, ptr %19, align 8, !noundef !3
  %20 = getelementptr inbounds %"core::result::Result<hashbrown::raw::Bucket<(alloc::string::String, core::option::Option<alloc::string::String>)>, hashbrown::raw::InsertSlot>::Err", ptr %_0, i32 0, i32 1
  store i64 %slot, ptr %20, align 8
  store i64 1, ptr %_0, align 8
  br label %bb5

bb9:                                              ; preds = %bb4
  %21 = getelementptr inbounds %"core::result::Result<hashbrown::raw::Bucket<(alloc::string::String, core::option::Option<alloc::string::String>)>, hashbrown::raw::InsertSlot>::Ok", ptr %_0, i32 0, i32 1
  store ptr %_15, ptr %21, align 8
  store i64 0, ptr %_0, align 8
  br label %bb5

bb5:                                              ; preds = %bb3, %bb9
  ret void

bb10:                                             ; No predecessors!
  unreachable
}

; hashbrown::raw::RawTable<T,A>::find_or_find_insert_slot::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define zeroext i1 @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$24find_or_find_insert_slot28_$u7b$$u7b$closure$u7d$$u7d$17h2ffe10efd3d30c46E"(ptr align 8 %_1, i64 %index) unnamed_addr #0 {
start:
  %_18 = alloca ptr, align 8
  %_10 = alloca ptr, align 8
  %_6 = alloca ptr, align 8
  %_3 = alloca ptr, align 8
  %_7 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  %0 = getelementptr inbounds i8, ptr %_1, i64 8
  %self = load ptr, ptr %0, align 8, !nonnull !3, !align !5, !noundef !3
  %self1 = load ptr, ptr %self, align 8, !nonnull !3, !noundef !3
  store ptr %self1, ptr %_10, align 8
  %1 = load ptr, ptr %_10, align 8, !nonnull !3, !noundef !3
; call hashbrown::raw::Bucket<T>::from_base_index
  %2 = call ptr @"_ZN9hashbrown3raw15Bucket$LT$T$GT$15from_base_index17hd169070a6b8948a4E"(ptr %1, i64 %index)
  store ptr %2, ptr %_6, align 8
  br i1 false, label %bb3, label %bb4

bb4:                                              ; preds = %start
  %self2 = load ptr, ptr %_6, align 8, !nonnull !3, !noundef !3
  br i1 false, label %bb6, label %bb7

bb3:                                              ; preds = %start
  store ptr inttoptr (i64 8 to ptr), ptr %_18, align 8
  br label %bb5

bb7:                                              ; preds = %bb4
  %3 = getelementptr inbounds { %"alloc::string::String", %"core::option::Option<alloc::string::String>" }, ptr %self2, i64 -1
  store ptr %3, ptr %_18, align 8
  br label %bb8

bb6:                                              ; preds = %bb4
  store ptr %self2, ptr %_18, align 8
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  br label %bb5

bb5:                                              ; preds = %bb3, %bb8
  %_4 = load ptr, ptr %_18, align 8, !noundef !3
  store ptr %_4, ptr %_3, align 8
  %4 = load ptr, ptr %_3, align 8, !nonnull !3, !align !5, !noundef !3
; call hashbrown::map::equivalent_key::{{closure}}
  %_0 = call zeroext i1 @"_ZN9hashbrown3map14equivalent_key28_$u7b$$u7b$closure$u7d$$u7d$17h552e1fbae4d9e89fE"(ptr align 8 %_7, ptr align 8 %4)
  ret i1 %_0
}

; hashbrown::raw::RawTable<T,A>::reserve
; Function Attrs: nonlazybind uwtable
define void @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$7reserve17hde75273feada07c3E"(ptr align 8 %self, i64 %additional, ptr align 8 %hasher) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %1 = alloca i8, align 1
  %_10 = alloca i8, align 1
  %_8 = alloca %"core::result::Result<(), hashbrown::TryReserveError>", align 8
  store i8 1, ptr %_10, align 1
  %2 = getelementptr inbounds %"hashbrown::raw::RawTableInner", ptr %self, i32 0, i32 2
  %_6 = load i64, ptr %2, align 8, !noundef !3
  %_5 = icmp ugt i64 %additional, %_6
  %3 = call i1 @llvm.expect.i1(i1 %_5, i1 false)
  %4 = zext i1 %3 to i8
  store i8 %4, ptr %1, align 1
  %5 = load i8, ptr %1, align 1, !range !10, !noundef !3
  %_4 = trunc i8 %5 to i1
  br i1 %_4, label %bb2, label %bb4

bb4:                                              ; preds = %start
  br label %bb5

bb2:                                              ; preds = %start
  store i8 0, ptr %_10, align 1
; invoke hashbrown::raw::RawTable<T,A>::reserve_rehash
  %6 = invoke { i64, i64 } @"_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17hef28c907f58d5632E"(ptr align 8 %self, i64 %additional, ptr align 8 %hasher, i1 zeroext true)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %bb3, %bb4
  %7 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb8, label %bb6

bb10:                                             ; preds = %cleanup
  %9 = load i8, ptr %_10, align 1, !range !10, !noundef !3
  %10 = trunc i8 %9 to i1
  br i1 %10, label %bb9, label %bb7

cleanup:                                          ; preds = %bb2
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
  store ptr %12, ptr %0, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %13, ptr %14, align 8
  br label %bb10

bb3:                                              ; preds = %bb2
  %15 = extractvalue { i64, i64 } %6, 0
  %16 = extractvalue { i64, i64 } %6, 1
  store i64 %15, ptr %_8, align 8
  %17 = getelementptr inbounds i8, ptr %_8, i64 8
  store i64 %16, ptr %17, align 8
  %18 = load i64, ptr %_8, align 8, !range !23, !noundef !3
  %19 = icmp eq i64 %18, -9223372036854775807
  %_12 = select i1 %19, i64 0, i64 1
  %_11 = icmp eq i64 %_12, 0
  call void @llvm.assume(i1 %_11)
  br label %bb5

bb6:                                              ; preds = %bb8, %bb5
  ret void

bb8:                                              ; preds = %bb5
  br label %bb6

bb7:                                              ; preds = %bb9, %bb10
  %20 = load ptr, ptr %0, align 8, !noundef !3
  %21 = getelementptr inbounds i8, ptr %0, i64 8
  %22 = load i32, ptr %21, align 8, !noundef !3
  %23 = insertvalue { ptr, i32 } poison, ptr %20, 0
  %24 = insertvalue { ptr, i32 } %23, i32 %22, 1
  resume { ptr, i32 } %24

bb9:                                              ; preds = %bb10
  br label %bb7
}

; hashbrown::raw::sse2::Group::convert_special_to_empty_and_full_to_deleted
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @_ZN9hashbrown3raw4sse25Group44convert_special_to_empty_and_full_to_deleted17h6f09278036099cbeE(ptr sret(<2 x i64>) align 16 %_0, ptr align 16 %self) unnamed_addr #0 {
start:
  %0 = alloca <2 x i64>, align 16
  %1 = alloca <2 x i64>, align 16
  %2 = alloca <2 x i64>, align 16
  %3 = alloca <2 x i64>, align 16
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>, align 16
; call core::core_arch::x86::sse2::_mm_setzero_si128
  call void @_ZN4core9core_arch3x864sse217_mm_setzero_si12817hc3ba67325907e40aE(ptr sret(<2 x i64>) align 16 %7)
  %zero = load <2 x i64>, ptr %7, align 16
  %_4 = load <2 x i64>, ptr %self, align 16
  store <2 x i64> %zero, ptr %5, align 16
  store <2 x i64> %_4, ptr %4, align 16
; call core::core_arch::x86::sse2::_mm_cmpgt_epi8
  call void @_ZN4core9core_arch3x864sse214_mm_cmpgt_epi817h637ccca34b1462cbE(ptr sret(<2 x i64>) align 16 %6, ptr align 16 %5, ptr align 16 %4)
  %special = load <2 x i64>, ptr %6, align 16
; call core::core_arch::x86::sse2::_mm_set1_epi8
  call void @_ZN4core9core_arch3x864sse213_mm_set1_epi817ha78ed8defa5638e9E(ptr sret(<2 x i64>) align 16 %3, i8 -128)
  %_6 = load <2 x i64>, ptr %3, align 16
  store <2 x i64> %special, ptr %1, align 16
  store <2 x i64> %_6, ptr %0, align 16
; call core::core_arch::x86::sse2::_mm_or_si128
  call void @_ZN4core9core_arch3x864sse212_mm_or_si12817he4d19d33046c2f93E(ptr sret(<2 x i64>) align 16 %2, ptr align 16 %1, ptr align 16 %0)
  %_5 = load <2 x i64>, ptr %2, align 16
  store <2 x i64> %_5, ptr %_0, align 16
  ret void
}

; hashbrown::raw::alloc::inner::do_alloc
; Function Attrs: nonlazybind uwtable
define ptr @_ZN9hashbrown3raw5alloc5inner8do_alloc17ha6157db6988222cbE(ptr align 1 %alloc, i64 %layout.0, i64 %layout.1) unnamed_addr #1 {
start:
  %_6 = alloca ptr, align 8
  %_3 = alloca %"core::result::Result<core::ptr::non_null::NonNull<[u8]>, core::alloc::AllocError>", align 8
  %_0 = alloca ptr, align 8
; call <alloc::alloc::Global as core::alloc::Allocator>::allocate
  %0 = call { ptr, i64 } @"_ZN63_$LT$alloc..alloc..Global$u20$as$u20$core..alloc..Allocator$GT$8allocate17h8a8088df2849bd53E"(ptr align 1 %alloc, i64 %layout.0, i64 %layout.1)
  %1 = extractvalue { ptr, i64 } %0, 0
  %2 = extractvalue { ptr, i64 } %0, 1
  store ptr %1, ptr %_3, align 8
  %3 = getelementptr inbounds i8, ptr %_3, i64 8
  store i64 %2, ptr %3, align 8
  %4 = load ptr, ptr %_3, align 8, !noundef !3
  %5 = ptrtoint ptr %4 to i64
  %6 = icmp eq i64 %5, 0
  %_4 = select i1 %6, i64 1, i64 0
  %7 = icmp eq i64 %_4, 0
  br i1 %7, label %bb3, label %bb2

bb3:                                              ; preds = %start
  %ptr.0 = load ptr, ptr %_3, align 8, !nonnull !3, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_3, i64 8
  %ptr.1 = load i64, ptr %8, align 8, !noundef !3
  store ptr %ptr.0, ptr %_6, align 8
  %9 = load ptr, ptr %_6, align 8, !nonnull !3, !noundef !3
  store ptr %9, ptr %_0, align 8
  br label %bb4

bb2:                                              ; preds = %start
  store ptr null, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb2, %bb3
  %10 = load ptr, ptr %_0, align 8, !noundef !3
  ret ptr %10

bb5:                                              ; No predecessors!
  unreachable
}

; hashbrown::raw::bitmask::BitMask::lowest_set_bit
; Function Attrs: inlinehint nonlazybind uwtable
define internal { i64, i64 } @_ZN9hashbrown3raw7bitmask7BitMask14lowest_set_bit17h9bb00bc7a31e6b77E(i16 %self) unnamed_addr #0 {
start:
  %0 = alloca i16, align 2
  %_7 = alloca i16, align 2
  %_2 = alloca i16, align 2
  %_0 = alloca %"core::option::Option<usize>", align 8
  %1 = icmp eq i16 %self, 0
  br i1 %1, label %bb6, label %bb5

bb6:                                              ; preds = %start
  store i16 0, ptr %_2, align 2
  br label %bb4

bb5:                                              ; preds = %start
  store i16 %self, ptr %_7, align 2
  %2 = load i16, ptr %_7, align 2, !range !28, !noundef !3
  store i16 %2, ptr %_2, align 2
  br label %bb4

bb4:                                              ; preds = %bb5, %bb6
  %3 = load i16, ptr %_2, align 2, !noundef !3
  %4 = icmp eq i16 %3, 0
  %_4 = select i1 %4, i64 0, i64 1
  %5 = icmp eq i64 %_4, 1
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb4
  %nonzero = load i16, ptr %_2, align 2, !range !28, !noundef !3
  %_17 = icmp ne i16 %nonzero, 0
  call void @llvm.assume(i1 %_17)
  %6 = call i16 @llvm.cttz.i16(i16 %nonzero, i1 true)
  store i16 %6, ptr %0, align 2
  %_15 = load i16, ptr %0, align 2, !noundef !3
  %_13 = zext i16 %_15 to i32
  %_6 = zext i32 %_13 to i64
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_6, ptr %7, align 8
  store i64 1, ptr %_0, align 8
  br label %bb3

bb2:                                              ; preds = %bb4
  %8 = load i64, ptr @1, align 8, !range !9, !noundef !3
  %9 = load i64, ptr getelementptr inbounds (i8, ptr @1, i64 8), align 8
  store i64 %8, ptr %_0, align 8
  %10 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %9, ptr %10, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i64, ptr %_0, align 8, !range !9, !noundef !3
  %12 = getelementptr inbounds i8, ptr %_0, i64 8
  %13 = load i64, ptr %12, align 8
  %14 = insertvalue { i64, i64 } poison, i64 %11, 0
  %15 = insertvalue { i64, i64 } %14, i64 %13, 1
  ret { i64, i64 } %15
}

; pkg_config::WrappedCommand::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10pkg_config14WrappedCommand3new17hfa17609c66888116E(ptr sret(%WrappedCommand) align 8 %_0, ptr align 8 %program) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_9 = alloca %"alloc::vec::Vec<std::ffi::os_str::OsString>", align 8
  %_8 = alloca %"alloc::vec::Vec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>", align 8
  %_5 = alloca %"std::ffi::os_str::OsString", align 8
  %_2 = alloca %"std::process::Command", align 8
; invoke <std::ffi::os_str::OsString as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
  %1 = invoke { ptr, i64 } @"_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17h6fc72231a91e2f9fE"(ptr align 8 %program)
          to label %bb1 unwind label %cleanup

bb11:                                             ; preds = %bb10, %cleanup
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %program) #28
          to label %bb12 unwind label %terminate

cleanup:                                          ; preds = %bb1, %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb11

bb1:                                              ; preds = %start
  %_3.0 = extractvalue { ptr, i64 } %1, 0
  %_3.1 = extractvalue { ptr, i64 } %1, 1
; invoke std::process::Command::new
  invoke void @_ZN3std7process7Command3new17hadf7a68de24eeafdE(ptr sret(%"std::process::Command") align 8 %_2, ptr align 1 %_3.0, i64 %_3.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
; invoke <std::ffi::os_str::OsString as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
  %6 = invoke { ptr, i64 } @"_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17h6fc72231a91e2f9fE"(ptr align 8 %program)
          to label %bb3 unwind label %cleanup1

bb10:                                             ; preds = %bb9, %cleanup1
; invoke core::ptr::drop_in_place<std::process::Command>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..process..Command$GT$17h2c1ef71027bbd052E"(ptr align 8 %_2) #28
          to label %bb11 unwind label %terminate

cleanup1:                                         ; preds = %bb3, %bb2
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %0, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb10

bb3:                                              ; preds = %bb2
  %_6.0 = extractvalue { ptr, i64 } %6, 0
  %_6.1 = extractvalue { ptr, i64 } %6, 1
; invoke std::ffi::os_str::OsStr::to_os_string
  invoke void @_ZN3std3ffi6os_str5OsStr12to_os_string17he090fa5dbff1be9cE(ptr sret(%"std::ffi::os_str::OsString") align 8 %_5, ptr align 1 %_6.0, i64 %_6.1)
          to label %bb4 unwind label %cleanup1

bb4:                                              ; preds = %bb3
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h5e1fa6f7e512871cE"(ptr sret(%"alloc::vec::Vec<(std::ffi::os_str::OsString, std::ffi::os_str::OsString)>") align 8 %_8)
          to label %bb5 unwind label %cleanup2

bb9:                                              ; preds = %bb8, %cleanup2
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_5) #28
          to label %bb10 unwind label %terminate

cleanup2:                                         ; preds = %bb4
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
  store ptr %12, ptr %0, align 8
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %13, ptr %14, align 8
  br label %bb9

bb5:                                              ; preds = %bb4
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h868cdec37d7a5d1cE"(ptr sret(%"alloc::vec::Vec<std::ffi::os_str::OsString>") align 8 %_9)
          to label %bb6 unwind label %cleanup3

bb8:                                              ; preds = %cleanup3
; invoke core::ptr::drop_in_place<alloc::vec::Vec<(std::ffi::os_str::OsString,std::ffi::os_str::OsString)>>
  invoke void @"_ZN4core3ptr107drop_in_place$LT$alloc..vec..Vec$LT$$LP$std..ffi..os_str..OsString$C$std..ffi..os_str..OsString$RP$$GT$$GT$17h7cf3decbf40f2d36E"(ptr align 8 %_8) #28
          to label %bb9 unwind label %terminate

cleanup3:                                         ; preds = %bb5
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %0, align 8
  %18 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb8

bb6:                                              ; preds = %bb5
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 208, i1 false)
  %19 = getelementptr inbounds %WrappedCommand, ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %19, ptr align 8 %_5, i64 24, i1 false)
  %20 = getelementptr inbounds %WrappedCommand, ptr %_0, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %_8, i64 24, i1 false)
  %21 = getelementptr inbounds %WrappedCommand, ptr %_0, i32 0, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %_9, i64 24, i1 false)
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %program)
  ret void

terminate:                                        ; preds = %bb11, %bb10, %bb9, %bb8
  %22 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %23 = extractvalue { ptr, i32 } %22, 0
  %24 = extractvalue { ptr, i32 } %22, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb12:                                             ; preds = %bb11
  %25 = load ptr, ptr %0, align 8, !noundef !3
  %26 = getelementptr inbounds i8, ptr %0, i64 8
  %27 = load i32, ptr %26, align 8, !noundef !3
  %28 = insertvalue { ptr, i32 } poison, ptr %25, 0
  %29 = insertvalue { ptr, i32 } %28, i32 %27, 1
  resume { ptr, i32 } %29
}

; pkg_config::WrappedCommand::args
; Function Attrs: nonlazybind uwtable
define internal align 8 ptr @_ZN10pkg_config14WrappedCommand4args17h64180fe628f8e340E(ptr align 8 %self, ptr align 8 %0, i64 %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_12 = alloca i8, align 1
  %args = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %args, align 8
  %3 = getelementptr inbounds i8, ptr %args, i64 8
  store i64 %1, ptr %3, align 8
  store i8 0, ptr %_12, align 1
  store i8 1, ptr %_12, align 1
  %_0.0.i = load ptr, ptr %args, align 8, !nonnull !3, !align !5, !noundef !3
  %4 = getelementptr inbounds i8, ptr %args, i64 8
  %_0.1.i = load i64, ptr %4, align 8, !noundef !3
  %5 = insertvalue { ptr, i64 } poison, ptr %_0.0.i, 0
  %6 = insertvalue { ptr, i64 } %5, i64 %_0.1.i, 1
  br label %bb1

bb8:                                              ; preds = %cleanup
  %7 = load i8, ptr %_12, align 1, !range !10, !noundef !3
  %8 = trunc i8 %7 to i1
  br i1 %8, label %bb7, label %bb6

cleanup:                                          ; preds = %bb4, %bb3, %bb2, %bb1
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %2, align 8
  %12 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb8

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { ptr, i64 } %6, 0
  %_5.1 = extractvalue { ptr, i64 } %6, 1
; invoke std::process::Command::args
  %_3 = invoke align 8 ptr @_ZN3std7process7Command4args17h25f9e6cdeadb6916E(ptr align 8 %self, ptr align 8 %_5.0, i64 %_5.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_8 = getelementptr inbounds %WrappedCommand, ptr %self, i32 0, i32 3
  store i8 0, ptr %_12, align 1
  %_11.0 = load ptr, ptr %args, align 8, !nonnull !3, !align !5, !noundef !3
  %13 = getelementptr inbounds i8, ptr %args, i64 8
  %_11.1 = load i64, ptr %13, align 8, !noundef !3
; invoke core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %14 = invoke { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h821f41eb1e65071fE"(ptr align 8 %_11.0, i64 %_11.1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_10.0 = extractvalue { ptr, ptr } %14, 0
  %_10.1 = extractvalue { ptr, ptr } %14, 1
; invoke core::iter::traits::iterator::Iterator::map
  %15 = invoke { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h3342aeadf0490bb0E(ptr %_10.0, ptr %_10.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %_9.0 = extractvalue { ptr, ptr } %15, 0
  %_9.1 = extractvalue { ptr, ptr } %15, 1
; invoke <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend
  invoke void @"_ZN93_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$T$GT$$GT$6extend17he5399b5ee912d23cE"(ptr align 8 %_8, ptr %_9.0, ptr %_9.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  ret ptr %self

bb6:                                              ; preds = %bb7, %bb8
  %16 = load ptr, ptr %2, align 8, !noundef !3
  %17 = getelementptr inbounds i8, ptr %2, i64 8
  %18 = load i32, ptr %17, align 8, !noundef !3
  %19 = insertvalue { ptr, i32 } poison, ptr %16, 0
  %20 = insertvalue { ptr, i32 } %19, i32 %18, 1
  resume { ptr, i32 } %20

bb7:                                              ; preds = %bb8
  br label %bb6
}

; pkg_config::WrappedCommand::args
; Function Attrs: nonlazybind uwtable
define internal align 8 ptr @_ZN10pkg_config14WrappedCommand4args17heafb9dba2b7181a5E(ptr align 8 %self, ptr align 8 %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_12 = alloca i8, align 1
  %args = alloca ptr, align 8
  store ptr %0, ptr %args, align 8
  store i8 0, ptr %_12, align 1
  store i8 1, ptr %_12, align 1
  %_0.i = load ptr, ptr %args, align 8, !nonnull !3, !align !5, !noundef !3
  br label %bb1

bb8:                                              ; preds = %cleanup
  %2 = load i8, ptr %_12, align 1, !range !10, !noundef !3
  %3 = trunc i8 %2 to i1
  br i1 %3, label %bb7, label %bb6

cleanup:                                          ; preds = %bb4, %bb3, %bb2, %bb1
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %1, align 8
  %7 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb8

bb1:                                              ; preds = %start
; invoke std::process::Command::args
  %_3 = invoke align 8 ptr @_ZN3std7process7Command4args17ha4850c6988c540b9E(ptr align 8 %self, ptr align 8 %_0.i)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_8 = getelementptr inbounds %WrappedCommand, ptr %self, i32 0, i32 3
  store i8 0, ptr %_12, align 1
  %_11 = load ptr, ptr %args, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <&alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  %8 = invoke { ptr, ptr } @"_ZN94_$LT$$RF$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb9b69899005e7b4dE"(ptr align 8 %_11)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_10.0 = extractvalue { ptr, ptr } %8, 0
  %_10.1 = extractvalue { ptr, ptr } %8, 1
; invoke core::iter::traits::iterator::Iterator::map
  %9 = invoke { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17hddd951801fe1695cE(ptr %_10.0, ptr %_10.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %_9.0 = extractvalue { ptr, ptr } %9, 0
  %_9.1 = extractvalue { ptr, ptr } %9, 1
; invoke <alloc::vec::Vec<T,A> as core::iter::traits::collect::Extend<T>>::extend
  invoke void @"_ZN93_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$T$GT$$GT$6extend17h6188ccffea00bf92E"(ptr align 8 %_8, ptr %_9.0, ptr %_9.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  ret ptr %self

bb6:                                              ; preds = %bb7, %bb8
  %10 = load ptr, ptr %1, align 8, !noundef !3
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  %12 = load i32, ptr %11, align 8, !noundef !3
  %13 = insertvalue { ptr, i32 } poison, ptr %10, 0
  %14 = insertvalue { ptr, i32 } %13, i32 %12, 1
  resume { ptr, i32 } %14

bb7:                                              ; preds = %bb8
  br label %bb6
}

; pkg_config::WrappedCommand::args::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config14WrappedCommand4args28_$u7b$$u7b$closure$u7d$$u7d$17hbe86a674087bf527E"(ptr sret(%"std::ffi::os_str::OsString") align 8 %_0, ptr align 1 %_1, ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %arg = alloca ptr, align 8
  store ptr %0, ptr %arg, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %2 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h16d8b0056cf983c7E"(ptr align 8 %arg)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %3 = load ptr, ptr %1, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8, !noundef !3
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %bb1, %start
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_3.0 = extractvalue { ptr, i64 } %2, 0
  %_3.1 = extractvalue { ptr, i64 } %2, 1
; invoke std::ffi::os_str::OsStr::to_os_string
  invoke void @_ZN3std3ffi6os_str5OsStr12to_os_string17he090fa5dbff1be9cE(ptr sret(%"std::ffi::os_str::OsString") align 8 %_0, ptr align 1 %_3.0, i64 %_3.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret void
}

; pkg_config::WrappedCommand::args::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config14WrappedCommand4args28_$u7b$$u7b$closure$u7d$$u7d$17he17fb00896ed542dE"(ptr sret(%"std::ffi::os_str::OsString") align 8 %_0, ptr align 1 %_1, ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %arg = alloca ptr, align 8
  store ptr %0, ptr %arg, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %2 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7e5b9ab8d4dffa78E"(ptr align 8 %arg)
          to label %bb1 unwind label %cleanup

bb4:                                              ; preds = %cleanup
  %3 = load ptr, ptr %1, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8, !noundef !3
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %bb1, %start
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb4

bb1:                                              ; preds = %start
  %_3.0 = extractvalue { ptr, i64 } %2, 0
  %_3.1 = extractvalue { ptr, i64 } %2, 1
; invoke std::ffi::os_str::OsStr::to_os_string
  invoke void @_ZN3std3ffi6os_str5OsStr12to_os_string17he090fa5dbff1be9cE(ptr sret(%"std::ffi::os_str::OsString") align 8 %_0, ptr align 1 %_3.0, i64 %_3.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  ret void
}

; pkg_config::WrappedCommand::arg
; Function Attrs: nonlazybind uwtable
define internal align 8 ptr @_ZN10pkg_config14WrappedCommand3arg17h44bd66f2a1b8926cE(ptr align 8 %self, ptr align 8 %0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_9 = alloca %"std::ffi::os_str::OsString", align 8
  %arg = alloca ptr, align 8
  store ptr %0, ptr %arg, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %2 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h6691488022164d9bE"(ptr align 8 %arg)
          to label %bb1 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %3 = load ptr, ptr %1, align 8, !noundef !3
  %4 = getelementptr inbounds i8, ptr %1, i64 8
  %5 = load i32, ptr %4, align 8, !noundef !3
  %6 = insertvalue { ptr, i32 } poison, ptr %3, 0
  %7 = insertvalue { ptr, i32 } %6, i32 %5, 1
  resume { ptr, i32 } %7

cleanup:                                          ; preds = %bb4, %bb3, %bb2, %bb1, %start
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %1, align 8
  %11 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb7

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { ptr, i64 } %2, 0
  %_5.1 = extractvalue { ptr, i64 } %2, 1
; invoke std::process::Command::arg
  %_3 = invoke align 8 ptr @_ZN3std7process7Command3arg17h66d3cc99bf1d7dbeE(ptr align 8 %self, ptr align 1 %_5.0, i64 %_5.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_8 = getelementptr inbounds %WrappedCommand, ptr %self, i32 0, i32 3
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %12 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h6691488022164d9bE"(ptr align 8 %arg)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_10.0 = extractvalue { ptr, i64 } %12, 0
  %_10.1 = extractvalue { ptr, i64 } %12, 1
; invoke std::ffi::os_str::OsStr::to_os_string
  invoke void @_ZN3std3ffi6os_str5OsStr12to_os_string17he090fa5dbff1be9cE(ptr sret(%"std::ffi::os_str::OsString") align 8 %_9, ptr align 1 %_10.0, i64 %_10.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h6ef806aed0cb5519E"(ptr align 8 %_8, ptr align 8 %_9)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  ret ptr %self
}

; pkg_config::WrappedCommand::arg
; Function Attrs: nonlazybind uwtable
define internal align 8 ptr @_ZN10pkg_config14WrappedCommand3arg17h993a63807081a612E(ptr align 8 %self, ptr align 1 %0, i64 %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_9 = alloca %"std::ffi::os_str::OsString", align 8
  %arg = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %arg, align 8
  %3 = getelementptr inbounds i8, ptr %arg, i64 8
  store i64 %1, ptr %3, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %4 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7bec7ec48adc293eE"(ptr align 8 %arg)
          to label %bb1 unwind label %cleanup

bb7:                                              ; preds = %cleanup
  %5 = load ptr, ptr %2, align 8, !noundef !3
  %6 = getelementptr inbounds i8, ptr %2, i64 8
  %7 = load i32, ptr %6, align 8, !noundef !3
  %8 = insertvalue { ptr, i32 } poison, ptr %5, 0
  %9 = insertvalue { ptr, i32 } %8, i32 %7, 1
  resume { ptr, i32 } %9

cleanup:                                          ; preds = %bb4, %bb3, %bb2, %bb1, %start
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  %12 = extractvalue { ptr, i32 } %10, 1
  store ptr %11, ptr %2, align 8
  %13 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb7

bb1:                                              ; preds = %start
  %_5.0 = extractvalue { ptr, i64 } %4, 0
  %_5.1 = extractvalue { ptr, i64 } %4, 1
; invoke std::process::Command::arg
  %_3 = invoke align 8 ptr @_ZN3std7process7Command3arg17h66d3cc99bf1d7dbeE(ptr align 8 %self, ptr align 1 %_5.0, i64 %_5.1)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_8 = getelementptr inbounds %WrappedCommand, ptr %self, i32 0, i32 3
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %14 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7bec7ec48adc293eE"(ptr align 8 %arg)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_10.0 = extractvalue { ptr, i64 } %14, 0
  %_10.1 = extractvalue { ptr, i64 } %14, 1
; invoke std::ffi::os_str::OsStr::to_os_string
  invoke void @_ZN3std3ffi6os_str5OsStr12to_os_string17he090fa5dbff1be9cE(ptr sret(%"std::ffi::os_str::OsString") align 8 %_9, ptr align 1 %_10.0, i64 %_10.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h6ef806aed0cb5519E"(ptr align 8 %_8, ptr align 8 %_9)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  ret ptr %self
}

; pkg_config::WrappedCommand::env
; Function Attrs: nonlazybind uwtable
define internal align 8 ptr @_ZN10pkg_config14WrappedCommand3env17h44763e7bbe0fe552E(ptr align 8 %self, ptr align 1 %0, i64 %1, ptr align 8 %value) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_16 = alloca %"std::ffi::os_str::OsString", align 8
  %_13 = alloca %"std::ffi::os_str::OsString", align 8
  %_12 = alloca { %"std::ffi::os_str::OsString", %"std::ffi::os_str::OsString" }, align 8
  %key = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %key, align 8
  %3 = getelementptr inbounds i8, ptr %key, i64 8
  store i64 %1, ptr %3, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %4 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7bec7ec48adc293eE"(ptr align 8 %key)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %bb11, %cleanup
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %value) #28
          to label %bb13 unwind label %terminate

cleanup:                                          ; preds = %bb7, %bb4, %bb3, %bb2, %bb1, %start
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %2, align 8
  %8 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb12

bb1:                                              ; preds = %start
  %_6.0 = extractvalue { ptr, i64 } %4, 0
  %_6.1 = extractvalue { ptr, i64 } %4, 1
; invoke <std::ffi::os_str::OsString as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
  %9 = invoke { ptr, i64 } @"_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17h6fc72231a91e2f9fE"(ptr align 8 %value)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_8.0 = extractvalue { ptr, i64 } %9, 0
  %_8.1 = extractvalue { ptr, i64 } %9, 1
; invoke std::process::Command::env
  %_4 = invoke align 8 ptr @_ZN3std7process7Command3env17h8cd9cc23dfdf7284E(ptr align 8 %self, ptr align 1 %_6.0, i64 %_6.1, ptr align 1 %_8.0, i64 %_8.1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_11 = getelementptr inbounds %WrappedCommand, ptr %self, i32 0, i32 2
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %10 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7bec7ec48adc293eE"(ptr align 8 %key)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %_14.0 = extractvalue { ptr, i64 } %10, 0
  %_14.1 = extractvalue { ptr, i64 } %10, 1
; invoke std::ffi::os_str::OsStr::to_os_string
  invoke void @_ZN3std3ffi6os_str5OsStr12to_os_string17he090fa5dbff1be9cE(ptr sret(%"std::ffi::os_str::OsString") align 8 %_13, ptr align 1 %_14.0, i64 %_14.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke <std::ffi::os_str::OsString as core::convert::AsRef<std::ffi::os_str::OsStr>>::as_ref
  %11 = invoke { ptr, i64 } @"_ZN98_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..AsRef$LT$std..ffi..os_str..OsStr$GT$$GT$6as_ref17h6fc72231a91e2f9fE"(ptr align 8 %value)
          to label %bb6 unwind label %cleanup1

bb11:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_13) #28
          to label %bb12 unwind label %terminate

cleanup1:                                         ; preds = %bb6, %bb5
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %2, align 8
  %15 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb11

bb6:                                              ; preds = %bb5
  %_17.0 = extractvalue { ptr, i64 } %11, 0
  %_17.1 = extractvalue { ptr, i64 } %11, 1
; invoke std::ffi::os_str::OsStr::to_os_string
  invoke void @_ZN3std3ffi6os_str5OsStr12to_os_string17he090fa5dbff1be9cE(ptr sret(%"std::ffi::os_str::OsString") align 8 %_16, ptr align 1 %_17.0, i64 %_17.1)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %_13, i64 24, i1 false)
  %16 = getelementptr inbounds { %"std::ffi::os_str::OsString", %"std::ffi::os_str::OsString" }, ptr %_12, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %_16, i64 24, i1 false)
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h224a56628b492694E"(ptr align 8 %_11, ptr align 8 %_12)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %value)
          to label %bb9 unwind label %cleanup2

bb13:                                             ; preds = %bb12, %cleanup2
  %17 = load ptr, ptr %2, align 8, !noundef !3
  %18 = getelementptr inbounds i8, ptr %2, i64 8
  %19 = load i32, ptr %18, align 8, !noundef !3
  %20 = insertvalue { ptr, i32 } poison, ptr %17, 0
  %21 = insertvalue { ptr, i32 } %20, i32 %19, 1
  resume { ptr, i32 } %21

cleanup2:                                         ; preds = %bb8
  %22 = landingpad { ptr, i32 }
          cleanup
  %23 = extractvalue { ptr, i32 } %22, 0
  %24 = extractvalue { ptr, i32 } %22, 1
  store ptr %23, ptr %2, align 8
  %25 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %24, ptr %25, align 8
  br label %bb13

bb9:                                              ; preds = %bb8
  ret ptr %self

terminate:                                        ; preds = %bb12, %bb11
  %26 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %27 = extractvalue { ptr, i32 } %26, 0
  %28 = extractvalue { ptr, i32 } %26, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable
}

; pkg_config::WrappedCommand::env
; Function Attrs: nonlazybind uwtable
define internal align 8 ptr @_ZN10pkg_config14WrappedCommand3env17h7097dd2f59f2f7a1E(ptr align 8 %self, ptr align 1 %0, i64 %1, ptr align 1 %2, i64 %3) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %4 = alloca { ptr, i32, [1 x i32] }, align 8
  %_16 = alloca %"std::ffi::os_str::OsString", align 8
  %_13 = alloca %"std::ffi::os_str::OsString", align 8
  %_12 = alloca { %"std::ffi::os_str::OsString", %"std::ffi::os_str::OsString" }, align 8
  %value = alloca { ptr, i64 }, align 8
  %key = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %key, align 8
  %5 = getelementptr inbounds i8, ptr %key, i64 8
  store i64 %1, ptr %5, align 8
  store ptr %2, ptr %value, align 8
  %6 = getelementptr inbounds i8, ptr %value, i64 8
  store i64 %3, ptr %6, align 8
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %7 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7bec7ec48adc293eE"(ptr align 8 %key)
          to label %bb1 unwind label %cleanup

bb12:                                             ; preds = %bb11, %cleanup
  br label %bb13

cleanup:                                          ; preds = %bb7, %bb4, %bb3, %bb2, %bb1, %start
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %4, align 8
  %11 = getelementptr inbounds i8, ptr %4, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb12

bb1:                                              ; preds = %start
  %_6.0 = extractvalue { ptr, i64 } %7, 0
  %_6.1 = extractvalue { ptr, i64 } %7, 1
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %12 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7bec7ec48adc293eE"(ptr align 8 %value)
          to label %bb2 unwind label %cleanup

bb2:                                              ; preds = %bb1
  %_8.0 = extractvalue { ptr, i64 } %12, 0
  %_8.1 = extractvalue { ptr, i64 } %12, 1
; invoke std::process::Command::env
  %_4 = invoke align 8 ptr @_ZN3std7process7Command3env17h8cd9cc23dfdf7284E(ptr align 8 %self, ptr align 1 %_6.0, i64 %_6.1, ptr align 1 %_8.0, i64 %_8.1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
  %_11 = getelementptr inbounds %WrappedCommand, ptr %self, i32 0, i32 2
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %13 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7bec7ec48adc293eE"(ptr align 8 %key)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %_14.0 = extractvalue { ptr, i64 } %13, 0
  %_14.1 = extractvalue { ptr, i64 } %13, 1
; invoke std::ffi::os_str::OsStr::to_os_string
  invoke void @_ZN3std3ffi6os_str5OsStr12to_os_string17he090fa5dbff1be9cE(ptr sret(%"std::ffi::os_str::OsString") align 8 %_13, ptr align 1 %_14.0, i64 %_14.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
; invoke <&T as core::convert::AsRef<U>>::as_ref
  %14 = invoke { ptr, i64 } @"_ZN55_$LT$$RF$T$u20$as$u20$core..convert..AsRef$LT$U$GT$$GT$6as_ref17h7bec7ec48adc293eE"(ptr align 8 %value)
          to label %bb6 unwind label %cleanup1

bb11:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_13) #28
          to label %bb12 unwind label %terminate

cleanup1:                                         ; preds = %bb6, %bb5
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %4, align 8
  %18 = getelementptr inbounds i8, ptr %4, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb11

bb6:                                              ; preds = %bb5
  %_17.0 = extractvalue { ptr, i64 } %14, 0
  %_17.1 = extractvalue { ptr, i64 } %14, 1
; invoke std::ffi::os_str::OsStr::to_os_string
  invoke void @_ZN3std3ffi6os_str5OsStr12to_os_string17he090fa5dbff1be9cE(ptr sret(%"std::ffi::os_str::OsString") align 8 %_16, ptr align 1 %_17.0, i64 %_17.1)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %_13, i64 24, i1 false)
  %19 = getelementptr inbounds { %"std::ffi::os_str::OsString", %"std::ffi::os_str::OsString" }, ptr %_12, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %19, ptr align 8 %_16, i64 24, i1 false)
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h224a56628b492694E"(ptr align 8 %_11, ptr align 8 %_12)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
  br label %bb9

bb9:                                              ; preds = %bb8
  ret ptr %self

terminate:                                        ; preds = %bb11
  %20 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %21 = extractvalue { ptr, i32 } %20, 0
  %22 = extractvalue { ptr, i32 } %20, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb13:                                             ; preds = %bb12
  %23 = load ptr, ptr %4, align 8, !noundef !3
  %24 = getelementptr inbounds i8, ptr %4, i64 8
  %25 = load i32, ptr %24, align 8, !noundef !3
  %26 = insertvalue { ptr, i32 } poison, ptr %23, 0
  %27 = insertvalue { ptr, i32 } %26, i32 %25, 1
  resume { ptr, i32 } %27
}

; pkg_config::WrappedCommand::output
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10pkg_config14WrappedCommand6output17he5d3f5d3366a1da6E(ptr sret(%"core::result::Result<std::process::Output, std::io::error::Error>") align 8 %_0, ptr align 8 %self) unnamed_addr #1 {
start:
; call std::process::Command::output
  call void @_ZN3std7process7Command6output17h2e6f5511378f18e8E(ptr sret(%"core::result::Result<std::process::Output, std::io::error::Error>") align 8 %_0, ptr align 8 %self)
  ret void
}

; <pkg_config::WrappedCommand as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN65_$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$3fmt17h9d42185a6365c9bcE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %_0.i8 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i7 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_30 = alloca %"alloc::borrow::Cow<'_, str>", align 8
  %_25 = alloca [3 x %"core::fmt::rt::Argument<'_>"], align 8
  %_21 = alloca %"core::fmt::Arguments<'_>", align 8
  %_15 = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %args = alloca %"alloc::string::String", align 8
  %_6 = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %envs = alloca %"alloc::string::String", align 8
  %_10 = getelementptr inbounds %WrappedCommand, ptr %self, i32 0, i32 2
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h7e6a91f6382569b6E"(ptr align 8 %_10)
  %_9.0 = extractvalue { ptr, i64 } %1, 0
  %_9.1 = extractvalue { ptr, i64 } %1, 1
; call core::slice::<impl [T]>::iter
  %2 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hd9ee3801c8c4209bE"(ptr align 8 %_9.0, i64 %_9.1)
  %_8.0 = extractvalue { ptr, ptr } %2, 0
  %_8.1 = extractvalue { ptr, ptr } %2, 1
; call core::iter::traits::iterator::Iterator::map
  %3 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17haef9593dfd7347c5E(ptr %_8.0, ptr %_8.1)
  %_7.0 = extractvalue { ptr, ptr } %3, 0
  %_7.1 = extractvalue { ptr, ptr } %3, 1
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17h3d0da1055e954de6E(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_6, ptr %_7.0, ptr %_7.1)
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %4 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd778bbd1b5a53518E"(ptr align 8 %_6)
          to label %bb5 unwind label %cleanup

bb31:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %_6) #28
          to label %bb32 unwind label %terminate

cleanup:                                          ; preds = %bb5, %start
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %0, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb31

bb5:                                              ; preds = %start
  %_4.0 = extractvalue { ptr, i64 } %4, 0
  %_4.1 = extractvalue { ptr, i64 } %4, 1
; invoke alloc::slice::<impl [T]>::join
  invoke void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4join17h099904bb3d1c31fbE"(ptr sret(%"alloc::string::String") align 8 %envs, ptr align 8 %_4.0, i64 %_4.1, ptr align 1 @alloc_0242e8ee118de705af76c627590b82cc, i64 1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %_6)
          to label %bb7 unwind label %cleanup1

bb30:                                             ; preds = %bb29, %bb28, %cleanup1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %envs) #28
          to label %bb32 unwind label %terminate

cleanup1:                                         ; preds = %bb10, %bb9, %bb8, %bb7, %bb6
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb30

bb7:                                              ; preds = %bb6
  %_19 = getelementptr inbounds %WrappedCommand, ptr %self, i32 0, i32 3
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %13 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h100ed3e772a63995E"(ptr align 8 %_19)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
  %_18.0 = extractvalue { ptr, i64 } %13, 0
  %_18.1 = extractvalue { ptr, i64 } %13, 1
; invoke core::slice::<impl [T]>::iter
  %14 = invoke { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h08517165ed133461E"(ptr align 8 %_18.0, i64 %_18.1)
          to label %bb9 unwind label %cleanup1

bb9:                                              ; preds = %bb8
  %_17.0 = extractvalue { ptr, ptr } %14, 0
  %_17.1 = extractvalue { ptr, ptr } %14, 1
; invoke core::iter::traits::iterator::Iterator::map
  %15 = invoke { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17hf8d29c6f78a9b0dbE(ptr %_17.0, ptr %_17.1)
          to label %bb10 unwind label %cleanup1

bb10:                                             ; preds = %bb9
  %_16.0 = extractvalue { ptr, ptr } %15, 0
  %_16.1 = extractvalue { ptr, ptr } %15, 1
; invoke core::iter::traits::iterator::Iterator::collect
  invoke void @_ZN4core4iter6traits8iterator8Iterator7collect17hfc775d10ed801bebE(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_15, ptr %_16.0, ptr %_16.1)
          to label %bb11 unwind label %cleanup1

bb11:                                             ; preds = %bb10
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %16 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd778bbd1b5a53518E"(ptr align 8 %_15)
          to label %bb12 unwind label %cleanup2

bb29:                                             ; preds = %cleanup2
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %_15) #28
          to label %bb30 unwind label %terminate

cleanup2:                                         ; preds = %bb12, %bb11
  %17 = landingpad { ptr, i32 }
          cleanup
  %18 = extractvalue { ptr, i32 } %17, 0
  %19 = extractvalue { ptr, i32 } %17, 1
  store ptr %18, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %19, ptr %20, align 8
  br label %bb29

bb12:                                             ; preds = %bb11
  %_13.0 = extractvalue { ptr, i64 } %16, 0
  %_13.1 = extractvalue { ptr, i64 } %16, 1
; invoke alloc::slice::<impl [T]>::join
  invoke void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4join17h099904bb3d1c31fbE"(ptr sret(%"alloc::string::String") align 8 %args, ptr align 8 %_13.0, i64 %_13.1, ptr align 1 @alloc_0242e8ee118de705af76c627590b82cc, i64 1)
          to label %bb13 unwind label %cleanup2

bb13:                                             ; preds = %bb12
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %_15)
          to label %bb14 unwind label %cleanup3

bb28:                                             ; preds = %cleanup3
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %args) #28
          to label %bb30 unwind label %terminate

cleanup3:                                         ; preds = %bb16, %bb15, %bb13
  %21 = landingpad { ptr, i32 }
          cleanup
  %22 = extractvalue { ptr, i32 } %21, 0
  %23 = extractvalue { ptr, i32 } %21, 1
  store ptr %22, ptr %0, align 8
  %24 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %23, ptr %24, align 8
  br label %bb28

bb14:                                             ; preds = %bb13
  store ptr %envs, ptr %_0.i8, align 8
  %25 = getelementptr inbounds i8, ptr %_0.i8, i64 8
  store ptr @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E", ptr %25, align 8
  %26 = load ptr, ptr %_0.i8, align 8, !nonnull !3, !align !4, !noundef !3
  %27 = getelementptr inbounds i8, ptr %_0.i8, i64 8
  %28 = load ptr, ptr %27, align 8, !nonnull !3, !noundef !3
  %29 = insertvalue { ptr, ptr } poison, ptr %26, 0
  %30 = insertvalue { ptr, ptr } %29, ptr %28, 1
  br label %bb15

bb15:                                             ; preds = %bb14
  %_26.0 = extractvalue { ptr, ptr } %30, 0
  %_26.1 = extractvalue { ptr, ptr } %30, 1
  %_32 = getelementptr inbounds %WrappedCommand, ptr %self, i32 0, i32 1
; invoke <std::ffi::os_str::OsString as core::ops::deref::Deref>::deref
  %31 = invoke { ptr, i64 } @"_ZN70_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h32d6c568a2decf67E"(ptr align 8 %_32)
          to label %bb16 unwind label %cleanup3

bb16:                                             ; preds = %bb15
  %_31.0 = extractvalue { ptr, i64 } %31, 0
  %_31.1 = extractvalue { ptr, i64 } %31, 1
; invoke std::ffi::os_str::OsStr::to_string_lossy
  invoke void @_ZN3std3ffi6os_str5OsStr15to_string_lossy17h2ca5630174251fceE(ptr sret(%"alloc::borrow::Cow<'_, str>") align 8 %_30, ptr align 1 %_31.0, i64 %_31.1)
          to label %bb17 unwind label %cleanup3

bb17:                                             ; preds = %bb16
  store ptr %_30, ptr %_0.i, align 8
  %32 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN66_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hd1ea73ff770805bdE", ptr %32, align 8
  %33 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %34 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %35 = load ptr, ptr %34, align 8, !nonnull !3, !noundef !3
  %36 = insertvalue { ptr, ptr } poison, ptr %33, 0
  %37 = insertvalue { ptr, ptr } %36, ptr %35, 1
  br label %bb18

bb25:                                             ; preds = %cleanup4
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %args) #28
          to label %bb26 unwind label %terminate

cleanup4:                                         ; preds = %bb20, %bb19
  %38 = landingpad { ptr, i32 }
          cleanup
  %39 = extractvalue { ptr, i32 } %38, 0
  %40 = extractvalue { ptr, i32 } %38, 1
  store ptr %39, ptr %0, align 8
  %41 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %40, ptr %41, align 8
  br label %bb25

bb18:                                             ; preds = %bb17
  %_28.0 = extractvalue { ptr, ptr } %37, 0
  %_28.1 = extractvalue { ptr, ptr } %37, 1
  store ptr %args, ptr %_0.i7, align 8
  %42 = getelementptr inbounds i8, ptr %_0.i7, i64 8
  store ptr @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E", ptr %42, align 8
  %43 = load ptr, ptr %_0.i7, align 8, !nonnull !3, !align !4, !noundef !3
  %44 = getelementptr inbounds i8, ptr %_0.i7, i64 8
  %45 = load ptr, ptr %44, align 8, !nonnull !3, !noundef !3
  %46 = insertvalue { ptr, ptr } poison, ptr %43, 0
  %47 = insertvalue { ptr, ptr } %46, ptr %45, 1
  br label %bb19

bb19:                                             ; preds = %bb18
  %_33.0 = extractvalue { ptr, ptr } %47, 0
  %_33.1 = extractvalue { ptr, ptr } %47, 1
  %48 = getelementptr inbounds [3 x %"core::fmt::rt::Argument<'_>"], ptr %_25, i64 0, i64 0
  store ptr %_26.0, ptr %48, align 8
  %49 = getelementptr inbounds i8, ptr %48, i64 8
  store ptr %_26.1, ptr %49, align 8
  %50 = getelementptr inbounds [3 x %"core::fmt::rt::Argument<'_>"], ptr %_25, i64 0, i64 1
  store ptr %_28.0, ptr %50, align 8
  %51 = getelementptr inbounds i8, ptr %50, i64 8
  store ptr %_28.1, ptr %51, align 8
  %52 = getelementptr inbounds [3 x %"core::fmt::rt::Argument<'_>"], ptr %_25, i64 0, i64 2
  store ptr %_33.0, ptr %52, align 8
  %53 = getelementptr inbounds i8, ptr %52, i64 8
  store ptr %_33.1, ptr %53, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_21, ptr align 8 @alloc_f68a4a9c2df0c6c5745df7fbc7ac7a6b, i64 3, ptr align 8 %_25, i64 3)
          to label %bb20 unwind label %cleanup4

bb20:                                             ; preds = %bb19
; invoke core::fmt::Formatter::write_fmt
  %_0 = invoke zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_21)
          to label %bb21 unwind label %cleanup4

bb21:                                             ; preds = %bb20
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %args)
          to label %bb22 unwind label %cleanup5

bb26:                                             ; preds = %bb25, %cleanup5
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %envs) #28
          to label %bb27 unwind label %terminate

cleanup5:                                         ; preds = %bb21
  %54 = landingpad { ptr, i32 }
          cleanup
  %55 = extractvalue { ptr, i32 } %54, 0
  %56 = extractvalue { ptr, i32 } %54, 1
  store ptr %55, ptr %0, align 8
  %57 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %56, ptr %57, align 8
  br label %bb26

bb22:                                             ; preds = %bb21
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %envs)
          to label %bb23 unwind label %cleanup6

bb27:                                             ; preds = %bb26, %cleanup6
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %_30) #28
          to label %bb32 unwind label %terminate

cleanup6:                                         ; preds = %bb22
  %58 = landingpad { ptr, i32 }
          cleanup
  %59 = extractvalue { ptr, i32 } %58, 0
  %60 = extractvalue { ptr, i32 } %58, 1
  store ptr %59, ptr %0, align 8
  %61 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %60, ptr %61, align 8
  br label %bb27

bb23:                                             ; preds = %bb22
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %_30)
  ret i1 %_0

terminate:                                        ; preds = %bb31, %bb30, %bb29, %bb28, %bb27, %bb26, %bb25
  %62 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %63 = extractvalue { ptr, i32 } %62, 0
  %64 = extractvalue { ptr, i32 } %62, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb32:                                             ; preds = %bb31, %bb30, %bb27
  %65 = load ptr, ptr %0, align 8, !noundef !3
  %66 = getelementptr inbounds i8, ptr %0, i64 8
  %67 = load i32, ptr %66, align 8, !noundef !3
  %68 = insertvalue { ptr, i32 } poison, ptr %65, 0
  %69 = insertvalue { ptr, i32 } %68, i32 %67, 1
  resume { ptr, i32 } %69
}

; <pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN65_$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h54c9c29748754e8aE"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %_1, ptr align 8 %_2) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %_0.i4 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_17 = alloca %"alloc::borrow::Cow<'_, str>", align 8
  %_13 = alloca %"alloc::borrow::Cow<'_, str>", align 8
  %_10 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  %res = alloca %"alloc::string::String", align 8
  %arg = getelementptr inbounds { %"std::ffi::os_str::OsString", %"std::ffi::os_str::OsString" }, ptr %_2, i32 0, i32 1
; call <std::ffi::os_str::OsString as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN70_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h32d6c568a2decf67E"(ptr align 8 %_2)
  %_14.0 = extractvalue { ptr, i64 } %1, 0
  %_14.1 = extractvalue { ptr, i64 } %1, 1
; call std::ffi::os_str::OsStr::to_string_lossy
  call void @_ZN3std3ffi6os_str5OsStr15to_string_lossy17h2ca5630174251fceE(ptr sret(%"alloc::borrow::Cow<'_, str>") align 8 %_13, ptr align 1 %_14.0, i64 %_14.1)
  store ptr %_13, ptr %_0.i4, align 8
  %2 = getelementptr inbounds i8, ptr %_0.i4, i64 8
  store ptr @"_ZN66_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hd1ea73ff770805bdE", ptr %2, align 8
  %3 = load ptr, ptr %_0.i4, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_0.i4, i64 8
  %5 = load ptr, ptr %4, align 8, !nonnull !3, !noundef !3
  %6 = insertvalue { ptr, ptr } poison, ptr %3, 0
  %7 = insertvalue { ptr, ptr } %6, ptr %5, 1
  br label %bb3

bb14:                                             ; preds = %bb13, %cleanup
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %_13) #28
          to label %bb15 unwind label %terminate

cleanup:                                          ; preds = %bb4, %bb3
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb14

bb3:                                              ; preds = %start
  %_11.0 = extractvalue { ptr, ptr } %7, 0
  %_11.1 = extractvalue { ptr, ptr } %7, 1
; invoke <std::ffi::os_str::OsString as core::ops::deref::Deref>::deref
  %12 = invoke { ptr, i64 } @"_ZN70_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h32d6c568a2decf67E"(ptr align 8 %arg)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %_18.0 = extractvalue { ptr, i64 } %12, 0
  %_18.1 = extractvalue { ptr, i64 } %12, 1
; invoke std::ffi::os_str::OsStr::to_string_lossy
  invoke void @_ZN3std3ffi6os_str5OsStr15to_string_lossy17h2ca5630174251fceE(ptr sret(%"alloc::borrow::Cow<'_, str>") align 8 %_17, ptr align 1 %_18.0, i64 %_18.1)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4
  store ptr %_17, ptr %_0.i, align 8
  %13 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN66_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hd1ea73ff770805bdE", ptr %13, align 8
  %14 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %15 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %16 = load ptr, ptr %15, align 8, !nonnull !3, !noundef !3
  %17 = insertvalue { ptr, ptr } poison, ptr %14, 0
  %18 = insertvalue { ptr, ptr } %17, ptr %16, 1
  br label %bb6

bb13:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %_17) #28
          to label %bb14 unwind label %terminate

cleanup1:                                         ; preds = %bb7, %bb6
  %19 = landingpad { ptr, i32 }
          cleanup
  %20 = extractvalue { ptr, i32 } %19, 0
  %21 = extractvalue { ptr, i32 } %19, 1
  store ptr %20, ptr %0, align 8
  %22 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %21, ptr %22, align 8
  br label %bb13

bb6:                                              ; preds = %bb5
  %_15.0 = extractvalue { ptr, ptr } %18, 0
  %_15.1 = extractvalue { ptr, ptr } %18, 1
  %23 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_10, i64 0, i64 0
  store ptr %_11.0, ptr %23, align 8
  %24 = getelementptr inbounds i8, ptr %23, i64 8
  store ptr %_11.1, ptr %24, align 8
  %25 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_10, i64 0, i64 1
  store ptr %_15.0, ptr %25, align 8
  %26 = getelementptr inbounds i8, ptr %25, i64 8
  store ptr %_15.1, ptr %26, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_6, ptr align 8 @alloc_587d33f3f14f886a08b060eeff3ed426, i64 2, ptr align 8 %_10, i64 2)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res, ptr align 8 %_6)
          to label %bb8 unwind label %cleanup1

bb8:                                              ; preds = %bb7
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %_17)
          to label %bb9 unwind label %cleanup2

bb11:                                             ; preds = %cleanup2
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %_13) #28
          to label %bb12 unwind label %terminate

cleanup2:                                         ; preds = %bb8
  %27 = landingpad { ptr, i32 }
          cleanup
  %28 = extractvalue { ptr, i32 } %27, 0
  %29 = extractvalue { ptr, i32 } %27, 1
  store ptr %28, ptr %0, align 8
  %30 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %29, ptr %30, align 8
  br label %bb11

bb9:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %_13)
          to label %bb10 unwind label %cleanup3

bb12:                                             ; preds = %bb11, %cleanup3
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %res) #28
          to label %bb15 unwind label %terminate

cleanup3:                                         ; preds = %bb9
  %31 = landingpad { ptr, i32 }
          cleanup
  %32 = extractvalue { ptr, i32 } %31, 0
  %33 = extractvalue { ptr, i32 } %31, 1
  store ptr %32, ptr %0, align 8
  %34 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %33, ptr %34, align 8
  br label %bb12

bb10:                                             ; preds = %bb9
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %res, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb14, %bb13, %bb12, %bb11
  %35 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %36 = extractvalue { ptr, i32 } %35, 0
  %37 = extractvalue { ptr, i32 } %35, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb15:                                             ; preds = %bb14, %bb12
  %38 = load ptr, ptr %0, align 8, !noundef !3
  %39 = getelementptr inbounds i8, ptr %0, i64 8
  %40 = load i32, ptr %39, align 8, !noundef !3
  %41 = insertvalue { ptr, i32 } poison, ptr %38, 0
  %42 = insertvalue { ptr, i32 } %41, i32 %40, 1
  resume { ptr, i32 } %42
}

; <pkg_config::WrappedCommand as core::fmt::Display>::fmt::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN65_$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h820fe77023d49542E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %_1, ptr align 8 %arg) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_4 = alloca %"alloc::borrow::Cow<'_, str>", align 8
; call <std::ffi::os_str::OsString as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN70_$LT$std..ffi..os_str..OsString$u20$as$u20$core..ops..deref..Deref$GT$5deref17h32d6c568a2decf67E"(ptr align 8 %arg)
  %_5.0 = extractvalue { ptr, i64 } %1, 0
  %_5.1 = extractvalue { ptr, i64 } %1, 1
; call std::ffi::os_str::OsStr::to_string_lossy
  call void @_ZN3std3ffi6os_str5OsStr15to_string_lossy17h2ca5630174251fceE(ptr sret(%"alloc::borrow::Cow<'_, str>") align 8 %_4, ptr align 1 %_5.0, i64 %_5.1)
; invoke <alloc::borrow::Cow<str> as alloc::string::ToString>::to_string
  invoke void @"_ZN73_$LT$alloc..borrow..Cow$LT$str$GT$$u20$as$u20$alloc..string..ToString$GT$9to_string17h87d763589fb67a11E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %_4)
          to label %bb3 unwind label %cleanup

bb5:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %_4) #28
          to label %bb6 unwind label %terminate

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb5

bb3:                                              ; preds = %start
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %_4)
  ret void

terminate:                                        ; preds = %bb5
  %6 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb6:                                              ; preds = %bb5
  %9 = load ptr, ptr %0, align 8, !noundef !3
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  %11 = load i32, ptr %10, align 8, !noundef !3
  %12 = insertvalue { ptr, i32 } poison, ptr %9, 0
  %13 = insertvalue { ptr, i32 } %12, i32 %11, 1
  resume { ptr, i32 } %13
}

; <pkg_config::Error as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN54_$LT$pkg_config..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hfc4da051e3c0875dE"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 {
start:
; call <pkg_config::Error as core::fmt::Display>::fmt
  %_0 = call zeroext i1 @"_ZN56_$LT$pkg_config..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hf1c77a20ce8c7271E"(ptr align 8 %self, ptr align 8 %f)
  ret i1 %_0
}

; <pkg_config::Error as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
define zeroext i1 @"_ZN56_$LT$pkg_config..Error$u20$as$u20$core..fmt..Display$GT$3fmt17hf1c77a20ce8c7271E"(ptr align 8 %self, ptr align 8 %f) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %_0.i35 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i34 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i33 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i32 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i31 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i30 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i29 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i28 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i27 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i26 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i25 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i24 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i23 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i22 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i21 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i20 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i19 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i18 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_237 = alloca i8, align 1
  %_236 = alloca i8, align 1
  %_214 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_210 = alloca %"core::fmt::Arguments<'_>", align 8
  %_208 = alloca i8, align 1
  %command7 = alloca ptr, align 8
  %_202 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_198 = alloca %"core::fmt::Arguments<'_>", align 8
  %_196 = alloca i8, align 1
  %_193 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_189 = alloca %"core::fmt::Arguments<'_>", align 8
  %res6 = alloca %"alloc::string::String", align 8
  %_185 = alloca %"core::fmt::Arguments<'_>", align 8
  %_183 = alloca i8, align 1
  %_181 = alloca %"core::fmt::rt::Count", align 8
  %_180 = alloca %"core::fmt::rt::Count", align 8
  %_179 = alloca i8, align 1
  %_178 = alloca %"core::fmt::rt::Placeholder", align 8
  %_177 = alloca %"core::fmt::rt::Count", align 8
  %_176 = alloca %"core::fmt::rt::Count", align 8
  %_175 = alloca i8, align 1
  %_174 = alloca %"core::fmt::rt::Placeholder", align 8
  %_173 = alloca %"core::fmt::rt::Count", align 8
  %_172 = alloca %"core::fmt::rt::Count", align 8
  %_171 = alloca i8, align 1
  %_170 = alloca %"core::fmt::rt::Placeholder", align 8
  %_169 = alloca [3 x %"core::fmt::rt::Placeholder"], align 8
  %_164 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_160 = alloca %"core::fmt::Arguments<'_>", align 8
  %res5 = alloca %"alloc::string::String", align 8
  %_154 = alloca %"core::str::iter::Split<'_, char>", align 8
  %_153 = alloca %"core::iter::adapters::map::Map<core::str::iter::Split<'_, char>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:372:38: 372:44}>", align 8
  %_152 = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %_149 = alloca %"alloc::string::String", align 8
  %_144 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_140 = alloca %"core::fmt::Arguments<'_>", align 8
  %_138 = alloca i8, align 1
  %search_path4 = alloca %"alloc::string::String", align 8
  %search_location = alloca ptr, align 8
  %hint = alloca %"alloc::string::String", align 8
  %_133 = alloca { ptr, %"alloc::string::String" }, align 8
  %_132 = alloca %"core::option::Option<(&&str, alloc::string::String)>", align 8
  %search_path = alloca %"alloc::string::String", align 8
  %_129 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_125 = alloca ptr, align 8
  %iter = alloca %"core::slice::iter::Iter<'_, &str>", align 8
  %search_data = alloca %"core::option::Option<(&&str, alloc::string::String)>", align 8
  %search_locations = alloca [2 x { ptr, i64 }], align 8
  %_113 = alloca %"core::option::Option<i32>", align 4
  %_109 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_105 = alloca %"core::fmt::Arguments<'_>", align 8
  %_103 = alloca i8, align 1
  %_97 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_93 = alloca %"core::fmt::Arguments<'_>", align 8
  %_91 = alloca i8, align 1
  %_87 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_83 = alloca %"core::fmt::Arguments<'_>", align 8
  %_81 = alloca i8, align 1
  %_76 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_72 = alloca %"core::fmt::Arguments<'_>", align 8
  %res = alloca %"alloc::string::String", align 8
  %code = alloca i32, align 4
  %_67 = alloca %"core::option::Option<i32>", align 4
  %_66 = alloca %"alloc::string::String", align 8
  %_63 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_59 = alloca %"core::fmt::Arguments<'_>", align 8
  %_57 = alloca i8, align 1
  %_54 = alloca %"core::fmt::Arguments<'_>", align 8
  %_52 = alloca i8, align 1
  %_51 = alloca %"alloc::string::String", align 8
  %_50 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %crate_name3 = alloca %"alloc::string::String", align 8
  %command2 = alloca ptr, align 8
  %name1 = alloca ptr, align 8
  %_41 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_37 = alloca %"core::fmt::Arguments<'_>", align 8
  %_30 = alloca [3 x %"core::fmt::rt::Argument<'_>"], align 8
  %_26 = alloca %"core::fmt::Arguments<'_>", align 8
  %_23 = alloca { ptr, i64 }, align 8
  %instructions = alloca { ptr, i64 }, align 8
  %_19 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %crate_name = alloca %"alloc::string::String", align 8
  %_15 = alloca i8, align 1
  %cause = alloca ptr, align 8
  %command = alloca ptr, align 8
  %_9 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %name = alloca ptr, align 8
  %_0 = alloca i8, align 1
  store i8 0, ptr %_237, align 1
  store i8 0, ptr %_236, align 1
  %_3 = load i64, ptr %self, align 8, !range !21, !noundef !3
  switch i64 %_3, label %bb160 [
    i64 0, label %bb2
    i64 1, label %bb5
    i64 2, label %bb6
    i64 3, label %bb126
    i64 4, label %bb27
    i64 5, label %bb1
  ]

bb160:                                            ; preds = %start
  unreachable

bb2:                                              ; preds = %start
  %1 = getelementptr inbounds %"Error::EnvNoPkgConfig", ptr %self, i32 0, i32 1
  store ptr %1, ptr %name, align 8
  store ptr %name, ptr %_0.i34, align 8
  %2 = getelementptr inbounds i8, ptr %_0.i34, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h28e6efe3818a3709E", ptr %2, align 8
  %3 = load ptr, ptr %_0.i34, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_0.i34, i64 8
  %5 = load ptr, ptr %4, align 8, !nonnull !3, !noundef !3
  %6 = insertvalue { ptr, ptr } poison, ptr %3, 0
  %7 = insertvalue { ptr, ptr } %6, ptr %5, 1
  %_10.0 = extractvalue { ptr, ptr } %7, 0
  %_10.1 = extractvalue { ptr, ptr } %7, 1
  %8 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_9, i64 0, i64 0
  store ptr %_10.0, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store ptr %_10.1, ptr %9, align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_e5f6adb735c211f6f016cdac87baac54, i64 2, ptr align 8 %_9, i64 1)
; call core::fmt::Formatter::write_fmt
  %10 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_5)
  %11 = zext i1 %10 to i8
  store i8 %11, ptr %_0, align 1
  br label %bb138

bb5:                                              ; preds = %start
; call core::fmt::Formatter::write_str
  %12 = call zeroext i1 @_ZN4core3fmt9Formatter9write_str17h4bb7c9399e0c7fb5E(ptr align 8 %f, ptr align 1 @alloc_dfabbe2c14568b3a30c863ae54b1c4a5, i64 272)
  %13 = zext i1 %12 to i8
  store i8 %13, ptr %_0, align 1
  br label %bb138

bb6:                                              ; preds = %start
  %14 = getelementptr inbounds %"Error::Command", ptr %self, i32 0, i32 2
  store ptr %14, ptr %command, align 8
  %15 = getelementptr inbounds %"Error::Command", ptr %self, i32 0, i32 1
  store ptr %15, ptr %cause, align 8
  %_16 = load ptr, ptr %cause, align 8, !nonnull !3, !align !5, !noundef !3
; call std::io::error::Error::kind
  %16 = call i8 @_ZN3std2io5error5Error4kind17h769a8be32f998f8bE(ptr align 8 %_16), !range !16
  store i8 %16, ptr %_15, align 1
  %17 = load i8, ptr %_15, align 1, !range !16, !noundef !3
  %_17 = zext i8 %17 to i64
  %18 = icmp eq i64 %_17, 0
  br i1 %18, label %bb9, label %bb8

bb126:                                            ; preds = %start
  %19 = getelementptr inbounds %"Error::Failure", ptr %self, i32 0, i32 1
  store ptr %19, ptr %command7, align 8
  %output = getelementptr inbounds %"Error::Failure", ptr %self, i32 0, i32 2
  store ptr %command7, ptr %_0.i31, align 8
  %20 = getelementptr inbounds i8, ptr %_0.i31, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h28e6efe3818a3709E", ptr %20, align 8
  %21 = load ptr, ptr %_0.i31, align 8, !nonnull !3, !align !4, !noundef !3
  %22 = getelementptr inbounds i8, ptr %_0.i31, i64 8
  %23 = load ptr, ptr %22, align 8, !nonnull !3, !noundef !3
  %24 = insertvalue { ptr, ptr } poison, ptr %21, 0
  %25 = insertvalue { ptr, ptr } %24, ptr %23, 1
  %_215.0 = extractvalue { ptr, ptr } %25, 0
  %_215.1 = extractvalue { ptr, ptr } %25, 1
  %_218 = getelementptr inbounds %"std::process::Output", ptr %output, i32 0, i32 2
  store ptr %_218, ptr %_0.i, align 8
  %26 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN63_$LT$std..process..ExitStatus$u20$as$u20$core..fmt..Display$GT$3fmt17hf691fd4a1afbd45cE", ptr %26, align 8
  %27 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %28 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %29 = load ptr, ptr %28, align 8, !nonnull !3, !noundef !3
  %30 = insertvalue { ptr, ptr } poison, ptr %27, 0
  %31 = insertvalue { ptr, ptr } %30, ptr %29, 1
  %_217.0 = extractvalue { ptr, ptr } %31, 0
  %_217.1 = extractvalue { ptr, ptr } %31, 1
  %32 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_214, i64 0, i64 0
  store ptr %_215.0, ptr %32, align 8
  %33 = getelementptr inbounds i8, ptr %32, i64 8
  store ptr %_215.1, ptr %33, align 8
  %34 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_214, i64 0, i64 1
  store ptr %_217.0, ptr %34, align 8
  %35 = getelementptr inbounds i8, ptr %34, i64 8
  store ptr %_217.1, ptr %35, align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_210, ptr align 8 @alloc_709cc5d9a83cee975e88b29245cecbb1, i64 2, ptr align 8 %_214, i64 2)
; call core::fmt::Formatter::write_fmt
  %_209 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_210)
; call <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %36 = call zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha33fb9ee59c6a77cE"(i1 zeroext %_209)
  %37 = zext i1 %36 to i8
  store i8 %37, ptr %_208, align 1
  %38 = load i8, ptr %_208, align 1, !range !10, !noundef !3
  %39 = trunc i8 %38 to i1
  %_219 = zext i1 %39 to i64
  %40 = icmp eq i64 %_219, 0
  br i1 %40, label %bb132, label %bb133

bb27:                                             ; preds = %start
  %41 = getelementptr inbounds %"Error::ProbeFailure", ptr %self, i32 0, i32 1
  store ptr %41, ptr %name1, align 8
  %42 = getelementptr inbounds %"Error::ProbeFailure", ptr %self, i32 0, i32 2
  store ptr %42, ptr %command2, align 8
  %output8 = getelementptr inbounds %"Error::ProbeFailure", ptr %self, i32 0, i32 3
  store i8 1, ptr %_237, align 1
; call std::env::var
  call void @_ZN3std3env3var17h7eb44638e42656b6E(ptr sret(%"core::result::Result<alloc::string::String, std::env::VarError>") align 8 %_50, ptr align 1 @alloc_9a2a3c3036bdc83c38b9c860d16ef631, i64 14)
; invoke <alloc::string::String as core::convert::From<&str>>::from
  invoke void @"_ZN76_$LT$alloc..string..String$u20$as$u20$core..convert..From$LT$$RF$str$GT$$GT$4from17h2ce6d0b3267d2923E"(ptr sret(%"alloc::string::String") align 8 %_51, ptr align 1 @alloc_91e9e93f67bf795c484f94a9c5b8d556, i64 15)
          to label %bb29 unwind label %cleanup9

bb1:                                              ; preds = %start
; call std::panicking::begin_panic
  call void @_ZN3std9panicking11begin_panic17ha93dccbe99f485a5E(ptr align 1 @alloc_476509aa7047bd805d630c6546685797, i64 14, ptr align 8 @alloc_9718cd0da82f32f7c7f9e70aaa6ed429) #27
  unreachable

bb138:                                            ; preds = %bb137, %bb125, %bb133, %bb132, %bb8, %bb23, %bb5, %bb2
  %43 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %44 = trunc i8 %43 to i1
  ret i1 %44

bb9:                                              ; preds = %bb6
; call std::env::var
  call void @_ZN3std3env3var17h7eb44638e42656b6E(ptr sret(%"core::result::Result<alloc::string::String, std::env::VarError>") align 8 %_19, ptr align 1 @alloc_9a2a3c3036bdc83c38b9c860d16ef631, i64 14)
; call core::result::Result<T,E>::unwrap_or_else
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$14unwrap_or_else17h480ec13e6c91d578E"(ptr sret(%"alloc::string::String") align 8 %crate_name, ptr align 8 %_19, ptr align 8 @alloc_8d138a45dcefad12d3052b1cd56e93a6)
  br i1 false, label %bb13, label %bb12

bb8:                                              ; preds = %bb6
  store ptr %command, ptr %_0.i32, align 8
  %45 = getelementptr inbounds i8, ptr %_0.i32, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h28e6efe3818a3709E", ptr %45, align 8
  %46 = load ptr, ptr %_0.i32, align 8, !nonnull !3, !align !4, !noundef !3
  %47 = getelementptr inbounds i8, ptr %_0.i32, i64 8
  %48 = load ptr, ptr %47, align 8, !nonnull !3, !noundef !3
  %49 = insertvalue { ptr, ptr } poison, ptr %46, 0
  %50 = insertvalue { ptr, ptr } %49, ptr %48, 1
  %_42.0 = extractvalue { ptr, ptr } %50, 0
  %_42.1 = extractvalue { ptr, ptr } %50, 1
  store ptr %cause, ptr %_0.i35, align 8
  %51 = getelementptr inbounds i8, ptr %_0.i35, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h9a67a8dd9fe10324E", ptr %51, align 8
  %52 = load ptr, ptr %_0.i35, align 8, !nonnull !3, !align !4, !noundef !3
  %53 = getelementptr inbounds i8, ptr %_0.i35, i64 8
  %54 = load ptr, ptr %53, align 8, !nonnull !3, !noundef !3
  %55 = insertvalue { ptr, ptr } poison, ptr %52, 0
  %56 = insertvalue { ptr, ptr } %55, ptr %54, 1
  %_44.0 = extractvalue { ptr, ptr } %56, 0
  %_44.1 = extractvalue { ptr, ptr } %56, 1
  %57 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_41, i64 0, i64 0
  store ptr %_42.0, ptr %57, align 8
  %58 = getelementptr inbounds i8, ptr %57, i64 8
  store ptr %_42.1, ptr %58, align 8
  %59 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_41, i64 0, i64 1
  store ptr %_44.0, ptr %59, align 8
  %60 = getelementptr inbounds i8, ptr %59, i64 8
  store ptr %_44.1, ptr %60, align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_37, ptr align 8 @alloc_d55d20b8d7b931c47068ebb5fcd58424, i64 2, ptr align 8 %_41, i64 2)
; call core::fmt::Formatter::write_fmt
  %61 = call zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_37)
  %62 = zext i1 %61 to i8
  store i8 %62, ptr %_0, align 1
  br label %bb138

bb12:                                             ; preds = %bb9
  br i1 false, label %bb13, label %bb14

bb13:                                             ; preds = %bb12, %bb9
  store ptr @alloc_fbd1237be5f227ea824c9d4f4d5a8fb9, ptr %instructions, align 8
  %63 = getelementptr inbounds i8, ptr %instructions, i64 8
  store i64 52, ptr %63, align 8
  br label %bb18

bb14:                                             ; preds = %bb12
  br i1 true, label %bb15, label %bb16

bb16:                                             ; preds = %bb14
  store ptr @alloc_513570631223a12912d85da2bec3b15a, ptr %_23, align 8
  %64 = getelementptr inbounds i8, ptr %_23, i64 8
  store i64 0, ptr %64, align 8
  br label %bb17

bb15:                                             ; preds = %bb14
  store ptr @alloc_25de438c3c41061b66c8c760d5e6c336, ptr %_23, align 8
  %65 = getelementptr inbounds i8, ptr %_23, i64 8
  store i64 143, ptr %65, align 8
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  %66 = load ptr, ptr %_23, align 8, !nonnull !3, !align !4, !noundef !3
  %67 = getelementptr inbounds i8, ptr %_23, i64 8
  %68 = load i64, ptr %67, align 8, !noundef !3
  store ptr %66, ptr %instructions, align 8
  %69 = getelementptr inbounds i8, ptr %instructions, i64 8
  store i64 %68, ptr %69, align 8
  br label %bb18

bb18:                                             ; preds = %bb13, %bb17
  store ptr %command, ptr %_0.i33, align 8
  %70 = getelementptr inbounds i8, ptr %_0.i33, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h28e6efe3818a3709E", ptr %70, align 8
  %71 = load ptr, ptr %_0.i33, align 8, !nonnull !3, !align !4, !noundef !3
  %72 = getelementptr inbounds i8, ptr %_0.i33, i64 8
  %73 = load ptr, ptr %72, align 8, !nonnull !3, !noundef !3
  %74 = insertvalue { ptr, ptr } poison, ptr %71, 0
  %75 = insertvalue { ptr, ptr } %74, ptr %73, 1
  br label %bb19

bb145:                                            ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %crate_name) #28
          to label %bb146 unwind label %terminate

cleanup:                                          ; preds = %bb22, %bb21
  %76 = landingpad { ptr, i32 }
          cleanup
  %77 = extractvalue { ptr, i32 } %76, 0
  %78 = extractvalue { ptr, i32 } %76, 1
  store ptr %77, ptr %0, align 8
  %79 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %78, ptr %79, align 8
  br label %bb145

bb19:                                             ; preds = %bb18
  %_31.0 = extractvalue { ptr, ptr } %75, 0
  %_31.1 = extractvalue { ptr, ptr } %75, 1
  store ptr %instructions, ptr %_0.i18, align 8
  %80 = getelementptr inbounds i8, ptr %_0.i18, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %80, align 8
  %81 = load ptr, ptr %_0.i18, align 8, !nonnull !3, !align !4, !noundef !3
  %82 = getelementptr inbounds i8, ptr %_0.i18, i64 8
  %83 = load ptr, ptr %82, align 8, !nonnull !3, !noundef !3
  %84 = insertvalue { ptr, ptr } poison, ptr %81, 0
  %85 = insertvalue { ptr, ptr } %84, ptr %83, 1
  br label %bb20

bb20:                                             ; preds = %bb19
  %_33.0 = extractvalue { ptr, ptr } %85, 0
  %_33.1 = extractvalue { ptr, ptr } %85, 1
  store ptr %crate_name, ptr %_0.i23, align 8
  %86 = getelementptr inbounds i8, ptr %_0.i23, i64 8
  store ptr @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E", ptr %86, align 8
  %87 = load ptr, ptr %_0.i23, align 8, !nonnull !3, !align !4, !noundef !3
  %88 = getelementptr inbounds i8, ptr %_0.i23, i64 8
  %89 = load ptr, ptr %88, align 8, !nonnull !3, !noundef !3
  %90 = insertvalue { ptr, ptr } poison, ptr %87, 0
  %91 = insertvalue { ptr, ptr } %90, ptr %89, 1
  br label %bb21

bb21:                                             ; preds = %bb20
  %_35.0 = extractvalue { ptr, ptr } %91, 0
  %_35.1 = extractvalue { ptr, ptr } %91, 1
  %92 = getelementptr inbounds [3 x %"core::fmt::rt::Argument<'_>"], ptr %_30, i64 0, i64 0
  store ptr %_31.0, ptr %92, align 8
  %93 = getelementptr inbounds i8, ptr %92, i64 8
  store ptr %_31.1, ptr %93, align 8
  %94 = getelementptr inbounds [3 x %"core::fmt::rt::Argument<'_>"], ptr %_30, i64 0, i64 1
  store ptr %_33.0, ptr %94, align 8
  %95 = getelementptr inbounds i8, ptr %94, i64 8
  store ptr %_33.1, ptr %95, align 8
  %96 = getelementptr inbounds [3 x %"core::fmt::rt::Argument<'_>"], ptr %_30, i64 0, i64 2
  store ptr %_35.0, ptr %96, align 8
  %97 = getelementptr inbounds i8, ptr %96, i64 8
  store ptr %_35.1, ptr %97, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_26, ptr align 8 @alloc_c59376b0255aa905f5d4c83b016652c8, i64 4, ptr align 8 %_30, i64 3)
          to label %bb22 unwind label %cleanup

bb22:                                             ; preds = %bb21
; invoke core::fmt::Formatter::write_fmt
  %98 = invoke zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_26)
          to label %bb23 unwind label %cleanup

bb23:                                             ; preds = %bb22
  %99 = zext i1 %98 to i8
  store i8 %99, ptr %_0, align 1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %crate_name)
  br label %bb138

terminate:                                        ; preds = %bb158, %bb144, %bb143, %bb156, %bb154, %bb139, %bb142, %bb141, %bb140, %bb145
  %100 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %101 = extractvalue { ptr, i32 } %100, 0
  %102 = extractvalue { ptr, i32 } %100, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb146:                                            ; preds = %bb158, %bb159, %bb144, %bb145
  %103 = load ptr, ptr %0, align 8, !noundef !3
  %104 = getelementptr inbounds i8, ptr %0, i64 8
  %105 = load i32, ptr %104, align 8, !noundef !3
  %106 = insertvalue { ptr, i32 } poison, ptr %103, 0
  %107 = insertvalue { ptr, i32 } %106, i32 %105, 1
  resume { ptr, i32 } %107

bb132:                                            ; preds = %bb126
; call pkg_config::format_output
  %108 = call zeroext i1 @_ZN10pkg_config13format_output17he321e31ad55ccdf5E(ptr align 8 %output, ptr align 8 %f)
  %109 = zext i1 %108 to i8
  store i8 %109, ptr %_0, align 1
  br label %bb138

bb133:                                            ; preds = %bb126
; call <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %110 = call zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h019591430e0a6fe7E"(ptr align 8 @alloc_d26fa2939e9abf966817920a6ac74921)
  %111 = zext i1 %110 to i8
  store i8 %111, ptr %_0, align 1
  br label %bb138

bb159:                                            ; preds = %cleanup9
  %112 = load i8, ptr %_237, align 1, !range !10, !noundef !3
  %113 = trunc i8 %112 to i1
  br i1 %113, label %bb158, label %bb146

cleanup9:                                         ; preds = %bb29, %bb27
  %114 = landingpad { ptr, i32 }
          cleanup
  %115 = extractvalue { ptr, i32 } %114, 0
  %116 = extractvalue { ptr, i32 } %114, 1
  store ptr %115, ptr %0, align 8
  %117 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %116, ptr %117, align 8
  br label %bb159

bb29:                                             ; preds = %bb27
  store i8 0, ptr %_237, align 1
; invoke core::result::Result<T,E>::unwrap_or
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$9unwrap_or17h7ae1be008e48cc02E"(ptr sret(%"alloc::string::String") align 8 %crate_name3, ptr align 8 %_50, ptr align 8 %_51)
          to label %bb30 unwind label %cleanup9

bb30:                                             ; preds = %bb29
  store i8 0, ptr %_237, align 1
; invoke core::fmt::Arguments::new_const
  invoke void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_54, ptr align 8 @alloc_905721c3cf206ce86b0d110014b92e9a, i64 1)
          to label %bb31 unwind label %cleanup10

bb144:                                            ; preds = %bb143, %bb156, %bb155, %bb157, %cleanup10
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %crate_name3) #28
          to label %bb146 unwind label %terminate

cleanup10:                                        ; preds = %bb35, %bb49, %bb56, %bb63, %bb69, %bb153, %bb150, %bb68, %bb66, %bb65, %bb64, %bb60, %bb59, %bb58, %bb53, %bb52, %bb51, %bb47, %bb40, %bb39, %bb37, %bb34, %bb32, %bb31, %bb30
  %118 = landingpad { ptr, i32 }
          cleanup
  %119 = extractvalue { ptr, i32 } %118, 0
  %120 = extractvalue { ptr, i32 } %118, 1
  store ptr %119, ptr %0, align 8
  %121 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %120, ptr %121, align 8
  br label %bb144

bb31:                                             ; preds = %bb30
; invoke core::fmt::Formatter::write_fmt
  %_53 = invoke zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_54)
          to label %bb32 unwind label %cleanup10

bb32:                                             ; preds = %bb31
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %122 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha33fb9ee59c6a77cE"(i1 zeroext %_53)
          to label %bb33 unwind label %cleanup10

bb33:                                             ; preds = %bb32
  %123 = zext i1 %122 to i8
  store i8 %123, ptr %_52, align 1
  %124 = load i8, ptr %_52, align 1, !range !10, !noundef !3
  %125 = trunc i8 %124 to i1
  %_56 = zext i1 %125 to i64
  %126 = icmp eq i64 %_56, 0
  br i1 %126, label %bb34, label %bb35

bb34:                                             ; preds = %bb33
  %_68 = getelementptr inbounds %"std::process::Output", ptr %output8, i32 0, i32 2
; invoke std::process::ExitStatus::code
  %127 = invoke { i32, i32 } @_ZN3std7process10ExitStatus4code17hf3b74bb5426be766E(ptr align 4 %_68)
          to label %bb36 unwind label %cleanup10

bb35:                                             ; preds = %bb33
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %128 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h019591430e0a6fe7E"(ptr align 8 @alloc_18313e0d453b70ca7de85a55710006f8)
          to label %bb161 unwind label %cleanup10

bb36:                                             ; preds = %bb34
  %129 = extractvalue { i32, i32 } %127, 0
  %130 = extractvalue { i32, i32 } %127, 1
  store i32 %129, ptr %_67, align 4
  %131 = getelementptr inbounds i8, ptr %_67, i64 4
  store i32 %130, ptr %131, align 4
  %132 = load i32, ptr %_67, align 4, !range !6, !noundef !3
  %_69 = zext i32 %132 to i64
  %133 = icmp eq i64 %_69, 0
  br i1 %133, label %bb37, label %bb38

bb37:                                             ; preds = %bb36
; invoke <str as alloc::string::ToString>::to_string
  invoke void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17h19f0c60c67b6d201E"(ptr sret(%"alloc::string::String") align 8 %_66, ptr align 1 @alloc_304b3db965ef4291853f9435575a9710, i64 24)
          to label %bb162 unwind label %cleanup10

bb38:                                             ; preds = %bb36
  %134 = getelementptr inbounds i8, ptr %_67, i64 4
  %135 = load i32, ptr %134, align 4, !noundef !3
  store i32 %135, ptr %code, align 4
  store ptr %code, ptr %_0.i24, align 8
  %136 = getelementptr inbounds i8, ptr %_0.i24, i64 8
  store ptr @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17hefb7f2f762607f15E", ptr %136, align 8
  %137 = load ptr, ptr %_0.i24, align 8, !nonnull !3, !align !4, !noundef !3
  %138 = getelementptr inbounds i8, ptr %_0.i24, i64 8
  %139 = load ptr, ptr %138, align 8, !nonnull !3, !noundef !3
  %140 = insertvalue { ptr, ptr } poison, ptr %137, 0
  %141 = insertvalue { ptr, ptr } %140, ptr %139, 1
  br label %bb39

bb162:                                            ; preds = %bb37
  br label %bb42

bb42:                                             ; preds = %bb41, %bb162
  store ptr %_66, ptr %_0.i22, align 8
  %142 = getelementptr inbounds i8, ptr %_0.i22, i64 8
  store ptr @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E", ptr %142, align 8
  %143 = load ptr, ptr %_0.i22, align 8, !nonnull !3, !align !4, !noundef !3
  %144 = getelementptr inbounds i8, ptr %_0.i22, i64 8
  %145 = load ptr, ptr %144, align 8, !nonnull !3, !noundef !3
  %146 = insertvalue { ptr, ptr } poison, ptr %143, 0
  %147 = insertvalue { ptr, ptr } %146, ptr %145, 1
  br label %bb43

bb39:                                             ; preds = %bb38
  %_77.0 = extractvalue { ptr, ptr } %141, 0
  %_77.1 = extractvalue { ptr, ptr } %141, 1
  %148 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_76, i64 0, i64 0
  store ptr %_77.0, ptr %148, align 8
  %149 = getelementptr inbounds i8, ptr %148, i64 8
  store ptr %_77.1, ptr %149, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_72, ptr align 8 @alloc_c731d085d44f44d0d28b5ac209fc3783, i64 1, ptr align 8 %_76, i64 1)
          to label %bb40 unwind label %cleanup10

bb40:                                             ; preds = %bb39
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res, ptr align 8 %_72)
          to label %bb41 unwind label %cleanup10

bb41:                                             ; preds = %bb40
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_66, ptr align 8 %res, i64 24, i1 false)
  br label %bb42

bb143:                                            ; preds = %cleanup11
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_66) #28
          to label %bb144 unwind label %terminate

cleanup11:                                        ; preds = %bb48, %bb45, %bb44, %bb43
  %150 = landingpad { ptr, i32 }
          cleanup
  %151 = extractvalue { ptr, i32 } %150, 0
  %152 = extractvalue { ptr, i32 } %150, 1
  store ptr %151, ptr %0, align 8
  %153 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %152, ptr %153, align 8
  br label %bb143

bb43:                                             ; preds = %bb42
  %_64.0 = extractvalue { ptr, ptr } %147, 0
  %_64.1 = extractvalue { ptr, ptr } %147, 1
  %154 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_63, i64 0, i64 0
  store ptr %_64.0, ptr %154, align 8
  %155 = getelementptr inbounds i8, ptr %154, i64 8
  store ptr %_64.1, ptr %155, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_59, ptr align 8 @alloc_3848cd39ae0b8840246e3e96a3c59dae, i64 2, ptr align 8 %_63, i64 1)
          to label %bb44 unwind label %cleanup11

bb44:                                             ; preds = %bb43
; invoke core::fmt::Formatter::write_fmt
  %_58 = invoke zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_59)
          to label %bb45 unwind label %cleanup11

bb45:                                             ; preds = %bb44
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %156 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha33fb9ee59c6a77cE"(i1 zeroext %_58)
          to label %bb46 unwind label %cleanup11

bb46:                                             ; preds = %bb45
  %157 = zext i1 %156 to i8
  store i8 %157, ptr %_57, align 1
  %158 = load i8, ptr %_57, align 1, !range !10, !noundef !3
  %159 = trunc i8 %158 to i1
  %_80 = zext i1 %159 to i64
  %160 = icmp eq i64 %_80, 0
  br i1 %160, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_66)
          to label %bb50 unwind label %cleanup10

bb48:                                             ; preds = %bb46
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %161 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h019591430e0a6fe7E"(ptr align 8 @alloc_b948f7a262558cc20302b260c78948c8)
          to label %bb49 unwind label %cleanup11

bb50:                                             ; preds = %bb47
  store ptr %command2, ptr %_0.i30, align 8
  %162 = getelementptr inbounds i8, ptr %_0.i30, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h28e6efe3818a3709E", ptr %162, align 8
  %163 = load ptr, ptr %_0.i30, align 8, !nonnull !3, !align !4, !noundef !3
  %164 = getelementptr inbounds i8, ptr %_0.i30, i64 8
  %165 = load ptr, ptr %164, align 8, !nonnull !3, !noundef !3
  %166 = insertvalue { ptr, ptr } poison, ptr %163, 0
  %167 = insertvalue { ptr, ptr } %166, ptr %165, 1
  br label %bb51

bb51:                                             ; preds = %bb50
  %_88.0 = extractvalue { ptr, ptr } %167, 0
  %_88.1 = extractvalue { ptr, ptr } %167, 1
  %168 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_87, i64 0, i64 0
  store ptr %_88.0, ptr %168, align 8
  %169 = getelementptr inbounds i8, ptr %168, i64 8
  store ptr %_88.1, ptr %169, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_83, ptr align 8 @alloc_6855a0a42a91e42f32127a171ff35065, i64 2, ptr align 8 %_87, i64 1)
          to label %bb52 unwind label %cleanup10

bb52:                                             ; preds = %bb51
; invoke core::fmt::Formatter::write_fmt
  %_82 = invoke zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_83)
          to label %bb53 unwind label %cleanup10

bb53:                                             ; preds = %bb52
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %170 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha33fb9ee59c6a77cE"(i1 zeroext %_82)
          to label %bb54 unwind label %cleanup10

bb54:                                             ; preds = %bb53
  %171 = zext i1 %170 to i8
  store i8 %171, ptr %_81, align 1
  %172 = load i8, ptr %_81, align 1, !range !10, !noundef !3
  %173 = trunc i8 %172 to i1
  %_90 = zext i1 %173 to i64
  %174 = icmp eq i64 %_90, 0
  br i1 %174, label %bb55, label %bb56

bb55:                                             ; preds = %bb54
  store ptr %name1, ptr %_0.i29, align 8
  %175 = getelementptr inbounds i8, ptr %_0.i29, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h28e6efe3818a3709E", ptr %175, align 8
  %176 = load ptr, ptr %_0.i29, align 8, !nonnull !3, !align !4, !noundef !3
  %177 = getelementptr inbounds i8, ptr %_0.i29, i64 8
  %178 = load ptr, ptr %177, align 8, !nonnull !3, !noundef !3
  %179 = insertvalue { ptr, ptr } poison, ptr %176, 0
  %180 = insertvalue { ptr, ptr } %179, ptr %178, 1
  br label %bb57

bb56:                                             ; preds = %bb54
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %181 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h019591430e0a6fe7E"(ptr align 8 @alloc_5c59bfb329635a6484ad12df89274e4a)
          to label %bb163 unwind label %cleanup10

bb57:                                             ; preds = %bb55
  %_98.0 = extractvalue { ptr, ptr } %180, 0
  %_98.1 = extractvalue { ptr, ptr } %180, 1
  store ptr %crate_name3, ptr %_0.i21, align 8
  %182 = getelementptr inbounds i8, ptr %_0.i21, i64 8
  store ptr @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E", ptr %182, align 8
  %183 = load ptr, ptr %_0.i21, align 8, !nonnull !3, !align !4, !noundef !3
  %184 = getelementptr inbounds i8, ptr %_0.i21, i64 8
  %185 = load ptr, ptr %184, align 8, !nonnull !3, !noundef !3
  %186 = insertvalue { ptr, ptr } poison, ptr %183, 0
  %187 = insertvalue { ptr, ptr } %186, ptr %185, 1
  br label %bb58

bb58:                                             ; preds = %bb57
  %_100.0 = extractvalue { ptr, ptr } %187, 0
  %_100.1 = extractvalue { ptr, ptr } %187, 1
  %188 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_97, i64 0, i64 0
  store ptr %_98.0, ptr %188, align 8
  %189 = getelementptr inbounds i8, ptr %188, i64 8
  store ptr %_98.1, ptr %189, align 8
  %190 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_97, i64 0, i64 1
  store ptr %_100.0, ptr %190, align 8
  %191 = getelementptr inbounds i8, ptr %190, i64 8
  store ptr %_100.1, ptr %191, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_93, ptr align 8 @alloc_b57816e70a9e5be5212b772e7a85ff36, i64 3, ptr align 8 %_97, i64 2)
          to label %bb59 unwind label %cleanup10

bb59:                                             ; preds = %bb58
; invoke core::fmt::Formatter::write_fmt
  %_92 = invoke zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_93)
          to label %bb60 unwind label %cleanup10

bb60:                                             ; preds = %bb59
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %192 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha33fb9ee59c6a77cE"(i1 zeroext %_92)
          to label %bb61 unwind label %cleanup10

bb61:                                             ; preds = %bb60
  %193 = zext i1 %192 to i8
  store i8 %193, ptr %_91, align 1
  %194 = load i8, ptr %_91, align 1, !range !10, !noundef !3
  %195 = trunc i8 %194 to i1
  %_102 = zext i1 %195 to i64
  %196 = icmp eq i64 %_102, 0
  br i1 %196, label %bb62, label %bb63

bb62:                                             ; preds = %bb61
  store ptr %name1, ptr %_0.i28, align 8
  %197 = getelementptr inbounds i8, ptr %_0.i28, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h28e6efe3818a3709E", ptr %197, align 8
  %198 = load ptr, ptr %_0.i28, align 8, !nonnull !3, !align !4, !noundef !3
  %199 = getelementptr inbounds i8, ptr %_0.i28, i64 8
  %200 = load ptr, ptr %199, align 8, !nonnull !3, !noundef !3
  %201 = insertvalue { ptr, ptr } poison, ptr %198, 0
  %202 = insertvalue { ptr, ptr } %201, ptr %200, 1
  br label %bb64

bb63:                                             ; preds = %bb61
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %203 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h019591430e0a6fe7E"(ptr align 8 @alloc_4a794ff4effbd30045b4cda2ff267b2c)
          to label %bb164 unwind label %cleanup10

bb64:                                             ; preds = %bb62
  %_110.0 = extractvalue { ptr, ptr } %202, 0
  %_110.1 = extractvalue { ptr, ptr } %202, 1
  %204 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_109, i64 0, i64 0
  store ptr %_110.0, ptr %204, align 8
  %205 = getelementptr inbounds i8, ptr %204, i64 8
  store ptr %_110.1, ptr %205, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_105, ptr align 8 @alloc_b77bcb96968b65b4c1b699567c0c274c, i64 2, ptr align 8 %_109, i64 1)
          to label %bb65 unwind label %cleanup10

bb65:                                             ; preds = %bb64
; invoke core::fmt::Formatter::write_fmt
  %_104 = invoke zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_105)
          to label %bb66 unwind label %cleanup10

bb66:                                             ; preds = %bb65
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %206 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha33fb9ee59c6a77cE"(i1 zeroext %_104)
          to label %bb67 unwind label %cleanup10

bb67:                                             ; preds = %bb66
  %207 = zext i1 %206 to i8
  store i8 %207, ptr %_103, align 1
  %208 = load i8, ptr %_103, align 1, !range !10, !noundef !3
  %209 = trunc i8 %208 to i1
  %_112 = zext i1 %209 to i64
  %210 = icmp eq i64 %_112, 0
  br i1 %210, label %bb68, label %bb69

bb68:                                             ; preds = %bb67
  %_114 = getelementptr inbounds %"std::process::Output", ptr %output8, i32 0, i32 2
; invoke std::process::ExitStatus::code
  %211 = invoke { i32, i32 } @_ZN3std7process10ExitStatus4code17hf3b74bb5426be766E(ptr align 4 %_114)
          to label %bb70 unwind label %cleanup10

bb69:                                             ; preds = %bb67
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %212 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h019591430e0a6fe7E"(ptr align 8 @alloc_27be8f55f41c13bd3ba1cf3549dc9067)
          to label %bb165 unwind label %cleanup10

bb70:                                             ; preds = %bb68
  %213 = extractvalue { i32, i32 } %211, 0
  %214 = extractvalue { i32, i32 } %211, 1
  store i32 %213, ptr %_113, align 4
  %215 = getelementptr inbounds i8, ptr %_113, i64 4
  store i32 %214, ptr %215, align 4
  %216 = load i32, ptr %_113, align 4, !range !6, !noundef !3
  %_115 = zext i32 %216 to i64
  %217 = icmp eq i64 %_115, 1
  br i1 %217, label %bb71, label %bb125

bb71:                                             ; preds = %bb70
  %218 = getelementptr inbounds i8, ptr %_113, i64 4
  %_code = load i32, ptr %218, align 4, !noundef !3
  %219 = getelementptr inbounds [2 x { ptr, i64 }], ptr %search_locations, i64 0, i64 0
  store ptr @alloc_25dd1a64598d6f21ba2c87890f82d86f, ptr %219, align 8
  %220 = getelementptr inbounds i8, ptr %219, i64 8
  store i64 26, ptr %220, align 8
  %221 = getelementptr inbounds [2 x { ptr, i64 }], ptr %search_locations, i64 0, i64 1
  store ptr @alloc_55cf2f91542826791c64c291a3d46481, ptr %221, align 8
  %222 = getelementptr inbounds i8, ptr %221, i64 8
  store i64 15, ptr %222, align 8
  store i8 1, ptr %_236, align 1
  %223 = getelementptr inbounds %"core::option::Option<(&&str, alloc::string::String)>", ptr %search_data, i32 0, i32 1
  store i64 -9223372036854775808, ptr %223, align 8
; invoke core::slice::<impl [T]>::iter
  %224 = invoke { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17ha3e94b864b5188c9E"(ptr align 8 %search_locations, i64 2)
          to label %bb72 unwind label %cleanup12

bb125:                                            ; preds = %bb148, %bb70
  store i8 0, ptr %_0, align 1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %crate_name3)
  br label %bb138

bb157:                                            ; preds = %bb154, %bb80, %bb139, %bb142, %cleanup12
  %225 = getelementptr inbounds %"core::option::Option<(&&str, alloc::string::String)>", ptr %search_data, i32 0, i32 1
  %226 = load i64, ptr %225, align 8, !range !12, !noundef !3
  %227 = icmp eq i64 %226, -9223372036854775808
  %_242 = select i1 %227, i64 0, i64 1
  %228 = icmp eq i64 %_242, 1
  br i1 %228, label %bb155, label %bb144

cleanup12:                                        ; preds = %bb81, %bb112, %bb123, %bb121, %bb114, %bb113, %bb109, %bb108, %bb83, %bb135, %bb107, %bb147, %bb76, %bb74, %bb72, %bb71
  %229 = landingpad { ptr, i32 }
          cleanup
  %230 = extractvalue { ptr, i32 } %229, 0
  %231 = extractvalue { ptr, i32 } %229, 1
  store ptr %230, ptr %0, align 8
  %232 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %231, ptr %232, align 8
  br label %bb157

bb72:                                             ; preds = %bb71
  %_121.0 = extractvalue { ptr, ptr } %224, 0
  %_121.1 = extractvalue { ptr, ptr } %224, 1
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %233 = invoke { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h811b7597d31bb2bfE"(ptr %_121.0, ptr %_121.1)
          to label %bb73 unwind label %cleanup12

bb73:                                             ; preds = %bb72
  %_120.0 = extractvalue { ptr, ptr } %233, 0
  %_120.1 = extractvalue { ptr, ptr } %233, 1
  store ptr %_120.0, ptr %iter, align 8
  %234 = getelementptr inbounds i8, ptr %iter, i64 8
  store ptr %_120.1, ptr %234, align 8
  br label %bb74

bb74:                                             ; preds = %bb81, %bb73
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %235 = invoke align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9cd2dfb86b854212E"(ptr align 8 %iter)
          to label %bb75 unwind label %cleanup12

bb75:                                             ; preds = %bb74
  store ptr %235, ptr %_125, align 8
  %236 = load ptr, ptr %_125, align 8, !noundef !3
  %237 = ptrtoint ptr %236 to i64
  %238 = icmp eq i64 %237, 0
  %_127 = select i1 %238, i64 0, i64 1
  %239 = icmp eq i64 %_127, 0
  br i1 %239, label %bb82, label %bb76

bb82:                                             ; preds = %bb147, %bb79, %bb75
  %240 = getelementptr inbounds %"core::option::Option<(&&str, alloc::string::String)>", ptr %search_data, i32 0, i32 1
  %241 = load i64, ptr %240, align 8, !range !12, !noundef !3
  %242 = icmp eq i64 %241, -9223372036854775808
  %_135 = select i1 %242, i64 0, i64 1
  %243 = icmp eq i64 %_135, 1
  br i1 %243, label %bb84, label %bb83

bb76:                                             ; preds = %bb75
  %location = load ptr, ptr %_125, align 8, !nonnull !3, !align !5, !noundef !3
; invoke std::env::var
  invoke void @_ZN3std3env3var17h90aca72922a21f9eE(ptr sret(%"core::result::Result<alloc::string::String, std::env::VarError>") align 8 %_129, ptr align 8 %location)
          to label %bb77 unwind label %cleanup12

bb77:                                             ; preds = %bb76
  %_130 = load i64, ptr %_129, align 8, !range !9, !noundef !3
  %244 = icmp eq i64 %_130, 0
  br i1 %244, label %bb78, label %bb81

bb78:                                             ; preds = %bb77
  %245 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", ptr %_129, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %search_path, ptr align 8 %245, i64 24, i1 false)
  store ptr %location, ptr %_133, align 8
  %246 = getelementptr inbounds { ptr, %"alloc::string::String" }, ptr %_133, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %246, ptr align 8 %search_path, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_132, ptr align 8 %_133, i64 32, i1 false)
; invoke core::ptr::drop_in_place<core::option::Option<(&&str,alloc::string::String)>>
  invoke void @"_ZN4core3ptr92drop_in_place$LT$core..option..Option$LT$$LP$$RF$$RF$str$C$alloc..string..String$RP$$GT$$GT$17h8f0315ec8371aedaE"(ptr align 8 %search_data)
          to label %bb79 unwind label %cleanup13

bb81:                                             ; preds = %bb77
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17he3784d90bbaa7c42E"(ptr align 8 %_129)
          to label %bb74 unwind label %cleanup12

bb80:                                             ; preds = %cleanup13
  store i8 1, ptr %_236, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %search_data, ptr align 8 %_132, i64 32, i1 false)
  %_241 = load i64, ptr %_129, align 8, !range !9, !noundef !3
  %247 = icmp eq i64 %_241, 0
  br i1 %247, label %bb157, label %bb154

cleanup13:                                        ; preds = %bb78
  %248 = landingpad { ptr, i32 }
          cleanup
  %249 = extractvalue { ptr, i32 } %248, 0
  %250 = extractvalue { ptr, i32 } %248, 1
  store ptr %249, ptr %0, align 8
  %251 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %250, ptr %251, align 8
  br label %bb80

bb79:                                             ; preds = %bb78
  store i8 1, ptr %_236, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %search_data, ptr align 8 %_132, i64 32, i1 false)
  %_238 = load i64, ptr %_129, align 8, !range !9, !noundef !3
  %252 = icmp eq i64 %_238, 0
  br i1 %252, label %bb82, label %bb147

bb147:                                            ; preds = %bb79
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17he3784d90bbaa7c42E"(ptr align 8 %_129)
          to label %bb82 unwind label %cleanup12

bb84:                                             ; preds = %bb82
  %253 = load ptr, ptr %search_data, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %253, ptr %search_location, align 8
  store i8 0, ptr %_236, align 1
  %254 = getelementptr inbounds { ptr, %"alloc::string::String" }, ptr %search_data, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %search_path4, ptr align 8 %254, i64 24, i1 false)
  store ptr %search_location, ptr %_0.i25, align 8
  %255 = getelementptr inbounds i8, ptr %_0.i25, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h4258ea0e27e635b8E", ptr %255, align 8
  %256 = load ptr, ptr %_0.i25, align 8, !nonnull !3, !align !4, !noundef !3
  %257 = getelementptr inbounds i8, ptr %_0.i25, i64 8
  %258 = load ptr, ptr %257, align 8, !nonnull !3, !noundef !3
  %259 = insertvalue { ptr, ptr } poison, ptr %256, 0
  %260 = insertvalue { ptr, ptr } %259, ptr %258, 1
  br label %bb85

bb83:                                             ; preds = %bb82
; invoke core::fmt::Arguments::new_const
  invoke void @_ZN4core3fmt9Arguments9new_const17heb3908358043b2b4E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_185, ptr align 8 @alloc_d193c765db64f33913afdf66063ac55a, i64 1)
          to label %bb108 unwind label %cleanup12

bb142:                                            ; preds = %bb141, %cleanup14
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %search_path4) #28
          to label %bb157 unwind label %terminate

cleanup14:                                        ; preds = %bb134, %bb106, %bb105, %bb99, %bb88, %bb87, %bb86, %bb85
  %261 = landingpad { ptr, i32 }
          cleanup
  %262 = extractvalue { ptr, i32 } %261, 0
  %263 = extractvalue { ptr, i32 } %261, 1
  store ptr %262, ptr %0, align 8
  %264 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %263, ptr %264, align 8
  br label %bb142

bb85:                                             ; preds = %bb84
  %_145.0 = extractvalue { ptr, ptr } %260, 0
  %_145.1 = extractvalue { ptr, ptr } %260, 1
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %265 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %search_path4)
          to label %bb86 unwind label %cleanup14

bb86:                                             ; preds = %bb85
  %_155.0 = extractvalue { ptr, i64 } %265, 0
  %_155.1 = extractvalue { ptr, i64 } %265, 1
; invoke core::str::<impl str>::split
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h37b7a3ae21cc6b09E"(ptr sret(%"core::str::iter::Split<'_, char>") align 8 %_154, ptr align 1 %_155.0, i64 %_155.1, i32 58)
          to label %bb87 unwind label %cleanup14

bb87:                                             ; preds = %bb86
; invoke core::iter::traits::iterator::Iterator::map
  invoke void @_ZN4core4iter6traits8iterator8Iterator3map17h6594f285465e76b6E(ptr sret(%"core::iter::adapters::map::Map<core::str::iter::Split<'_, char>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:372:38: 372:44}>") align 8 %_153, ptr align 8 %_154)
          to label %bb88 unwind label %cleanup14

bb88:                                             ; preds = %bb87
; invoke core::iter::traits::iterator::Iterator::collect
  invoke void @_ZN4core4iter6traits8iterator8Iterator7collect17he786b47e156240eaE(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_152, ptr align 8 %_153)
          to label %bb89 unwind label %cleanup14

bb89:                                             ; preds = %bb88
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %266 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd778bbd1b5a53518E"(ptr align 8 %_152)
          to label %bb90 unwind label %cleanup15

bb141:                                            ; preds = %bb140, %cleanup15
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %_152) #28
          to label %bb142 unwind label %terminate

cleanup15:                                        ; preds = %bb98, %bb96, %bb90, %bb89
  %267 = landingpad { ptr, i32 }
          cleanup
  %268 = extractvalue { ptr, i32 } %267, 0
  %269 = extractvalue { ptr, i32 } %267, 1
  store ptr %268, ptr %0, align 8
  %270 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %269, ptr %270, align 8
  br label %bb141

bb90:                                             ; preds = %bb89
  %_150.0 = extractvalue { ptr, i64 } %266, 0
  %_150.1 = extractvalue { ptr, i64 } %266, 1
; invoke alloc::slice::<impl [T]>::join
  invoke void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4join17h099904bb3d1c31fbE"(ptr sret(%"alloc::string::String") align 8 %_149, ptr align 8 %_150.0, i64 %_150.1, ptr align 1 @alloc_49a1e817e911805af64bbc7efb390101, i64 1)
          to label %bb91 unwind label %cleanup15

bb91:                                             ; preds = %bb90
  store ptr %_149, ptr %_0.i20, align 8
  %271 = getelementptr inbounds i8, ptr %_0.i20, i64 8
  store ptr @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E", ptr %271, align 8
  %272 = load ptr, ptr %_0.i20, align 8, !nonnull !3, !align !4, !noundef !3
  %273 = getelementptr inbounds i8, ptr %_0.i20, i64 8
  %274 = load ptr, ptr %273, align 8, !nonnull !3, !noundef !3
  %275 = insertvalue { ptr, ptr } poison, ptr %272, 0
  %276 = insertvalue { ptr, ptr } %275, ptr %274, 1
  br label %bb92

bb140:                                            ; preds = %cleanup16
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_149) #28
          to label %bb141 unwind label %terminate

cleanup16:                                        ; preds = %bb97, %bb94, %bb93, %bb92
  %277 = landingpad { ptr, i32 }
          cleanup
  %278 = extractvalue { ptr, i32 } %277, 0
  %279 = extractvalue { ptr, i32 } %277, 1
  store ptr %278, ptr %0, align 8
  %280 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %279, ptr %280, align 8
  br label %bb140

bb92:                                             ; preds = %bb91
  %_147.0 = extractvalue { ptr, ptr } %276, 0
  %_147.1 = extractvalue { ptr, ptr } %276, 1
  %281 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_144, i64 0, i64 0
  store ptr %_145.0, ptr %281, align 8
  %282 = getelementptr inbounds i8, ptr %281, i64 8
  store ptr %_145.1, ptr %282, align 8
  %283 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_144, i64 0, i64 1
  store ptr %_147.0, ptr %283, align 8
  %284 = getelementptr inbounds i8, ptr %283, i64 8
  store ptr %_147.1, ptr %284, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_140, ptr align 8 @alloc_e30b1b2d049cf9cfbe50a3a3a345a715, i64 3, ptr align 8 %_144, i64 2)
          to label %bb93 unwind label %cleanup16

bb93:                                             ; preds = %bb92
; invoke core::fmt::Formatter::write_fmt
  %_139 = invoke zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_140)
          to label %bb94 unwind label %cleanup16

bb94:                                             ; preds = %bb93
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %285 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha33fb9ee59c6a77cE"(i1 zeroext %_139)
          to label %bb95 unwind label %cleanup16

bb95:                                             ; preds = %bb94
  %286 = zext i1 %285 to i8
  store i8 %286, ptr %_138, align 1
  %287 = load i8, ptr %_138, align 1, !range !10, !noundef !3
  %288 = trunc i8 %287 to i1
  %_158 = zext i1 %288 to i64
  %289 = icmp eq i64 %_158, 0
  br i1 %289, label %bb96, label %bb97

bb96:                                             ; preds = %bb95
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_149)
          to label %bb99 unwind label %cleanup15

bb97:                                             ; preds = %bb95
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %290 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h019591430e0a6fe7E"(ptr align 8 @alloc_72512ba49eb471d988ad8f9b8b1b017e)
          to label %bb98 unwind label %cleanup16

bb99:                                             ; preds = %bb96
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %_152)
          to label %bb100 unwind label %cleanup14

bb100:                                            ; preds = %bb99
  store ptr %name1, ptr %_0.i27, align 8
  %291 = getelementptr inbounds i8, ptr %_0.i27, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h28e6efe3818a3709E", ptr %291, align 8
  %292 = load ptr, ptr %_0.i27, align 8, !nonnull !3, !align !4, !noundef !3
  %293 = getelementptr inbounds i8, ptr %_0.i27, i64 8
  %294 = load ptr, ptr %293, align 8, !nonnull !3, !noundef !3
  %295 = insertvalue { ptr, ptr } poison, ptr %292, 0
  %296 = insertvalue { ptr, ptr } %295, ptr %294, 1
  br label %bb101

bb101:                                            ; preds = %bb100
  %_165.0 = extractvalue { ptr, ptr } %296, 0
  %_165.1 = extractvalue { ptr, ptr } %296, 1
  %297 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_164, i64 0, i64 0
  store ptr %_165.0, ptr %297, align 8
  %298 = getelementptr inbounds i8, ptr %297, i64 8
  store ptr %_165.1, ptr %298, align 8
  store i8 3, ptr %_171, align 1
  store i64 2, ptr %_172, align 8
  store i64 2, ptr %_173, align 8
  %299 = load i8, ptr %_171, align 1, !range !17, !noundef !3
  %300 = load i64, ptr %_172, align 8, !range !11, !noundef !3
  %301 = getelementptr inbounds i8, ptr %_172, i64 8
  %302 = load i64, ptr %301, align 8
  %303 = load i64, ptr %_173, align 8, !range !11, !noundef !3
  %304 = getelementptr inbounds i8, ptr %_173, i64 8
  %305 = load i64, ptr %304, align 8
  %306 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_170, i32 0, i32 2
  store i64 0, ptr %306, align 8
  %307 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_170, i32 0, i32 3
  store i32 32, ptr %307, align 8
  %308 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_170, i32 0, i32 5
  store i8 %299, ptr %308, align 8
  %309 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_170, i32 0, i32 4
  store i32 0, ptr %309, align 4
  store i64 %300, ptr %_170, align 8
  %310 = getelementptr inbounds i8, ptr %_170, i64 8
  store i64 %302, ptr %310, align 8
  %311 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_170, i32 0, i32 1
  store i64 %303, ptr %311, align 8
  %312 = getelementptr inbounds i8, ptr %311, i64 8
  store i64 %305, ptr %312, align 8
  br label %bb102

bb102:                                            ; preds = %bb101
  store i8 3, ptr %_175, align 1
  store i64 2, ptr %_176, align 8
  store i64 2, ptr %_177, align 8
  %313 = load i8, ptr %_175, align 1, !range !17, !noundef !3
  %314 = load i64, ptr %_176, align 8, !range !11, !noundef !3
  %315 = getelementptr inbounds i8, ptr %_176, i64 8
  %316 = load i64, ptr %315, align 8
  %317 = load i64, ptr %_177, align 8, !range !11, !noundef !3
  %318 = getelementptr inbounds i8, ptr %_177, i64 8
  %319 = load i64, ptr %318, align 8
  %320 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_174, i32 0, i32 2
  store i64 0, ptr %320, align 8
  %321 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_174, i32 0, i32 3
  store i32 32, ptr %321, align 8
  %322 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_174, i32 0, i32 5
  store i8 %313, ptr %322, align 8
  %323 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_174, i32 0, i32 4
  store i32 0, ptr %323, align 4
  store i64 %314, ptr %_174, align 8
  %324 = getelementptr inbounds i8, ptr %_174, i64 8
  store i64 %316, ptr %324, align 8
  %325 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_174, i32 0, i32 1
  store i64 %317, ptr %325, align 8
  %326 = getelementptr inbounds i8, ptr %325, i64 8
  store i64 %319, ptr %326, align 8
  br label %bb103

bb103:                                            ; preds = %bb102
  store i8 3, ptr %_179, align 1
  store i64 2, ptr %_180, align 8
  store i64 2, ptr %_181, align 8
  %327 = load i8, ptr %_179, align 1, !range !17, !noundef !3
  %328 = load i64, ptr %_180, align 8, !range !11, !noundef !3
  %329 = getelementptr inbounds i8, ptr %_180, i64 8
  %330 = load i64, ptr %329, align 8
  %331 = load i64, ptr %_181, align 8, !range !11, !noundef !3
  %332 = getelementptr inbounds i8, ptr %_181, i64 8
  %333 = load i64, ptr %332, align 8
  %334 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_178, i32 0, i32 2
  store i64 0, ptr %334, align 8
  %335 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_178, i32 0, i32 3
  store i32 32, ptr %335, align 8
  %336 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_178, i32 0, i32 5
  store i8 %327, ptr %336, align 8
  %337 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_178, i32 0, i32 4
  store i32 0, ptr %337, align 4
  store i64 %328, ptr %_178, align 8
  %338 = getelementptr inbounds i8, ptr %_178, i64 8
  store i64 %330, ptr %338, align 8
  %339 = getelementptr inbounds %"core::fmt::rt::Placeholder", ptr %_178, i32 0, i32 1
  store i64 %331, ptr %339, align 8
  %340 = getelementptr inbounds i8, ptr %339, i64 8
  store i64 %333, ptr %340, align 8
  br label %bb104

bb104:                                            ; preds = %bb103
  %341 = getelementptr inbounds [3 x %"core::fmt::rt::Placeholder"], ptr %_169, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %341, ptr align 8 %_170, i64 56, i1 false)
  %342 = getelementptr inbounds [3 x %"core::fmt::rt::Placeholder"], ptr %_169, i64 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %342, ptr align 8 %_174, i64 56, i1 false)
  %343 = getelementptr inbounds [3 x %"core::fmt::rt::Placeholder"], ptr %_169, i64 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %343, ptr align 8 %_178, i64 56, i1 false)
  br label %bb105

bb105:                                            ; preds = %bb104
; invoke core::fmt::Arguments::new_v1_formatted
  invoke void @_ZN4core3fmt9Arguments16new_v1_formatted17h8648efbea738c34fE(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_160, ptr align 8 @alloc_830e7cf66b552282a94e5bcf556207d0, i64 4, ptr align 8 %_164, i64 1, ptr align 8 %_169, i64 3)
          to label %bb106 unwind label %cleanup14

bb106:                                            ; preds = %bb105
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res5, ptr align 8 %_160)
          to label %bb107 unwind label %cleanup14

bb107:                                            ; preds = %bb106
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %hint, ptr align 8 %res5, i64 24, i1 false)
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %search_path4)
          to label %bb116 unwind label %cleanup12

bb116:                                            ; preds = %bb115, %bb107
  store ptr %hint, ptr %_0.i19, align 8
  %344 = getelementptr inbounds i8, ptr %_0.i19, i64 8
  store ptr @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E", ptr %344, align 8
  %345 = load ptr, ptr %_0.i19, align 8, !nonnull !3, !align !4, !noundef !3
  %346 = getelementptr inbounds i8, ptr %_0.i19, i64 8
  %347 = load ptr, ptr %346, align 8, !nonnull !3, !noundef !3
  %348 = insertvalue { ptr, ptr } poison, ptr %345, 0
  %349 = insertvalue { ptr, ptr } %348, ptr %347, 1
  br label %bb117

bb98:                                             ; preds = %bb97
  %350 = zext i1 %290 to i8
  store i8 %350, ptr %_0, align 1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_149)
          to label %bb134 unwind label %cleanup15

bb134:                                            ; preds = %bb98
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %_152)
          to label %bb135 unwind label %cleanup14

bb135:                                            ; preds = %bb134
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %search_path4)
          to label %bb136 unwind label %cleanup12

bb136:                                            ; preds = %bb166, %bb123, %bb135
  %351 = getelementptr inbounds %"core::option::Option<(&&str, alloc::string::String)>", ptr %search_data, i32 0, i32 1
  %352 = load i64, ptr %351, align 8, !range !12, !noundef !3
  %353 = icmp eq i64 %352, -9223372036854775808
  %_240 = select i1 %353, i64 0, i64 1
  %354 = icmp eq i64 %_240, 1
  br i1 %354, label %bb152, label %bb151

bb108:                                            ; preds = %bb83
; invoke core::fmt::Formatter::write_fmt
  %_184 = invoke zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_185)
          to label %bb109 unwind label %cleanup12

bb109:                                            ; preds = %bb108
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %355 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha33fb9ee59c6a77cE"(i1 zeroext %_184)
          to label %bb110 unwind label %cleanup12

bb110:                                            ; preds = %bb109
  %356 = zext i1 %355 to i8
  store i8 %356, ptr %_183, align 1
  %357 = load i8, ptr %_183, align 1, !range !10, !noundef !3
  %358 = trunc i8 %357 to i1
  %_187 = zext i1 %358 to i64
  %359 = icmp eq i64 %_187, 0
  br i1 %359, label %bb111, label %bb112

bb111:                                            ; preds = %bb110
  store ptr %name1, ptr %_0.i26, align 8
  %360 = getelementptr inbounds i8, ptr %_0.i26, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h28e6efe3818a3709E", ptr %360, align 8
  %361 = load ptr, ptr %_0.i26, align 8, !nonnull !3, !align !4, !noundef !3
  %362 = getelementptr inbounds i8, ptr %_0.i26, i64 8
  %363 = load ptr, ptr %362, align 8, !nonnull !3, !noundef !3
  %364 = insertvalue { ptr, ptr } poison, ptr %361, 0
  %365 = insertvalue { ptr, ptr } %364, ptr %363, 1
  br label %bb113

bb112:                                            ; preds = %bb110
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %366 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h019591430e0a6fe7E"(ptr align 8 @alloc_4c2ffd47ac848e06598c07f8df7715cc)
          to label %bb166 unwind label %cleanup12

bb113:                                            ; preds = %bb111
  %_194.0 = extractvalue { ptr, ptr } %365, 0
  %_194.1 = extractvalue { ptr, ptr } %365, 1
  %367 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_193, i64 0, i64 0
  store ptr %_194.0, ptr %367, align 8
  %368 = getelementptr inbounds i8, ptr %367, i64 8
  store ptr %_194.1, ptr %368, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_189, ptr align 8 @alloc_7d4f8d83a96fef8b4fceacece60ddfaf, i64 2, ptr align 8 %_193, i64 1)
          to label %bb114 unwind label %cleanup12

bb114:                                            ; preds = %bb113
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res6, ptr align 8 %_189)
          to label %bb115 unwind label %cleanup12

bb115:                                            ; preds = %bb114
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %hint, ptr align 8 %res6, i64 24, i1 false)
  br label %bb116

bb139:                                            ; preds = %cleanup17
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %hint) #28
          to label %bb157 unwind label %terminate

cleanup17:                                        ; preds = %bb122, %bb119, %bb118, %bb117
  %369 = landingpad { ptr, i32 }
          cleanup
  %370 = extractvalue { ptr, i32 } %369, 0
  %371 = extractvalue { ptr, i32 } %369, 1
  store ptr %370, ptr %0, align 8
  %372 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %371, ptr %372, align 8
  br label %bb139

bb117:                                            ; preds = %bb116
  %_203.0 = extractvalue { ptr, ptr } %349, 0
  %_203.1 = extractvalue { ptr, ptr } %349, 1
  %373 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_202, i64 0, i64 0
  store ptr %_203.0, ptr %373, align 8
  %374 = getelementptr inbounds i8, ptr %373, i64 8
  store ptr %_203.1, ptr %374, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_198, ptr align 8 @alloc_d2b73b1aab45ebe53c8c0665713826d1, i64 2, ptr align 8 %_202, i64 1)
          to label %bb118 unwind label %cleanup17

bb118:                                            ; preds = %bb117
; invoke core::fmt::Formatter::write_fmt
  %_197 = invoke zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_198)
          to label %bb119 unwind label %cleanup17

bb119:                                            ; preds = %bb118
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %375 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha33fb9ee59c6a77cE"(i1 zeroext %_197)
          to label %bb120 unwind label %cleanup17

bb120:                                            ; preds = %bb119
  %376 = zext i1 %375 to i8
  store i8 %376, ptr %_196, align 1
  %377 = load i8, ptr %_196, align 1, !range !10, !noundef !3
  %378 = trunc i8 %377 to i1
  %_205 = zext i1 %378 to i64
  %379 = icmp eq i64 %_205, 0
  br i1 %379, label %bb121, label %bb122

bb121:                                            ; preds = %bb120
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %hint)
          to label %bb124 unwind label %cleanup12

bb122:                                            ; preds = %bb120
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %380 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h019591430e0a6fe7E"(ptr align 8 @alloc_ffcd79d554342f1f890177bcf6bad2c5)
          to label %bb123 unwind label %cleanup17

bb124:                                            ; preds = %bb121
  %381 = getelementptr inbounds %"core::option::Option<(&&str, alloc::string::String)>", ptr %search_data, i32 0, i32 1
  %382 = load i64, ptr %381, align 8, !range !12, !noundef !3
  %383 = icmp eq i64 %382, -9223372036854775808
  %_239 = select i1 %383, i64 0, i64 1
  %384 = icmp eq i64 %_239, 1
  br i1 %384, label %bb149, label %bb148

bb149:                                            ; preds = %bb124
  %385 = load i8, ptr %_236, align 1, !range !10, !noundef !3
  %386 = trunc i8 %385 to i1
  br i1 %386, label %bb150, label %bb148

bb148:                                            ; preds = %bb150, %bb149, %bb124
  store i8 0, ptr %_236, align 1
  br label %bb125

bb150:                                            ; preds = %bb149
  %387 = getelementptr inbounds { ptr, %"alloc::string::String" }, ptr %search_data, i32 0, i32 1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %387)
          to label %bb148 unwind label %cleanup10

bb123:                                            ; preds = %bb122
  %388 = zext i1 %380 to i8
  store i8 %388, ptr %_0, align 1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %hint)
          to label %bb136 unwind label %cleanup12

bb166:                                            ; preds = %bb112
  %389 = zext i1 %366 to i8
  store i8 %389, ptr %_0, align 1
  br label %bb136

bb152:                                            ; preds = %bb136
  %390 = load i8, ptr %_236, align 1, !range !10, !noundef !3
  %391 = trunc i8 %390 to i1
  br i1 %391, label %bb153, label %bb151

bb151:                                            ; preds = %bb153, %bb152, %bb136
  store i8 0, ptr %_236, align 1
  br label %bb137

bb153:                                            ; preds = %bb152
  %392 = getelementptr inbounds { ptr, %"alloc::string::String" }, ptr %search_data, i32 0, i32 1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %392)
          to label %bb151 unwind label %cleanup10

bb137:                                            ; preds = %bb161, %bb49, %bb163, %bb164, %bb165, %bb151
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %crate_name3)
  br label %bb138

bb154:                                            ; preds = %bb80
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17he3784d90bbaa7c42E"(ptr align 8 %_129) #28
          to label %bb157 unwind label %terminate

bb155:                                            ; preds = %bb157
  %393 = load i8, ptr %_236, align 1, !range !10, !noundef !3
  %394 = trunc i8 %393 to i1
  br i1 %394, label %bb156, label %bb144

bb156:                                            ; preds = %bb155
  %395 = getelementptr inbounds { ptr, %"alloc::string::String" }, ptr %search_data, i32 0, i32 1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %395) #28
          to label %bb144 unwind label %terminate

bb165:                                            ; preds = %bb69
  %396 = zext i1 %212 to i8
  store i8 %396, ptr %_0, align 1
  br label %bb137

bb164:                                            ; preds = %bb63
  %397 = zext i1 %203 to i8
  store i8 %397, ptr %_0, align 1
  br label %bb137

bb163:                                            ; preds = %bb56
  %398 = zext i1 %181 to i8
  store i8 %398, ptr %_0, align 1
  br label %bb137

bb49:                                             ; preds = %bb48
  %399 = zext i1 %161 to i8
  store i8 %399, ptr %_0, align 1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_66)
          to label %bb137 unwind label %cleanup10

bb161:                                            ; preds = %bb35
  %400 = zext i1 %128 to i8
  store i8 %400, ptr %_0, align 1
  br label %bb137

bb158:                                            ; preds = %bb159
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17he3784d90bbaa7c42E"(ptr align 8 %_50) #28
          to label %bb146 unwind label %terminate
}

; <pkg_config::Error as core::fmt::Display>::fmt::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN56_$LT$pkg_config..Error$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h069419cb3e7ea8fdE"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %_2) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  invoke void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h67276cf824909686E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 @alloc_8b0439723123a1fd4ed78ad82942ef71, i64 3)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::env::VarError>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$std..env..VarError$GT$17hbd649c907ae9d0a3E"(ptr align 8 %_2) #28
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<std::env::VarError>
  call void @"_ZN4core3ptr39drop_in_place$LT$std..env..VarError$GT$17hbd649c907ae9d0a3E"(ptr align 8 %_2)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb4:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; pkg_config::format_output
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN10pkg_config13format_output17he321e31ad55ccdf5E(ptr align 8 %output, ptr align 8 %f) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %_0.i2 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_31 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_27 = alloca %"core::fmt::Arguments<'_>", align 8
  %_25 = alloca i8, align 1
  %stderr = alloca %"alloc::borrow::Cow<'_, str>", align 8
  %_15 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_11 = alloca %"core::fmt::Arguments<'_>", align 8
  %_9 = alloca i8, align 1
  %stdout = alloca %"alloc::borrow::Cow<'_, str>", align 8
  %_0 = alloca i8, align 1
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h97011247661b3d0dE"(ptr align 8 %output)
  %_4.0 = extractvalue { ptr, i64 } %1, 0
  %_4.1 = extractvalue { ptr, i64 } %1, 1
; call alloc::string::String::from_utf8_lossy
  call void @_ZN5alloc6string6String15from_utf8_lossy17hbf042ff195c62d58E(ptr sret(%"alloc::borrow::Cow<'_, str>") align 8 %stdout, ptr align 1 %_4.0, i64 %_4.1)
; invoke <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %2 = invoke { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h445e1b4694eb6d64E"(ptr align 8 %stdout)
          to label %bb3 unwind label %cleanup

bb28:                                             ; preds = %bb27, %cleanup
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %stdout) #28
          to label %bb29 unwind label %terminate

cleanup:                                          ; preds = %bb23, %bb22, %bb12, %bb11, %bb10, %bb8, %bb7, %bb6, %bb3, %start
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = extractvalue { ptr, i32 } %3, 0
  %5 = extractvalue { ptr, i32 } %3, 1
  store ptr %4, ptr %0, align 8
  %6 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %5, ptr %6, align 8
  br label %bb28

bb3:                                              ; preds = %start
  %_7.0 = extractvalue { ptr, i64 } %2, 0
  %_7.1 = extractvalue { ptr, i64 } %2, 1
; invoke core::str::<impl str>::is_empty
  %_6 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17hc637ac30946ea802E"(ptr align 1 %_7.0, i64 %_7.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  br i1 %_6, label %bb11, label %bb5

bb5:                                              ; preds = %bb4
  store ptr %stdout, ptr %_0.i2, align 8
  %7 = getelementptr inbounds i8, ptr %_0.i2, i64 8
  store ptr @"_ZN66_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hd1ea73ff770805bdE", ptr %7, align 8
  %8 = load ptr, ptr %_0.i2, align 8, !nonnull !3, !align !4, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_0.i2, i64 8
  %10 = load ptr, ptr %9, align 8, !nonnull !3, !noundef !3
  %11 = insertvalue { ptr, ptr } poison, ptr %8, 0
  %12 = insertvalue { ptr, ptr } %11, ptr %10, 1
  br label %bb6

bb11:                                             ; preds = %bb9, %bb4
  %_21 = getelementptr inbounds %"std::process::Output", ptr %output, i32 0, i32 1
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %13 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h97011247661b3d0dE"(ptr align 8 %_21)
          to label %bb12 unwind label %cleanup

bb6:                                              ; preds = %bb5
  %_16.0 = extractvalue { ptr, ptr } %12, 0
  %_16.1 = extractvalue { ptr, ptr } %12, 1
  %14 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_15, i64 0, i64 0
  store ptr %_16.0, ptr %14, align 8
  %15 = getelementptr inbounds i8, ptr %14, i64 8
  store ptr %_16.1, ptr %15, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_11, ptr align 8 @alloc_d6c1f5427bb6545f0734fc6b239ad755, i64 1, ptr align 8 %_15, i64 1)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke core::fmt::Formatter::write_fmt
  %_10 = invoke zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_11)
          to label %bb8 unwind label %cleanup

bb8:                                              ; preds = %bb7
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %16 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha33fb9ee59c6a77cE"(i1 zeroext %_10)
          to label %bb9 unwind label %cleanup

bb9:                                              ; preds = %bb8
  %17 = zext i1 %16 to i8
  store i8 %17, ptr %_9, align 1
  %18 = load i8, ptr %_9, align 1, !range !10, !noundef !3
  %19 = trunc i8 %18 to i1
  %_18 = zext i1 %19 to i64
  %20 = icmp eq i64 %_18, 0
  br i1 %20, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %21 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h019591430e0a6fe7E"(ptr align 8 @alloc_a76331d6f3e048fc7d1ab6430136d42f)
          to label %bb31 unwind label %cleanup

bb31:                                             ; preds = %bb10
  %22 = zext i1 %21 to i8
  store i8 %22, ptr %_0, align 1
  br label %bb25

bb25:                                             ; preds = %bb22, %bb31
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %stdout)
  br label %bb26

bb12:                                             ; preds = %bb11
  %_20.0 = extractvalue { ptr, i64 } %13, 0
  %_20.1 = extractvalue { ptr, i64 } %13, 1
; invoke alloc::string::String::from_utf8_lossy
  invoke void @_ZN5alloc6string6String15from_utf8_lossy17hbf042ff195c62d58E(ptr sret(%"alloc::borrow::Cow<'_, str>") align 8 %stderr, ptr align 1 %_20.0, i64 %_20.1)
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb12
; invoke <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %23 = invoke { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h445e1b4694eb6d64E"(ptr align 8 %stderr)
          to label %bb14 unwind label %cleanup1

bb27:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %stderr) #28
          to label %bb28 unwind label %terminate

cleanup1:                                         ; preds = %bb21, %bb19, %bb18, %bb17, %bb14, %bb13
  %24 = landingpad { ptr, i32 }
          cleanup
  %25 = extractvalue { ptr, i32 } %24, 0
  %26 = extractvalue { ptr, i32 } %24, 1
  store ptr %25, ptr %0, align 8
  %27 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %26, ptr %27, align 8
  br label %bb27

bb14:                                             ; preds = %bb13
  %_23.0 = extractvalue { ptr, i64 } %23, 0
  %_23.1 = extractvalue { ptr, i64 } %23, 1
; invoke core::str::<impl str>::is_empty
  %_22 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8is_empty17hc637ac30946ea802E"(ptr align 1 %_23.0, i64 %_23.1)
          to label %bb15 unwind label %cleanup1

bb15:                                             ; preds = %bb14
  br i1 %_22, label %bb23, label %bb16

bb16:                                             ; preds = %bb15
  store ptr %stderr, ptr %_0.i, align 8
  %28 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN66_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..fmt..Display$GT$3fmt17hd1ea73ff770805bdE", ptr %28, align 8
  %29 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %30 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %31 = load ptr, ptr %30, align 8, !nonnull !3, !noundef !3
  %32 = insertvalue { ptr, ptr } poison, ptr %29, 0
  %33 = insertvalue { ptr, ptr } %32, ptr %31, 1
  br label %bb17

bb23:                                             ; preds = %bb20, %bb15
  store i8 0, ptr %_0, align 1
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %stderr)
          to label %bb24 unwind label %cleanup

bb17:                                             ; preds = %bb16
  %_32.0 = extractvalue { ptr, ptr } %33, 0
  %_32.1 = extractvalue { ptr, ptr } %33, 1
  %34 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_31, i64 0, i64 0
  store ptr %_32.0, ptr %34, align 8
  %35 = getelementptr inbounds i8, ptr %34, i64 8
  store ptr %_32.1, ptr %35, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_27, ptr align 8 @alloc_031dc9be9fc4a38483003c8904c69bcf, i64 1, ptr align 8 %_31, i64 1)
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
; invoke core::fmt::Formatter::write_fmt
  %_26 = invoke zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8 %f, ptr align 8 %_27)
          to label %bb19 unwind label %cleanup1

bb19:                                             ; preds = %bb18
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  %36 = invoke zeroext i1 @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17ha33fb9ee59c6a77cE"(i1 zeroext %_26)
          to label %bb20 unwind label %cleanup1

bb20:                                             ; preds = %bb19
  %37 = zext i1 %36 to i8
  store i8 %37, ptr %_25, align 1
  %38 = load i8, ptr %_25, align 1, !range !10, !noundef !3
  %39 = trunc i8 %38 to i1
  %_34 = zext i1 %39 to i64
  %40 = icmp eq i64 %_34, 0
  br i1 %40, label %bb23, label %bb21

bb21:                                             ; preds = %bb20
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  %41 = invoke zeroext i1 @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h019591430e0a6fe7E"(ptr align 8 @alloc_c09fb94d8da81b8b258c96da403dddec)
          to label %bb22 unwind label %cleanup1

bb22:                                             ; preds = %bb21
  %42 = zext i1 %41 to i8
  store i8 %42, ptr %_0, align 1
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %stderr)
          to label %bb25 unwind label %cleanup

bb26:                                             ; preds = %bb24, %bb25
  %43 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %44 = trunc i8 %43 to i1
  ret i1 %44

bb30:                                             ; No predecessors!
  unreachable

bb24:                                             ; preds = %bb23
; call core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  call void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %stdout)
  br label %bb26

terminate:                                        ; preds = %bb28, %bb27
  %45 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %46 = extractvalue { ptr, i32 } %45, 0
  %47 = extractvalue { ptr, i32 } %45, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb29:                                             ; preds = %bb28
  %48 = load ptr, ptr %0, align 8, !noundef !3
  %49 = getelementptr inbounds i8, ptr %0, i64 8
  %50 = load i32, ptr %49, align 8, !noundef !3
  %51 = insertvalue { ptr, i32 } poison, ptr %48, 0
  %52 = insertvalue { ptr, i32 } %51, i32 %50, 1
  resume { ptr, i32 } %52
}

; pkg_config::find_library
; Function Attrs: nonlazybind uwtable
define void @_ZN10pkg_config12find_library17hd2a3c977a5bde262E(ptr sret(%"core::result::Result<Library, alloc::string::String>") align 8 %_0, ptr align 1 %name.0, i64 %name.1) unnamed_addr #1 {
start:
  %_2 = alloca %"core::result::Result<Library, Error>", align 8
; call pkg_config::probe_library
  call void @_ZN10pkg_config13probe_library17hf642e014fcd3244fE(ptr sret(%"core::result::Result<Library, Error>") align 8 %_2, ptr align 1 %name.0, i64 %name.1)
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17hfbca20b711fd5e05E"(ptr sret(%"core::result::Result<Library, alloc::string::String>") align 8 %_0, ptr align 8 %_2)
  ret void
}

; pkg_config::find_library::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config12find_library28_$u7b$$u7b$closure$u7d$$u7d$17h79fcc70b2afe8940E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %e) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke <T as alloc::string::ToString>::to_string
  invoke void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17heeaf8ad53c6261d6E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %e)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<pkg_config::Error>
  invoke void @"_ZN4core3ptr38drop_in_place$LT$pkg_config..Error$GT$17hbc8fa24b9a75e2f8E"(ptr align 8 %e) #28
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<pkg_config::Error>
  call void @"_ZN4core3ptr38drop_in_place$LT$pkg_config..Error$GT$17hbc8fa24b9a75e2f8E"(ptr align 8 %e)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb4:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; pkg_config::probe_library
; Function Attrs: nonlazybind uwtable
define void @_ZN10pkg_config13probe_library17hf642e014fcd3244fE(ptr sret(%"core::result::Result<Library, Error>") align 8 %_0, ptr align 1 %name.0, i64 %name.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_3 = alloca %Config, align 8
; call pkg_config::Config::new
  call void @_ZN10pkg_config6Config3new17h6eca9ac8a5e96d23E(ptr sret(%Config) align 8 %_3)
; invoke pkg_config::Config::probe
  invoke void @_ZN10pkg_config6Config5probe17h26d2c79c37a264beE(ptr sret(%"core::result::Result<Library, Error>") align 8 %_0, ptr align 8 %_3, ptr align 1 %name.0, i64 %name.1)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<pkg_config::Config>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$pkg_config..Config$GT$17h9772748140077d97E"(ptr align 8 %_3) #28
          to label %bb5 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb4

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<pkg_config::Config>
  call void @"_ZN4core3ptr39drop_in_place$LT$pkg_config..Config$GT$17h9772748140077d97E"(ptr align 8 %_3)
  ret void

terminate:                                        ; preds = %bb4
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb5:                                              ; preds = %bb4
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; pkg_config::target_supported
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN10pkg_config16target_supported17h72c24d7c7497b769E() unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_2 = alloca %Config, align 8
; call pkg_config::Config::new
  call void @_ZN10pkg_config6Config3new17h6eca9ac8a5e96d23E(ptr sret(%Config) align 8 %_2)
; invoke pkg_config::Config::target_supported
  %_0 = invoke zeroext i1 @_ZN10pkg_config6Config16target_supported17h0a340d701a549c2cE(ptr align 8 %_2)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<pkg_config::Config>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$pkg_config..Config$GT$17h9772748140077d97E"(ptr align 8 %_2) #28
          to label %bb5 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb4

bb2:                                              ; preds = %start
; call core::ptr::drop_in_place<pkg_config::Config>
  call void @"_ZN4core3ptr39drop_in_place$LT$pkg_config..Config$GT$17h9772748140077d97E"(ptr align 8 %_2)
  ret i1 %_0

terminate:                                        ; preds = %bb4
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb5:                                              ; preds = %bb4
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; pkg_config::get_variable
; Function Attrs: nonlazybind uwtable
define void @_ZN10pkg_config12get_variable17ha4a7f2461b4a46a0E(ptr sret(%"core::result::Result<alloc::string::String, Error>") align 8 %_0, ptr align 1 %package.0, i64 %package.1, ptr align 1 %0, i64 %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %e.i = alloca %"core::str::error::Utf8Error", align 8
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %3 = alloca { ptr, i32, [1 x i32] }, align 8
  %_28 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %_25 = alloca %"alloc::string::String", align 8
  %val = alloca %"alloc::vec::Vec<u8>", align 8
  %residual = alloca %"core::result::Result<core::convert::Infallible, Error>::Err", align 8
  %_19 = alloca [1 x { ptr, i64 }], align 8
  %_15 = alloca %"core::result::Result<alloc::vec::Vec<u8>, Error>", align 8
  %_14 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, Error>, alloc::vec::Vec<u8>>", align 8
  %out = alloca %"alloc::vec::Vec<u8>", align 8
  %cfg = alloca %Config, align 8
  %_9 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %res = alloca %"alloc::string::String", align 8
  %arg = alloca %"alloc::string::String", align 8
  %variable = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %variable, align 8
  %4 = getelementptr inbounds i8, ptr %variable, i64 8
  store i64 %1, ptr %4, align 8
  store ptr %variable, ptr %_0.i, align 8
  %5 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %5, align 8
  %6 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %8 = load ptr, ptr %7, align 8, !nonnull !3, !noundef !3
  %9 = insertvalue { ptr, ptr } poison, ptr %6, 0
  %10 = insertvalue { ptr, ptr } %9, ptr %8, 1
  %_10.0 = extractvalue { ptr, ptr } %10, 0
  %_10.1 = extractvalue { ptr, ptr } %10, 1
  %11 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_9, i64 0, i64 0
  store ptr %_10.0, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store ptr %_10.1, ptr %12, align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_35568b4874ea9d238ef0d13426be14d7, i64 1, ptr align 8 %_9, i64 1)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res, ptr align 8 %_5)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %arg, ptr align 8 %res, i64 24, i1 false)
; invoke pkg_config::Config::new
  invoke void @_ZN10pkg_config6Config3new17h6eca9ac8a5e96d23E(ptr sret(%Config) align 8 %cfg)
          to label %bb4 unwind label %cleanup

bb22:                                             ; preds = %bb21, %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %arg) #28
          to label %bb23 unwind label %terminate

cleanup:                                          ; preds = %bb10, %bb16, %start
  %13 = landingpad { ptr, i32 }
          cleanup
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
  store ptr %14, ptr %3, align 8
  %16 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %15, ptr %16, align 8
  br label %bb22

bb4:                                              ; preds = %start
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %17 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %arg)
          to label %bb5 unwind label %cleanup1

bb21:                                             ; preds = %bb20, %cleanup1
; invoke core::ptr::drop_in_place<pkg_config::Config>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$pkg_config..Config$GT$17h9772748140077d97E"(ptr align 8 %cfg) #28
          to label %bb22 unwind label %terminate

cleanup1:                                         ; preds = %bb9, %bb15, %bb6, %bb5, %bb4
  %18 = landingpad { ptr, i32 }
          cleanup
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
  store ptr %19, ptr %3, align 8
  %21 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %20, ptr %21, align 8
  br label %bb21

bb5:                                              ; preds = %bb4
  %_20.0 = extractvalue { ptr, i64 } %17, 0
  %_20.1 = extractvalue { ptr, i64 } %17, 1
  %22 = getelementptr inbounds [1 x { ptr, i64 }], ptr %_19, i64 0, i64 0
  store ptr %_20.0, ptr %22, align 8
  %23 = getelementptr inbounds i8, ptr %22, i64 8
  store i64 %_20.1, ptr %23, align 8
; invoke pkg_config::Config::run
  invoke void @_ZN10pkg_config6Config3run17h4543d751671e2dd5E(ptr sret(%"core::result::Result<alloc::vec::Vec<u8>, Error>") align 8 %_15, ptr align 8 %cfg, ptr align 1 %package.0, i64 %package.1, ptr align 8 %_19, i64 1)
          to label %bb6 unwind label %cleanup1

bb6:                                              ; preds = %bb5
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  invoke void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hccf1f027f08dc360E"(ptr sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, Error>, alloc::vec::Vec<u8>>") align 8 %_14, ptr align 8 %_15)
          to label %bb7 unwind label %cleanup1

bb7:                                              ; preds = %bb6
  %24 = load i64, ptr %_14, align 8, !range !27, !noundef !3
  %25 = icmp eq i64 %24, 6
  %_22 = select i1 %25, i64 0, i64 1
  %26 = icmp eq i64 %_22, 0
  br i1 %26, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %27 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, Error>, alloc::vec::Vec<u8>>::Continue", ptr %_14, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %27, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %out, ptr align 8 %val, i64 24, i1 false)
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %28 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h97011247661b3d0dE"(ptr align 8 %out)
          to label %bb11 unwind label %cleanup2

bb9:                                              ; preds = %bb7
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %residual, ptr align 8 %_14, i64 112, i1 false)
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  invoke void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h99b8b558c7f443dfE"(ptr sret(%"core::result::Result<alloc::string::String, Error>") align 8 %_0, ptr align 8 %residual, ptr align 8 @alloc_a4b575582fbdfd460b5dd88d4129c946)
          to label %bb10 unwind label %cleanup1

bb20:                                             ; preds = %cleanup2.body
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %out) #28
          to label %bb21 unwind label %terminate

cleanup2:                                         ; preds = %bb14, %bb13, %bb11, %bb8
  %29 = landingpad { ptr, i32 }
          cleanup
  br label %cleanup2.body

cleanup2.body:                                    ; preds = %cleanup.i, %cleanup2
  %eh.lpad-body = phi { ptr, i32 } [ %29, %cleanup2 ], [ %43, %cleanup.i ]
  %30 = extractvalue { ptr, i32 } %eh.lpad-body, 0
  %31 = extractvalue { ptr, i32 } %eh.lpad-body, 1
  store ptr %30, ptr %3, align 8
  %32 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %31, ptr %32, align 8
  br label %bb20

bb11:                                             ; preds = %bb8
  %_29.0 = extractvalue { ptr, i64 } %28, 0
  %_29.1 = extractvalue { ptr, i64 } %28, 1
; invoke core::str::converts::from_utf8
  invoke void @_ZN4core3str8converts9from_utf817hc8e8a5bde000841dE(ptr sret(%"core::result::Result<&str, core::str::error::Utf8Error>") align 8 %_28, ptr align 1 %_29.0, i64 %_29.1)
          to label %bb12 unwind label %cleanup2

bb12:                                             ; preds = %bb11
  %_2.i = load i64, ptr %_28, align 8, !range !9, !noundef !3
  %33 = icmp eq i64 %_2.i, 0
  br i1 %33, label %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h940c0e991c87d13cE.exit", label %bb1.i

bb1.i:                                            ; preds = %bb12
  %34 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Err", ptr %_28, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e.i, ptr align 8 %34, i64 16, i1 false)
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h1356562ef8bc898cE(ptr align 1 @alloc_00ae4b301f7fab8ac9617c03fcbd7274, i64 43, ptr align 1 %e.i, ptr align 8 @vtable.9, ptr align 8 @alloc_387cf9ff9746b3033ca865239c3d2dcb) #27
          to label %unreachable.i unwind label %cleanup.i

cleanup.i:                                        ; preds = %bb1.i
  %35 = landingpad { ptr, i32 }
          cleanup
  %36 = extractvalue { ptr, i32 } %35, 0
  %37 = extractvalue { ptr, i32 } %35, 1
  store ptr %36, ptr %2, align 8
  %38 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %37, ptr %38, align 8
  %39 = load ptr, ptr %2, align 8, !noundef !3
  %40 = getelementptr inbounds i8, ptr %2, i64 8
  %41 = load i32, ptr %40, align 8, !noundef !3
  %42 = insertvalue { ptr, i32 } poison, ptr %39, 0
  %43 = insertvalue { ptr, i32 } %42, i32 %41, 1
  br label %cleanup2.body

unreachable.i:                                    ; preds = %bb1.i
  unreachable

"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h940c0e991c87d13cE.exit": ; preds = %bb12
  %44 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Ok", ptr %_28, i32 0, i32 1
  %t.0.i = load ptr, ptr %44, align 8, !nonnull !3, !align !4, !noundef !3
  %45 = getelementptr inbounds i8, ptr %44, i64 8
  %t.1.i = load i64, ptr %45, align 8, !noundef !3
  %46 = insertvalue { ptr, i64 } poison, ptr %t.0.i, 0
  %47 = insertvalue { ptr, i64 } %46, i64 %t.1.i, 1
  br label %bb13

bb13:                                             ; preds = %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h940c0e991c87d13cE.exit"
  %_27.0 = extractvalue { ptr, i64 } %47, 0
  %_27.1 = extractvalue { ptr, i64 } %47, 1
; invoke core::str::<impl str>::trim_end
  %48 = invoke { ptr, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$8trim_end17h0b4b87c8961b498aE"(ptr align 1 %_27.0, i64 %_27.1)
          to label %bb14 unwind label %cleanup2

bb14:                                             ; preds = %bb13
  %_26.0 = extractvalue { ptr, i64 } %48, 0
  %_26.1 = extractvalue { ptr, i64 } %48, 1
; invoke alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  invoke void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h67276cf824909686E"(ptr sret(%"alloc::string::String") align 8 %_25, ptr align 1 %_26.0, i64 %_26.1)
          to label %bb15 unwind label %cleanup2

bb15:                                             ; preds = %bb14
  %49 = getelementptr inbounds %"core::result::Result<alloc::string::String, Error>::Ok", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %49, ptr align 8 %_25, i64 24, i1 false)
  store i64 6, ptr %_0, align 8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %out)
          to label %bb16 unwind label %cleanup1

bb16:                                             ; preds = %bb15
; invoke core::ptr::drop_in_place<pkg_config::Config>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$pkg_config..Config$GT$17h9772748140077d97E"(ptr align 8 %cfg)
          to label %bb17 unwind label %cleanup

bb17:                                             ; preds = %bb16
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %arg)
  br label %bb19

bb19:                                             ; preds = %bb18, %bb17
  ret void

terminate:                                        ; preds = %bb22, %bb21, %bb20
  %50 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %51 = extractvalue { ptr, i32 } %50, 0
  %52 = extractvalue { ptr, i32 } %50, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb10:                                             ; preds = %bb9
; invoke core::ptr::drop_in_place<pkg_config::Config>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$pkg_config..Config$GT$17h9772748140077d97E"(ptr align 8 %cfg)
          to label %bb18 unwind label %cleanup

bb18:                                             ; preds = %bb10
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %arg)
  br label %bb19

bb24:                                             ; No predecessors!
  unreachable

bb23:                                             ; preds = %bb22
  %53 = load ptr, ptr %3, align 8, !noundef !3
  %54 = getelementptr inbounds i8, ptr %3, i64 8
  %55 = load i32, ptr %54, align 8, !noundef !3
  %56 = insertvalue { ptr, i32 } poison, ptr %53, 0
  %57 = insertvalue { ptr, i32 } %56, i32 %55, 1
  resume { ptr, i32 } %57
}

; pkg_config::Config::new
; Function Attrs: nonlazybind uwtable
define void @_ZN10pkg_config6Config3new17h6eca9ac8a5e96d23E(ptr sret(%Config) align 8 %_0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_4 = alloca %"alloc::vec::Vec<std::ffi::os_str::OsString>", align 8
  %_3 = alloca %"core::ops::range::Bound<alloc::string::String>", align 8
  %_2 = alloca %"core::ops::range::Bound<alloc::string::String>", align 8
  %_1 = alloca i8, align 1
  store i8 2, ptr %_1, align 1
  store i64 2, ptr %_2, align 8
  store i64 2, ptr %_3, align 8
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h868cdec37d7a5d1cE"(ptr sret(%"alloc::vec::Vec<std::ffi::os_str::OsString>") align 8 %_4)
          to label %bb1 unwind label %cleanup

bb2:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::ops::range::Bound<alloc::string::String>>
  invoke void @"_ZN4core3ptr73drop_in_place$LT$core..ops..range..Bound$LT$alloc..string..String$GT$$GT$17h67a1a793bb5ff224E"(ptr align 8 %_3) #28
          to label %bb3 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb2

bb1:                                              ; preds = %start
  %5 = load i8, ptr %_1, align 1, !range !18, !noundef !3
  %6 = getelementptr inbounds %Config, ptr %_0, i32 0, i32 7
  store i8 %5, ptr %6, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 32, i1 false)
  %7 = getelementptr inbounds %Config, ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %_3, i64 32, i1 false)
  %8 = getelementptr inbounds %Config, ptr %_0, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %_4, i64 24, i1 false)
  %9 = getelementptr inbounds %Config, ptr %_0, i32 0, i32 3
  store i8 1, ptr %9, align 8
  %10 = getelementptr inbounds %Config, ptr %_0, i32 0, i32 4
  store i8 1, ptr %10, align 1
  %11 = getelementptr inbounds %Config, ptr %_0, i32 0, i32 5
  store i8 1, ptr %11, align 2
  %12 = getelementptr inbounds %Config, ptr %_0, i32 0, i32 6
  store i8 1, ptr %12, align 1
  ret void

terminate:                                        ; preds = %bb3, %bb2
  %13 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb3:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::ops::range::Bound<alloc::string::String>>
  invoke void @"_ZN4core3ptr73drop_in_place$LT$core..ops..range..Bound$LT$alloc..string..String$GT$$GT$17h67a1a793bb5ff224E"(ptr align 8 %_2) #28
          to label %bb4 unwind label %terminate

bb4:                                              ; preds = %bb3
  %16 = load ptr, ptr %0, align 8, !noundef !3
  %17 = getelementptr inbounds i8, ptr %0, i64 8
  %18 = load i32, ptr %17, align 8, !noundef !3
  %19 = insertvalue { ptr, i32 } poison, ptr %16, 0
  %20 = insertvalue { ptr, i32 } %19, i32 %18, 1
  resume { ptr, i32 } %20
}

; pkg_config::Config::statik
; Function Attrs: nonlazybind uwtable
define align 8 ptr @_ZN10pkg_config6Config6statik17hf75b242d0324a616E(ptr align 8 %self, i1 zeroext %statik) unnamed_addr #1 {
start:
  %_3 = alloca i8, align 1
  %0 = zext i1 %statik to i8
  store i8 %0, ptr %_3, align 1
  %1 = getelementptr inbounds %Config, ptr %self, i32 0, i32 7
  %2 = load i8, ptr %_3, align 1, !range !18, !noundef !3
  store i8 %2, ptr %1, align 4
  ret ptr %self
}

; pkg_config::Config::atleast_version
; Function Attrs: nonlazybind uwtable
define align 8 ptr @_ZN10pkg_config6Config15atleast_version17h54d3b7c8f02b6f0fE(ptr align 8 %self, ptr align 1 %vers.0, i64 %vers.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_5 = alloca %"core::ops::range::Bound<alloc::string::String>", align 8
  %_4 = alloca %"alloc::string::String", align 8
  %_3 = alloca %"core::ops::range::Bound<alloc::string::String>", align 8
; call <str as alloc::string::ToString>::to_string
  call void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17h19f0c60c67b6d201E"(ptr sret(%"alloc::string::String") align 8 %_4, ptr align 1 %vers.0, i64 %vers.1)
  %1 = getelementptr inbounds %"core::ops::range::Bound<alloc::string::String>::Included", ptr %_3, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %_4, i64 24, i1 false)
  store i64 0, ptr %_3, align 8
; invoke core::ptr::drop_in_place<core::ops::range::Bound<alloc::string::String>>
  invoke void @"_ZN4core3ptr73drop_in_place$LT$core..ops..range..Bound$LT$alloc..string..String$GT$$GT$17h67a1a793bb5ff224E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_3, i64 32, i1 false)
  br label %bb6

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb3

bb2:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_3, i64 32, i1 false)
  store i64 2, ptr %_5, align 8
  %6 = getelementptr inbounds %Config, ptr %self, i32 0, i32 1
; invoke core::ptr::drop_in_place<core::ops::range::Bound<alloc::string::String>>
  invoke void @"_ZN4core3ptr73drop_in_place$LT$core..ops..range..Bound$LT$alloc..string..String$GT$$GT$17h67a1a793bb5ff224E"(ptr align 8 %6)
          to label %bb4 unwind label %cleanup1

bb5:                                              ; preds = %cleanup1
  %7 = getelementptr inbounds %Config, ptr %self, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %_5, i64 32, i1 false)
  br label %bb6

cleanup1:                                         ; preds = %bb2
  %8 = landingpad { ptr, i32 }
          cleanup
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
  store ptr %9, ptr %0, align 8
  %11 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %10, ptr %11, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %12 = getelementptr inbounds %Config, ptr %self, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %_5, i64 32, i1 false)
  ret ptr %self

bb6:                                              ; preds = %bb3, %bb5
  %13 = load ptr, ptr %0, align 8, !noundef !3
  %14 = getelementptr inbounds i8, ptr %0, i64 8
  %15 = load i32, ptr %14, align 8, !noundef !3
  %16 = insertvalue { ptr, i32 } poison, ptr %13, 0
  %17 = insertvalue { ptr, i32 } %16, i32 %15, 1
  resume { ptr, i32 } %17
}

; pkg_config::Config::exactly_version
; Function Attrs: nonlazybind uwtable
define align 8 ptr @_ZN10pkg_config6Config15exactly_version17h5168611ffd11c087E(ptr align 8 %self, ptr align 1 %vers.0, i64 %vers.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_6 = alloca %"alloc::string::String", align 8
  %_5 = alloca %"core::ops::range::Bound<alloc::string::String>", align 8
  %_4 = alloca %"alloc::string::String", align 8
  %_3 = alloca %"core::ops::range::Bound<alloc::string::String>", align 8
; call <str as alloc::string::ToString>::to_string
  call void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17h19f0c60c67b6d201E"(ptr sret(%"alloc::string::String") align 8 %_4, ptr align 1 %vers.0, i64 %vers.1)
  %1 = getelementptr inbounds %"core::ops::range::Bound<alloc::string::String>::Included", ptr %_3, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %1, ptr align 8 %_4, i64 24, i1 false)
  store i64 0, ptr %_3, align 8
; invoke core::ptr::drop_in_place<core::ops::range::Bound<alloc::string::String>>
  invoke void @"_ZN4core3ptr73drop_in_place$LT$core..ops..range..Bound$LT$alloc..string..String$GT$$GT$17h67a1a793bb5ff224E"(ptr align 8 %self)
          to label %bb2 unwind label %cleanup

bb3:                                              ; preds = %cleanup
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_3, i64 32, i1 false)
  br label %bb7

cleanup:                                          ; preds = %start
  %2 = landingpad { ptr, i32 }
          cleanup
  %3 = extractvalue { ptr, i32 } %2, 0
  %4 = extractvalue { ptr, i32 } %2, 1
  store ptr %3, ptr %0, align 8
  %5 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %4, ptr %5, align 8
  br label %bb3

bb2:                                              ; preds = %start
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %self, ptr align 8 %_3, i64 32, i1 false)
; call <str as alloc::string::ToString>::to_string
  call void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17h19f0c60c67b6d201E"(ptr sret(%"alloc::string::String") align 8 %_6, ptr align 1 %vers.0, i64 %vers.1)
  %6 = getelementptr inbounds %"core::ops::range::Bound<alloc::string::String>::Included", ptr %_5, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %_6, i64 24, i1 false)
  store i64 0, ptr %_5, align 8
  %7 = getelementptr inbounds %Config, ptr %self, i32 0, i32 1
; invoke core::ptr::drop_in_place<core::ops::range::Bound<alloc::string::String>>
  invoke void @"_ZN4core3ptr73drop_in_place$LT$core..ops..range..Bound$LT$alloc..string..String$GT$$GT$17h67a1a793bb5ff224E"(ptr align 8 %7)
          to label %bb5 unwind label %cleanup1

bb6:                                              ; preds = %cleanup1
  %8 = getelementptr inbounds %Config, ptr %self, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %_5, i64 32, i1 false)
  br label %bb7

cleanup1:                                         ; preds = %bb2
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb6

bb5:                                              ; preds = %bb2
  %13 = getelementptr inbounds %Config, ptr %self, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %_5, i64 32, i1 false)
  ret ptr %self

bb7:                                              ; preds = %bb3, %bb6
  %14 = load ptr, ptr %0, align 8, !noundef !3
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  %16 = load i32, ptr %15, align 8, !noundef !3
  %17 = insertvalue { ptr, i32 } poison, ptr %14, 0
  %18 = insertvalue { ptr, i32 } %17, i32 %16, 1
  resume { ptr, i32 } %18
}

; pkg_config::Config::cargo_metadata
; Function Attrs: nonlazybind uwtable
define align 8 ptr @_ZN10pkg_config6Config14cargo_metadata17h43c26aa68877a421E(ptr align 8 %self, i1 zeroext %cargo_metadata) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %Config, ptr %self, i32 0, i32 3
  %1 = zext i1 %cargo_metadata to i8
  store i8 %1, ptr %0, align 8
  ret ptr %self
}

; pkg_config::Config::env_metadata
; Function Attrs: nonlazybind uwtable
define align 8 ptr @_ZN10pkg_config6Config12env_metadata17h255087b991107abaE(ptr align 8 %self, i1 zeroext %env_metadata) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %Config, ptr %self, i32 0, i32 4
  %1 = zext i1 %env_metadata to i8
  store i8 %1, ptr %0, align 1
  ret ptr %self
}

; pkg_config::Config::print_system_libs
; Function Attrs: nonlazybind uwtable
define align 8 ptr @_ZN10pkg_config6Config17print_system_libs17hd8b28081c826e686E(ptr align 8 %self, i1 zeroext %print) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %Config, ptr %self, i32 0, i32 5
  %1 = zext i1 %print to i8
  store i8 %1, ptr %0, align 2
  ret ptr %self
}

; pkg_config::Config::print_system_cflags
; Function Attrs: nonlazybind uwtable
define align 8 ptr @_ZN10pkg_config6Config19print_system_cflags17hcb08697e9379be94E(ptr align 8 %self, i1 zeroext %print) unnamed_addr #1 {
start:
  %0 = getelementptr inbounds %Config, ptr %self, i32 0, i32 6
  %1 = zext i1 %print to i8
  store i8 %1, ptr %0, align 1
  ret ptr %self
}

; pkg_config::Config::find
; Function Attrs: nonlazybind uwtable
define void @_ZN10pkg_config6Config4find17ha9684ad783cb1c9aE(ptr sret(%"core::result::Result<Library, alloc::string::String>") align 8 %_0, ptr align 8 %self, ptr align 1 %name.0, i64 %name.1) unnamed_addr #1 {
start:
  %_3 = alloca %"core::result::Result<Library, Error>", align 8
; call pkg_config::Config::probe
  call void @_ZN10pkg_config6Config5probe17h26d2c79c37a264beE(ptr sret(%"core::result::Result<Library, Error>") align 8 %_3, ptr align 8 %self, ptr align 1 %name.0, i64 %name.1)
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h1313b8ff9a2cb481E"(ptr sret(%"core::result::Result<Library, alloc::string::String>") align 8 %_0, ptr align 8 %_3)
  ret void
}

; pkg_config::Config::find::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config6Config4find28_$u7b$$u7b$closure$u7d$$u7d$17hc0e338ff8a092f5bE"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %e) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke <T as alloc::string::ToString>::to_string
  invoke void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17heeaf8ad53c6261d6E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %e)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<pkg_config::Error>
  invoke void @"_ZN4core3ptr38drop_in_place$LT$pkg_config..Error$GT$17hbc8fa24b9a75e2f8E"(ptr align 8 %e) #28
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<pkg_config::Error>
  call void @"_ZN4core3ptr38drop_in_place$LT$pkg_config..Error$GT$17hbc8fa24b9a75e2f8E"(ptr align 8 %e)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb4:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; pkg_config::Config::probe
; Function Attrs: nonlazybind uwtable
define void @_ZN10pkg_config6Config5probe17h26d2c79c37a264beE(ptr sret(%"core::result::Result<Library, Error>") align 8 %_0, ptr align 8 %self, ptr align 1 %0, i64 %1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %e.i = alloca %"core::str::error::Utf8Error", align 8
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %3 = alloca { ptr, i32, [1 x i32] }, align 8
  %_59 = alloca i8, align 1
  %_58 = alloca i8, align 1
  %_54 = alloca %Library, align 8
  %_51 = alloca %"core::result::Result<&str, core::str::error::Utf8Error>", align 8
  %val3 = alloca %"alloc::vec::Vec<u8>", align 8
  %residual2 = alloca %"core::result::Result<core::convert::Infallible, Error>::Err", align 8
  %_42 = alloca %"core::result::Result<alloc::vec::Vec<u8>, Error>", align 8
  %_41 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, Error>, alloc::vec::Vec<u8>>", align 8
  %output1 = alloca %"alloc::vec::Vec<u8>", align 8
  %val = alloca %"alloc::vec::Vec<u8>", align 8
  %residual = alloca %"core::result::Result<core::convert::Infallible, Error>::Err", align 8
  %_30 = alloca ptr, align 8
  %_27 = alloca %"core::result::Result<alloc::vec::Vec<u8>, Error>", align 8
  %_26 = alloca %"core::result::Result<alloc::vec::Vec<u8>, Error>", align 8
  %_25 = alloca %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, Error>, alloc::vec::Vec<u8>>", align 8
  %output = alloca %"alloc::vec::Vec<u8>", align 8
  %library = alloca %Library, align 8
  %_22 = alloca %Error, align 8
  %_20 = alloca %"alloc::string::String", align 8
  %_19 = alloca %Error, align 8
  %_16 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %_12 = alloca %"alloc::string::String", align 8
  %_9 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %res = alloca %"alloc::string::String", align 8
  %abort_var_name = alloca %"alloc::string::String", align 8
  %name = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %name, align 8
  %4 = getelementptr inbounds i8, ptr %name, i64 8
  store i64 %1, ptr %4, align 8
  store i8 0, ptr %_58, align 1
  store i8 0, ptr %_59, align 1
  %_13.0 = load ptr, ptr %name, align 8, !nonnull !3, !align !4, !noundef !3
  %5 = getelementptr inbounds i8, ptr %name, i64 8
  %_13.1 = load i64, ptr %5, align 8, !noundef !3
; call pkg_config::envify
  call void @_ZN10pkg_config6envify17hd06c80ec37905a11E(ptr sret(%"alloc::string::String") align 8 %_12, ptr align 1 %_13.0, i64 %_13.1)
  store ptr %_12, ptr %_0.i, align 8
  %6 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E", ptr %6, align 8
  %7 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %9 = load ptr, ptr %8, align 8, !nonnull !3, !noundef !3
  %10 = insertvalue { ptr, ptr } poison, ptr %7, 0
  %11 = insertvalue { ptr, ptr } %10, ptr %9, 1
  br label %bb2

bb45:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_12) #28
          to label %bb46 unwind label %terminate

cleanup:                                          ; preds = %bb3, %bb2
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %3, align 8
  %15 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb45

bb2:                                              ; preds = %start
  %_10.0 = extractvalue { ptr, ptr } %11, 0
  %_10.1 = extractvalue { ptr, ptr } %11, 1
  %16 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_9, i64 0, i64 0
  store ptr %_10.0, ptr %16, align 8
  %17 = getelementptr inbounds i8, ptr %16, i64 8
  store ptr %_10.1, ptr %17, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_13ac432f0500ee38af6b23f90545b61b, i64 2, ptr align 8 %_9, i64 1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res, ptr align 8 %_5)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_12)
          to label %bb5 unwind label %cleanup4

bb44:                                             ; preds = %cleanup4
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %res) #28
          to label %bb46 unwind label %terminate

cleanup4:                                         ; preds = %bb4
  %18 = landingpad { ptr, i32 }
          cleanup
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
  store ptr %19, ptr %3, align 8
  %21 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %20, ptr %21, align 8
  br label %bb44

bb5:                                              ; preds = %bb4
  store i8 1, ptr %_58, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %abort_var_name, ptr align 8 %res, i64 24, i1 false)
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %22 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %abort_var_name)
          to label %bb6 unwind label %cleanup5

bb43:                                             ; preds = %bb42, %bb49, %bb50, %cleanup5
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %abort_var_name) #28
          to label %bb46 unwind label %terminate

cleanup5:                                         ; preds = %bb9, %bb36, %bb14, %bb12, %bb11, %bb6, %bb5
  %23 = landingpad { ptr, i32 }
          cleanup
  %24 = extractvalue { ptr, i32 } %23, 0
  %25 = extractvalue { ptr, i32 } %23, 1
  store ptr %24, ptr %3, align 8
  %26 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %25, ptr %26, align 8
  br label %bb43

bb6:                                              ; preds = %bb5
  %_17.0 = extractvalue { ptr, i64 } %22, 0
  %_17.1 = extractvalue { ptr, i64 } %22, 1
; invoke pkg_config::Config::env_var_os
  invoke void @_ZN10pkg_config6Config10env_var_os17hfbc9ab72e9fc468eE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_16, ptr align 8 %self, ptr align 1 %_17.0, i64 %_17.1)
          to label %bb7 unwind label %cleanup5

bb7:                                              ; preds = %bb6
; invoke core::option::Option<T>::is_some
  %_14 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h948e570adf1e4d88E"(ptr align 8 %_16)
          to label %bb8 unwind label %cleanup6

bb42:                                             ; preds = %cleanup6
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_16) #28
          to label %bb43 unwind label %terminate

cleanup6:                                         ; preds = %bb7
  %27 = landingpad { ptr, i32 }
          cleanup
  %28 = extractvalue { ptr, i32 } %27, 0
  %29 = extractvalue { ptr, i32 } %27, 1
  store ptr %28, ptr %3, align 8
  %30 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %29, ptr %30, align 8
  br label %bb42

bb8:                                              ; preds = %bb7
  br i1 %_14, label %bb9, label %bb11

bb11:                                             ; preds = %bb8
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_16)
          to label %bb12 unwind label %cleanup5

bb9:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_16)
          to label %bb10 unwind label %cleanup5

bb12:                                             ; preds = %bb11
; invoke pkg_config::Config::target_supported
  %_21 = invoke zeroext i1 @_ZN10pkg_config6Config16target_supported17h0a340d701a549c2cE(ptr align 8 %self)
          to label %bb13 unwind label %cleanup5

bb13:                                             ; preds = %bb12
  br i1 %_21, label %bb14, label %bb15

bb15:                                             ; preds = %bb13
  store i64 1, ptr %_22, align 8
  %31 = getelementptr inbounds %"core::result::Result<Library, Error>::Err", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %31, ptr align 8 %_22, i64 112, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb48

bb14:                                             ; preds = %bb13
; invoke pkg_config::Library::new
  invoke void @_ZN10pkg_config7Library3new17h19e6158da1951aabE(ptr sret(%Library) align 8 %library)
          to label %bb16 unwind label %cleanup5

bb48:                                             ; preds = %bb10, %bb37, %bb15
  %32 = load i8, ptr %_58, align 1, !range !10, !noundef !3
  %33 = trunc i8 %32 to i1
  br i1 %33, label %bb47, label %bb38

bb16:                                             ; preds = %bb14
  store i8 1, ptr %_59, align 1
  %_28.0 = load ptr, ptr %name, align 8, !nonnull !3, !align !4, !noundef !3
  %34 = getelementptr inbounds i8, ptr %name, i64 8
  %_28.1 = load i64, ptr %34, align 8, !noundef !3
; invoke pkg_config::Config::run
  invoke void @_ZN10pkg_config6Config3run17h4543d751671e2dd5E(ptr sret(%"core::result::Result<alloc::vec::Vec<u8>, Error>") align 8 %_27, ptr align 8 %self, ptr align 1 %_28.0, i64 %_28.1, ptr align 8 @alloc_facda7f113218578214b2b4b02b5f5be, i64 2)
          to label %bb17 unwind label %cleanup7

bb50:                                             ; preds = %bb41, %cleanup7
  %35 = load i8, ptr %_59, align 1, !range !10, !noundef !3
  %36 = trunc i8 %35 to i1
  br i1 %36, label %bb49, label %bb43

cleanup7:                                         ; preds = %bb21, %bb28, %bb33, %bb18, %bb17, %bb16
  %37 = landingpad { ptr, i32 }
          cleanup
  %38 = extractvalue { ptr, i32 } %37, 0
  %39 = extractvalue { ptr, i32 } %37, 1
  store ptr %38, ptr %3, align 8
  %40 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %39, ptr %40, align 8
  br label %bb50

bb17:                                             ; preds = %bb16
  store ptr %name, ptr %_30, align 8
  %41 = load ptr, ptr %_30, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::result::Result<T,E>::map_err
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h2987816cf1c0b2d7E"(ptr sret(%"core::result::Result<alloc::vec::Vec<u8>, Error>") align 8 %_26, ptr align 8 %_27, ptr align 8 %41)
          to label %bb18 unwind label %cleanup7

bb18:                                             ; preds = %bb17
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  invoke void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hccf1f027f08dc360E"(ptr sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, Error>, alloc::vec::Vec<u8>>") align 8 %_25, ptr align 8 %_26)
          to label %bb19 unwind label %cleanup7

bb19:                                             ; preds = %bb18
  %42 = load i64, ptr %_25, align 8, !range !27, !noundef !3
  %43 = icmp eq i64 %42, 6
  %_32 = select i1 %43, i64 0, i64 1
  %44 = icmp eq i64 %_32, 0
  br i1 %44, label %bb20, label %bb21

bb20:                                             ; preds = %bb19
  %45 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, Error>, alloc::vec::Vec<u8>>::Continue", ptr %_25, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val, ptr align 8 %45, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %output, ptr align 8 %val, i64 24, i1 false)
  %_37.0 = load ptr, ptr %name, align 8, !nonnull !3, !align !4, !noundef !3
  %46 = getelementptr inbounds i8, ptr %name, i64 8
  %_37.1 = load i64, ptr %46, align 8, !noundef !3
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %47 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h97011247661b3d0dE"(ptr align 8 %output)
          to label %bb22 unwind label %cleanup8

bb21:                                             ; preds = %bb19
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %residual, ptr align 8 %_25, i64 112, i1 false)
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  invoke void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h57b9abc95ad18888E"(ptr sret(%"core::result::Result<Library, Error>") align 8 %_0, ptr align 8 %residual, ptr align 8 @alloc_5648e1b2f49cac579e89e1967af98f74)
          to label %bb52 unwind label %cleanup7

bb41:                                             ; preds = %bb40, %cleanup8
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %output) #28
          to label %bb50 unwind label %terminate

cleanup8:                                         ; preds = %bb27, %bb32, %bb24, %bb23, %bb22, %bb20
  %48 = landingpad { ptr, i32 }
          cleanup
  %49 = extractvalue { ptr, i32 } %48, 0
  %50 = extractvalue { ptr, i32 } %48, 1
  store ptr %49, ptr %3, align 8
  %51 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %50, ptr %51, align 8
  br label %bb41

bb22:                                             ; preds = %bb20
  %_38.0 = extractvalue { ptr, i64 } %47, 0
  %_38.1 = extractvalue { ptr, i64 } %47, 1
; invoke pkg_config::Library::parse_libs_cflags
  invoke void @_ZN10pkg_config7Library17parse_libs_cflags17h7f8b85db08f79053E(ptr align 8 %library, ptr align 1 %_37.0, i64 %_37.1, ptr align 1 %_38.0, i64 %_38.1, ptr align 8 %self)
          to label %bb23 unwind label %cleanup8

bb23:                                             ; preds = %bb22
  %_43.0 = load ptr, ptr %name, align 8, !nonnull !3, !align !4, !noundef !3
  %52 = getelementptr inbounds i8, ptr %name, i64 8
  %_43.1 = load i64, ptr %52, align 8, !noundef !3
; invoke pkg_config::Config::run
  invoke void @_ZN10pkg_config6Config3run17h4543d751671e2dd5E(ptr sret(%"core::result::Result<alloc::vec::Vec<u8>, Error>") align 8 %_42, ptr align 8 %self, ptr align 1 %_43.0, i64 %_43.1, ptr align 8 @alloc_152227176036804d579f88666f0bef5c, i64 1)
          to label %bb24 unwind label %cleanup8

bb24:                                             ; preds = %bb23
; invoke <core::result::Result<T,E> as core::ops::try_trait::Try>::branch
  invoke void @"_ZN79_$LT$core..result..Result$LT$T$C$E$GT$$u20$as$u20$core..ops..try_trait..Try$GT$6branch17hccf1f027f08dc360E"(ptr sret(%"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, Error>, alloc::vec::Vec<u8>>") align 8 %_41, ptr align 8 %_42)
          to label %bb25 unwind label %cleanup8

bb25:                                             ; preds = %bb24
  %53 = load i64, ptr %_41, align 8, !range !27, !noundef !3
  %54 = icmp eq i64 %53, 6
  %_45 = select i1 %54, i64 0, i64 1
  %55 = icmp eq i64 %_45, 0
  br i1 %55, label %bb26, label %bb27

bb26:                                             ; preds = %bb25
  %56 = getelementptr inbounds %"core::ops::control_flow::ControlFlow<core::result::Result<core::convert::Infallible, Error>, alloc::vec::Vec<u8>>::Continue", ptr %_41, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %val3, ptr align 8 %56, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %output1, ptr align 8 %val3, i64 24, i1 false)
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %57 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h97011247661b3d0dE"(ptr align 8 %output1)
          to label %bb29 unwind label %cleanup9

bb27:                                             ; preds = %bb25
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %residual2, ptr align 8 %_41, i64 112, i1 false)
; invoke <core::result::Result<T,F> as core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible,E>>>::from_residual
  invoke void @"_ZN153_$LT$core..result..Result$LT$T$C$F$GT$$u20$as$u20$core..ops..try_trait..FromResidual$LT$core..result..Result$LT$core..convert..Infallible$C$E$GT$$GT$$GT$13from_residual17h57b9abc95ad18888E"(ptr sret(%"core::result::Result<Library, Error>") align 8 %_0, ptr align 8 %residual2, ptr align 8 @alloc_35a233be016750a26e3fa727b62e7d50)
          to label %bb28 unwind label %cleanup8

bb40:                                             ; preds = %cleanup9.body
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %output1) #28
          to label %bb41 unwind label %terminate

cleanup9:                                         ; preds = %bb31, %bb29, %bb26
  %58 = landingpad { ptr, i32 }
          cleanup
  br label %cleanup9.body

cleanup9.body:                                    ; preds = %cleanup.i, %cleanup9
  %eh.lpad-body = phi { ptr, i32 } [ %58, %cleanup9 ], [ %72, %cleanup.i ]
  %59 = extractvalue { ptr, i32 } %eh.lpad-body, 0
  %60 = extractvalue { ptr, i32 } %eh.lpad-body, 1
  store ptr %59, ptr %3, align 8
  %61 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %60, ptr %61, align 8
  br label %bb40

bb29:                                             ; preds = %bb26
  %_52.0 = extractvalue { ptr, i64 } %57, 0
  %_52.1 = extractvalue { ptr, i64 } %57, 1
; invoke core::str::converts::from_utf8
  invoke void @_ZN4core3str8converts9from_utf817hc8e8a5bde000841dE(ptr sret(%"core::result::Result<&str, core::str::error::Utf8Error>") align 8 %_51, ptr align 1 %_52.0, i64 %_52.1)
          to label %bb30 unwind label %cleanup9

bb30:                                             ; preds = %bb29
  %_2.i = load i64, ptr %_51, align 8, !range !9, !noundef !3
  %62 = icmp eq i64 %_2.i, 0
  br i1 %62, label %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h940c0e991c87d13cE.exit", label %bb1.i

bb1.i:                                            ; preds = %bb30
  %63 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Err", ptr %_51, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e.i, ptr align 8 %63, i64 16, i1 false)
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h1356562ef8bc898cE(ptr align 1 @alloc_00ae4b301f7fab8ac9617c03fcbd7274, i64 43, ptr align 1 %e.i, ptr align 8 @vtable.9, ptr align 8 @alloc_4e1e90df7618063ef44bc71bce577bdd) #27
          to label %unreachable.i unwind label %cleanup.i

cleanup.i:                                        ; preds = %bb1.i
  %64 = landingpad { ptr, i32 }
          cleanup
  %65 = extractvalue { ptr, i32 } %64, 0
  %66 = extractvalue { ptr, i32 } %64, 1
  store ptr %65, ptr %2, align 8
  %67 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %66, ptr %67, align 8
  %68 = load ptr, ptr %2, align 8, !noundef !3
  %69 = getelementptr inbounds i8, ptr %2, i64 8
  %70 = load i32, ptr %69, align 8, !noundef !3
  %71 = insertvalue { ptr, i32 } poison, ptr %68, 0
  %72 = insertvalue { ptr, i32 } %71, i32 %70, 1
  br label %cleanup9.body

unreachable.i:                                    ; preds = %bb1.i
  unreachable

"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h940c0e991c87d13cE.exit": ; preds = %bb30
  %73 = getelementptr inbounds %"core::result::Result<&str, core::str::error::Utf8Error>::Ok", ptr %_51, i32 0, i32 1
  %t.0.i = load ptr, ptr %73, align 8, !nonnull !3, !align !4, !noundef !3
  %74 = getelementptr inbounds i8, ptr %73, i64 8
  %t.1.i = load i64, ptr %74, align 8, !noundef !3
  %75 = insertvalue { ptr, i64 } poison, ptr %t.0.i, 0
  %76 = insertvalue { ptr, i64 } %75, i64 %t.1.i, 1
  br label %bb31

bb31:                                             ; preds = %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17h940c0e991c87d13cE.exit"
  %_50.0 = extractvalue { ptr, i64 } %76, 0
  %_50.1 = extractvalue { ptr, i64 } %76, 1
; invoke pkg_config::Library::parse_modversion
  invoke void @_ZN10pkg_config7Library16parse_modversion17h0fd89375c3cc6906E(ptr align 8 %library, ptr align 1 %_50.0, i64 %_50.1)
          to label %bb32 unwind label %cleanup9

bb32:                                             ; preds = %bb31
  store i8 0, ptr %_59, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_54, ptr align 8 %library, i64 240, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_54, i64 240, i1 false)
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %output1)
          to label %bb33 unwind label %cleanup8

bb33:                                             ; preds = %bb32
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %output)
          to label %bb34 unwind label %cleanup7

bb34:                                             ; preds = %bb33
  store i8 0, ptr %_59, align 1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %abort_var_name)
  store i8 0, ptr %_58, align 1
  br label %bb39

bb39:                                             ; preds = %bb38, %bb34
  ret void

terminate:                                        ; preds = %bb45, %bb44, %bb43, %bb42, %bb49, %bb41, %bb40
  %77 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %78 = extractvalue { ptr, i32 } %77, 0
  %79 = extractvalue { ptr, i32 } %77, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb28:                                             ; preds = %bb27
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %output)
          to label %bb36 unwind label %cleanup7

bb36:                                             ; preds = %bb52, %bb28
; invoke core::ptr::drop_in_place<pkg_config::Library>
  invoke void @"_ZN4core3ptr40drop_in_place$LT$pkg_config..Library$GT$17h16b2b80f750120b4E"(ptr align 8 %library)
          to label %bb37 unwind label %cleanup5

bb52:                                             ; preds = %bb21
  br label %bb36

bb37:                                             ; preds = %bb36
  store i8 0, ptr %_59, align 1
  br label %bb48

bb51:                                             ; No predecessors!
  unreachable

bb49:                                             ; preds = %bb50
; invoke core::ptr::drop_in_place<pkg_config::Library>
  invoke void @"_ZN4core3ptr40drop_in_place$LT$pkg_config..Library$GT$17h16b2b80f750120b4E"(ptr align 8 %library) #28
          to label %bb43 unwind label %terminate

bb10:                                             ; preds = %bb9
  store i8 0, ptr %_58, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_20, ptr align 8 %abort_var_name, i64 24, i1 false)
  %80 = getelementptr inbounds %"Error::EnvNoPkgConfig", ptr %_19, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %80, ptr align 8 %_20, i64 24, i1 false)
  store i64 0, ptr %_19, align 8
  %81 = getelementptr inbounds %"core::result::Result<Library, Error>::Err", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %81, ptr align 8 %_19, i64 112, i1 false)
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb48

bb38:                                             ; preds = %bb47, %bb48
  store i8 0, ptr %_58, align 1
  br label %bb39

bb47:                                             ; preds = %bb48
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %abort_var_name)
  br label %bb38

bb46:                                             ; preds = %bb45, %bb44, %bb43
  %82 = load ptr, ptr %3, align 8, !noundef !3
  %83 = getelementptr inbounds i8, ptr %3, i64 8
  %84 = load i32, ptr %83, align 8, !noundef !3
  %85 = insertvalue { ptr, i32 } poison, ptr %82, 0
  %86 = insertvalue { ptr, i32 } %85, i32 %84, 1
  resume { ptr, i32 } %86
}

; pkg_config::Config::probe::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config6Config5probe28_$u7b$$u7b$closure$u7d$$u7d$17h0d6af54fee0bf1edE"(ptr sret(%Error) align 8 %_0, ptr align 8 %0, ptr align 8 %e) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_12 = alloca i8, align 1
  %other = alloca %Error, align 8
  %_8 = alloca %"std::process::Output", align 8
  %_7 = alloca %"alloc::string::String", align 8
  %_6 = alloca %"alloc::string::String", align 8
  %output = alloca %"std::process::Output", align 8
  %command = alloca %"alloc::string::String", align 8
  %_1 = alloca ptr, align 8
  store ptr %0, ptr %_1, align 8
  store i8 0, ptr %_12, align 1
  store i8 1, ptr %_12, align 1
  %_3 = load i64, ptr %e, align 8, !range !21, !noundef !3
  %2 = icmp eq i64 %_3, 3
  br i1 %2, label %bb2, label %bb1

bb2:                                              ; preds = %start
  %3 = getelementptr inbounds %"Error::Failure", ptr %e, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %command, ptr align 8 %3, i64 24, i1 false)
  %4 = getelementptr inbounds %"Error::Failure", ptr %e, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %output, ptr align 8 %4, i64 56, i1 false)
  %_10 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  %_11.0 = load ptr, ptr %_10, align 8, !nonnull !3, !align !4, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_10, i64 8
  %_11.1 = load i64, ptr %5, align 8, !noundef !3
; invoke alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  invoke void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h67276cf824909686E"(ptr sret(%"alloc::string::String") align 8 %_6, ptr align 1 %_11.0, i64 %_11.1)
          to label %bb3 unwind label %cleanup

bb1:                                              ; preds = %start
  store i8 0, ptr %_12, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %other, ptr align 8 %e, i64 112, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %other, i64 112, i1 false)
  br label %bb4

bb5:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::process::Output>
  invoke void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17hcb669ac1de669d27E"(ptr align 8 %output) #28
          to label %bb6 unwind label %terminate

cleanup:                                          ; preds = %bb2
  %6 = landingpad { ptr, i32 }
          cleanup
  %7 = extractvalue { ptr, i32 } %6, 0
  %8 = extractvalue { ptr, i32 } %6, 1
  store ptr %7, ptr %1, align 8
  %9 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %8, ptr %9, align 8
  br label %bb5

bb3:                                              ; preds = %bb2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_7, ptr align 8 %command, i64 24, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_8, ptr align 8 %output, i64 56, i1 false)
  %10 = getelementptr inbounds %"Error::ProbeFailure", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %_6, i64 24, i1 false)
  %11 = getelementptr inbounds %"Error::ProbeFailure", ptr %_0, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %_7, i64 24, i1 false)
  %12 = getelementptr inbounds %"Error::ProbeFailure", ptr %_0, i32 0, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %_8, i64 56, i1 false)
  store i64 4, ptr %_0, align 8
  br label %bb4

bb4:                                              ; preds = %bb1, %bb3
  %13 = load i8, ptr %_12, align 1, !range !10, !noundef !3
  %14 = trunc i8 %13 to i1
  br i1 %14, label %bb10, label %bb8

terminate:                                        ; preds = %bb11, %bb6, %bb5
  %15 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb6:                                              ; preds = %bb5
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %command) #28
          to label %bb12 unwind label %terminate

bb12:                                             ; preds = %bb6
  %_14 = load i64, ptr %e, align 8, !range !21, !noundef !3
  %18 = icmp eq i64 %_14, 3
  br i1 %18, label %bb7, label %bb11

bb7:                                              ; preds = %bb11, %bb12
  %19 = load ptr, ptr %1, align 8, !noundef !3
  %20 = getelementptr inbounds i8, ptr %1, i64 8
  %21 = load i32, ptr %20, align 8, !noundef !3
  %22 = insertvalue { ptr, i32 } poison, ptr %19, 0
  %23 = insertvalue { ptr, i32 } %22, i32 %21, 1
  resume { ptr, i32 } %23

bb11:                                             ; preds = %bb12
; invoke core::ptr::drop_in_place<pkg_config::Error>
  invoke void @"_ZN4core3ptr38drop_in_place$LT$pkg_config..Error$GT$17hbc8fa24b9a75e2f8E"(ptr align 8 %e) #28
          to label %bb7 unwind label %terminate

bb8:                                              ; preds = %bb9, %bb10, %bb4
  store i8 0, ptr %_12, align 1
  ret void

bb10:                                             ; preds = %bb4
  %_13 = load i64, ptr %e, align 8, !range !21, !noundef !3
  %24 = icmp eq i64 %_13, 3
  br i1 %24, label %bb8, label %bb9

bb9:                                              ; preds = %bb10
; call core::ptr::drop_in_place<pkg_config::Error>
  call void @"_ZN4core3ptr38drop_in_place$LT$pkg_config..Error$GT$17hbc8fa24b9a75e2f8E"(ptr align 8 %e)
  br label %bb8
}

; pkg_config::Config::target_supported
; Function Attrs: nonlazybind uwtable
define zeroext i1 @_ZN10pkg_config6Config16target_supported17h0a340d701a549c2cE(ptr align 8 %self) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_20 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %_17 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %val = alloca ptr, align 8
  %_9 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %_5 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %host = alloca %"std::ffi::os_str::OsString", align 8
  %_3 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %target = alloca %"std::ffi::os_str::OsString", align 8
  %_0 = alloca i8, align 1
; call std::env::var_os
  call void @_ZN3std3env6var_os17h9e760256a8818e6dE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_3, ptr align 1 @alloc_dcbc225a8ec7dbfaaef714ff8a7176fb, i64 6)
; call core::option::Option<T>::unwrap_or_default
  call void @"_ZN4core6option15Option$LT$T$GT$17unwrap_or_default17h20f52db60fa28612E"(ptr sret(%"std::ffi::os_str::OsString") align 8 %target, ptr align 8 %_3)
; invoke std::env::var_os
  invoke void @_ZN3std3env6var_os17h9e760256a8818e6dE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_5, ptr align 1 @alloc_365e0f4ac7a4ea86a3f1f77427fa7258, i64 4)
          to label %bb3 unwind label %cleanup

bb31:                                             ; preds = %bb30, %cleanup
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %target) #28
          to label %bb32 unwind label %terminate

cleanup:                                          ; preds = %bb6, %bb3, %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb31

bb3:                                              ; preds = %start
; invoke core::option::Option<T>::unwrap_or_default
  invoke void @"_ZN4core6option15Option$LT$T$GT$17unwrap_or_default17h20f52db60fa28612E"(ptr sret(%"std::ffi::os_str::OsString") align 8 %host, ptr align 8 %_5)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; invoke <std::ffi::os_str::OsString as core::cmp::PartialEq>::eq
  %_6 = invoke zeroext i1 @"_ZN67_$LT$std..ffi..os_str..OsString$u20$as$u20$core..cmp..PartialEq$GT$2eq17ha9051ab2072a2ec3E"(ptr align 8 %host, ptr align 8 %target)
          to label %bb5 unwind label %cleanup1

bb30:                                             ; preds = %cleanup1
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %host) #28
          to label %bb31 unwind label %terminate

cleanup1:                                         ; preds = %bb7, %bb4
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %0, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb30

bb5:                                              ; preds = %bb4
  br i1 %_6, label %bb6, label %bb7

bb7:                                              ; preds = %bb5
; invoke pkg_config::Config::targeted_env_var
  invoke void @_ZN10pkg_config6Config16targeted_env_var17h5f9a78f1045b5947E(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_9, ptr align 8 %self, ptr align 1 @alloc_74426e6b24e30e7484a3e5cf9cf6ecb3, i64 22)
          to label %bb8 unwind label %cleanup1

bb6:                                              ; preds = %bb5
  store i8 1, ptr %_0, align 1
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %host)
          to label %bb23 unwind label %cleanup

bb8:                                              ; preds = %bb7
  %9 = load i64, ptr %_9, align 8, !range !12, !noundef !3
  %10 = icmp eq i64 %9, -9223372036854775808
  %_11 = select i1 %10, i64 0, i64 1
  %11 = icmp eq i64 %_11, 0
  br i1 %11, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
; invoke pkg_config::Config::targeted_env_var
  invoke void @_ZN10pkg_config6Config16targeted_env_var17h5f9a78f1045b5947E(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_17, ptr align 8 %self, ptr align 1 @alloc_5748da153c808379fa2fe46dcd8f2960, i64 10)
          to label %bb12 unwind label %cleanup2

bb10:                                             ; preds = %bb8
  store ptr %_9, ptr %val, align 8
; invoke core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_14 = invoke zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h75aa0c6169a6b5eaE"(ptr align 8 %val, ptr align 8 @alloc_9a059e341cefa220ac9b904db867934e)
          to label %bb11 unwind label %cleanup2

bb27:                                             ; preds = %bb26, %bb25, %cleanup2
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %host) #28
          to label %bb28 unwind label %terminate

cleanup2:                                         ; preds = %bb10, %bb14, %bb19, %bb17, %bb16, %bb9
  %12 = landingpad { ptr, i32 }
          cleanup
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
  store ptr %13, ptr %0, align 8
  %15 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %14, ptr %15, align 8
  br label %bb27

bb12:                                             ; preds = %bb9
; invoke core::option::Option<T>::is_some
  %_15 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h948e570adf1e4d88E"(ptr align 8 %_17)
          to label %bb13 unwind label %cleanup3

bb26:                                             ; preds = %cleanup3
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_17) #28
          to label %bb27 unwind label %terminate

cleanup3:                                         ; preds = %bb12
  %16 = landingpad { ptr, i32 }
          cleanup
  %17 = extractvalue { ptr, i32 } %16, 0
  %18 = extractvalue { ptr, i32 } %16, 1
  store ptr %17, ptr %0, align 8
  %19 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %18, ptr %19, align 8
  br label %bb26

bb13:                                             ; preds = %bb12
  br i1 %_15, label %bb14, label %bb16

bb16:                                             ; preds = %bb13
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_17)
          to label %bb17 unwind label %cleanup2

bb14:                                             ; preds = %bb13
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_17)
          to label %bb15 unwind label %cleanup2

bb17:                                             ; preds = %bb16
; invoke pkg_config::Config::targeted_env_var
  invoke void @_ZN10pkg_config6Config16targeted_env_var17h5f9a78f1045b5947E(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_20, ptr align 8 %self, ptr align 1 @alloc_d28f1d088998a251cf4ef2f20418d922, i64 22)
          to label %bb18 unwind label %cleanup2

bb18:                                             ; preds = %bb17
; invoke core::option::Option<T>::is_some
  %20 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h948e570adf1e4d88E"(ptr align 8 %_20)
          to label %bb19 unwind label %cleanup4

bb25:                                             ; preds = %cleanup4
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_20) #28
          to label %bb27 unwind label %terminate

cleanup4:                                         ; preds = %bb18
  %21 = landingpad { ptr, i32 }
          cleanup
  %22 = extractvalue { ptr, i32 } %21, 0
  %23 = extractvalue { ptr, i32 } %21, 1
  store ptr %22, ptr %0, align 8
  %24 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %23, ptr %24, align 8
  br label %bb25

bb19:                                             ; preds = %bb18
  %25 = zext i1 %20 to i8
  store i8 %25, ptr %_0, align 1
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_20)
          to label %bb20 unwind label %cleanup2

bb20:                                             ; preds = %bb11, %bb15, %bb19
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %host)
          to label %bb21 unwind label %cleanup5

terminate:                                        ; preds = %bb31, %bb30, %bb29, %bb28, %bb27, %bb26, %bb25
  %26 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %27 = extractvalue { ptr, i32 } %26, 0
  %28 = extractvalue { ptr, i32 } %26, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb15:                                             ; preds = %bb14
  store i8 1, ptr %_0, align 1
  br label %bb20

bb11:                                             ; preds = %bb10
  %29 = xor i1 %_14, true
  %30 = zext i1 %29 to i8
  store i8 %30, ptr %_0, align 1
  br label %bb20

bb28:                                             ; preds = %bb27, %cleanup5
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %target) #28
          to label %bb29 unwind label %terminate

cleanup5:                                         ; preds = %bb20
  %31 = landingpad { ptr, i32 }
          cleanup
  %32 = extractvalue { ptr, i32 } %31, 0
  %33 = extractvalue { ptr, i32 } %31, 1
  store ptr %32, ptr %0, align 8
  %34 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %33, ptr %34, align 8
  br label %bb28

bb21:                                             ; preds = %bb20
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %target)
          to label %bb22 unwind label %cleanup6

bb29:                                             ; preds = %bb28, %cleanup6
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_9) #28
          to label %bb32 unwind label %terminate

cleanup6:                                         ; preds = %bb21
  %35 = landingpad { ptr, i32 }
          cleanup
  %36 = extractvalue { ptr, i32 } %35, 0
  %37 = extractvalue { ptr, i32 } %35, 1
  store ptr %36, ptr %0, align 8
  %38 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %37, ptr %38, align 8
  br label %bb29

bb22:                                             ; preds = %bb21
; call core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  call void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_9)
  br label %bb24

bb24:                                             ; preds = %bb23, %bb22
  %39 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %40 = trunc i8 %39 to i1
  ret i1 %40

bb32:                                             ; preds = %bb31, %bb29
  %41 = load ptr, ptr %0, align 8, !noundef !3
  %42 = getelementptr inbounds i8, ptr %0, i64 8
  %43 = load i32, ptr %42, align 8, !noundef !3
  %44 = insertvalue { ptr, i32 } poison, ptr %41, 0
  %45 = insertvalue { ptr, i32 } %44, i32 %43, 1
  resume { ptr, i32 } %45

bb33:                                             ; No predecessors!
  unreachable

bb23:                                             ; preds = %bb6
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %target)
  br label %bb24
}

; pkg_config::Config::get_variable
; Function Attrs: nonlazybind uwtable
define void @_ZN10pkg_config6Config12get_variable17h3def4582debc4b37E(ptr sret(%"core::result::Result<alloc::string::String, alloc::string::String>") align 8 %_0, ptr align 1 %package.0, i64 %package.1, ptr align 1 %variable.0, i64 %variable.1) unnamed_addr #1 {
start:
  %_3 = alloca %"core::result::Result<alloc::string::String, Error>", align 8
; call pkg_config::get_variable
  call void @_ZN10pkg_config12get_variable17ha4a7f2461b4a46a0E(ptr sret(%"core::result::Result<alloc::string::String, Error>") align 8 %_3, ptr align 1 %package.0, i64 %package.1, ptr align 1 %variable.0, i64 %variable.1)
; call core::result::Result<T,E>::map_err
  call void @"_ZN4core6result19Result$LT$T$C$E$GT$7map_err17h96f0fa8616b1d341E"(ptr sret(%"core::result::Result<alloc::string::String, alloc::string::String>") align 8 %_0, ptr align 8 %_3)
  ret void
}

; pkg_config::Config::get_variable::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config6Config12get_variable28_$u7b$$u7b$closure$u7d$$u7d$17h0e38f385f18678feE"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %e) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
; invoke <T as alloc::string::ToString>::to_string
  invoke void @"_ZN45_$LT$T$u20$as$u20$alloc..string..ToString$GT$9to_string17heeaf8ad53c6261d6E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 8 %e)
          to label %bb1 unwind label %cleanup

bb3:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<pkg_config::Error>
  invoke void @"_ZN4core3ptr38drop_in_place$LT$pkg_config..Error$GT$17hbc8fa24b9a75e2f8E"(ptr align 8 %e) #28
          to label %bb4 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb3

bb1:                                              ; preds = %start
; call core::ptr::drop_in_place<pkg_config::Error>
  call void @"_ZN4core3ptr38drop_in_place$LT$pkg_config..Error$GT$17hbc8fa24b9a75e2f8E"(ptr align 8 %e)
  ret void

terminate:                                        ; preds = %bb3
  %5 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb4:                                              ; preds = %bb3
  %8 = load ptr, ptr %0, align 8, !noundef !3
  %9 = getelementptr inbounds i8, ptr %0, i64 8
  %10 = load i32, ptr %9, align 8, !noundef !3
  %11 = insertvalue { ptr, i32 } poison, ptr %8, 0
  %12 = insertvalue { ptr, i32 } %11, i32 %10, 1
  resume { ptr, i32 } %12
}

; pkg_config::Config::targeted_env_var
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10pkg_config6Config16targeted_env_var17h5f9a78f1045b5947E(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %0, ptr align 1 %1, i64 %2) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %_0.i10 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i9 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %3 = alloca { ptr, i32, [1 x i32] }, align 8
  %_72 = alloca i8, align 1
  %_71 = alloca i8, align 1
  %_70 = alloca i8, align 1
  %_69 = alloca i8, align 1
  %_68 = alloca i8, align 1
  %_67 = alloca i8, align 1
  %_62 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_58 = alloca %"core::fmt::Arguments<'_>", align 8
  %s = alloca %"std::ffi::os_str::OsString", align 8
  %_51 = alloca %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:630:30: 630:32}", align 8
  %_47 = alloca %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:629:30: 629:32}", align 8
  %_43 = alloca %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:628:30: 628:32}", align 8
  %_38 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_34 = alloca %"core::fmt::Arguments<'_>", align 8
  %res = alloca %"alloc::string::String", align 8
  %_32 = alloca %"alloc::string::String", align 8
  %_28 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %_27 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %_26 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %target_u = alloca %"alloc::string::String", align 8
  %kind = alloca { ptr, i64 }, align 8
  %host = alloca %"alloc::string::String", align 8
  %target = alloca %"alloc::string::String", align 8
  %_5 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_4 = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %_3 = alloca { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, align 8
  %var_base = alloca { ptr, i64 }, align 8
  %self = alloca ptr, align 8
  store ptr %0, ptr %self, align 8
  store ptr %1, ptr %var_base, align 8
  %4 = getelementptr inbounds i8, ptr %var_base, i64 8
  store i64 %2, ptr %4, align 8
  store i8 0, ptr %_71, align 1
  store i8 0, ptr %_72, align 1
  store i8 0, ptr %_69, align 1
  store i8 0, ptr %_70, align 1
  store i8 0, ptr %_67, align 1
  store i8 0, ptr %_68, align 1
; call std::env::var
  call void @_ZN3std3env3var17h7eb44638e42656b6E(ptr sret(%"core::result::Result<alloc::string::String, std::env::VarError>") align 8 %_4, ptr align 1 @alloc_dcbc225a8ec7dbfaaef714ff8a7176fb, i64 6)
; invoke std::env::var
  invoke void @_ZN3std3env3var17h7eb44638e42656b6E(ptr sret(%"core::result::Result<alloc::string::String, std::env::VarError>") align 8 %_5, ptr align 1 @alloc_365e0f4ac7a4ea86a3f1f77427fa7258, i64 4)
          to label %bb2 unwind label %cleanup

bb43:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17he3784d90bbaa7c42E"(ptr align 8 %_4) #28
          to label %bb44 unwind label %terminate

cleanup:                                          ; preds = %start
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %3, align 8
  %8 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb43

bb2:                                              ; preds = %start
  store i8 1, ptr %_67, align 1
  store i8 1, ptr %_68, align 1
  store i8 1, ptr %_69, align 1
  store i8 1, ptr %_70, align 1
  store i8 1, ptr %_71, align 1
  store i8 1, ptr %_72, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_3, ptr align 8 %_4, i64 32, i1 false)
  %9 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %_5, i64 32, i1 false)
  %_14 = load i64, ptr %_3, align 8, !range !9, !noundef !3
  %10 = icmp eq i64 %_14, 0
  br i1 %10, label %bb3, label %bb5

bb3:                                              ; preds = %bb2
  %11 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %_6 = load i64, ptr %11, align 8, !range !9, !noundef !3
  %12 = icmp eq i64 %_6, 0
  br i1 %12, label %bb13, label %bb4

bb5:                                              ; preds = %bb2
  %13 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %_3, i32 0, i32 1
  %14 = load i64, ptr %13, align 8, !range !12, !noundef !3
  %15 = icmp eq i64 %14, -9223372036854775808
  %_7 = select i1 %15, i64 0, i64 1
  %16 = icmp eq i64 %_7, 0
  br i1 %16, label %bb32, label %bb4

bb13:                                             ; preds = %bb3
  store i8 0, ptr %_69, align 1
  %17 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", ptr %_3, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %target, ptr align 8 %17, i64 24, i1 false)
  store i8 0, ptr %_70, align 1
  %18 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %19 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", ptr %18, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %host, ptr align 8 %19, i64 24, i1 false)
; invoke <alloc::string::String as core::cmp::PartialEq>::eq
  %_18 = invoke zeroext i1 @"_ZN62_$LT$alloc..string..String$u20$as$u20$core..cmp..PartialEq$GT$2eq17h0fbfccbadab9c0e7E"(ptr align 8 %host, ptr align 8 %target)
          to label %bb14 unwind label %cleanup1

bb4:                                              ; preds = %bb5, %bb3
  %20 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %_13 = load i64, ptr %20, align 8, !range !9, !noundef !3
  %21 = icmp eq i64 %_13, 1
  br i1 %21, label %bb7, label %bb6

bb41:                                             ; preds = %bb40, %bb39, %cleanup1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %host) #28
          to label %bb42 unwind label %terminate

cleanup1:                                         ; preds = %bb29, %bb18, %bb17, %bb13
  %22 = landingpad { ptr, i32 }
          cleanup
  %23 = extractvalue { ptr, i32 } %22, 0
  %24 = extractvalue { ptr, i32 } %22, 1
  store ptr %23, ptr %3, align 8
  %25 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %24, ptr %25, align 8
  br label %bb41

bb14:                                             ; preds = %bb13
  br i1 %_18, label %bb15, label %bb16

bb16:                                             ; preds = %bb14
  store ptr @alloc_dcbc225a8ec7dbfaaef714ff8a7176fb, ptr %kind, align 8
  %26 = getelementptr inbounds i8, ptr %kind, i64 8
  store i64 6, ptr %26, align 8
  br label %bb17

bb15:                                             ; preds = %bb14
  store ptr @alloc_365e0f4ac7a4ea86a3f1f77427fa7258, ptr %kind, align 8
  %27 = getelementptr inbounds i8, ptr %kind, i64 8
  store i64 4, ptr %27, align 8
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %28 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %target)
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
  %_23.0 = extractvalue { ptr, i64 } %28, 0
  %_23.1 = extractvalue { ptr, i64 } %28, 1
; invoke alloc::str::<impl str>::replace
  invoke void @"_ZN5alloc3str21_$LT$impl$u20$str$GT$7replace17h1d949dc3ea24b7a7E"(ptr sret(%"alloc::string::String") align 8 %target_u, ptr align 1 %_23.0, i64 %_23.1, i32 45, ptr align 1 @alloc_27cca3636828088e60ce450d2eca2060, i64 1)
          to label %bb19 unwind label %cleanup1

bb19:                                             ; preds = %bb18
  %_29 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %var_base, ptr %_0.i, align 8
  %29 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %29, align 8
  %30 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %31 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %32 = load ptr, ptr %31, align 8, !nonnull !3, !noundef !3
  %33 = insertvalue { ptr, ptr } poison, ptr %30, 0
  %34 = insertvalue { ptr, ptr } %33, ptr %32, 1
  br label %bb20

bb40:                                             ; preds = %cleanup2
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %target_u) #28
          to label %bb41 unwind label %terminate

cleanup2:                                         ; preds = %bb22, %bb21
  %35 = landingpad { ptr, i32 }
          cleanup
  %36 = extractvalue { ptr, i32 } %35, 0
  %37 = extractvalue { ptr, i32 } %35, 1
  store ptr %36, ptr %3, align 8
  %38 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %37, ptr %38, align 8
  br label %bb40

bb20:                                             ; preds = %bb19
  %_39.0 = extractvalue { ptr, ptr } %34, 0
  %_39.1 = extractvalue { ptr, ptr } %34, 1
  store ptr %target, ptr %_0.i9, align 8
  %39 = getelementptr inbounds i8, ptr %_0.i9, i64 8
  store ptr @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E", ptr %39, align 8
  %40 = load ptr, ptr %_0.i9, align 8, !nonnull !3, !align !4, !noundef !3
  %41 = getelementptr inbounds i8, ptr %_0.i9, i64 8
  %42 = load ptr, ptr %41, align 8, !nonnull !3, !noundef !3
  %43 = insertvalue { ptr, ptr } poison, ptr %40, 0
  %44 = insertvalue { ptr, ptr } %43, ptr %42, 1
  br label %bb21

bb21:                                             ; preds = %bb20
  %_41.0 = extractvalue { ptr, ptr } %44, 0
  %_41.1 = extractvalue { ptr, ptr } %44, 1
  %45 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_38, i64 0, i64 0
  store ptr %_39.0, ptr %45, align 8
  %46 = getelementptr inbounds i8, ptr %45, i64 8
  store ptr %_39.1, ptr %46, align 8
  %47 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_38, i64 0, i64 1
  store ptr %_41.0, ptr %47, align 8
  %48 = getelementptr inbounds i8, ptr %47, i64 8
  store ptr %_41.1, ptr %48, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_34, ptr align 8 @alloc_9f35f74d3d470109588de1722f391f56, i64 2, ptr align 8 %_38, i64 2)
          to label %bb22 unwind label %cleanup2

bb22:                                             ; preds = %bb21
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res, ptr align 8 %_34)
          to label %bb23 unwind label %cleanup2

bb23:                                             ; preds = %bb22
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_32, ptr align 8 %res, i64 24, i1 false)
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %49 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %_32)
          to label %bb24 unwind label %cleanup3

bb38:                                             ; preds = %cleanup3
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %target_u) #28
          to label %bb39 unwind label %terminate

cleanup3:                                         ; preds = %bb27, %bb26, %bb25, %bb24, %bb23
  %50 = landingpad { ptr, i32 }
          cleanup
  %51 = extractvalue { ptr, i32 } %50, 0
  %52 = extractvalue { ptr, i32 } %50, 1
  store ptr %51, ptr %3, align 8
  %53 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %52, ptr %53, align 8
  br label %bb38

bb24:                                             ; preds = %bb23
  %_30.0 = extractvalue { ptr, i64 } %49, 0
  %_30.1 = extractvalue { ptr, i64 } %49, 1
; invoke pkg_config::Config::env_var_os
  invoke void @_ZN10pkg_config6Config10env_var_os17hfbc9ab72e9fc468eE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_28, ptr align 8 %_29, ptr align 1 %_30.0, i64 %_30.1)
          to label %bb25 unwind label %cleanup3

bb25:                                             ; preds = %bb24
  store ptr %self, ptr %_43, align 8
  %54 = getelementptr inbounds %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:628:30: 628:32}", ptr %_43, i32 0, i32 1
  store ptr %var_base, ptr %54, align 8
  %55 = getelementptr inbounds %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:628:30: 628:32}", ptr %_43, i32 0, i32 2
  store ptr %target_u, ptr %55, align 8
; invoke core::option::Option<T>::or_else
  invoke void @"_ZN4core6option15Option$LT$T$GT$7or_else17h4cc006aa5d17d478E"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_27, ptr align 8 %_28, ptr align 8 %_43)
          to label %bb26 unwind label %cleanup3

bb26:                                             ; preds = %bb25
  store ptr %self, ptr %_47, align 8
  %56 = getelementptr inbounds %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:629:30: 629:32}", ptr %_47, i32 0, i32 1
  store ptr %kind, ptr %56, align 8
  %57 = getelementptr inbounds %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:629:30: 629:32}", ptr %_47, i32 0, i32 2
  store ptr %var_base, ptr %57, align 8
; invoke core::option::Option<T>::or_else
  invoke void @"_ZN4core6option15Option$LT$T$GT$7or_else17ha730540e393fa8aaE"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_26, ptr align 8 %_27, ptr align 8 %_47)
          to label %bb27 unwind label %cleanup3

bb27:                                             ; preds = %bb26
  store ptr %self, ptr %_51, align 8
  %58 = getelementptr inbounds i8, ptr %_51, i64 8
  store ptr %var_base, ptr %58, align 8
  %59 = load ptr, ptr %_51, align 8, !nonnull !3, !align !5, !noundef !3
  %60 = getelementptr inbounds i8, ptr %_51, i64 8
  %61 = load ptr, ptr %60, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::option::Option<T>::or_else
  invoke void @"_ZN4core6option15Option$LT$T$GT$7or_else17h63c0b99bbc7e94a4E"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %_26, ptr align 8 %59, ptr align 8 %61)
          to label %bb28 unwind label %cleanup3

bb28:                                             ; preds = %bb27
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %target_u)
          to label %bb29 unwind label %cleanup4

bb39:                                             ; preds = %bb38, %cleanup4
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_32) #28
          to label %bb41 unwind label %terminate

cleanup4:                                         ; preds = %bb28
  %62 = landingpad { ptr, i32 }
          cleanup
  %63 = extractvalue { ptr, i32 } %62, 0
  %64 = extractvalue { ptr, i32 } %62, 1
  store ptr %63, ptr %3, align 8
  %65 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %64, ptr %65, align 8
  br label %bb39

bb29:                                             ; preds = %bb28
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_32)
          to label %bb30 unwind label %cleanup1

bb30:                                             ; preds = %bb29
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %host)
          to label %bb31 unwind label %cleanup5

bb42:                                             ; preds = %bb41, %cleanup5
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %target) #28
          to label %bb82 unwind label %terminate

cleanup5:                                         ; preds = %bb30
  %66 = landingpad { ptr, i32 }
          cleanup
  %67 = extractvalue { ptr, i32 } %66, 0
  %68 = extractvalue { ptr, i32 } %66, 1
  store ptr %67, ptr %3, align 8
  %69 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %68, ptr %69, align 8
  br label %bb42

bb31:                                             ; preds = %bb30
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %target)
          to label %bb68 unwind label %cleanup6

bb82:                                             ; preds = %bb37, %bb42, %cleanup6
  %_82 = load i64, ptr %_3, align 8, !range !9, !noundef !3
  %70 = icmp eq i64 %_82, 0
  br i1 %70, label %bb76, label %bb78

cleanup6:                                         ; preds = %bb32, %bb31
  %71 = landingpad { ptr, i32 }
          cleanup
  %72 = extractvalue { ptr, i32 } %71, 0
  %73 = extractvalue { ptr, i32 } %71, 1
  store ptr %72, ptr %3, align 8
  %74 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %73, ptr %74, align 8
  br label %bb82

bb68:                                             ; preds = %bb83, %bb31
  %_78 = load i64, ptr %_3, align 8, !range !9, !noundef !3
  %75 = icmp eq i64 %_78, 0
  br i1 %75, label %bb61, label %bb63

terminate:                                        ; preds = %bb43, %bb74, %bb71, %bb80, %bb77, %bb37, %bb50, %bb47, %bb42, %bb41, %bb40, %bb39, %bb38
  %76 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %77 = extractvalue { ptr, i32 } %76, 0
  %78 = extractvalue { ptr, i32 } %76, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb32:                                             ; preds = %bb7, %bb5
  %_54 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
  %_55.0 = load ptr, ptr %var_base, align 8, !nonnull !3, !align !4, !noundef !3
  %79 = getelementptr inbounds i8, ptr %var_base, i64 8
  %_55.1 = load i64, ptr %79, align 8, !noundef !3
; invoke pkg_config::Config::env_var_os
  invoke void @_ZN10pkg_config6Config10env_var_os17hfbc9ab72e9fc468eE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %_54, ptr align 1 %_55.0, i64 %_55.1)
          to label %bb83 unwind label %cleanup6

bb7:                                              ; preds = %bb4
  %80 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %81 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %80, i32 0, i32 1
  %82 = load i64, ptr %81, align 8, !range !12, !noundef !3
  %83 = icmp eq i64 %82, -9223372036854775808
  %_8 = select i1 %83, i64 0, i64 1
  %84 = icmp eq i64 %_8, 0
  br i1 %84, label %bb32, label %bb6

bb6:                                              ; preds = %bb7, %bb4
  %_12 = load i64, ptr %_3, align 8, !range !9, !noundef !3
  %85 = icmp eq i64 %_12, 1
  br i1 %85, label %bb9, label %bb8

bb83:                                             ; preds = %bb32
  br label %bb68

bb61:                                             ; preds = %bb68
  %86 = load i8, ptr %_69, align 1, !range !10, !noundef !3
  %87 = trunc i8 %86 to i1
  br i1 %87, label %bb62, label %bb60

bb63:                                             ; preds = %bb68
  %88 = load i8, ptr %_67, align 1, !range !10, !noundef !3
  %89 = trunc i8 %88 to i1
  br i1 %89, label %bb67, label %bb64

bb60:                                             ; preds = %bb64, %bb62, %bb61
  %90 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %_76 = load i64, ptr %90, align 8, !range !9, !noundef !3
  %91 = icmp eq i64 %_76, 0
  br i1 %91, label %bb53, label %bb55

bb62:                                             ; preds = %bb61
  %92 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", ptr %_3, i32 0, i32 1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %92)
          to label %bb60 unwind label %cleanup7

bb45:                                             ; preds = %cleanup7
  %93 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %_74 = load i64, ptr %93, align 8, !range !9, !noundef !3
  %94 = icmp eq i64 %_74, 0
  br i1 %94, label %bb46, label %bb48

cleanup7:                                         ; preds = %bb66, %bb62
  %95 = landingpad { ptr, i32 }
          cleanup
  %96 = extractvalue { ptr, i32 } %95, 0
  %97 = extractvalue { ptr, i32 } %95, 1
  store ptr %96, ptr %3, align 8
  %98 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %97, ptr %98, align 8
  br label %bb45

bb64:                                             ; preds = %bb66, %bb65, %bb67, %bb63
  store i8 0, ptr %_67, align 1
  br label %bb60

bb67:                                             ; preds = %bb63
  %99 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %_3, i32 0, i32 1
  %100 = load i64, ptr %99, align 8, !range !12, !noundef !3
  %101 = icmp eq i64 %100, -9223372036854775808
  %_77 = select i1 %101, i64 0, i64 1
  %102 = icmp eq i64 %_77, 1
  br i1 %102, label %bb65, label %bb64

bb65:                                             ; preds = %bb67
  %103 = load i8, ptr %_68, align 1, !range !10, !noundef !3
  %104 = trunc i8 %103 to i1
  br i1 %104, label %bb66, label %bb64

bb66:                                             ; preds = %bb65
  %105 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %_3, i32 0, i32 1
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %105)
          to label %bb64 unwind label %cleanup7

bb46:                                             ; preds = %bb45
  %106 = load i8, ptr %_70, align 1, !range !10, !noundef !3
  %107 = trunc i8 %106 to i1
  br i1 %107, label %bb47, label %bb44

bb48:                                             ; preds = %bb45
  %108 = load i8, ptr %_71, align 1, !range !10, !noundef !3
  %109 = trunc i8 %108 to i1
  br i1 %109, label %bb51, label %bb44

bb44:                                             ; preds = %bb43, %bb74, %bb73, %bb75, %bb72, %bb71, %bb70, %bb50, %bb49, %bb51, %bb48, %bb47, %bb46
  %110 = load ptr, ptr %3, align 8, !noundef !3
  %111 = getelementptr inbounds i8, ptr %3, i64 8
  %112 = load i32, ptr %111, align 8, !noundef !3
  %113 = insertvalue { ptr, i32 } poison, ptr %110, 0
  %114 = insertvalue { ptr, i32 } %113, i32 %112, 1
  resume { ptr, i32 } %114

bb47:                                             ; preds = %bb46
  %115 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %116 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", ptr %115, i32 0, i32 1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %116) #28
          to label %bb44 unwind label %terminate

bb51:                                             ; preds = %bb48
  %117 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %118 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %117, i32 0, i32 1
  %119 = load i64, ptr %118, align 8, !range !12, !noundef !3
  %120 = icmp eq i64 %119, -9223372036854775808
  %_73 = select i1 %120, i64 0, i64 1
  %121 = icmp eq i64 %_73, 1
  br i1 %121, label %bb49, label %bb44

bb49:                                             ; preds = %bb51
  %122 = load i8, ptr %_72, align 1, !range !10, !noundef !3
  %123 = trunc i8 %122 to i1
  br i1 %123, label %bb50, label %bb44

bb50:                                             ; preds = %bb49
  %124 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %125 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %124, i32 0, i32 1
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %125) #28
          to label %bb44 unwind label %terminate

bb53:                                             ; preds = %bb60
  %126 = load i8, ptr %_70, align 1, !range !10, !noundef !3
  %127 = trunc i8 %126 to i1
  br i1 %127, label %bb54, label %bb52

bb55:                                             ; preds = %bb60
  %128 = load i8, ptr %_71, align 1, !range !10, !noundef !3
  %129 = trunc i8 %128 to i1
  br i1 %129, label %bb59, label %bb56

bb52:                                             ; preds = %bb56, %bb54, %bb53
  store i8 0, ptr %_67, align 1
  store i8 0, ptr %_68, align 1
  store i8 0, ptr %_69, align 1
  store i8 0, ptr %_70, align 1
  store i8 0, ptr %_71, align 1
  store i8 0, ptr %_72, align 1
  ret void

bb54:                                             ; preds = %bb53
  %130 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %131 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", ptr %130, i32 0, i32 1
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %131)
  br label %bb52

bb56:                                             ; preds = %bb58, %bb57, %bb59, %bb55
  store i8 0, ptr %_71, align 1
  br label %bb52

bb59:                                             ; preds = %bb55
  %132 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %133 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %132, i32 0, i32 1
  %134 = load i64, ptr %133, align 8, !range !12, !noundef !3
  %135 = icmp eq i64 %134, -9223372036854775808
  %_75 = select i1 %135, i64 0, i64 1
  %136 = icmp eq i64 %_75, 1
  br i1 %136, label %bb57, label %bb56

bb57:                                             ; preds = %bb59
  %137 = load i8, ptr %_72, align 1, !range !10, !noundef !3
  %138 = trunc i8 %137 to i1
  br i1 %138, label %bb58, label %bb56

bb58:                                             ; preds = %bb57
  %139 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %140 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %139, i32 0, i32 1
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %140)
  br label %bb56

bb9:                                              ; preds = %bb6
  %141 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %_3, i32 0, i32 1
  %142 = load i64, ptr %141, align 8, !range !12, !noundef !3
  %143 = icmp eq i64 %142, -9223372036854775808
  %_9 = select i1 %143, i64 0, i64 1
  %144 = icmp eq i64 %_9, 1
  br i1 %144, label %bb34, label %bb8

bb8:                                              ; preds = %bb9, %bb6
  %145 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %_11 = load i64, ptr %145, align 8, !range !9, !noundef !3
  %146 = icmp eq i64 %_11, 1
  br i1 %146, label %bb11, label %bb10

bb34:                                             ; preds = %bb9
  store i8 0, ptr %_68, align 1
  %147 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %_3, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %s, ptr align 8 %147, i64 24, i1 false)
  br label %bb33

bb33:                                             ; preds = %bb12, %bb34
  store ptr %s, ptr %_0.i10, align 8
  %148 = getelementptr inbounds i8, ptr %_0.i10, i64 8
  store ptr @"_ZN63_$LT$std..ffi..os_str..OsString$u20$as$u20$core..fmt..Debug$GT$3fmt17h6ef77d5bdcd6a4d7E", ptr %148, align 8
  %149 = load ptr, ptr %_0.i10, align 8, !nonnull !3, !align !4, !noundef !3
  %150 = getelementptr inbounds i8, ptr %_0.i10, i64 8
  %151 = load ptr, ptr %150, align 8, !nonnull !3, !noundef !3
  %152 = insertvalue { ptr, ptr } poison, ptr %149, 0
  %153 = insertvalue { ptr, ptr } %152, ptr %151, 1
  br label %bb35

bb11:                                             ; preds = %bb8
  %154 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %155 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %154, i32 0, i32 1
  %156 = load i64, ptr %155, align 8, !range !12, !noundef !3
  %157 = icmp eq i64 %156, -9223372036854775808
  %_10 = select i1 %157, i64 0, i64 1
  %158 = icmp eq i64 %_10, 1
  br i1 %158, label %bb12, label %bb10

bb10:                                             ; preds = %bb11, %bb8
  unreachable

bb12:                                             ; preds = %bb11
  store i8 0, ptr %_72, align 1
  %159 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %160 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %159, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %s, ptr align 8 %160, i64 24, i1 false)
  br label %bb33

bb37:                                             ; preds = %cleanup8
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %s) #28
          to label %bb82 unwind label %terminate

cleanup8:                                         ; preds = %bb36, %bb35
  %161 = landingpad { ptr, i32 }
          cleanup
  %162 = extractvalue { ptr, i32 } %161, 0
  %163 = extractvalue { ptr, i32 } %161, 1
  store ptr %162, ptr %3, align 8
  %164 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %163, ptr %164, align 8
  br label %bb37

bb35:                                             ; preds = %bb33
  %_63.0 = extractvalue { ptr, ptr } %153, 0
  %_63.1 = extractvalue { ptr, ptr } %153, 1
  %165 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_62, i64 0, i64 0
  store ptr %_63.0, ptr %165, align 8
  %166 = getelementptr inbounds i8, ptr %165, i64 8
  store ptr %_63.1, ptr %166, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_58, ptr align 8 @alloc_2082406b3ddc89d64258da5ecba2c2ac, i64 1, ptr align 8 %_62, i64 1)
          to label %bb36 unwind label %cleanup8

bb36:                                             ; preds = %bb35
; invoke core::panicking::panic_fmt
  invoke void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8 %_58, ptr align 8 @alloc_c456ebc06c59bc1f0834f28e0ef12fb8) #27
          to label %unreachable unwind label %cleanup8

unreachable:                                      ; preds = %bb36
  unreachable

bb76:                                             ; preds = %bb82
  %167 = load i8, ptr %_69, align 1, !range !10, !noundef !3
  %168 = trunc i8 %167 to i1
  br i1 %168, label %bb77, label %bb69

bb78:                                             ; preds = %bb82
  %169 = load i8, ptr %_67, align 1, !range !10, !noundef !3
  %170 = trunc i8 %169 to i1
  br i1 %170, label %bb81, label %bb69

bb69:                                             ; preds = %bb80, %bb79, %bb81, %bb78, %bb77, %bb76
  %171 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %_80 = load i64, ptr %171, align 8, !range !9, !noundef !3
  %172 = icmp eq i64 %_80, 0
  br i1 %172, label %bb70, label %bb72

bb77:                                             ; preds = %bb76
  %173 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", ptr %_3, i32 0, i32 1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %173) #28
          to label %bb69 unwind label %terminate

bb81:                                             ; preds = %bb78
  %174 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %_3, i32 0, i32 1
  %175 = load i64, ptr %174, align 8, !range !12, !noundef !3
  %176 = icmp eq i64 %175, -9223372036854775808
  %_81 = select i1 %176, i64 0, i64 1
  %177 = icmp eq i64 %_81, 1
  br i1 %177, label %bb79, label %bb69

bb79:                                             ; preds = %bb81
  %178 = load i8, ptr %_68, align 1, !range !10, !noundef !3
  %179 = trunc i8 %178 to i1
  br i1 %179, label %bb80, label %bb69

bb80:                                             ; preds = %bb79
  %180 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %_3, i32 0, i32 1
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %180) #28
          to label %bb69 unwind label %terminate

bb70:                                             ; preds = %bb69
  %181 = load i8, ptr %_70, align 1, !range !10, !noundef !3
  %182 = trunc i8 %181 to i1
  br i1 %182, label %bb71, label %bb44

bb72:                                             ; preds = %bb69
  %183 = load i8, ptr %_71, align 1, !range !10, !noundef !3
  %184 = trunc i8 %183 to i1
  br i1 %184, label %bb75, label %bb44

bb71:                                             ; preds = %bb70
  %185 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %186 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", ptr %185, i32 0, i32 1
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %186) #28
          to label %bb44 unwind label %terminate

bb75:                                             ; preds = %bb72
  %187 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %188 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %187, i32 0, i32 1
  %189 = load i64, ptr %188, align 8, !range !12, !noundef !3
  %190 = icmp eq i64 %189, -9223372036854775808
  %_79 = select i1 %190, i64 0, i64 1
  %191 = icmp eq i64 %_79, 1
  br i1 %191, label %bb73, label %bb44

bb73:                                             ; preds = %bb75
  %192 = load i8, ptr %_72, align 1, !range !10, !noundef !3
  %193 = trunc i8 %192 to i1
  br i1 %193, label %bb74, label %bb44

bb74:                                             ; preds = %bb73
  %194 = getelementptr inbounds { %"core::result::Result<alloc::string::String, std::env::VarError>", %"core::result::Result<alloc::string::String, std::env::VarError>" }, ptr %_3, i32 0, i32 1
  %195 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Err", ptr %194, i32 0, i32 1
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %195) #28
          to label %bb44 unwind label %terminate
}

; pkg_config::Config::targeted_env_var::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config6Config16targeted_env_var28_$u7b$$u7b$closure$u7d$$u7d$17h3aa28d7287adb83fE"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %_1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %_0.i1 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  %res = alloca %"alloc::string::String", align 8
  %_4 = alloca %"alloc::string::String", align 8
  %_14 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  %_15 = load ptr, ptr %_14, align 8, !nonnull !3, !align !5, !noundef !3
  %1 = getelementptr inbounds %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:628:30: 628:32}", ptr %_1, i32 0, i32 1
  %_16 = load ptr, ptr %1, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %_16, ptr %_0.i, align 8
  %2 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %2, align 8
  %3 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %5 = load ptr, ptr %4, align 8, !nonnull !3, !noundef !3
  %6 = insertvalue { ptr, ptr } poison, ptr %3, 0
  %7 = insertvalue { ptr, ptr } %6, ptr %5, 1
  %_11.0 = extractvalue { ptr, ptr } %7, 0
  %_11.1 = extractvalue { ptr, ptr } %7, 1
  %8 = getelementptr inbounds %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:628:30: 628:32}", ptr %_1, i32 0, i32 2
  %_17 = load ptr, ptr %8, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %_17, ptr %_0.i1, align 8
  %9 = getelementptr inbounds i8, ptr %_0.i1, i64 8
  store ptr @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E", ptr %9, align 8
  %10 = load ptr, ptr %_0.i1, align 8, !nonnull !3, !align !4, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_0.i1, i64 8
  %12 = load ptr, ptr %11, align 8, !nonnull !3, !noundef !3
  %13 = insertvalue { ptr, ptr } poison, ptr %10, 0
  %14 = insertvalue { ptr, ptr } %13, ptr %12, 1
  %_12.0 = extractvalue { ptr, ptr } %14, 0
  %_12.1 = extractvalue { ptr, ptr } %14, 1
  %15 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_10, i64 0, i64 0
  store ptr %_11.0, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %15, i64 8
  store ptr %_11.1, ptr %16, align 8
  %17 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_10, i64 0, i64 1
  store ptr %_12.0, ptr %17, align 8
  %18 = getelementptr inbounds i8, ptr %17, i64 8
  store ptr %_12.1, ptr %18, align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_6, ptr align 8 @alloc_9f35f74d3d470109588de1722f391f56, i64 2, ptr align 8 %_10, i64 2)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res, ptr align 8 %_6)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %res, i64 24, i1 false)
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %19 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %_4)
          to label %bb5 unwind label %cleanup

bb8:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_4) #28
          to label %bb9 unwind label %terminate

cleanup:                                          ; preds = %bb5, %start
  %20 = landingpad { ptr, i32 }
          cleanup
  %21 = extractvalue { ptr, i32 } %20, 0
  %22 = extractvalue { ptr, i32 } %20, 1
  store ptr %21, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %22, ptr %23, align 8
  br label %bb8

bb5:                                              ; preds = %start
  %_2.0 = extractvalue { ptr, i64 } %19, 0
  %_2.1 = extractvalue { ptr, i64 } %19, 1
; invoke pkg_config::Config::env_var_os
  invoke void @_ZN10pkg_config6Config10env_var_os17hfbc9ab72e9fc468eE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %_15, ptr align 1 %_2.0, i64 %_2.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_4)
  ret void

terminate:                                        ; preds = %bb8
  %24 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %25 = extractvalue { ptr, i32 } %24, 0
  %26 = extractvalue { ptr, i32 } %24, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb9:                                              ; preds = %bb8
  %27 = load ptr, ptr %0, align 8, !noundef !3
  %28 = getelementptr inbounds i8, ptr %0, i64 8
  %29 = load i32, ptr %28, align 8, !noundef !3
  %30 = insertvalue { ptr, i32 } poison, ptr %27, 0
  %31 = insertvalue { ptr, i32 } %30, i32 %29, 1
  resume { ptr, i32 } %31
}

; pkg_config::Config::targeted_env_var::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config6Config16targeted_env_var28_$u7b$$u7b$closure$u7d$$u7d$17h69db9b0e066999a1E"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %_1) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %_0.i1 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_10 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_6 = alloca %"core::fmt::Arguments<'_>", align 8
  %res = alloca %"alloc::string::String", align 8
  %_4 = alloca %"alloc::string::String", align 8
  %_14 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  %_15 = load ptr, ptr %_14, align 8, !nonnull !3, !align !5, !noundef !3
  %1 = getelementptr inbounds %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:629:30: 629:32}", ptr %_1, i32 0, i32 1
  %_16 = load ptr, ptr %1, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %_16, ptr %_0.i1, align 8
  %2 = getelementptr inbounds i8, ptr %_0.i1, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %2, align 8
  %3 = load ptr, ptr %_0.i1, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_0.i1, i64 8
  %5 = load ptr, ptr %4, align 8, !nonnull !3, !noundef !3
  %6 = insertvalue { ptr, ptr } poison, ptr %3, 0
  %7 = insertvalue { ptr, ptr } %6, ptr %5, 1
  %_11.0 = extractvalue { ptr, ptr } %7, 0
  %_11.1 = extractvalue { ptr, ptr } %7, 1
  %8 = getelementptr inbounds %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:629:30: 629:32}", ptr %_1, i32 0, i32 2
  %_17 = load ptr, ptr %8, align 8, !nonnull !3, !align !5, !noundef !3
  store ptr %_17, ptr %_0.i, align 8
  %9 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %9, align 8
  %10 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %11 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %12 = load ptr, ptr %11, align 8, !nonnull !3, !noundef !3
  %13 = insertvalue { ptr, ptr } poison, ptr %10, 0
  %14 = insertvalue { ptr, ptr } %13, ptr %12, 1
  %_12.0 = extractvalue { ptr, ptr } %14, 0
  %_12.1 = extractvalue { ptr, ptr } %14, 1
  %15 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_10, i64 0, i64 0
  store ptr %_11.0, ptr %15, align 8
  %16 = getelementptr inbounds i8, ptr %15, i64 8
  store ptr %_11.1, ptr %16, align 8
  %17 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_10, i64 0, i64 1
  store ptr %_12.0, ptr %17, align 8
  %18 = getelementptr inbounds i8, ptr %17, i64 8
  store ptr %_12.1, ptr %18, align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_6, ptr align 8 @alloc_9f35f74d3d470109588de1722f391f56, i64 2, ptr align 8 %_10, i64 2)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res, ptr align 8 %_6)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_4, ptr align 8 %res, i64 24, i1 false)
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %19 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %_4)
          to label %bb5 unwind label %cleanup

bb8:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_4) #28
          to label %bb9 unwind label %terminate

cleanup:                                          ; preds = %bb5, %start
  %20 = landingpad { ptr, i32 }
          cleanup
  %21 = extractvalue { ptr, i32 } %20, 0
  %22 = extractvalue { ptr, i32 } %20, 1
  store ptr %21, ptr %0, align 8
  %23 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %22, ptr %23, align 8
  br label %bb8

bb5:                                              ; preds = %start
  %_2.0 = extractvalue { ptr, i64 } %19, 0
  %_2.1 = extractvalue { ptr, i64 } %19, 1
; invoke pkg_config::Config::env_var_os
  invoke void @_ZN10pkg_config6Config10env_var_os17hfbc9ab72e9fc468eE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %_15, ptr align 1 %_2.0, i64 %_2.1)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_4)
  ret void

terminate:                                        ; preds = %bb8
  %24 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %25 = extractvalue { ptr, i32 } %24, 0
  %26 = extractvalue { ptr, i32 } %24, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb9:                                              ; preds = %bb8
  %27 = load ptr, ptr %0, align 8, !noundef !3
  %28 = getelementptr inbounds i8, ptr %0, i64 8
  %29 = load i32, ptr %28, align 8, !noundef !3
  %30 = insertvalue { ptr, i32 } poison, ptr %27, 0
  %31 = insertvalue { ptr, i32 } %30, i32 %29, 1
  resume { ptr, i32 } %31
}

; pkg_config::Config::targeted_env_var::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config6Config16targeted_env_var28_$u7b$$u7b$closure$u7d$$u7d$17h2160a87f8b697854E"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %0, ptr align 8 %1) unnamed_addr #0 {
start:
  %_1 = alloca %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:630:30: 630:32}", align 8
  store ptr %0, ptr %_1, align 8
  %2 = getelementptr inbounds i8, ptr %_1, i64 8
  store ptr %1, ptr %2, align 8
  %_2 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  %_3 = load ptr, ptr %_2, align 8, !nonnull !3, !align !5, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_1, i64 8
  %_4 = load ptr, ptr %3, align 8, !nonnull !3, !align !5, !noundef !3
  %_5.0 = load ptr, ptr %_4, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_4, i64 8
  %_5.1 = load i64, ptr %4, align 8, !noundef !3
; call pkg_config::Config::env_var_os
  call void @_ZN10pkg_config6Config10env_var_os17hfbc9ab72e9fc468eE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %_3, ptr align 1 %_5.0, i64 %_5.1)
  ret void
}

; pkg_config::Config::env_var_os
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10pkg_config6Config10env_var_os17hfbc9ab72e9fc468eE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %self, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_9 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %name = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %name, align 8
  %2 = getelementptr inbounds i8, ptr %name, i64 8
  store i64 %1, ptr %2, align 8
  %3 = getelementptr inbounds %Config, ptr %self, i32 0, i32 4
  %4 = load i8, ptr %3, align 1, !range !10, !noundef !3
  %_3 = trunc i8 %4 to i1
  br i1 %_3, label %bb1, label %bb4

bb4:                                              ; preds = %bb1, %start
  %_12.0 = load ptr, ptr %name, align 8, !nonnull !3, !align !4, !noundef !3
  %5 = getelementptr inbounds i8, ptr %name, i64 8
  %_12.1 = load i64, ptr %5, align 8, !noundef !3
; call std::env::var_os
  call void @_ZN3std3env6var_os17h9e760256a8818e6dE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 1 %_12.0, i64 %_12.1)
  ret void

bb1:                                              ; preds = %start
  store ptr %name, ptr %_0.i, align 8
  %6 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %6, align 8
  %7 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %9 = load ptr, ptr %8, align 8, !nonnull !3, !noundef !3
  %10 = insertvalue { ptr, ptr } poison, ptr %7, 0
  %11 = insertvalue { ptr, ptr } %10, ptr %9, 1
  %_10.0 = extractvalue { ptr, ptr } %11, 0
  %_10.1 = extractvalue { ptr, ptr } %11, 1
  %12 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_9, i64 0, i64 0
  store ptr %_10.0, ptr %12, align 8
  %13 = getelementptr inbounds i8, ptr %12, i64 8
  store ptr %_10.1, ptr %13, align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_270cb6ab8512145ec480ae697d2c38dd, i64 2, ptr align 8 %_9, i64 1)
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17hc62f134794ba50d8E(ptr align 8 %_5)
  br label %bb4
}

; pkg_config::Config::is_static
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN10pkg_config6Config9is_static17h4ed68957c7568424E(ptr align 8 %0, ptr align 1 %1, i64 %2) unnamed_addr #1 {
start:
  %_4 = alloca %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:652:36: 652:38}", align 8
  %name = alloca { ptr, i64 }, align 8
  %self = alloca ptr, align 8
  store ptr %0, ptr %self, align 8
  store ptr %1, ptr %name, align 8
  %3 = getelementptr inbounds i8, ptr %name, i64 8
  store i64 %2, ptr %3, align 8
  %4 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
  %5 = getelementptr inbounds %Config, ptr %4, i32 0, i32 7
  %_3 = load i8, ptr %5, align 4, !range !18, !noundef !3
  store ptr %self, ptr %_4, align 8
  %6 = getelementptr inbounds i8, ptr %_4, i64 8
  store ptr %name, ptr %6, align 8
  %7 = load ptr, ptr %_4, align 8, !nonnull !3, !align !5, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_4, i64 8
  %9 = load ptr, ptr %8, align 8, !nonnull !3, !align !5, !noundef !3
; call core::option::Option<T>::unwrap_or_else
  %_0 = call zeroext i1 @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17h40ba57506cb3d2fbE"(i8 %_3, ptr align 8 %7, ptr align 8 %9, ptr align 8 @alloc_1bee8dc5f02bbf7e86567ff5e81b10d3)
  ret i1 %_0
}

; pkg_config::Config::is_static::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN10pkg_config6Config9is_static28_$u7b$$u7b$closure$u7d$$u7d$17h378d7b903a74387eE"(ptr align 8 %0, ptr align 8 %1) unnamed_addr #0 {
start:
  %_1 = alloca %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:652:36: 652:38}", align 8
  store ptr %0, ptr %_1, align 8
  %2 = getelementptr inbounds i8, ptr %_1, i64 8
  store ptr %1, ptr %2, align 8
  %_2 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  %_3 = load ptr, ptr %_2, align 8, !nonnull !3, !align !5, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_1, i64 8
  %_4 = load ptr, ptr %3, align 8, !nonnull !3, !align !5, !noundef !3
  %_5.0 = load ptr, ptr %_4, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %_4, i64 8
  %_5.1 = load i64, ptr %4, align 8, !noundef !3
; call pkg_config::Config::infer_static
  %_0 = call zeroext i1 @_ZN10pkg_config6Config12infer_static17h18bb771158215d45E(ptr align 8 %_3, ptr align 1 %_5.0, i64 %_5.1)
  ret i1 %_0
}

; pkg_config::Config::run
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10pkg_config6Config3run17h4543d751671e2dd5E(ptr sret(%"core::result::Result<alloc::vec::Vec<u8>, Error>") align 8 %_0, ptr align 8 %0, ptr align 1 %1, i64 %2, ptr align 8 %3, i64 %4) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %_0.i7 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %5 = alloca { ptr, i32, [1 x i32] }, align 8
  %_54 = alloca i8, align 1
  %_53 = alloca i8, align 1
  %_52 = alloca i8, align 1
  %_46 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_42 = alloca %"core::fmt::Arguments<'_>", align 8
  %res1 = alloca %"alloc::string::String", align 8
  %_40 = alloca %Error, align 8
  %cause = alloca ptr, align 8
  %_38 = alloca %"std::process::Output", align 8
  %_35 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_31 = alloca %"core::fmt::Arguments<'_>", align 8
  %res = alloca %"alloc::string::String", align 8
  %_29 = alloca %Error, align 8
  %_28 = alloca %"alloc::vec::Vec<u8>", align 8
  %output = alloca %"std::process::Output", align 8
  %_20 = alloca %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:666:36: 666:39}", align 8
  %_18 = alloca %"core::result::Result<std::process::Output, std::io::error::Error>", align 8
  %_17 = alloca %"core::result::Result<std::process::Output, std::io::error::Error>", align 8
  %cmd = alloca %WrappedCommand, align 8
  %_12 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %exe = alloca %"std::ffi::os_str::OsString", align 8
  %_10 = alloca %"std::ffi::os_str::OsString", align 8
  %fallback_exe = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %pkg_config_exe = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %args = alloca { ptr, i64 }, align 8
  %name = alloca { ptr, i64 }, align 8
  %self = alloca ptr, align 8
  store ptr %0, ptr %self, align 8
  store ptr %1, ptr %name, align 8
  %6 = getelementptr inbounds i8, ptr %name, i64 8
  store i64 %2, ptr %6, align 8
  store ptr %3, ptr %args, align 8
  %7 = getelementptr inbounds i8, ptr %args, i64 8
  store i64 %4, ptr %7, align 8
  store i8 0, ptr %_54, align 1
  store i8 0, ptr %_53, align 1
  store i8 0, ptr %_52, align 1
  %_5 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
  store i8 1, ptr %_54, align 1
; call pkg_config::Config::targeted_env_var
  call void @_ZN10pkg_config6Config16targeted_env_var17h5f9a78f1045b5947E(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %pkg_config_exe, ptr align 8 %_5, ptr align 1 @alloc_5748da153c808379fa2fe46dcd8f2960, i64 10)
; invoke core::option::Option<T>::is_none
  %_8 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_none17h9904170c10c49a7eE"(ptr align 8 %pkg_config_exe)
          to label %bb2 unwind label %cleanup

bb35:                                             ; preds = %bb32, %bb33, %cleanup
  %8 = load i8, ptr %_54, align 1, !range !10, !noundef !3
  %9 = trunc i8 %8 to i1
  br i1 %9, label %bb34, label %bb29

cleanup:                                          ; preds = %bb3, %start
  %10 = landingpad { ptr, i32 }
          cleanup
  %11 = extractvalue { ptr, i32 } %10, 0
  %12 = extractvalue { ptr, i32 } %10, 1
  store ptr %11, ptr %5, align 8
  %13 = getelementptr inbounds i8, ptr %5, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb35

bb2:                                              ; preds = %start
  br i1 %_8, label %bb3, label %bb5

bb5:                                              ; preds = %bb2
  store i8 1, ptr %_53, align 1
  store i64 -9223372036854775808, ptr %fallback_exe, align 8
  br label %bb6

bb3:                                              ; preds = %bb2
; invoke <std::ffi::os_str::OsString as core::convert::From<&T>>::from
  invoke void @"_ZN79_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hd62ea4c8c72fff33E"(ptr sret(%"std::ffi::os_str::OsString") align 8 %_10, ptr align 1 @alloc_91d49819a83f3661916a45199fd45153, i64 7)
          to label %bb4 unwind label %cleanup

bb6:                                              ; preds = %bb4, %bb5
  store i8 0, ptr %_54, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_12, ptr align 8 %pkg_config_exe, i64 24, i1 false)
; invoke core::option::Option<T>::unwrap_or_else
  invoke void @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hb3088f3a29cd326cE"(ptr sret(%"std::ffi::os_str::OsString") align 8 %exe, ptr align 8 %_12, ptr align 8 @alloc_b91df323eb38b849bdb0fabd0c7b0f9d)
          to label %bb7 unwind label %cleanup2

bb4:                                              ; preds = %bb3
  store i8 1, ptr %_53, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %fallback_exe, ptr align 8 %_10, i64 24, i1 false)
  br label %bb6

bb33:                                             ; preds = %bb28, %cleanup2
  %14 = load i8, ptr %_53, align 1, !range !10, !noundef !3
  %15 = trunc i8 %14 to i1
  br i1 %15, label %bb32, label %bb35

cleanup2:                                         ; preds = %bb7, %bb6
  %16 = landingpad { ptr, i32 }
          cleanup
  %17 = extractvalue { ptr, i32 } %16, 0
  %18 = extractvalue { ptr, i32 } %16, 1
  store ptr %17, ptr %5, align 8
  %19 = getelementptr inbounds i8, ptr %5, i64 8
  store i32 %18, ptr %19, align 8
  br label %bb33

bb7:                                              ; preds = %bb6
  %_14 = load ptr, ptr %self, align 8, !nonnull !3, !align !5, !noundef !3
  %_15.0 = load ptr, ptr %name, align 8, !nonnull !3, !align !4, !noundef !3
  %20 = getelementptr inbounds i8, ptr %name, i64 8
  %_15.1 = load i64, ptr %20, align 8, !noundef !3
  %_16.0 = load ptr, ptr %args, align 8, !nonnull !3, !align !5, !noundef !3
  %21 = getelementptr inbounds i8, ptr %args, i64 8
  %_16.1 = load i64, ptr %21, align 8, !noundef !3
; invoke pkg_config::Config::command
  invoke void @_ZN10pkg_config6Config7command17h6f6ea28706d022f9E(ptr sret(%WrappedCommand) align 8 %cmd, ptr align 8 %_14, ptr align 8 %exe, ptr align 1 %_15.0, i64 %_15.1, ptr align 8 %_16.0, i64 %_16.1)
          to label %bb8 unwind label %cleanup2

bb8:                                              ; preds = %bb7
; invoke pkg_config::WrappedCommand::output
  invoke void @_ZN10pkg_config14WrappedCommand6output17he5d3f5d3366a1da6E(ptr sret(%"core::result::Result<std::process::Output, std::io::error::Error>") align 8 %_18, ptr align 8 %cmd)
          to label %bb9 unwind label %cleanup3

bb28:                                             ; preds = %cleanup3
; invoke core::ptr::drop_in_place<pkg_config::WrappedCommand>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$pkg_config..WrappedCommand$GT$17hc4440dabe0a285faE"(ptr align 8 %cmd) #28
          to label %bb33 unwind label %terminate

cleanup3:                                         ; preds = %bb9, %bb8
  %22 = landingpad { ptr, i32 }
          cleanup
  %23 = extractvalue { ptr, i32 } %22, 0
  %24 = extractvalue { ptr, i32 } %22, 1
  store ptr %23, ptr %5, align 8
  %25 = getelementptr inbounds i8, ptr %5, i64 8
  store i32 %24, ptr %25, align 8
  br label %bb28

bb9:                                              ; preds = %bb8
  store i8 0, ptr %_53, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_20, ptr align 8 %fallback_exe, i64 24, i1 false)
  %26 = getelementptr inbounds %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:666:36: 666:39}", ptr %_20, i32 0, i32 1
  store ptr %self, ptr %26, align 8
  %27 = getelementptr inbounds %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:666:36: 666:39}", ptr %_20, i32 0, i32 2
  store ptr %name, ptr %27, align 8
  %28 = getelementptr inbounds %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:666:36: 666:39}", ptr %_20, i32 0, i32 3
  store ptr %args, ptr %28, align 8
; invoke core::result::Result<T,E>::or_else
  invoke void @"_ZN4core6result19Result$LT$T$C$E$GT$7or_else17h82280b7ee0153875E"(ptr sret(%"core::result::Result<std::process::Output, std::io::error::Error>") align 8 %_17, ptr align 8 %_18, ptr align 8 %_20)
          to label %bb10 unwind label %cleanup3

bb10:                                             ; preds = %bb9
  %29 = load i64, ptr %_17, align 8, !range !12, !noundef !3
  %30 = icmp eq i64 %29, -9223372036854775808
  %_24 = select i1 %30, i64 1, i64 0
  %31 = icmp eq i64 %_24, 0
  br i1 %31, label %bb12, label %bb11

bb12:                                             ; preds = %bb10
  store i8 1, ptr %_52, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %output, ptr align 8 %_17, i64 56, i1 false)
  %_27 = getelementptr inbounds %"std::process::Output", ptr %output, i32 0, i32 2
; invoke std::process::ExitStatus::success
  %_26 = invoke zeroext i1 @_ZN3std7process10ExitStatus7success17h5522c19843a1d498E(ptr align 4 %_27)
          to label %bb13 unwind label %cleanup4

bb11:                                             ; preds = %bb10
  %32 = getelementptr inbounds %"core::result::Result<std::process::Output, std::io::error::Error>::Err", ptr %_17, i32 0, i32 1
  %33 = load ptr, ptr %32, align 8, !nonnull !3, !noundef !3
  store ptr %33, ptr %cause, align 8
  store ptr %cmd, ptr %_0.i, align 8
  %34 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN65_$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$3fmt17h9d42185a6365c9bcE", ptr %34, align 8
  %35 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %36 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %37 = load ptr, ptr %36, align 8, !nonnull !3, !noundef !3
  %38 = insertvalue { ptr, ptr } poison, ptr %35, 0
  %39 = insertvalue { ptr, ptr } %38, ptr %37, 1
  br label %bb20

bb26:                                             ; preds = %cleanup4
; invoke core::ptr::drop_in_place<std::process::Output>
  invoke void @"_ZN4core3ptr41drop_in_place$LT$std..process..Output$GT$17hcb669ac1de669d27E"(ptr align 8 %output) #28
          to label %bb27 unwind label %terminate

cleanup4:                                         ; preds = %bb17, %bb16, %bb12
  %40 = landingpad { ptr, i32 }
          cleanup
  %41 = extractvalue { ptr, i32 } %40, 0
  %42 = extractvalue { ptr, i32 } %40, 1
  store ptr %41, ptr %5, align 8
  %43 = getelementptr inbounds i8, ptr %5, i64 8
  store i32 %42, ptr %43, align 8
  br label %bb26

bb13:                                             ; preds = %bb12
  br i1 %_26, label %bb14, label %bb15

bb15:                                             ; preds = %bb13
  store ptr %cmd, ptr %_0.i7, align 8
  %44 = getelementptr inbounds i8, ptr %_0.i7, i64 8
  store ptr @"_ZN65_$LT$pkg_config..WrappedCommand$u20$as$u20$core..fmt..Display$GT$3fmt17h9d42185a6365c9bcE", ptr %44, align 8
  %45 = load ptr, ptr %_0.i7, align 8, !nonnull !3, !align !4, !noundef !3
  %46 = getelementptr inbounds i8, ptr %_0.i7, i64 8
  %47 = load ptr, ptr %46, align 8, !nonnull !3, !noundef !3
  %48 = insertvalue { ptr, ptr } poison, ptr %45, 0
  %49 = insertvalue { ptr, ptr } %48, ptr %47, 1
  br label %bb16

bb14:                                             ; preds = %bb13
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_28, ptr align 8 %output, i64 24, i1 false)
  %50 = getelementptr inbounds %"core::result::Result<alloc::vec::Vec<u8>, Error>::Ok", ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %50, ptr align 8 %_28, i64 24, i1 false)
  store i64 6, ptr %_0, align 8
  br label %bb19

bb16:                                             ; preds = %bb15
  %_36.0 = extractvalue { ptr, ptr } %49, 0
  %_36.1 = extractvalue { ptr, ptr } %49, 1
  %51 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_35, i64 0, i64 0
  store ptr %_36.0, ptr %51, align 8
  %52 = getelementptr inbounds i8, ptr %51, i64 8
  store ptr %_36.1, ptr %52, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_31, ptr align 8 @alloc_b99730e73100e73a81f4fbfe74b3821d, i64 1, ptr align 8 %_35, i64 1)
          to label %bb17 unwind label %cleanup4

bb17:                                             ; preds = %bb16
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res, ptr align 8 %_31)
          to label %bb18 unwind label %cleanup4

bb18:                                             ; preds = %bb17
  store i8 0, ptr %_52, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_38, ptr align 8 %output, i64 56, i1 false)
  %53 = getelementptr inbounds %"Error::Failure", ptr %_29, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %53, ptr align 8 %res, i64 24, i1 false)
  %54 = getelementptr inbounds %"Error::Failure", ptr %_29, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %54, ptr align 8 %_38, i64 56, i1 false)
  store i64 3, ptr %_29, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_29, i64 112, i1 false)
  br label %bb19

bb19:                                             ; preds = %bb14, %bb18
  %55 = load i8, ptr %_52, align 1, !range !10, !noundef !3
  %56 = trunc i8 %55 to i1
  br i1 %56, label %bb31, label %bb30

bb30:                                             ; preds = %bb31, %bb19
  store i8 0, ptr %_52, align 1
  store i8 0, ptr %_52, align 1
  br label %bb23

bb31:                                             ; preds = %bb19
  %57 = getelementptr inbounds %"std::process::Output", ptr %output, i32 0, i32 1
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %57)
          to label %bb30 unwind label %cleanup5

bb27:                                             ; preds = %bb25, %bb26, %cleanup5
; invoke core::ptr::drop_in_place<pkg_config::WrappedCommand>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$pkg_config..WrappedCommand$GT$17hc4440dabe0a285faE"(ptr align 8 %cmd) #28
          to label %bb29 unwind label %terminate

cleanup5:                                         ; preds = %bb31
  %58 = landingpad { ptr, i32 }
          cleanup
  %59 = extractvalue { ptr, i32 } %58, 0
  %60 = extractvalue { ptr, i32 } %58, 1
  store ptr %59, ptr %5, align 8
  %61 = getelementptr inbounds i8, ptr %5, i64 8
  store i32 %60, ptr %61, align 8
  br label %bb27

bb23:                                             ; preds = %bb22, %bb30
; call core::ptr::drop_in_place<pkg_config::WrappedCommand>
  call void @"_ZN4core3ptr47drop_in_place$LT$pkg_config..WrappedCommand$GT$17hc4440dabe0a285faE"(ptr align 8 %cmd)
  store i8 0, ptr %_53, align 1
  store i8 0, ptr %_54, align 1
  ret void

terminate:                                        ; preds = %bb34, %bb32, %bb28, %bb27, %bb25, %bb26
  %62 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %63 = extractvalue { ptr, i32 } %62, 0
  %64 = extractvalue { ptr, i32 } %62, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb25:                                             ; preds = %cleanup6
; invoke core::ptr::drop_in_place<std::io::error::Error>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h4cd2efc890f62cf8E"(ptr align 8 %cause) #28
          to label %bb27 unwind label %terminate

cleanup6:                                         ; preds = %bb21, %bb20
  %65 = landingpad { ptr, i32 }
          cleanup
  %66 = extractvalue { ptr, i32 } %65, 0
  %67 = extractvalue { ptr, i32 } %65, 1
  store ptr %66, ptr %5, align 8
  %68 = getelementptr inbounds i8, ptr %5, i64 8
  store i32 %67, ptr %68, align 8
  br label %bb25

bb20:                                             ; preds = %bb11
  %_47.0 = extractvalue { ptr, ptr } %39, 0
  %_47.1 = extractvalue { ptr, ptr } %39, 1
  %69 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_46, i64 0, i64 0
  store ptr %_47.0, ptr %69, align 8
  %70 = getelementptr inbounds i8, ptr %69, i64 8
  store ptr %_47.1, ptr %70, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_42, ptr align 8 @alloc_b99730e73100e73a81f4fbfe74b3821d, i64 1, ptr align 8 %_46, i64 1)
          to label %bb21 unwind label %cleanup6

bb21:                                             ; preds = %bb20
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res1, ptr align 8 %_42)
          to label %bb22 unwind label %cleanup6

bb22:                                             ; preds = %bb21
  %_49 = load ptr, ptr %cause, align 8, !nonnull !3, !noundef !3
  %71 = getelementptr inbounds %"Error::Command", ptr %_40, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %71, ptr align 8 %res1, i64 24, i1 false)
  %72 = getelementptr inbounds %"Error::Command", ptr %_40, i32 0, i32 1
  store ptr %_49, ptr %72, align 8
  store i64 2, ptr %_40, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_40, i64 112, i1 false)
  br label %bb23

bb29:                                             ; preds = %bb34, %bb35, %bb27
  %73 = load ptr, ptr %5, align 8, !noundef !3
  %74 = getelementptr inbounds i8, ptr %5, i64 8
  %75 = load i32, ptr %74, align 8, !noundef !3
  %76 = insertvalue { ptr, i32 } poison, ptr %73, 0
  %77 = insertvalue { ptr, i32 } %76, i32 %75, 1
  resume { ptr, i32 } %77

bb36:                                             ; No predecessors!
  unreachable

bb32:                                             ; preds = %bb33
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %fallback_exe) #28
          to label %bb35 unwind label %terminate

bb34:                                             ; preds = %bb35
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %pkg_config_exe) #28
          to label %bb29 unwind label %terminate
}

; pkg_config::Config::run::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config6Config3run28_$u7b$$u7b$closure$u7d$$u7d$17ha19dc70d8da719a3E"(ptr sret(%"std::ffi::os_str::OsString") align 8 %_0) unnamed_addr #0 {
start:
; call <std::ffi::os_str::OsString as core::convert::From<&T>>::from
  call void @"_ZN79_$LT$std..ffi..os_str..OsString$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hd62ea4c8c72fff33E"(ptr sret(%"std::ffi::os_str::OsString") align 8 %_0, ptr align 1 @alloc_fff2372cc172e469f328a240476556e2, i64 10)
  ret void
}

; pkg_config::Config::run::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config6Config3run28_$u7b$$u7b$closure$u7d$$u7d$17he5b6e4dc358715c3E"(ptr sret(%"core::result::Result<std::process::Output, std::io::error::Error>") align 8 %_0, ptr align 8 %_1, ptr %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_15 = alloca i8, align 1
  %_14 = alloca i8, align 1
  %_6 = alloca %WrappedCommand, align 8
  %exe = alloca %"std::ffi::os_str::OsString", align 8
  %e = alloca ptr, align 8
  store ptr %0, ptr %e, align 8
  store i8 0, ptr %_14, align 1
  store i8 0, ptr %_15, align 1
  store i8 1, ptr %_15, align 1
  store i8 1, ptr %_14, align 1
  %2 = load i64, ptr %_1, align 8, !range !12, !noundef !3
  %3 = icmp eq i64 %2, -9223372036854775808
  %_3 = select i1 %3, i64 0, i64 1
  %4 = icmp eq i64 %_3, 1
  br i1 %4, label %bb1, label %bb4

bb1:                                              ; preds = %start
  store i8 0, ptr %_15, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %exe, ptr align 8 %_1, i64 24, i1 false)
  %5 = getelementptr inbounds %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:666:36: 666:39}", ptr %_1, i32 0, i32 1
  %_8 = load ptr, ptr %5, align 8, !nonnull !3, !align !5, !noundef !3
  %_9 = load ptr, ptr %_8, align 8, !nonnull !3, !align !5, !noundef !3
  %6 = getelementptr inbounds %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:666:36: 666:39}", ptr %_1, i32 0, i32 2
  %_10 = load ptr, ptr %6, align 8, !nonnull !3, !align !5, !noundef !3
  %_11.0 = load ptr, ptr %_10, align 8, !nonnull !3, !align !4, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_10, i64 8
  %_11.1 = load i64, ptr %7, align 8, !noundef !3
  %8 = getelementptr inbounds %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:666:36: 666:39}", ptr %_1, i32 0, i32 3
  %_12 = load ptr, ptr %8, align 8, !nonnull !3, !align !5, !noundef !3
  %_13.0 = load ptr, ptr %_12, align 8, !nonnull !3, !align !5, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_12, i64 8
  %_13.1 = load i64, ptr %9, align 8, !noundef !3
; invoke pkg_config::Config::command
  invoke void @_ZN10pkg_config6Config7command17h6f6ea28706d022f9E(ptr sret(%WrappedCommand) align 8 %_6, ptr align 8 %_9, ptr align 8 %exe, ptr align 1 %_11.0, i64 %_11.1, ptr align 8 %_13.0, i64 %_13.1)
          to label %bb2 unwind label %cleanup

bb4:                                              ; preds = %start
  store i8 0, ptr %_14, align 1
  %_7 = load ptr, ptr %e, align 8, !nonnull !3, !noundef !3
  %10 = getelementptr inbounds %"core::result::Result<std::process::Output, std::io::error::Error>::Err", ptr %_0, i32 0, i32 1
  store ptr %_7, ptr %10, align 8
  store i64 -9223372036854775808, ptr %_0, align 8
  br label %bb5

bb8:                                              ; preds = %bb7, %cleanup
; invoke core::ptr::drop_in_place<std::io::error::Error>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h4cd2efc890f62cf8E"(ptr align 8 %e) #28
          to label %bb16 unwind label %terminate

cleanup:                                          ; preds = %bb3, %bb1
  %11 = landingpad { ptr, i32 }
          cleanup
  %12 = extractvalue { ptr, i32 } %11, 0
  %13 = extractvalue { ptr, i32 } %11, 1
  store ptr %12, ptr %1, align 8
  %14 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %13, ptr %14, align 8
  br label %bb8

bb2:                                              ; preds = %bb1
; invoke pkg_config::WrappedCommand::output
  invoke void @_ZN10pkg_config14WrappedCommand6output17he5d3f5d3366a1da6E(ptr sret(%"core::result::Result<std::process::Output, std::io::error::Error>") align 8 %_0, ptr align 8 %_6)
          to label %bb3 unwind label %cleanup1

bb7:                                              ; preds = %cleanup1
; invoke core::ptr::drop_in_place<pkg_config::WrappedCommand>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$pkg_config..WrappedCommand$GT$17hc4440dabe0a285faE"(ptr align 8 %_6) #28
          to label %bb8 unwind label %terminate

cleanup1:                                         ; preds = %bb2
  %15 = landingpad { ptr, i32 }
          cleanup
  %16 = extractvalue { ptr, i32 } %15, 0
  %17 = extractvalue { ptr, i32 } %15, 1
  store ptr %16, ptr %1, align 8
  %18 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %17, ptr %18, align 8
  br label %bb7

bb3:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<pkg_config::WrappedCommand>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$pkg_config..WrappedCommand$GT$17hc4440dabe0a285faE"(ptr align 8 %_6)
          to label %bb5 unwind label %cleanup

bb5:                                              ; preds = %bb4, %bb3
  %19 = load i8, ptr %_14, align 1, !range !10, !noundef !3
  %20 = trunc i8 %19 to i1
  br i1 %20, label %bb10, label %bb6

terminate:                                        ; preds = %bb15, %bb8, %bb7
  %21 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %22 = extractvalue { ptr, i32 } %21, 0
  %23 = extractvalue { ptr, i32 } %21, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb16:                                             ; preds = %cleanup2, %bb8
  %24 = load i64, ptr %_1, align 8, !range !12, !noundef !3
  %25 = icmp eq i64 %24, -9223372036854775808
  %_17 = select i1 %25, i64 0, i64 1
  %26 = icmp eq i64 %_17, 1
  br i1 %26, label %bb14, label %bb9

bb6:                                              ; preds = %bb10, %bb5
  %27 = load i64, ptr %_1, align 8, !range !12, !noundef !3
  %28 = icmp eq i64 %27, -9223372036854775808
  %_16 = select i1 %28, i64 0, i64 1
  %29 = icmp eq i64 %_16, 1
  br i1 %29, label %bb12, label %bb11

bb10:                                             ; preds = %bb5
; invoke core::ptr::drop_in_place<std::io::error::Error>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$std..io..error..Error$GT$17h4cd2efc890f62cf8E"(ptr align 8 %e)
          to label %bb6 unwind label %cleanup2

cleanup2:                                         ; preds = %bb10
  %30 = landingpad { ptr, i32 }
          cleanup
  %31 = extractvalue { ptr, i32 } %30, 0
  %32 = extractvalue { ptr, i32 } %30, 1
  store ptr %31, ptr %1, align 8
  %33 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %32, ptr %33, align 8
  br label %bb16

bb12:                                             ; preds = %bb6
  %34 = load i8, ptr %_15, align 1, !range !10, !noundef !3
  %35 = trunc i8 %34 to i1
  br i1 %35, label %bb13, label %bb11

bb11:                                             ; preds = %bb13, %bb12, %bb6
  ret void

bb13:                                             ; preds = %bb12
; call core::ptr::drop_in_place<std::ffi::os_str::OsString>
  call void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_1)
  br label %bb11

bb14:                                             ; preds = %bb16
  %36 = load i8, ptr %_15, align 1, !range !10, !noundef !3
  %37 = trunc i8 %36 to i1
  br i1 %37, label %bb15, label %bb9

bb9:                                              ; preds = %bb15, %bb14, %bb16
  %38 = load ptr, ptr %1, align 8, !noundef !3
  %39 = getelementptr inbounds i8, ptr %1, i64 8
  %40 = load i32, ptr %39, align 8, !noundef !3
  %41 = insertvalue { ptr, i32 } poison, ptr %38, 0
  %42 = insertvalue { ptr, i32 } %41, i32 %40, 1
  resume { ptr, i32 } %42

bb15:                                             ; preds = %bb14
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_1) #28
          to label %bb9 unwind label %terminate
}

; pkg_config::Config::command
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10pkg_config6Config7command17h6f6ea28706d022f9E(ptr sret(%WrappedCommand) align 8 %_0, ptr align 8 %self, ptr align 8 %exe, ptr align 1 %0, i64 %1, ptr align 8 %args.0, i64 %args.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %_0.i19 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i18 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i17 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i16 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i15 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i14 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i13 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_109 = alloca i8, align 1
  %_108 = alloca i8, align 1
  %_107 = alloca i8, align 1
  %_98 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_94 = alloca %"core::fmt::Arguments<'_>", align 8
  %res8 = alloca %"alloc::string::String", align 8
  %_92 = alloca %"alloc::string::String", align 8
  %version7 = alloca ptr, align 8
  %_83 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_79 = alloca %"core::fmt::Arguments<'_>", align 8
  %res6 = alloca %"alloc::string::String", align 8
  %_77 = alloca %"alloc::string::String", align 8
  %version5 = alloca ptr, align 8
  %_67 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_63 = alloca %"core::fmt::Arguments<'_>", align 8
  %res4 = alloca %"alloc::string::String", align 8
  %_61 = alloca %"alloc::string::String", align 8
  %version3 = alloca ptr, align 8
  %_52 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_48 = alloca %"core::fmt::Arguments<'_>", align 8
  %res = alloca %"alloc::string::String", align 8
  %_46 = alloca %"alloc::string::String", align 8
  %version = alloca ptr, align 8
  %value2 = alloca %"std::ffi::os_str::OsString", align 8
  %_26 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %value1 = alloca %"std::ffi::os_str::OsString", align 8
  %_20 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %value = alloca %"std::ffi::os_str::OsString", align 8
  %_14 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %cmd = alloca %WrappedCommand, align 8
  %name = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %name, align 8
  %3 = getelementptr inbounds i8, ptr %name, i64 8
  store i64 %1, ptr %3, align 8
  store i8 0, ptr %_107, align 1
  store i8 0, ptr %_108, align 1
  store i8 0, ptr %_109, align 1
; call pkg_config::WrappedCommand::new
  call void @_ZN10pkg_config14WrappedCommand3new17hfa17609c66888116E(ptr sret(%WrappedCommand) align 8 %cmd, ptr align 8 %exe)
  %_7.0 = load ptr, ptr %name, align 8, !nonnull !3, !align !4, !noundef !3
  %4 = getelementptr inbounds i8, ptr %name, i64 8
  %_7.1 = load i64, ptr %4, align 8, !noundef !3
; invoke pkg_config::Config::is_static
  %_6 = invoke zeroext i1 @_ZN10pkg_config6Config9is_static17h4ed68957c7568424E(ptr align 8 %self, ptr align 1 %_7.0, i64 %_7.1)
          to label %bb2 unwind label %cleanup

bb48:                                             ; preds = %bb44, %bb45, %bb46, %bb47, %cleanup
; invoke core::ptr::drop_in_place<pkg_config::WrappedCommand>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$pkg_config..WrappedCommand$GT$17hc4440dabe0a285faE"(ptr align 8 %cmd) #28
          to label %bb49 unwind label %terminate

cleanup:                                          ; preds = %bb42, %bb40, %bb39, %bb36, %bb34, %bb33, %bb29, %bb27, %bb26, %bb23, %bb21, %bb20, %bb16, %bb15, %bb13, %bb60, %bb12, %bb54, %bb56, %bb10, %bb50, %bb52, %bb8, %bb6, %bb5, %bb4, %bb3, %start
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %2, align 8
  %8 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb48

bb2:                                              ; preds = %start
  br i1 %_6, label %bb3, label %bb4

bb4:                                              ; preds = %bb62, %bb2
; invoke pkg_config::WrappedCommand::args
  %_11 = invoke align 8 ptr @_ZN10pkg_config14WrappedCommand4args17h64180fe628f8e340E(ptr align 8 %cmd, ptr align 8 %args.0, i64 %args.1)
          to label %bb5 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke pkg_config::WrappedCommand::arg
  %_8 = invoke align 8 ptr @_ZN10pkg_config14WrappedCommand3arg17h993a63807081a612E(ptr align 8 %cmd, ptr align 1 @alloc_62de048d6babf578afca503bb0124468, i64 8)
          to label %bb62 unwind label %cleanup

bb62:                                             ; preds = %bb3
  br label %bb4

bb5:                                              ; preds = %bb4
  %_13 = getelementptr inbounds %Config, ptr %self, i32 0, i32 2
; invoke pkg_config::WrappedCommand::args
  %_10 = invoke align 8 ptr @_ZN10pkg_config14WrappedCommand4args17heafb9dba2b7181a5E(ptr align 8 %_11, ptr align 8 %_13)
          to label %bb6 unwind label %cleanup

bb6:                                              ; preds = %bb5
; invoke pkg_config::Config::targeted_env_var
  invoke void @_ZN10pkg_config6Config16targeted_env_var17h5f9a78f1045b5947E(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_14, ptr align 8 %self, ptr align 1 @alloc_55cf2f91542826791c64c291a3d46481, i64 15)
          to label %bb7 unwind label %cleanup

bb7:                                              ; preds = %bb6
  store i8 1, ptr %_107, align 1
  %9 = load i64, ptr %_14, align 8, !range !12, !noundef !3
  %10 = icmp eq i64 %9, -9223372036854775808
  %_16 = select i1 %10, i64 0, i64 1
  %11 = icmp eq i64 %_16, 1
  br i1 %11, label %bb8, label %bb53

bb8:                                              ; preds = %bb7
  store i8 0, ptr %_107, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %value, ptr align 8 %_14, i64 24, i1 false)
; invoke pkg_config::WrappedCommand::env
  %_18 = invoke align 8 ptr @_ZN10pkg_config14WrappedCommand3env17h44763e7bbe0fe552E(ptr align 8 %cmd, ptr align 1 @alloc_55cf2f91542826791c64c291a3d46481, i64 15, ptr align 8 %value)
          to label %bb63 unwind label %cleanup

bb53:                                             ; preds = %bb63, %bb7
  %12 = load i64, ptr %_14, align 8, !range !12, !noundef !3
  %13 = icmp eq i64 %12, -9223372036854775808
  %_110 = select i1 %13, i64 0, i64 1
  %14 = icmp eq i64 %_110, 1
  br i1 %14, label %bb51, label %bb50

bb63:                                             ; preds = %bb8
  br label %bb53

bb51:                                             ; preds = %bb53
  %15 = load i8, ptr %_107, align 1, !range !10, !noundef !3
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb52, label %bb50

bb50:                                             ; preds = %bb52, %bb51, %bb53
  store i8 0, ptr %_107, align 1
; invoke pkg_config::Config::targeted_env_var
  invoke void @_ZN10pkg_config6Config16targeted_env_var17h5f9a78f1045b5947E(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_20, ptr align 8 %self, ptr align 1 @alloc_890f1fcc5541505a6e3a5224fd1a00ec, i64 17)
          to label %bb9 unwind label %cleanup

bb52:                                             ; preds = %bb51
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_14)
          to label %bb50 unwind label %cleanup

bb9:                                              ; preds = %bb50
  store i8 1, ptr %_108, align 1
  %17 = load i64, ptr %_20, align 8, !range !12, !noundef !3
  %18 = icmp eq i64 %17, -9223372036854775808
  %_22 = select i1 %18, i64 0, i64 1
  %19 = icmp eq i64 %_22, 1
  br i1 %19, label %bb10, label %bb57

bb10:                                             ; preds = %bb9
  store i8 0, ptr %_108, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %value1, ptr align 8 %_20, i64 24, i1 false)
; invoke pkg_config::WrappedCommand::env
  %_24 = invoke align 8 ptr @_ZN10pkg_config14WrappedCommand3env17h44763e7bbe0fe552E(ptr align 8 %cmd, ptr align 1 @alloc_890f1fcc5541505a6e3a5224fd1a00ec, i64 17, ptr align 8 %value1)
          to label %bb64 unwind label %cleanup

bb57:                                             ; preds = %bb64, %bb9
  %20 = load i64, ptr %_20, align 8, !range !12, !noundef !3
  %21 = icmp eq i64 %20, -9223372036854775808
  %_111 = select i1 %21, i64 0, i64 1
  %22 = icmp eq i64 %_111, 1
  br i1 %22, label %bb55, label %bb54

bb64:                                             ; preds = %bb10
  br label %bb57

bb55:                                             ; preds = %bb57
  %23 = load i8, ptr %_108, align 1, !range !10, !noundef !3
  %24 = trunc i8 %23 to i1
  br i1 %24, label %bb56, label %bb54

bb54:                                             ; preds = %bb56, %bb55, %bb57
  store i8 0, ptr %_108, align 1
; invoke pkg_config::Config::targeted_env_var
  invoke void @_ZN10pkg_config6Config16targeted_env_var17h5f9a78f1045b5947E(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_26, ptr align 8 %self, ptr align 1 @alloc_d28f1d088998a251cf4ef2f20418d922, i64 22)
          to label %bb11 unwind label %cleanup

bb56:                                             ; preds = %bb55
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_20)
          to label %bb54 unwind label %cleanup

bb11:                                             ; preds = %bb54
  store i8 1, ptr %_109, align 1
  %25 = load i64, ptr %_26, align 8, !range !12, !noundef !3
  %26 = icmp eq i64 %25, -9223372036854775808
  %_28 = select i1 %26, i64 0, i64 1
  %27 = icmp eq i64 %_28, 1
  br i1 %27, label %bb12, label %bb61

bb12:                                             ; preds = %bb11
  store i8 0, ptr %_109, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %value2, ptr align 8 %_26, i64 24, i1 false)
; invoke pkg_config::WrappedCommand::env
  %_30 = invoke align 8 ptr @_ZN10pkg_config14WrappedCommand3env17h44763e7bbe0fe552E(ptr align 8 %cmd, ptr align 1 @alloc_d28f1d088998a251cf4ef2f20418d922, i64 22, ptr align 8 %value2)
          to label %bb65 unwind label %cleanup

bb61:                                             ; preds = %bb65, %bb11
  %28 = load i64, ptr %_26, align 8, !range !12, !noundef !3
  %29 = icmp eq i64 %28, -9223372036854775808
  %_112 = select i1 %29, i64 0, i64 1
  %30 = icmp eq i64 %_112, 1
  br i1 %30, label %bb59, label %bb58

bb65:                                             ; preds = %bb12
  br label %bb61

bb59:                                             ; preds = %bb61
  %31 = load i8, ptr %_109, align 1, !range !10, !noundef !3
  %32 = trunc i8 %31 to i1
  br i1 %32, label %bb60, label %bb58

bb58:                                             ; preds = %bb60, %bb59, %bb61
  store i8 0, ptr %_109, align 1
  %33 = getelementptr inbounds %Config, ptr %self, i32 0, i32 5
  %34 = load i8, ptr %33, align 2, !range !10, !noundef !3
  %_32 = trunc i8 %34 to i1
  br i1 %_32, label %bb13, label %bb14

bb60:                                             ; preds = %bb59
; invoke core::ptr::drop_in_place<std::ffi::os_str::OsString>
  invoke void @"_ZN4core3ptr47drop_in_place$LT$std..ffi..os_str..OsString$GT$17h855db5cea175f234E"(ptr align 8 %_26)
          to label %bb58 unwind label %cleanup

bb14:                                             ; preds = %bb66, %bb58
  %35 = getelementptr inbounds %Config, ptr %self, i32 0, i32 6
  %36 = load i8, ptr %35, align 1, !range !10, !noundef !3
  %_35 = trunc i8 %36 to i1
  br i1 %_35, label %bb15, label %bb16

bb13:                                             ; preds = %bb58
; invoke pkg_config::WrappedCommand::env
  %_33 = invoke align 8 ptr @_ZN10pkg_config14WrappedCommand3env17h7097dd2f59f2f7a1E(ptr align 8 %cmd, ptr align 1 @alloc_d30df8ce94e6ab3f43a58c55883a0a26, i64 28, ptr align 1 @alloc_26f643e647dbf77f42e670b3488e8932, i64 1)
          to label %bb66 unwind label %cleanup

bb66:                                             ; preds = %bb13
  br label %bb14

bb16:                                             ; preds = %bb67, %bb14
  %_40.0 = load ptr, ptr %name, align 8, !nonnull !3, !align !4, !noundef !3
  %37 = getelementptr inbounds i8, ptr %name, i64 8
  %_40.1 = load i64, ptr %37, align 8, !noundef !3
; invoke pkg_config::WrappedCommand::arg
  %_38 = invoke align 8 ptr @_ZN10pkg_config14WrappedCommand3arg17h993a63807081a612E(ptr align 8 %cmd, ptr align 1 %_40.0, i64 %_40.1)
          to label %bb17 unwind label %cleanup

bb15:                                             ; preds = %bb14
; invoke pkg_config::WrappedCommand::env
  %_36 = invoke align 8 ptr @_ZN10pkg_config14WrappedCommand3env17h7097dd2f59f2f7a1E(ptr align 8 %cmd, ptr align 1 @alloc_47a71d96e636b027e3bdf58ff73cb59b, i64 30, ptr align 1 @alloc_26f643e647dbf77f42e670b3488e8932, i64 1)
          to label %bb67 unwind label %cleanup

bb67:                                             ; preds = %bb15
  br label %bb16

bb17:                                             ; preds = %bb16
  %_41 = load i64, ptr %self, align 8, !range !11, !noundef !3
  switch i64 %_41, label %bb30 [
    i64 0, label %bb18
    i64 1, label %bb24
  ]

bb30:                                             ; preds = %bb29, %bb23, %bb17
  %38 = getelementptr inbounds %Config, ptr %self, i32 0, i32 1
  %_72 = load i64, ptr %38, align 8, !range !11, !noundef !3
  switch i64 %_72, label %bb43 [
    i64 0, label %bb31
    i64 1, label %bb37
  ]

bb18:                                             ; preds = %bb17
  %39 = getelementptr inbounds %"core::ops::range::Bound<alloc::string::String>::Included", ptr %self, i32 0, i32 1
  store ptr %39, ptr %version, align 8
  store ptr %name, ptr %_0.i15, align 8
  %40 = getelementptr inbounds i8, ptr %_0.i15, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %40, align 8
  %41 = load ptr, ptr %_0.i15, align 8, !nonnull !3, !align !4, !noundef !3
  %42 = getelementptr inbounds i8, ptr %_0.i15, i64 8
  %43 = load ptr, ptr %42, align 8, !nonnull !3, !noundef !3
  %44 = insertvalue { ptr, ptr } poison, ptr %41, 0
  %45 = insertvalue { ptr, ptr } %44, ptr %43, 1
  br label %bb19

bb24:                                             ; preds = %bb17
  %46 = getelementptr inbounds %"core::ops::range::Bound<alloc::string::String>::Excluded", ptr %self, i32 0, i32 1
  store ptr %46, ptr %version3, align 8
  store ptr %name, ptr %_0.i14, align 8
  %47 = getelementptr inbounds i8, ptr %_0.i14, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %47, align 8
  %48 = load ptr, ptr %_0.i14, align 8, !nonnull !3, !align !4, !noundef !3
  %49 = getelementptr inbounds i8, ptr %_0.i14, i64 8
  %50 = load ptr, ptr %49, align 8, !nonnull !3, !noundef !3
  %51 = insertvalue { ptr, ptr } poison, ptr %48, 0
  %52 = insertvalue { ptr, ptr } %51, ptr %50, 1
  br label %bb25

bb19:                                             ; preds = %bb18
  %_53.0 = extractvalue { ptr, ptr } %45, 0
  %_53.1 = extractvalue { ptr, ptr } %45, 1
  store ptr %version, ptr %_0.i19, align 8
  %53 = getelementptr inbounds i8, ptr %_0.i19, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h28e6efe3818a3709E", ptr %53, align 8
  %54 = load ptr, ptr %_0.i19, align 8, !nonnull !3, !align !4, !noundef !3
  %55 = getelementptr inbounds i8, ptr %_0.i19, i64 8
  %56 = load ptr, ptr %55, align 8, !nonnull !3, !noundef !3
  %57 = insertvalue { ptr, ptr } poison, ptr %54, 0
  %58 = insertvalue { ptr, ptr } %57, ptr %56, 1
  br label %bb20

bb20:                                             ; preds = %bb19
  %_55.0 = extractvalue { ptr, ptr } %58, 0
  %_55.1 = extractvalue { ptr, ptr } %58, 1
  %59 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_52, i64 0, i64 0
  store ptr %_53.0, ptr %59, align 8
  %60 = getelementptr inbounds i8, ptr %59, i64 8
  store ptr %_53.1, ptr %60, align 8
  %61 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_52, i64 0, i64 1
  store ptr %_55.0, ptr %61, align 8
  %62 = getelementptr inbounds i8, ptr %61, i64 8
  store ptr %_55.1, ptr %62, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_48, ptr align 8 @alloc_a23b3b72c523b0d1fa2e132f872b693b, i64 2, ptr align 8 %_52, i64 2)
          to label %bb21 unwind label %cleanup

bb21:                                             ; preds = %bb20
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res, ptr align 8 %_48)
          to label %bb22 unwind label %cleanup

bb22:                                             ; preds = %bb21
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_46, ptr align 8 %res, i64 24, i1 false)
; invoke pkg_config::WrappedCommand::arg
  %_43 = invoke align 8 ptr @_ZN10pkg_config14WrappedCommand3arg17h44bd66f2a1b8926cE(ptr align 8 %cmd, ptr align 8 %_46)
          to label %bb23 unwind label %cleanup9

bb47:                                             ; preds = %cleanup9
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_46) #28
          to label %bb48 unwind label %terminate

cleanup9:                                         ; preds = %bb22
  %63 = landingpad { ptr, i32 }
          cleanup
  %64 = extractvalue { ptr, i32 } %63, 0
  %65 = extractvalue { ptr, i32 } %63, 1
  store ptr %64, ptr %2, align 8
  %66 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %65, ptr %66, align 8
  br label %bb47

bb23:                                             ; preds = %bb22
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_46)
          to label %bb30 unwind label %cleanup

terminate:                                        ; preds = %bb48, %bb44, %bb45, %bb46, %bb47
  %67 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %68 = extractvalue { ptr, i32 } %67, 0
  %69 = extractvalue { ptr, i32 } %67, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb25:                                             ; preds = %bb24
  %_68.0 = extractvalue { ptr, ptr } %52, 0
  %_68.1 = extractvalue { ptr, ptr } %52, 1
  store ptr %version3, ptr %_0.i18, align 8
  %70 = getelementptr inbounds i8, ptr %_0.i18, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h28e6efe3818a3709E", ptr %70, align 8
  %71 = load ptr, ptr %_0.i18, align 8, !nonnull !3, !align !4, !noundef !3
  %72 = getelementptr inbounds i8, ptr %_0.i18, i64 8
  %73 = load ptr, ptr %72, align 8, !nonnull !3, !noundef !3
  %74 = insertvalue { ptr, ptr } poison, ptr %71, 0
  %75 = insertvalue { ptr, ptr } %74, ptr %73, 1
  br label %bb26

bb26:                                             ; preds = %bb25
  %_70.0 = extractvalue { ptr, ptr } %75, 0
  %_70.1 = extractvalue { ptr, ptr } %75, 1
  %76 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_67, i64 0, i64 0
  store ptr %_68.0, ptr %76, align 8
  %77 = getelementptr inbounds i8, ptr %76, i64 8
  store ptr %_68.1, ptr %77, align 8
  %78 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_67, i64 0, i64 1
  store ptr %_70.0, ptr %78, align 8
  %79 = getelementptr inbounds i8, ptr %78, i64 8
  store ptr %_70.1, ptr %79, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_63, ptr align 8 @alloc_2a960342df3a47f7c6d3b1eb0df99ce6, i64 2, ptr align 8 %_67, i64 2)
          to label %bb27 unwind label %cleanup

bb27:                                             ; preds = %bb26
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res4, ptr align 8 %_63)
          to label %bb28 unwind label %cleanup

bb28:                                             ; preds = %bb27
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_61, ptr align 8 %res4, i64 24, i1 false)
; invoke pkg_config::WrappedCommand::arg
  %_58 = invoke align 8 ptr @_ZN10pkg_config14WrappedCommand3arg17h44bd66f2a1b8926cE(ptr align 8 %cmd, ptr align 8 %_61)
          to label %bb29 unwind label %cleanup10

bb46:                                             ; preds = %cleanup10
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_61) #28
          to label %bb48 unwind label %terminate

cleanup10:                                        ; preds = %bb28
  %80 = landingpad { ptr, i32 }
          cleanup
  %81 = extractvalue { ptr, i32 } %80, 0
  %82 = extractvalue { ptr, i32 } %80, 1
  store ptr %81, ptr %2, align 8
  %83 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %82, ptr %83, align 8
  br label %bb46

bb29:                                             ; preds = %bb28
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_61)
          to label %bb30 unwind label %cleanup

bb43:                                             ; preds = %bb42, %bb36, %bb30
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %cmd, i64 280, i1 false)
  ret void

bb31:                                             ; preds = %bb30
  %84 = getelementptr inbounds %Config, ptr %self, i32 0, i32 1
  %85 = getelementptr inbounds %"core::ops::range::Bound<alloc::string::String>::Included", ptr %84, i32 0, i32 1
  store ptr %85, ptr %version5, align 8
  store ptr %name, ptr %_0.i13, align 8
  %86 = getelementptr inbounds i8, ptr %_0.i13, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %86, align 8
  %87 = load ptr, ptr %_0.i13, align 8, !nonnull !3, !align !4, !noundef !3
  %88 = getelementptr inbounds i8, ptr %_0.i13, i64 8
  %89 = load ptr, ptr %88, align 8, !nonnull !3, !noundef !3
  %90 = insertvalue { ptr, ptr } poison, ptr %87, 0
  %91 = insertvalue { ptr, ptr } %90, ptr %89, 1
  br label %bb32

bb37:                                             ; preds = %bb30
  %92 = getelementptr inbounds %Config, ptr %self, i32 0, i32 1
  %93 = getelementptr inbounds %"core::ops::range::Bound<alloc::string::String>::Excluded", ptr %92, i32 0, i32 1
  store ptr %93, ptr %version7, align 8
  store ptr %name, ptr %_0.i, align 8
  %94 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %94, align 8
  %95 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %96 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %97 = load ptr, ptr %96, align 8, !nonnull !3, !noundef !3
  %98 = insertvalue { ptr, ptr } poison, ptr %95, 0
  %99 = insertvalue { ptr, ptr } %98, ptr %97, 1
  br label %bb38

bb32:                                             ; preds = %bb31
  %_84.0 = extractvalue { ptr, ptr } %91, 0
  %_84.1 = extractvalue { ptr, ptr } %91, 1
  store ptr %version5, ptr %_0.i17, align 8
  %100 = getelementptr inbounds i8, ptr %_0.i17, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h28e6efe3818a3709E", ptr %100, align 8
  %101 = load ptr, ptr %_0.i17, align 8, !nonnull !3, !align !4, !noundef !3
  %102 = getelementptr inbounds i8, ptr %_0.i17, i64 8
  %103 = load ptr, ptr %102, align 8, !nonnull !3, !noundef !3
  %104 = insertvalue { ptr, ptr } poison, ptr %101, 0
  %105 = insertvalue { ptr, ptr } %104, ptr %103, 1
  br label %bb33

bb33:                                             ; preds = %bb32
  %_86.0 = extractvalue { ptr, ptr } %105, 0
  %_86.1 = extractvalue { ptr, ptr } %105, 1
  %106 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_83, i64 0, i64 0
  store ptr %_84.0, ptr %106, align 8
  %107 = getelementptr inbounds i8, ptr %106, i64 8
  store ptr %_84.1, ptr %107, align 8
  %108 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_83, i64 0, i64 1
  store ptr %_86.0, ptr %108, align 8
  %109 = getelementptr inbounds i8, ptr %108, i64 8
  store ptr %_86.1, ptr %109, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_79, ptr align 8 @alloc_429f8bc725bd8820dd34e8f9f42ffcb9, i64 2, ptr align 8 %_83, i64 2)
          to label %bb34 unwind label %cleanup

bb34:                                             ; preds = %bb33
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res6, ptr align 8 %_79)
          to label %bb35 unwind label %cleanup

bb35:                                             ; preds = %bb34
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_77, ptr align 8 %res6, i64 24, i1 false)
; invoke pkg_config::WrappedCommand::arg
  %_74 = invoke align 8 ptr @_ZN10pkg_config14WrappedCommand3arg17h44bd66f2a1b8926cE(ptr align 8 %cmd, ptr align 8 %_77)
          to label %bb36 unwind label %cleanup11

bb45:                                             ; preds = %cleanup11
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_77) #28
          to label %bb48 unwind label %terminate

cleanup11:                                        ; preds = %bb35
  %110 = landingpad { ptr, i32 }
          cleanup
  %111 = extractvalue { ptr, i32 } %110, 0
  %112 = extractvalue { ptr, i32 } %110, 1
  store ptr %111, ptr %2, align 8
  %113 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %112, ptr %113, align 8
  br label %bb45

bb36:                                             ; preds = %bb35
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_77)
          to label %bb43 unwind label %cleanup

bb38:                                             ; preds = %bb37
  %_99.0 = extractvalue { ptr, ptr } %99, 0
  %_99.1 = extractvalue { ptr, ptr } %99, 1
  store ptr %version7, ptr %_0.i16, align 8
  %114 = getelementptr inbounds i8, ptr %_0.i16, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h28e6efe3818a3709E", ptr %114, align 8
  %115 = load ptr, ptr %_0.i16, align 8, !nonnull !3, !align !4, !noundef !3
  %116 = getelementptr inbounds i8, ptr %_0.i16, i64 8
  %117 = load ptr, ptr %116, align 8, !nonnull !3, !noundef !3
  %118 = insertvalue { ptr, ptr } poison, ptr %115, 0
  %119 = insertvalue { ptr, ptr } %118, ptr %117, 1
  br label %bb39

bb39:                                             ; preds = %bb38
  %_101.0 = extractvalue { ptr, ptr } %119, 0
  %_101.1 = extractvalue { ptr, ptr } %119, 1
  %120 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_98, i64 0, i64 0
  store ptr %_99.0, ptr %120, align 8
  %121 = getelementptr inbounds i8, ptr %120, i64 8
  store ptr %_99.1, ptr %121, align 8
  %122 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_98, i64 0, i64 1
  store ptr %_101.0, ptr %122, align 8
  %123 = getelementptr inbounds i8, ptr %122, i64 8
  store ptr %_101.1, ptr %123, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_94, ptr align 8 @alloc_03b47ee4f1c38a9883d7320b664fa408, i64 2, ptr align 8 %_98, i64 2)
          to label %bb40 unwind label %cleanup

bb40:                                             ; preds = %bb39
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res8, ptr align 8 %_94)
          to label %bb41 unwind label %cleanup

bb41:                                             ; preds = %bb40
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_92, ptr align 8 %res8, i64 24, i1 false)
; invoke pkg_config::WrappedCommand::arg
  %_89 = invoke align 8 ptr @_ZN10pkg_config14WrappedCommand3arg17h44bd66f2a1b8926cE(ptr align 8 %cmd, ptr align 8 %_92)
          to label %bb42 unwind label %cleanup12

bb44:                                             ; preds = %cleanup12
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_92) #28
          to label %bb48 unwind label %terminate

cleanup12:                                        ; preds = %bb41
  %124 = landingpad { ptr, i32 }
          cleanup
  %125 = extractvalue { ptr, i32 } %124, 0
  %126 = extractvalue { ptr, i32 } %124, 1
  store ptr %125, ptr %2, align 8
  %127 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %126, ptr %127, align 8
  br label %bb44

bb42:                                             ; preds = %bb41
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_92)
          to label %bb43 unwind label %cleanup

bb49:                                             ; preds = %bb48
  %128 = load ptr, ptr %2, align 8, !noundef !3
  %129 = getelementptr inbounds i8, ptr %2, i64 8
  %130 = load i32, ptr %129, align 8, !noundef !3
  %131 = insertvalue { ptr, i32 } poison, ptr %128, 0
  %132 = insertvalue { ptr, i32 } %131, i32 %130, 1
  resume { ptr, i32 } %132
}

; pkg_config::Config::print_metadata
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10pkg_config6Config14print_metadata17hb3a7412ee808451aE(ptr align 8 %self, ptr align 1 %0, i64 %1) unnamed_addr #1 {
start:
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_9 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_5 = alloca %"core::fmt::Arguments<'_>", align 8
  %s = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %s, align 8
  %2 = getelementptr inbounds i8, ptr %s, i64 8
  store i64 %1, ptr %2, align 8
  %3 = getelementptr inbounds %Config, ptr %self, i32 0, i32 3
  %4 = load i8, ptr %3, align 8, !range !10, !noundef !3
  %_3 = trunc i8 %4 to i1
  br i1 %_3, label %bb1, label %bb4

bb4:                                              ; preds = %bb1, %start
  ret void

bb1:                                              ; preds = %start
  store ptr %s, ptr %_0.i, align 8
  %5 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %5, align 8
  %6 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %8 = load ptr, ptr %7, align 8, !nonnull !3, !noundef !3
  %9 = insertvalue { ptr, ptr } poison, ptr %6, 0
  %10 = insertvalue { ptr, ptr } %9, ptr %8, 1
  %_10.0 = extractvalue { ptr, ptr } %10, 0
  %_10.1 = extractvalue { ptr, ptr } %10, 1
  %11 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_9, i64 0, i64 0
  store ptr %_10.0, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store ptr %_10.1, ptr %12, align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_5, ptr align 8 @alloc_b9fd85633ac503155b5c779ebd1fe115, i64 2, ptr align 8 %_9, i64 1)
; call std::io::stdio::_print
  call void @_ZN3std2io5stdio6_print17hc62f134794ba50d8E(ptr align 8 %_5)
  br label %bb4
}

; pkg_config::Config::infer_static
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN10pkg_config6Config12infer_static17h18bb771158215d45E(ptr align 8 %self, ptr align 1 %name.0, i64 %name.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %_0.i8 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_38 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %_34 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %_29 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_25 = alloca %"core::fmt::Arguments<'_>", align 8
  %res1 = alloca %"alloc::string::String", align 8
  %_23 = alloca %"alloc::string::String", align 8
  %_20 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %_15 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_11 = alloca %"core::fmt::Arguments<'_>", align 8
  %res = alloca %"alloc::string::String", align 8
  %_9 = alloca %"alloc::string::String", align 8
  %_6 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %name = alloca %"alloc::string::String", align 8
  %_0 = alloca i8, align 1
; call pkg_config::envify
  call void @_ZN10pkg_config6envify17hd06c80ec37905a11E(ptr sret(%"alloc::string::String") align 8 %name, ptr align 1 %name.0, i64 %name.1)
  store ptr %name, ptr %_0.i8, align 8
  %1 = getelementptr inbounds i8, ptr %_0.i8, i64 8
  store ptr @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E", ptr %1, align 8
  %2 = load ptr, ptr %_0.i8, align 8, !nonnull !3, !align !4, !noundef !3
  %3 = getelementptr inbounds i8, ptr %_0.i8, i64 8
  %4 = load ptr, ptr %3, align 8, !nonnull !3, !noundef !3
  %5 = insertvalue { ptr, ptr } poison, ptr %2, 0
  %6 = insertvalue { ptr, ptr } %5, ptr %4, 1
  br label %bb2

bb46:                                             ; preds = %bb45, %bb43, %bb41, %bb40, %cleanup
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %name) #28
          to label %bb47 unwind label %terminate

cleanup:                                          ; preds = %bb9, %bb21, %bb28, %bb34, %bb36, %bb31, %bb30, %bb25, %bb24, %bb15, %bb14, %bb12, %bb3, %bb2
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %0, align 8
  %10 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb46

bb2:                                              ; preds = %start
  %_16.0 = extractvalue { ptr, ptr } %6, 0
  %_16.1 = extractvalue { ptr, ptr } %6, 1
  %11 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_15, i64 0, i64 0
  store ptr %_16.0, ptr %11, align 8
  %12 = getelementptr inbounds i8, ptr %11, i64 8
  store ptr %_16.1, ptr %12, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_11, ptr align 8 @alloc_80f3a84adb80184039fae300fdd3be11, i64 2, ptr align 8 %_15, i64 1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res, ptr align 8 %_11)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_9, ptr align 8 %res, i64 24, i1 false)
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %13 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %_9)
          to label %bb5 unwind label %cleanup2

bb45:                                             ; preds = %bb44, %cleanup2
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_9) #28
          to label %bb46 unwind label %terminate

cleanup2:                                         ; preds = %bb8, %bb11, %bb5, %bb4
  %14 = landingpad { ptr, i32 }
          cleanup
  %15 = extractvalue { ptr, i32 } %14, 0
  %16 = extractvalue { ptr, i32 } %14, 1
  store ptr %15, ptr %0, align 8
  %17 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %16, ptr %17, align 8
  br label %bb45

bb5:                                              ; preds = %bb4
  %_7.0 = extractvalue { ptr, i64 } %13, 0
  %_7.1 = extractvalue { ptr, i64 } %13, 1
; invoke pkg_config::Config::env_var_os
  invoke void @_ZN10pkg_config6Config10env_var_os17hfbc9ab72e9fc468eE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_6, ptr align 8 %self, ptr align 1 %_7.0, i64 %_7.1)
          to label %bb6 unwind label %cleanup2

bb6:                                              ; preds = %bb5
; invoke core::option::Option<T>::is_some
  %_4 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h948e570adf1e4d88E"(ptr align 8 %_6)
          to label %bb7 unwind label %cleanup3

bb44:                                             ; preds = %cleanup3
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_6) #28
          to label %bb45 unwind label %terminate

cleanup3:                                         ; preds = %bb6
  %18 = landingpad { ptr, i32 }
          cleanup
  %19 = extractvalue { ptr, i32 } %18, 0
  %20 = extractvalue { ptr, i32 } %18, 1
  store ptr %19, ptr %0, align 8
  %21 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %20, ptr %21, align 8
  br label %bb44

bb7:                                              ; preds = %bb6
  br i1 %_4, label %bb8, label %bb11

bb11:                                             ; preds = %bb7
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_6)
          to label %bb12 unwind label %cleanup2

bb8:                                              ; preds = %bb7
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_6)
          to label %bb9 unwind label %cleanup2

bb12:                                             ; preds = %bb11
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_9)
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb12
  store ptr %name, ptr %_0.i, align 8
  %22 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E", ptr %22, align 8
  %23 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %24 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %25 = load ptr, ptr %24, align 8, !nonnull !3, !noundef !3
  %26 = insertvalue { ptr, ptr } poison, ptr %23, 0
  %27 = insertvalue { ptr, ptr } %26, ptr %25, 1
  br label %bb14

bb14:                                             ; preds = %bb13
  %_30.0 = extractvalue { ptr, ptr } %27, 0
  %_30.1 = extractvalue { ptr, ptr } %27, 1
  %28 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_29, i64 0, i64 0
  store ptr %_30.0, ptr %28, align 8
  %29 = getelementptr inbounds i8, ptr %28, i64 8
  store ptr %_30.1, ptr %29, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_25, ptr align 8 @alloc_c3502f17a169075d7f67c806e1e4ef1e, i64 2, ptr align 8 %_29, i64 1)
          to label %bb15 unwind label %cleanup

bb15:                                             ; preds = %bb14
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res1, ptr align 8 %_25)
          to label %bb16 unwind label %cleanup

bb16:                                             ; preds = %bb15
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_23, ptr align 8 %res1, i64 24, i1 false)
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %30 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %_23)
          to label %bb17 unwind label %cleanup4

bb43:                                             ; preds = %bb42, %cleanup4
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_23) #28
          to label %bb46 unwind label %terminate

cleanup4:                                         ; preds = %bb20, %bb23, %bb17, %bb16
  %31 = landingpad { ptr, i32 }
          cleanup
  %32 = extractvalue { ptr, i32 } %31, 0
  %33 = extractvalue { ptr, i32 } %31, 1
  store ptr %32, ptr %0, align 8
  %34 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %33, ptr %34, align 8
  br label %bb43

bb17:                                             ; preds = %bb16
  %_21.0 = extractvalue { ptr, i64 } %30, 0
  %_21.1 = extractvalue { ptr, i64 } %30, 1
; invoke pkg_config::Config::env_var_os
  invoke void @_ZN10pkg_config6Config10env_var_os17hfbc9ab72e9fc468eE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_20, ptr align 8 %self, ptr align 1 %_21.0, i64 %_21.1)
          to label %bb18 unwind label %cleanup4

bb18:                                             ; preds = %bb17
; invoke core::option::Option<T>::is_some
  %_18 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h948e570adf1e4d88E"(ptr align 8 %_20)
          to label %bb19 unwind label %cleanup5

bb42:                                             ; preds = %cleanup5
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_20) #28
          to label %bb43 unwind label %terminate

cleanup5:                                         ; preds = %bb18
  %35 = landingpad { ptr, i32 }
          cleanup
  %36 = extractvalue { ptr, i32 } %35, 0
  %37 = extractvalue { ptr, i32 } %35, 1
  store ptr %36, ptr %0, align 8
  %38 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %37, ptr %38, align 8
  br label %bb42

bb19:                                             ; preds = %bb18
  br i1 %_18, label %bb20, label %bb23

bb23:                                             ; preds = %bb19
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_20)
          to label %bb24 unwind label %cleanup4

bb20:                                             ; preds = %bb19
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_20)
          to label %bb21 unwind label %cleanup4

bb24:                                             ; preds = %bb23
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_23)
          to label %bb25 unwind label %cleanup

bb25:                                             ; preds = %bb24
; invoke pkg_config::Config::env_var_os
  invoke void @_ZN10pkg_config6Config10env_var_os17hfbc9ab72e9fc468eE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_34, ptr align 8 %self, ptr align 1 @alloc_31152d49bc0dabcd7adf0be9f2b0817d, i64 21)
          to label %bb26 unwind label %cleanup

bb26:                                             ; preds = %bb25
; invoke core::option::Option<T>::is_some
  %_32 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h948e570adf1e4d88E"(ptr align 8 %_34)
          to label %bb27 unwind label %cleanup6

bb41:                                             ; preds = %cleanup6
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_34) #28
          to label %bb46 unwind label %terminate

cleanup6:                                         ; preds = %bb26
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = extractvalue { ptr, i32 } %39, 0
  %41 = extractvalue { ptr, i32 } %39, 1
  store ptr %40, ptr %0, align 8
  %42 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %41, ptr %42, align 8
  br label %bb41

bb27:                                             ; preds = %bb26
  br i1 %_32, label %bb28, label %bb30

bb30:                                             ; preds = %bb27
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_34)
          to label %bb31 unwind label %cleanup

bb28:                                             ; preds = %bb27
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_34)
          to label %bb29 unwind label %cleanup

bb31:                                             ; preds = %bb30
; invoke pkg_config::Config::env_var_os
  invoke void @_ZN10pkg_config6Config10env_var_os17hfbc9ab72e9fc468eE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_38, ptr align 8 %self, ptr align 1 @alloc_5fa1a3f443d0d08d209afe1c22a2805c, i64 22)
          to label %bb32 unwind label %cleanup

bb32:                                             ; preds = %bb31
; invoke core::option::Option<T>::is_some
  %_36 = invoke zeroext i1 @"_ZN4core6option15Option$LT$T$GT$7is_some17h948e570adf1e4d88E"(ptr align 8 %_38)
          to label %bb33 unwind label %cleanup7

bb40:                                             ; preds = %cleanup7
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_38) #28
          to label %bb46 unwind label %terminate

cleanup7:                                         ; preds = %bb32
  %43 = landingpad { ptr, i32 }
          cleanup
  %44 = extractvalue { ptr, i32 } %43, 0
  %45 = extractvalue { ptr, i32 } %43, 1
  store ptr %44, ptr %0, align 8
  %46 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %45, ptr %46, align 8
  br label %bb40

bb33:                                             ; preds = %bb32
  br i1 %_36, label %bb34, label %bb36

bb36:                                             ; preds = %bb33
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_38)
          to label %bb37 unwind label %cleanup

bb34:                                             ; preds = %bb33
; invoke core::ptr::drop_in_place<core::option::Option<std::ffi::os_str::OsString>>
  invoke void @"_ZN4core3ptr75drop_in_place$LT$core..option..Option$LT$std..ffi..os_str..OsString$GT$$GT$17hdc0feac765d7362bE"(ptr align 8 %_38)
          to label %bb35 unwind label %cleanup

bb37:                                             ; preds = %bb36
  store i8 0, ptr %_0, align 1
  br label %bb38

bb38:                                             ; preds = %bb10, %bb22, %bb29, %bb35, %bb37
; call core::ptr::drop_in_place<alloc::string::String>
  call void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %name)
  %47 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %48 = trunc i8 %47 to i1
  ret i1 %48

bb35:                                             ; preds = %bb34
  store i8 0, ptr %_0, align 1
  br label %bb38

terminate:                                        ; preds = %bb46, %bb45, %bb44, %bb43, %bb42, %bb41, %bb40
  %49 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %50 = extractvalue { ptr, i32 } %49, 0
  %51 = extractvalue { ptr, i32 } %49, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb29:                                             ; preds = %bb28
  store i8 1, ptr %_0, align 1
  br label %bb38

bb21:                                             ; preds = %bb20
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_23)
          to label %bb22 unwind label %cleanup

bb22:                                             ; preds = %bb21
  store i8 0, ptr %_0, align 1
  br label %bb38

bb9:                                              ; preds = %bb8
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_9)
          to label %bb10 unwind label %cleanup

bb10:                                             ; preds = %bb9
  store i8 1, ptr %_0, align 1
  br label %bb38

bb47:                                             ; preds = %bb46
  %52 = load ptr, ptr %0, align 8, !noundef !3
  %53 = getelementptr inbounds i8, ptr %0, i64 8
  %54 = load i32, ptr %53, align 8, !noundef !3
  %55 = insertvalue { ptr, i32 } poison, ptr %52, 0
  %56 = insertvalue { ptr, i32 } %55, i32 %54, 1
  resume { ptr, i32 } %56
}

; <pkg_config::Config as core::default::Default>::default
; Function Attrs: nonlazybind uwtable
define void @"_ZN61_$LT$pkg_config..Config$u20$as$u20$core..default..Default$GT$7default17ha49427e6c5b484dcE"(ptr sret(%Config) align 8 %_0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_4 = alloca %"alloc::vec::Vec<std::ffi::os_str::OsString>", align 8
  %_3 = alloca %"core::ops::range::Bound<alloc::string::String>", align 8
  %_2 = alloca %"core::ops::range::Bound<alloc::string::String>", align 8
  %_1 = alloca i8, align 1
  store i8 2, ptr %_1, align 1
  store i64 2, ptr %_2, align 8
  store i64 2, ptr %_3, align 8
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h868cdec37d7a5d1cE"(ptr sret(%"alloc::vec::Vec<std::ffi::os_str::OsString>") align 8 %_4)
          to label %bb1 unwind label %cleanup

bb2:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<core::ops::range::Bound<alloc::string::String>>
  invoke void @"_ZN4core3ptr73drop_in_place$LT$core..ops..range..Bound$LT$alloc..string..String$GT$$GT$17h67a1a793bb5ff224E"(ptr align 8 %_3) #28
          to label %bb3 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb2

bb1:                                              ; preds = %start
  %5 = load i8, ptr %_1, align 1, !range !18, !noundef !3
  %6 = getelementptr inbounds %Config, ptr %_0, i32 0, i32 7
  store i8 %5, ptr %6, align 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_2, i64 32, i1 false)
  %7 = getelementptr inbounds %Config, ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %_3, i64 32, i1 false)
  %8 = getelementptr inbounds %Config, ptr %_0, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %_4, i64 24, i1 false)
  %9 = getelementptr inbounds %Config, ptr %_0, i32 0, i32 3
  store i8 0, ptr %9, align 8
  %10 = getelementptr inbounds %Config, ptr %_0, i32 0, i32 4
  store i8 0, ptr %10, align 1
  %11 = getelementptr inbounds %Config, ptr %_0, i32 0, i32 5
  store i8 0, ptr %11, align 2
  %12 = getelementptr inbounds %Config, ptr %_0, i32 0, i32 6
  store i8 0, ptr %12, align 1
  ret void

terminate:                                        ; preds = %bb3, %bb2
  %13 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb3:                                              ; preds = %bb2
; invoke core::ptr::drop_in_place<core::ops::range::Bound<alloc::string::String>>
  invoke void @"_ZN4core3ptr73drop_in_place$LT$core..ops..range..Bound$LT$alloc..string..String$GT$$GT$17h67a1a793bb5ff224E"(ptr align 8 %_2) #28
          to label %bb4 unwind label %terminate

bb4:                                              ; preds = %bb3
  %16 = load ptr, ptr %0, align 8, !noundef !3
  %17 = getelementptr inbounds i8, ptr %0, i64 8
  %18 = load i32, ptr %17, align 8, !noundef !3
  %19 = insertvalue { ptr, i32 } poison, ptr %16, 0
  %20 = insertvalue { ptr, i32 } %19, i32 %18, 1
  resume { ptr, i32 } %20
}

; pkg_config::Library::new
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10pkg_config7Library3new17h19e6158da1951aabE(ptr sret(%Library) align 8 %_0) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_9 = alloca %"alloc::string::String", align 8
  %_8 = alloca %"std::collections::hash::map::HashMap<alloc::string::String, core::option::Option<alloc::string::String>>", align 8
  %_7 = alloca %"alloc::vec::Vec<std::path::PathBuf>", align 8
  %_6 = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %_5 = alloca %"alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>", align 8
  %_4 = alloca %"alloc::vec::Vec<std::path::PathBuf>", align 8
  %_3 = alloca %"alloc::vec::Vec<std::path::PathBuf>", align 8
  %_2 = alloca %"alloc::vec::Vec<std::path::PathBuf>", align 8
  %_1 = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h14e2cbe069ce13f7E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_1)
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hd1a6c09920f5cb95E"(ptr sret(%"alloc::vec::Vec<std::path::PathBuf>") align 8 %_2)
          to label %bb2 unwind label %cleanup

bb17:                                             ; preds = %bb16, %cleanup
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %_1) #28
          to label %bb18 unwind label %terminate

cleanup:                                          ; preds = %start
  %1 = landingpad { ptr, i32 }
          cleanup
  %2 = extractvalue { ptr, i32 } %1, 0
  %3 = extractvalue { ptr, i32 } %1, 1
  store ptr %2, ptr %0, align 8
  %4 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %3, ptr %4, align 8
  br label %bb17

bb2:                                              ; preds = %start
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hd1a6c09920f5cb95E"(ptr sret(%"alloc::vec::Vec<std::path::PathBuf>") align 8 %_3)
          to label %bb3 unwind label %cleanup1

bb16:                                             ; preds = %bb15, %cleanup1
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %_2) #28
          to label %bb17 unwind label %terminate

cleanup1:                                         ; preds = %bb2
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %0, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb16

bb3:                                              ; preds = %bb2
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hd1a6c09920f5cb95E"(ptr sret(%"alloc::vec::Vec<std::path::PathBuf>") align 8 %_4)
          to label %bb4 unwind label %cleanup2

bb15:                                             ; preds = %bb14, %cleanup2
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %_3) #28
          to label %bb16 unwind label %terminate

cleanup2:                                         ; preds = %bb3
  %9 = landingpad { ptr, i32 }
          cleanup
  %10 = extractvalue { ptr, i32 } %9, 0
  %11 = extractvalue { ptr, i32 } %9, 1
  store ptr %10, ptr %0, align 8
  %12 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %11, ptr %12, align 8
  br label %bb15

bb4:                                              ; preds = %bb3
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h930ab69328028b1dE"(ptr sret(%"alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>") align 8 %_5)
          to label %bb5 unwind label %cleanup3

bb14:                                             ; preds = %bb13, %cleanup3
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %_4) #28
          to label %bb15 unwind label %terminate

cleanup3:                                         ; preds = %bb4
  %13 = landingpad { ptr, i32 }
          cleanup
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
  store ptr %14, ptr %0, align 8
  %16 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %15, ptr %16, align 8
  br label %bb14

bb5:                                              ; preds = %bb4
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h14e2cbe069ce13f7E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_6)
          to label %bb6 unwind label %cleanup4

bb13:                                             ; preds = %bb12, %cleanup4
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::vec::Vec<alloc::string::String>>>
  invoke void @"_ZN4core3ptr88drop_in_place$LT$alloc..vec..Vec$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$$GT$17h8fabdcc1d10c7210E"(ptr align 8 %_5) #28
          to label %bb14 unwind label %terminate

cleanup4:                                         ; preds = %bb5
  %17 = landingpad { ptr, i32 }
          cleanup
  %18 = extractvalue { ptr, i32 } %17, 0
  %19 = extractvalue { ptr, i32 } %17, 1
  store ptr %18, ptr %0, align 8
  %20 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %19, ptr %20, align 8
  br label %bb13

bb6:                                              ; preds = %bb5
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hd1a6c09920f5cb95E"(ptr sret(%"alloc::vec::Vec<std::path::PathBuf>") align 8 %_7)
          to label %bb7 unwind label %cleanup5

bb12:                                             ; preds = %bb11, %cleanup5
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %_6) #28
          to label %bb13 unwind label %terminate

cleanup5:                                         ; preds = %bb6
  %21 = landingpad { ptr, i32 }
          cleanup
  %22 = extractvalue { ptr, i32 } %21, 0
  %23 = extractvalue { ptr, i32 } %21, 1
  store ptr %22, ptr %0, align 8
  %24 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %23, ptr %24, align 8
  br label %bb12

bb7:                                              ; preds = %bb6
; invoke std::collections::hash::map::HashMap<K,V>::new
  invoke void @"_ZN3std11collections4hash3map20HashMap$LT$K$C$V$GT$3new17h0efc3d5ac86ca5cbE"(ptr sret(%"std::collections::hash::map::HashMap<alloc::string::String, core::option::Option<alloc::string::String>>") align 8 %_8)
          to label %bb8 unwind label %cleanup6

bb11:                                             ; preds = %bb10, %cleanup6
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %_7) #28
          to label %bb12 unwind label %terminate

cleanup6:                                         ; preds = %bb7
  %25 = landingpad { ptr, i32 }
          cleanup
  %26 = extractvalue { ptr, i32 } %25, 0
  %27 = extractvalue { ptr, i32 } %25, 1
  store ptr %26, ptr %0, align 8
  %28 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %27, ptr %28, align 8
  br label %bb11

bb8:                                              ; preds = %bb7
; invoke alloc::string::String::new
  invoke void @_ZN5alloc6string6String3new17h4b28029e472a96caE(ptr sret(%"alloc::string::String") align 8 %_9)
          to label %bb9 unwind label %cleanup7

bb10:                                             ; preds = %cleanup7
; invoke core::ptr::drop_in_place<std::collections::hash::map::HashMap<alloc::string::String,core::option::Option<alloc::string::String>>>
  invoke void @"_ZN4core3ptr138drop_in_place$LT$std..collections..hash..map..HashMap$LT$alloc..string..String$C$core..option..Option$LT$alloc..string..String$GT$$GT$$GT$17h37c42a37ea76a09fE"(ptr align 8 %_8) #28
          to label %bb11 unwind label %terminate

cleanup7:                                         ; preds = %bb8
  %29 = landingpad { ptr, i32 }
          cleanup
  %30 = extractvalue { ptr, i32 } %29, 0
  %31 = extractvalue { ptr, i32 } %29, 1
  store ptr %30, ptr %0, align 8
  %32 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %31, ptr %32, align 8
  br label %bb10

bb9:                                              ; preds = %bb8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %_1, i64 24, i1 false)
  %33 = getelementptr inbounds %Library, ptr %_0, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %33, ptr align 8 %_2, i64 24, i1 false)
  %34 = getelementptr inbounds %Library, ptr %_0, i32 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %34, ptr align 8 %_3, i64 24, i1 false)
  %35 = getelementptr inbounds %Library, ptr %_0, i32 0, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %35, ptr align 8 %_6, i64 24, i1 false)
  %36 = getelementptr inbounds %Library, ptr %_0, i32 0, i32 4
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %36, ptr align 8 %_7, i64 24, i1 false)
  %37 = getelementptr inbounds %Library, ptr %_0, i32 0, i32 5
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %37, ptr align 8 %_4, i64 24, i1 false)
  %38 = getelementptr inbounds %Library, ptr %_0, i32 0, i32 6
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %38, ptr align 8 %_5, i64 24, i1 false)
  %39 = getelementptr inbounds %Library, ptr %_0, i32 0, i32 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %39, ptr align 8 %_8, i64 48, i1 false)
  %40 = getelementptr inbounds %Library, ptr %_0, i32 0, i32 7
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %40, ptr align 8 %_9, i64 24, i1 false)
  ret void

terminate:                                        ; preds = %bb17, %bb16, %bb15, %bb14, %bb13, %bb12, %bb11, %bb10
  %41 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %42 = extractvalue { ptr, i32 } %41, 0
  %43 = extractvalue { ptr, i32 } %41, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb18:                                             ; preds = %bb17
  %44 = load ptr, ptr %0, align 8, !noundef !3
  %45 = getelementptr inbounds i8, ptr %0, i64 8
  %46 = load i32, ptr %45, align 8, !noundef !3
  %47 = insertvalue { ptr, i32 } poison, ptr %44, 0
  %48 = insertvalue { ptr, i32 } %47, i32 %46, 1
  resume { ptr, i32 } %48
}

; pkg_config::Library::extract_lib_from_filename
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN10pkg_config7Library25extract_lib_from_filename17ha27a0809c973d2c1E(ptr align 1 %target.0, i64 %target.1, ptr align 1 %filename.0, i64 %filename.1) unnamed_addr #1 {
start:
  %_20 = alloca i64, align 8
  %_15 = alloca i64, align 8
  %_8 = alloca i64, align 8
  %_0 = alloca %"core::option::Option<&str>", align 8
; call core::str::<impl str>::contains
  %_4 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17h96cf28c8d8071c26E"(ptr align 1 %target.0, i64 %target.1, ptr align 1 @alloc_e99d286d1113f206aa65d630ca15e87c, i64 7)
  br i1 %_4, label %bb2, label %bb10

bb10:                                             ; preds = %start
; call core::str::<impl str>::contains
  %_12 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17h96cf28c8d8071c26E"(ptr align 1 %target.0, i64 %target.1, ptr align 1 @alloc_f5fa10d2bd50b965d2515db045847aab, i64 5)
  br i1 %_12, label %bb12, label %bb18

bb2:                                              ; preds = %start
; call core::str::<impl str>::contains
  %_5 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17h96cf28c8d8071c26E"(ptr align 1 %target.0, i64 %target.1, ptr align 1 @alloc_772e61a39199df4134c467e272d2cf4b, i64 3)
  br i1 %_5, label %bb4, label %bb9

bb18:                                             ; preds = %bb10
; call core::str::<impl str>::starts_with
  %_18 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h54bd2905953ff258E"(ptr align 1 %filename.0, i64 %filename.1, ptr align 1 @alloc_8e7f0612b08a29ac961b0bae1e370964, i64 3)
  br i1 %_18, label %bb20, label %bb23

bb12:                                             ; preds = %bb10
; call core::str::<impl str>::starts_with
  %_13 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h54bd2905953ff258E"(ptr align 1 %filename.0, i64 %filename.1, ptr align 1 @alloc_8e7f0612b08a29ac961b0bae1e370964, i64 3)
  br i1 %_13, label %bb14, label %bb17

bb23:                                             ; preds = %bb18
  store ptr null, ptr %_0, align 8
  br label %bb24

bb20:                                             ; preds = %bb18
; call core::str::<impl str>::len
  %_21 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha361409a4077a273E"(ptr align 1 @alloc_8e7f0612b08a29ac961b0bae1e370964, i64 3)
  store i64 %_21, ptr %_20, align 8
  %0 = load i64, ptr %_20, align 8, !noundef !3
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %1 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17ha35a8822df1161d4E"(ptr align 1 %filename.0, i64 %filename.1, i64 %0, ptr align 8 @alloc_88bf594a932c0e6546f682648b440303)
  %filename.01 = extractvalue { ptr, i64 } %1, 0
  %filename.12 = extractvalue { ptr, i64 } %1, 1
; call pkg_config::Library::extract_lib_from_filename::test_suffixes
  %2 = call { ptr, i64 } @_ZN10pkg_config7Library25extract_lib_from_filename13test_suffixes17h010d2529ebbf7d84E(ptr align 1 %filename.01, i64 %filename.12, ptr align 8 @alloc_c1f78c3ed8cfd84477bdb021104f7be9, i64 2)
  %3 = extractvalue { ptr, i64 } %2, 0
  %4 = extractvalue { ptr, i64 } %2, 1
  store ptr %3, ptr %_0, align 8
  %5 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %4, ptr %5, align 8
  br label %bb24

bb24:                                             ; preds = %bb6, %bb9, %bb14, %bb17, %bb20, %bb23
  %6 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  %8 = load i64, ptr %7, align 8
  %9 = insertvalue { ptr, i64 } poison, ptr %6, 0
  %10 = insertvalue { ptr, i64 } %9, i64 %8, 1
  ret { ptr, i64 } %10

bb17:                                             ; preds = %bb12
  store ptr null, ptr %_0, align 8
  br label %bb24

bb14:                                             ; preds = %bb12
; call core::str::<impl str>::len
  %_16 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha361409a4077a273E"(ptr align 1 @alloc_8e7f0612b08a29ac961b0bae1e370964, i64 3)
  store i64 %_16, ptr %_15, align 8
  %11 = load i64, ptr %_15, align 8, !noundef !3
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %12 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17ha35a8822df1161d4E"(ptr align 1 %filename.0, i64 %filename.1, i64 %11, ptr align 8 @alloc_5e1a8298f73dc5d448256af7200533cf)
  %filename.03 = extractvalue { ptr, i64 } %12, 0
  %filename.14 = extractvalue { ptr, i64 } %12, 1
; call pkg_config::Library::extract_lib_from_filename::test_suffixes
  %13 = call { ptr, i64 } @_ZN10pkg_config7Library25extract_lib_from_filename13test_suffixes17h010d2529ebbf7d84E(ptr align 1 %filename.03, i64 %filename.14, ptr align 8 @alloc_297742202d3dcedd53ae837bde93bf41, i64 3)
  %14 = extractvalue { ptr, i64 } %13, 0
  %15 = extractvalue { ptr, i64 } %13, 1
  store ptr %14, ptr %_0, align 8
  %16 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %15, ptr %16, align 8
  br label %bb24

bb9:                                              ; preds = %bb4, %bb2
; call pkg_config::Library::extract_lib_from_filename::test_suffixes
  %17 = call { ptr, i64 } @_ZN10pkg_config7Library25extract_lib_from_filename13test_suffixes17h010d2529ebbf7d84E(ptr align 1 %filename.0, i64 %filename.1, ptr align 8 @alloc_b4be03e00c25f6aa9abb8766bfc9091e, i64 4)
  %18 = extractvalue { ptr, i64 } %17, 0
  %19 = extractvalue { ptr, i64 } %17, 1
  store ptr %18, ptr %_0, align 8
  %20 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %19, ptr %20, align 8
  br label %bb24

bb4:                                              ; preds = %bb2
; call core::str::<impl str>::starts_with
  %_6 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h54bd2905953ff258E"(ptr align 1 %filename.0, i64 %filename.1, ptr align 1 @alloc_8e7f0612b08a29ac961b0bae1e370964, i64 3)
  br i1 %_6, label %bb6, label %bb9

bb6:                                              ; preds = %bb4
; call core::str::<impl str>::len
  %_9 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha361409a4077a273E"(ptr align 1 @alloc_8e7f0612b08a29ac961b0bae1e370964, i64 3)
  store i64 %_9, ptr %_8, align 8
  %21 = load i64, ptr %_8, align 8, !noundef !3
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %22 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17ha35a8822df1161d4E"(ptr align 1 %filename.0, i64 %filename.1, i64 %21, ptr align 8 @alloc_c8bd45a2a4ee4ac51c67d82d66ddb8f6)
  %filename.05 = extractvalue { ptr, i64 } %22, 0
  %filename.16 = extractvalue { ptr, i64 } %22, 1
; call pkg_config::Library::extract_lib_from_filename::test_suffixes
  %23 = call { ptr, i64 } @_ZN10pkg_config7Library25extract_lib_from_filename13test_suffixes17h010d2529ebbf7d84E(ptr align 1 %filename.05, i64 %filename.16, ptr align 8 @alloc_b4be03e00c25f6aa9abb8766bfc9091e, i64 4)
  %24 = extractvalue { ptr, i64 } %23, 0
  %25 = extractvalue { ptr, i64 } %23, 1
  store ptr %24, ptr %_0, align 8
  %26 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %25, ptr %26, align 8
  br label %bb24
}

; pkg_config::Library::extract_lib_from_filename::test_suffixes
; Function Attrs: nonlazybind uwtable
define internal { ptr, i64 } @_ZN10pkg_config7Library25extract_lib_from_filename13test_suffixes17h010d2529ebbf7d84E(ptr align 1 %filename.0, i64 %filename.1, ptr align 8 %suffixes.0, i64 %suffixes.1) unnamed_addr #1 {
start:
  %_11 = alloca i64, align 8
  %_5 = alloca ptr, align 8
  %iter = alloca %"core::slice::iter::Iter<'_, &str>", align 8
  %_0 = alloca %"core::option::Option<&str>", align 8
; call core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %0 = call { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h821f41eb1e65071fE"(ptr align 8 %suffixes.0, i64 %suffixes.1)
  %_3.0 = extractvalue { ptr, ptr } %0, 0
  %_3.1 = extractvalue { ptr, ptr } %0, 1
  store ptr %_3.0, ptr %iter, align 8
  %1 = getelementptr inbounds i8, ptr %iter, i64 8
  store ptr %_3.1, ptr %1, align 8
  br label %bb2

bb2:                                              ; preds = %bb4, %start
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %2 = call align 8 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h9cd2dfb86b854212E"(ptr align 8 %iter)
  store ptr %2, ptr %_5, align 8
  %3 = load ptr, ptr %_5, align 8, !noundef !3
  %4 = ptrtoint ptr %3 to i64
  %5 = icmp eq i64 %4, 0
  %_7 = select i1 %5, i64 0, i64 1
  %6 = icmp eq i64 %_7, 0
  br i1 %6, label %bb5, label %bb4

bb5:                                              ; preds = %bb2
  store ptr null, ptr %_0, align 8
  br label %bb12

bb4:                                              ; preds = %bb2
  %suffix = load ptr, ptr %_5, align 8, !nonnull !3, !align !5, !noundef !3
; call core::str::<impl str>::ends_with
  %_9 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$9ends_with17h8451fd61f1ec561dE"(ptr align 1 %filename.0, i64 %filename.1, ptr align 8 %suffix)
  br i1 %_9, label %bb7, label %bb2

bb12:                                             ; preds = %bb10, %bb5
  %7 = load ptr, ptr %_0, align 8, !align !4, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_0, i64 8
  %9 = load i64, ptr %8, align 8
  %10 = insertvalue { ptr, i64 } poison, ptr %7, 0
  %11 = insertvalue { ptr, i64 } %10, i64 %9, 1
  ret { ptr, i64 } %11

bb7:                                              ; preds = %bb4
; call core::str::<impl str>::len
  %_13 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha361409a4077a273E"(ptr align 1 %filename.0, i64 %filename.1)
  %_16.0 = load ptr, ptr %suffix, align 8, !nonnull !3, !align !4, !noundef !3
  %12 = getelementptr inbounds i8, ptr %suffix, i64 8
  %_16.1 = load i64, ptr %12, align 8, !noundef !3
; call core::str::<impl str>::len
  %_14 = call i64 @"_ZN4core3str21_$LT$impl$u20$str$GT$3len17ha361409a4077a273E"(ptr align 1 %_16.0, i64 %_16.1)
  %_15.0 = sub i64 %_13, %_14
  %_15.1 = icmp ult i64 %_13, %_14
  %13 = call i1 @llvm.expect.i1(i1 %_15.1, i1 false)
  br i1 %13, label %panic, label %bb10

bb10:                                             ; preds = %bb7
  store i64 %_15.0, ptr %_11, align 8
  %14 = load i64, ptr %_11, align 8, !noundef !3
; call core::str::traits::<impl core::ops::index::Index<I> for str>::index
  %15 = call { ptr, i64 } @"_ZN4core3str6traits66_$LT$impl$u20$core..ops..index..Index$LT$I$GT$$u20$for$u20$str$GT$5index17hbb717183a362dcaaE"(ptr align 1 %filename.0, i64 %filename.1, i64 %14, ptr align 8 @alloc_19bd2662f64087c047082e76e7fabf6d)
  %_10.0 = extractvalue { ptr, i64 } %15, 0
  %_10.1 = extractvalue { ptr, i64 } %15, 1
  store ptr %_10.0, ptr %_0, align 8
  %16 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_10.1, ptr %16, align 8
  br label %bb12

panic:                                            ; preds = %bb7
; call core::panicking::panic
  call void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1 @str.l, i64 33, ptr align 8 @alloc_30e86650970cbd448a56c02b0013dead) #27
  unreachable

bb13:                                             ; No predecessors!
  unreachable
}

; pkg_config::Library::parse_libs_cflags
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10pkg_config7Library17parse_libs_cflags17h7f8b85db08f79053E(ptr align 8 %self, ptr align 1 %0, i64 %1, ptr align 1 %output.0, i64 %output.1, ptr align 8 %2) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %self.i = alloca %"core::option::Option<&str>", align 8
  %_0.i66 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i65 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i64 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i63 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i62 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i61 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i60 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i59 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i58 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i57 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i56 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i55 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i54 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i53 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %3 = alloca { ptr, i32, [1 x i32] }, align 8
  %_384 = alloca i8, align 1
  %_383 = alloca i8, align 1
  %_382 = alloca i8, align 1
  %_381 = alloca i8, align 1
  %_380 = alloca i8, align 1
  %_363 = alloca %"alloc::vec::Vec<&str>", align 8
  %_362 = alloca %"alloc::vec::into_iter::IntoIter<&str>", align 8
  %_361 = alloca %"core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>", align 8
  %_360 = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %_350 = alloca %"alloc::string::String", align 8
  %_347 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_343 = alloca %"core::fmt::Arguments<'_>", align 8
  %res23 = alloca %"alloc::string::String", align 8
  %meta22 = alloca %"alloc::string::String", align 8
  %subopt = alloca { ptr, i64 }, align 8
  %_331 = alloca %"core::option::Option<&str>", align 8
  %iter21 = alloca %"core::str::iter::Split<'_, char>", align 8
  %_329 = alloca i64, align 8
  %_327 = alloca %"core::str::iter::Split<'_, char>", align 8
  %_326 = alloca %"core::str::iter::Split<'_, char>", align 8
  %ld_option = alloca %"alloc::vec::Vec<&str>", align 8
  %pop = alloca i8, align 1
  %_320 = alloca ptr, align 8
  %iter20 = alloca %"core::iter::adapters::filter::Filter<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:999:50: 999:55}>", align 8
  %_311 = alloca %"std::path::Display<'_>", align 8
  %_308 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_304 = alloca %"core::fmt::Arguments<'_>", align 8
  %_302 = alloca %"std::path::PathBuf", align 8
  %_293 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_289 = alloca %"core::fmt::Arguments<'_>", align 8
  %res19 = alloca %"alloc::string::String", align 8
  %link_lib = alloca %"alloc::string::String", align 8
  %_282 = alloca %"std::path::Display<'_>", align 8
  %_279 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_275 = alloca %"core::fmt::Arguments<'_>", align 8
  %res18 = alloca %"alloc::string::String", align 8
  %link_search = alloca %"alloc::string::String", align 8
  %lib_basename = alloca { ptr, i64 }, align 8
  %_270 = alloca %"alloc::borrow::Cow<'_, str>", align 8
  %_266 = alloca %"core::option::Option<&str>", align 8
  %_256 = alloca { %"core::option::Option<&std::path::Path>", %"core::option::Option<&std::ffi::os_str::OsStr>", ptr }, align 8
  %_244 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_240 = alloca %"core::fmt::Arguments<'_>", align 8
  %res17 = alloca %"alloc::string::String", align 8
  %meta16 = alloca %"alloc::string::String", align 8
  %symbol = alloca { ptr, i64 }, align 8
  %_234 = alloca %"core::option::Option<&str>", align 8
  %_233 = alloca %"std::path::PathBuf", align 8
  %_227 = alloca %"core::option::Option<&str>", align 8
  %_225 = alloca %"alloc::string::String", align 8
  %_216 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_212 = alloca %"core::fmt::Arguments<'_>", align 8
  %res15 = alloca %"alloc::string::String", align 8
  %meta14 = alloca %"alloc::string::String", align 8
  %lib = alloca { ptr, i64 }, align 8
  %_206 = alloca %"core::option::Option<&str>", align 8
  %part = alloca { ptr, i64 }, align 8
  %_196 = alloca %"core::option::Option<&str>", align 8
  %iter13 = alloca %"core::iter::adapters::flatten::FlatMap<core::slice::iter::Iter<'_, alloc::string::String>, alloc::vec::Vec<&str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>", align 8
  %_185 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_181 = alloca %"core::fmt::Arguments<'_>", align 8
  %res12 = alloca %"alloc::string::String", align 8
  %meta11 = alloca %"alloc::string::String", align 8
  %_176 = alloca %"core::option::Option<alloc::string::String>", align 8
  %_172 = alloca %"alloc::string::String", align 8
  %_170 = alloca %"core::option::Option<core::option::Option<alloc::string::String>>", align 8
  %iter10 = alloca %"core::str::iter::Split<'_, char>", align 8
  %_166 = alloca %"alloc::string::String", align 8
  %_157 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_153 = alloca %"core::fmt::Arguments<'_>", align 8
  %res9 = alloca %"alloc::string::String", align 8
  %meta8 = alloca %"alloc::string::String", align 8
  %_144 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_140 = alloca %"core::fmt::Arguments<'_>", align 8
  %res7 = alloca %"alloc::string::String", align 8
  %meta6 = alloca %"alloc::string::String", align 8
  %_123 = alloca [2 x %"core::fmt::rt::Argument<'_>"], align 8
  %_119 = alloca %"core::fmt::Arguments<'_>", align 8
  %res5 = alloca %"alloc::string::String", align 8
  %meta4 = alloca %"alloc::string::String", align 8
  %_109 = alloca %"std::path::PathBuf", align 8
  %_105 = alloca %"std::path::PathBuf", align 8
  %_96 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_92 = alloca %"core::fmt::Arguments<'_>", align 8
  %res3 = alloca %"alloc::string::String", align 8
  %meta2 = alloca %"alloc::string::String", align 8
  %_88 = alloca %"std::path::PathBuf", align 8
  %_84 = alloca %"std::path::PathBuf", align 8
  %_75 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_71 = alloca %"core::fmt::Arguments<'_>", align 8
  %res = alloca %"alloc::string::String", align 8
  %meta = alloca %"alloc::string::String", align 8
  %val = alloca { ptr, i64 }, align 8
  %flag = alloca { ptr, i64 }, align 8
  %_58 = alloca %"core::option::Option<(&str, &str)>", align 8
  %iter = alloca %"core::iter::adapters::map::Map<core::iter::adapters::filter::Filter<core::slice::iter::Iter<'_, alloc::string::String>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:885:21: 885:24}>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:886:18: 886:23}>", align 8
  %words = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %dirs = alloca %"alloc::vec::Vec<std::path::PathBuf>", align 8
  %_45 = alloca %"core::option::Option<std::path::PathBuf>", align 8
  %_44 = alloca %"std::path::PathBuf", align 8
  %_43 = alloca ptr, align 8
  %_37 = alloca %"std::path::PathBuf", align 8
  %sysroot1 = alloca %"std::path::PathBuf", align 8
  %_27 = alloca ptr, align 8
  %_24 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %_23 = alloca %"core::option::Option<std::ffi::os_str::OsString>", align 8
  %sysroot = alloca %"core::option::Option<std::path::PathBuf>", align 8
  %_21 = alloca %"std::path::PathBuf", align 8
  %_20 = alloca %"std::path::PathBuf", align 8
  %_19 = alloca ptr, align 8
  %system_roots = alloca %"alloc::vec::Vec<std::path::PathBuf>", align 8
  %target = alloca %"core::result::Result<alloc::string::String, std::env::VarError>", align 8
  %is_msvc = alloca i8, align 1
  %config = alloca ptr, align 8
  %name = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %name, align 8
  %4 = getelementptr inbounds i8, ptr %name, i64 8
  store i64 %1, ptr %4, align 8
  store ptr %2, ptr %config, align 8
  store i8 0, ptr %_380, align 1
  store i8 0, ptr %_384, align 1
  store i8 0, ptr %_383, align 1
  store i8 0, ptr %_382, align 1
  store i8 0, ptr %_381, align 1
  store i8 0, ptr %is_msvc, align 1
; call std::env::var
  call void @_ZN3std3env3var17h7eb44638e42656b6E(ptr sret(%"core::result::Result<alloc::string::String, std::env::VarError>") align 8 %target, ptr align 1 @alloc_dcbc225a8ec7dbfaaef714ff8a7176fb, i64 6)
  %_8 = load i64, ptr %target, align 8, !range !9, !noundef !3
  %5 = icmp eq i64 %_8, 0
  br i1 %5, label %bb2, label %bb6

bb2:                                              ; preds = %start
  %target24 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", ptr %target, i32 0, i32 1
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %6 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %target24)
          to label %bb3 unwind label %cleanup

bb6:                                              ; preds = %bb5, %bb4, %start
  br i1 false, label %bb7, label %bb11

bb245:                                            ; preds = %bb275, %bb243, %bb259, %bb258, %bb260, %bb261, %cleanup
; invoke core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  invoke void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17he3784d90bbaa7c42E"(ptr align 8 %target) #28
          to label %bb246 unwind label %terminate

cleanup:                                          ; preds = %bb223, %bb265, %bb7, %bb249, %bb13, %bb12, %bb11, %bb3, %bb2
  %7 = landingpad { ptr, i32 }
          cleanup
  %8 = extractvalue { ptr, i32 } %7, 0
  %9 = extractvalue { ptr, i32 } %7, 1
  store ptr %8, ptr %3, align 8
  %10 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %9, ptr %10, align 8
  br label %bb245

bb3:                                              ; preds = %bb2
  %_11.0 = extractvalue { ptr, i64 } %6, 0
  %_11.1 = extractvalue { ptr, i64 } %6, 1
; invoke core::str::<impl str>::contains
  %_10 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$8contains17h96cf28c8d8071c26E"(ptr align 1 %_11.0, i64 %_11.1, ptr align 1 @alloc_0b31f4562230d243936ff2637ae71e88, i64 4)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  br i1 %_10, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  store i8 1, ptr %is_msvc, align 1
  br label %bb6

bb11:                                             ; preds = %bb6
  %_25 = load ptr, ptr %config, align 8, !nonnull !3, !align !5, !noundef !3
; invoke pkg_config::Config::env_var_os
  invoke void @_ZN10pkg_config6Config10env_var_os17hfbc9ab72e9fc468eE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_24, ptr align 8 %_25, ptr align 1 @alloc_d28f1d088998a251cf4ef2f20418d922, i64 22)
          to label %bb12 unwind label %cleanup

bb7:                                              ; preds = %bb6
; invoke alloc::alloc::exchange_malloc
  %_18 = invoke ptr @_ZN5alloc5alloc15exchange_malloc17hd3112a05f766f5e6E(i64 48, i64 8)
          to label %bb8 unwind label %cleanup

bb12:                                             ; preds = %bb11
  store ptr %config, ptr %_27, align 8
  %11 = load ptr, ptr %_27, align 8, !nonnull !3, !align !5, !noundef !3
; invoke core::option::Option<T>::or_else
  invoke void @"_ZN4core6option15Option$LT$T$GT$7or_else17h998376b08282b91aE"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_23, ptr align 8 %_24, ptr align 8 %11)
          to label %bb13 unwind label %cleanup

bb13:                                             ; preds = %bb12
; invoke core::option::Option<T>::map
  invoke void @"_ZN4core6option15Option$LT$T$GT$3map17ha5b37c1b1154353eE"(ptr sret(%"core::option::Option<std::path::PathBuf>") align 8 %sysroot, ptr align 8 %_23)
          to label %bb14 unwind label %cleanup

bb14:                                             ; preds = %bb13
  store i8 1, ptr %_380, align 1
  store i8 1, ptr %_381, align 1
  br i1 false, label %bb15, label %bb20

bb20:                                             ; preds = %bb14
; invoke alloc::alloc::exchange_malloc
  %_42 = invoke ptr @_ZN5alloc5alloc15exchange_malloc17hd3112a05f766f5e6E(i64 24, i64 8)
          to label %bb21 unwind label %cleanup25

bb15:                                             ; preds = %bb14
  %12 = load i64, ptr %sysroot, align 8, !range !12, !noundef !3
  %13 = icmp eq i64 %12, -9223372036854775808
  %_30 = select i1 %13, i64 0, i64 1
  %14 = icmp eq i64 %_30, 1
  br i1 %14, label %bb16, label %bb19

bb261:                                            ; preds = %bb256, %bb257, %bb274, %cleanup25
  %15 = load i8, ptr %_380, align 1, !range !10, !noundef !3
  %16 = trunc i8 %15 to i1
  br i1 %16, label %bb260, label %bb245

cleanup25:                                        ; preds = %bb19, %bb263, %bb20
  %17 = landingpad { ptr, i32 }
          cleanup
  %18 = extractvalue { ptr, i32 } %17, 0
  %19 = extractvalue { ptr, i32 } %17, 1
  store ptr %18, ptr %3, align 8
  %20 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %19, ptr %20, align 8
  br label %bb261

bb21:                                             ; preds = %bb20
  store ptr %_42, ptr %_43, align 8
  store i8 0, ptr %_380, align 1
  store i8 0, ptr %_381, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_45, ptr align 8 %sysroot, i64 24, i1 false)
; invoke core::option::Option<T>::unwrap_or_else
  invoke void @"_ZN4core6option15Option$LT$T$GT$14unwrap_or_else17hc0720a185d7583e8E"(ptr sret(%"std::path::PathBuf") align 8 %_44, ptr align 8 %_45, ptr align 8 @alloc_8ee4b9a5c668e9b13a38c4ed8bd18d1d)
          to label %bb22 unwind label %cleanup26

bb255:                                            ; preds = %cleanup26
; invoke <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h27da08099f6f49a9E"(ptr align 8 %_43) #28
          to label %bb274 unwind label %terminate

cleanup26:                                        ; preds = %bb21
  %21 = landingpad { ptr, i32 }
          cleanup
  %22 = extractvalue { ptr, i32 } %21, 0
  %23 = extractvalue { ptr, i32 } %21, 1
  store ptr %22, ptr %3, align 8
  %24 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %23, ptr %24, align 8
  br label %bb255

bb22:                                             ; preds = %bb21
  %_393 = load ptr, ptr %_43, align 8, !noundef !3
  %_395 = ptrtoint ptr %_393 to i64
  %_398 = and i64 %_395, 7
  %_399 = icmp eq i64 %_398, 0
  %25 = call i1 @llvm.expect.i1(i1 %_399, i1 true)
  br i1 %25, label %bb263, label %panic

bb263:                                            ; preds = %bb22
  %26 = getelementptr inbounds [1 x %"std::path::PathBuf"], ptr %_393, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %26, ptr align 8 %_44, i64 24, i1 false)
  %_39 = load ptr, ptr %_43, align 8, !nonnull !3, !align !5, !noundef !3
; invoke alloc::slice::<impl [T]>::into_vec
  invoke void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h8fc1d5f2c5d561d6E"(ptr sret(%"alloc::vec::Vec<std::path::PathBuf>") align 8 %system_roots, ptr align 8 %_39, i64 1)
          to label %bb276 unwind label %cleanup25

panic:                                            ; preds = %bb22
; call core::panicking::panic_misaligned_pointer_dereference
  call void @_ZN4core9panicking36panic_misaligned_pointer_dereference17hd2b8821d4f285972E(i64 8, i64 %_395, ptr align 8 @alloc_89a2e9da03c56a4946080cb454d07f4c) #26
  unreachable

bb276:                                            ; preds = %bb263
  br label %bb23

bb23:                                             ; preds = %bb267, %bb18, %bb276
  %27 = load i8, ptr %_380, align 1, !range !10, !noundef !3
  %28 = trunc i8 %27 to i1
  br i1 %28, label %bb250, label %bb247

terminate:                                        ; preds = %bb245, %bb262, %bb244, %bb243, %bb242, %bb241, %bb240, %bb239, %bb238, %bb237, %bb236, %bb253, %bb235, %bb234, %bb251, %bb228, %bb227, %bb226, %bb233, %bb232, %bb231, %bb230, %bb229, %bb259, %bb256, %bb255
  %29 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %30 = extractvalue { ptr, i32 } %29, 0
  %31 = extractvalue { ptr, i32 } %29, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb274:                                            ; preds = %bb255
  br label %bb261

bb16:                                             ; preds = %bb15
  store i8 0, ptr %_381, align 1
  store i8 1, ptr %_384, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %sysroot1, ptr align 8 %sysroot, i64 24, i1 false)
; invoke alloc::alloc::exchange_malloc
  %_35 = invoke ptr @_ZN5alloc5alloc15exchange_malloc17hd3112a05f766f5e6E(i64 24, i64 8)
          to label %bb17 unwind label %cleanup27

bb19:                                             ; preds = %bb15
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hd1a6c09920f5cb95E"(ptr sret(%"alloc::vec::Vec<std::path::PathBuf>") align 8 %system_roots)
          to label %bb267 unwind label %cleanup25

bb257:                                            ; preds = %cleanup27
  %32 = load i8, ptr %_384, align 1, !range !10, !noundef !3
  %33 = trunc i8 %32 to i1
  br i1 %33, label %bb256, label %bb261

cleanup27:                                        ; preds = %bb264, %bb16
  %34 = landingpad { ptr, i32 }
          cleanup
  %35 = extractvalue { ptr, i32 } %34, 0
  %36 = extractvalue { ptr, i32 } %34, 1
  store ptr %35, ptr %3, align 8
  %37 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %36, ptr %37, align 8
  br label %bb257

bb17:                                             ; preds = %bb16
  store i8 0, ptr %_384, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_37, ptr align 8 %sysroot1, i64 24, i1 false)
  %_401 = ptrtoint ptr %_35 to i64
  %_404 = and i64 %_401, 7
  %_405 = icmp eq i64 %_404, 0
  %38 = call i1 @llvm.expect.i1(i1 %_405, i1 true)
  br i1 %38, label %bb264, label %panic28

bb264:                                            ; preds = %bb17
  %39 = getelementptr inbounds [1 x %"std::path::PathBuf"], ptr %_35, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %39, ptr align 8 %_37, i64 24, i1 false)
; invoke alloc::slice::<impl [T]>::into_vec
  invoke void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h8fc1d5f2c5d561d6E"(ptr sret(%"alloc::vec::Vec<std::path::PathBuf>") align 8 %system_roots, ptr align 8 %_35, i64 1)
          to label %bb18 unwind label %cleanup27

panic28:                                          ; preds = %bb17
; call core::panicking::panic_misaligned_pointer_dereference
  call void @_ZN4core9panicking36panic_misaligned_pointer_dereference17hd2b8821d4f285972E(i64 8, i64 %_401, ptr align 8 @alloc_191ed3219a3f67a0d8867bfc131eb76e) #26
  unreachable

bb18:                                             ; preds = %bb264
  store i8 0, ptr %_384, align 1
  br label %bb23

bb256:                                            ; preds = %bb257
; invoke core::ptr::drop_in_place<std::path::PathBuf>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17h3bed19ef85725cb6E"(ptr align 8 %sysroot1) #28
          to label %bb261 unwind label %terminate

bb267:                                            ; preds = %bb19
  br label %bb23

bb247:                                            ; preds = %bb249, %bb248, %bb250, %bb23
  store i8 0, ptr %_380, align 1
  store i8 0, ptr %_380, align 1
  store i8 0, ptr %_381, align 1
  br label %bb24

bb250:                                            ; preds = %bb23
  %40 = load i64, ptr %sysroot, align 8, !range !12, !noundef !3
  %41 = icmp eq i64 %40, -9223372036854775808
  %_385 = select i1 %41, i64 0, i64 1
  %42 = icmp eq i64 %_385, 1
  br i1 %42, label %bb248, label %bb247

bb248:                                            ; preds = %bb250
  %43 = load i8, ptr %_381, align 1, !range !10, !noundef !3
  %44 = trunc i8 %43 to i1
  br i1 %44, label %bb249, label %bb247

bb249:                                            ; preds = %bb248
; invoke core::ptr::drop_in_place<std::path::PathBuf>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17h3bed19ef85725cb6E"(ptr align 8 %sysroot)
          to label %bb247 unwind label %cleanup

bb24:                                             ; preds = %bb277, %bb247
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17hd1a6c09920f5cb95E"(ptr sret(%"alloc::vec::Vec<std::path::PathBuf>") align 8 %dirs)
          to label %bb25 unwind label %cleanup32

bb260:                                            ; preds = %bb261
  %45 = load i64, ptr %sysroot, align 8, !range !12, !noundef !3
  %46 = icmp eq i64 %45, -9223372036854775808
  %_388 = select i1 %46, i64 0, i64 1
  %47 = icmp eq i64 %_388, 1
  br i1 %47, label %bb258, label %bb245

bb258:                                            ; preds = %bb260
  %48 = load i8, ptr %_381, align 1, !range !10, !noundef !3
  %49 = trunc i8 %48 to i1
  br i1 %49, label %bb259, label %bb245

bb259:                                            ; preds = %bb258
; invoke core::ptr::drop_in_place<std::path::PathBuf>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17h3bed19ef85725cb6E"(ptr align 8 %sysroot) #28
          to label %bb245 unwind label %terminate

bb8:                                              ; preds = %bb7
  store ptr %_18, ptr %_19, align 8
; invoke <std::path::PathBuf as core::convert::From<&T>>::from
  invoke void @"_ZN71_$LT$std..path..PathBuf$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hed97eefc100830f2E"(ptr sret(%"std::path::PathBuf") align 8 %_20, ptr align 1 @alloc_3ecb1cd8c41b2e7af2011cccfe10be8a, i64 8)
          to label %bb9 unwind label %cleanup29

bb262:                                            ; preds = %bb244, %cleanup29
; invoke <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17hcbbfbcaeccbafd19E"(ptr align 8 %_19) #28
          to label %bb275 unwind label %terminate

cleanup29:                                        ; preds = %bb8
  %50 = landingpad { ptr, i32 }
          cleanup
  %51 = extractvalue { ptr, i32 } %50, 0
  %52 = extractvalue { ptr, i32 } %50, 1
  store ptr %51, ptr %3, align 8
  %53 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %52, ptr %53, align 8
  br label %bb262

bb9:                                              ; preds = %bb8
; invoke <std::path::PathBuf as core::convert::From<&T>>::from
  invoke void @"_ZN71_$LT$std..path..PathBuf$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hed97eefc100830f2E"(ptr sret(%"std::path::PathBuf") align 8 %_21, ptr align 1 @alloc_5ff374f76ac71dc3f031966d57f5c0d5, i64 7)
          to label %bb10 unwind label %cleanup30

bb244:                                            ; preds = %cleanup30
; invoke core::ptr::drop_in_place<std::path::PathBuf>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17h3bed19ef85725cb6E"(ptr align 8 %_20) #28
          to label %bb262 unwind label %terminate

cleanup30:                                        ; preds = %bb9
  %54 = landingpad { ptr, i32 }
          cleanup
  %55 = extractvalue { ptr, i32 } %54, 0
  %56 = extractvalue { ptr, i32 } %54, 1
  store ptr %55, ptr %3, align 8
  %57 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %56, ptr %57, align 8
  br label %bb244

bb10:                                             ; preds = %bb9
  %_391 = load ptr, ptr %_19, align 8, !noundef !3
  %_407 = ptrtoint ptr %_391 to i64
  %_410 = and i64 %_407, 7
  %_411 = icmp eq i64 %_410, 0
  %58 = call i1 @llvm.expect.i1(i1 %_411, i1 true)
  br i1 %58, label %bb265, label %panic31

bb265:                                            ; preds = %bb10
  %59 = getelementptr inbounds [2 x %"std::path::PathBuf"], ptr %_391, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %59, ptr align 8 %_20, i64 24, i1 false)
  %60 = getelementptr inbounds [2 x %"std::path::PathBuf"], ptr %_391, i64 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %60, ptr align 8 %_21, i64 24, i1 false)
  %_15 = load ptr, ptr %_19, align 8, !nonnull !3, !align !5, !noundef !3
; invoke alloc::slice::<impl [T]>::into_vec
  invoke void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h8fc1d5f2c5d561d6E"(ptr sret(%"alloc::vec::Vec<std::path::PathBuf>") align 8 %system_roots, ptr align 8 %_15, i64 2)
          to label %bb277 unwind label %cleanup

panic31:                                          ; preds = %bb10
; call core::panicking::panic_misaligned_pointer_dereference
  call void @_ZN4core9panicking36panic_misaligned_pointer_dereference17hd2b8821d4f285972E(i64 8, i64 %_407, ptr align 8 @alloc_2f0371e1b3bd98270528c81780468e69) #26
  unreachable

bb277:                                            ; preds = %bb265
  br label %bb24

bb243:                                            ; preds = %bb242, %cleanup32
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %system_roots) #28
          to label %bb245 unwind label %terminate

cleanup32:                                        ; preds = %bb222, %bb24
  %61 = landingpad { ptr, i32 }
          cleanup
  %62 = extractvalue { ptr, i32 } %61, 0
  %63 = extractvalue { ptr, i32 } %61, 1
  store ptr %62, ptr %3, align 8
  %64 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %63, ptr %64, align 8
  br label %bb243

bb25:                                             ; preds = %bb24
  %_48 = load ptr, ptr %config, align 8, !nonnull !3, !align !5, !noundef !3
  %_49.0 = load ptr, ptr %name, align 8, !nonnull !3, !align !4, !noundef !3
  %65 = getelementptr inbounds i8, ptr %name, i64 8
  %_49.1 = load i64, ptr %65, align 8, !noundef !3
; invoke pkg_config::Config::is_static
  %statik = invoke zeroext i1 @_ZN10pkg_config6Config9is_static17h4ed68957c7568424E(ptr align 8 %_48, ptr align 1 %_49.0, i64 %_49.1)
          to label %bb26 unwind label %cleanup33

bb242:                                            ; preds = %bb241, %cleanup33
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %dirs) #28
          to label %bb243 unwind label %terminate

cleanup33:                                        ; preds = %bb221, %bb26, %bb25
  %66 = landingpad { ptr, i32 }
          cleanup
  %67 = extractvalue { ptr, i32 } %66, 0
  %68 = extractvalue { ptr, i32 } %66, 1
  store ptr %67, ptr %3, align 8
  %69 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %68, ptr %69, align 8
  br label %bb242

bb26:                                             ; preds = %bb25
; invoke pkg_config::split_flags
  invoke void @_ZN10pkg_config11split_flags17ha85798ccaf61fc1bE(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %words, ptr align 1 %output.0, i64 %output.1)
          to label %bb27 unwind label %cleanup33

bb27:                                             ; preds = %bb26
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %70 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd778bbd1b5a53518E"(ptr align 8 %words)
          to label %bb28 unwind label %cleanup34

bb241:                                            ; preds = %bb240, %bb239, %bb238, %bb237, %bb236, %bb253, %bb254, %bb235, %bb234, %cleanup34
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %words) #28
          to label %bb242 unwind label %terminate

cleanup34:                                        ; preds = %bb1.i, %bb62, %bb55, %bb54, %bb69, %bb64, %bb63, %bb70, %bb41, %bb100, %bb99, %bb81, %bb78, %bb77, %bb92, %bb89, %bb88, %bb98, %bb95, %bb94, %bb85, %bb84, %bb83, %bb73, %bb71, %bb107, %bb103, %bb101, %bb45, %bb112, %bb109, %bb108, %bb46, %bb44, %bb42, %bb40, %bb38, %bb35, %bb194, %bb114, %bb113, %bb36, %bb33, %bb31, %bb30, %bb29, %bb28, %bb27
  %71 = landingpad { ptr, i32 }
          cleanup
  %72 = extractvalue { ptr, i32 } %71, 0
  %73 = extractvalue { ptr, i32 } %71, 1
  store ptr %72, ptr %3, align 8
  %74 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %73, ptr %74, align 8
  br label %bb241

bb28:                                             ; preds = %bb27
  %_54.0 = extractvalue { ptr, i64 } %70, 0
  %_54.1 = extractvalue { ptr, i64 } %70, 1
; invoke core::slice::<impl [T]>::iter
  %75 = invoke { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h0b2dd7033a7b2ee6E"(ptr align 8 %_54.0, i64 %_54.1)
          to label %bb29 unwind label %cleanup34

bb29:                                             ; preds = %bb28
  %_53.0 = extractvalue { ptr, ptr } %75, 0
  %_53.1 = extractvalue { ptr, ptr } %75, 1
; invoke core::iter::traits::iterator::Iterator::filter
  %76 = invoke { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6filter17heb89e890a1f43fd6E(ptr %_53.0, ptr %_53.1)
          to label %bb30 unwind label %cleanup34

bb30:                                             ; preds = %bb29
  %_52.0 = extractvalue { ptr, ptr } %76, 0
  %_52.1 = extractvalue { ptr, ptr } %76, 1
; invoke core::iter::traits::iterator::Iterator::map
  %77 = invoke { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17ha22f492291821f06E(ptr %_52.0, ptr %_52.1)
          to label %bb31 unwind label %cleanup34

bb31:                                             ; preds = %bb30
  %parts.0 = extractvalue { ptr, ptr } %77, 0
  %parts.1 = extractvalue { ptr, ptr } %77, 1
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %78 = invoke { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hb6ba55a5e5a9b4abE"(ptr %parts.0, ptr %parts.1)
          to label %bb32 unwind label %cleanup34

bb32:                                             ; preds = %bb31
  %_56.0 = extractvalue { ptr, ptr } %78, 0
  %_56.1 = extractvalue { ptr, ptr } %78, 1
  store ptr %_56.0, ptr %iter, align 8
  %79 = getelementptr inbounds i8, ptr %iter, i64 8
  store ptr %_56.1, ptr %79, align 8
  br label %bb33

bb33:                                             ; preds = %bb62, %bb69, %bb268, %bb269, %bb72, %bb107, %bb112, %bb48, %bb32
; invoke <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::next
  invoke void @"_ZN102_$LT$core..iter..adapters..map..Map$LT$I$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hec744de263f2e8b0E"(ptr sret(%"core::option::Option<(&str, &str)>") align 8 %_58, ptr align 8 %iter)
          to label %bb34 unwind label %cleanup34

bb34:                                             ; preds = %bb33
  %80 = load ptr, ptr %_58, align 8, !noundef !3
  %81 = ptrtoint ptr %80 to i64
  %82 = icmp eq i64 %81, 0
  %_60 = select i1 %82, i64 0, i64 1
  %83 = icmp eq i64 %_60, 0
  br i1 %83, label %bb36, label %bb35

bb36:                                             ; preds = %bb34
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %84 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd778bbd1b5a53518E"(ptr align 8 %words)
          to label %bb113 unwind label %cleanup34

bb35:                                             ; preds = %bb34
  %85 = load ptr, ptr %_58, align 8, !nonnull !3, !align !4, !noundef !3
  %86 = getelementptr inbounds i8, ptr %_58, i64 8
  %87 = load i64, ptr %86, align 8, !noundef !3
  store ptr %85, ptr %flag, align 8
  %88 = getelementptr inbounds i8, ptr %flag, i64 8
  store i64 %87, ptr %88, align 8
  %89 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_58, i32 0, i32 1
  %90 = load ptr, ptr %89, align 8, !nonnull !3, !align !4, !noundef !3
  %91 = getelementptr inbounds i8, ptr %89, i64 8
  %92 = load i64, ptr %91, align 8, !noundef !3
  store ptr %90, ptr %val, align 8
  %93 = getelementptr inbounds i8, ptr %val, i64 8
  store i64 %92, ptr %93, align 8
  %94 = load ptr, ptr %flag, align 8, !nonnull !3, !align !4, !noundef !3
  %95 = getelementptr inbounds i8, ptr %flag, i64 8
  %96 = load i64, ptr %95, align 8, !noundef !3
; invoke core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_68 = invoke zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h6d0ba1924bcb9aebE"(ptr align 1 %94, i64 %96, ptr align 1 @alloc_d10f0d5043fbc94d70d259f025f16b8e, i64 2)
          to label %bb53 unwind label %cleanup34

bb113:                                            ; preds = %bb36
  %_194.0 = extractvalue { ptr, i64 } %84, 0
  %_194.1 = extractvalue { ptr, i64 } %84, 1
; invoke core::slice::<impl [T]>::iter
  %97 = invoke { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h0b2dd7033a7b2ee6E"(ptr align 8 %_194.0, i64 %_194.1)
          to label %bb114 unwind label %cleanup34

bb114:                                            ; preds = %bb113
  %_193.0 = extractvalue { ptr, ptr } %97, 0
  %_193.1 = extractvalue { ptr, ptr } %97, 1
; invoke core::iter::traits::iterator::Iterator::flat_map
  invoke void @_ZN4core4iter6traits8iterator8Iterator8flat_map17hb5253756e1508b91E(ptr sret(%"core::iter::adapters::flatten::FlatMap<core::slice::iter::Iter<'_, alloc::string::String>, alloc::vec::Vec<&str>, {closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:939:46: 939:51}>") align 8 %iter13, ptr %_193.0, ptr %_193.1)
          to label %bb270 unwind label %cleanup34

bb270:                                            ; preds = %bb114
  br label %bb115

bb115:                                            ; preds = %bb139, %bb131, %bb271, %bb141, %bb152, %bb145, %bb185, %bb159, %bb158, %bb157, %bb154, %bb270
; invoke <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next
  %98 = invoke { ptr, i64 } @"_ZN114_$LT$core..iter..adapters..flatten..FlatMap$LT$I$C$U$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3509507725d469b9E"(ptr align 8 %iter13)
          to label %bb116 unwind label %cleanup35

bb234:                                            ; preds = %bb251, %bb252, %bb233, %bb232, %bb231, %cleanup35
; invoke core::ptr::drop_in_place<core::iter::adapters::flatten::FlatMap<core::slice::iter::Iter<alloc::string::String>,alloc::vec::Vec<&str>,pkg_config::Library::parse_libs_cflags::{{closure}}>>
  invoke void @"_ZN4core3ptr222drop_in_place$LT$core..iter..adapters..flatten..FlatMap$LT$core..slice..iter..Iter$LT$alloc..string..String$GT$$C$alloc..vec..Vec$LT$$RF$str$GT$$C$pkg_config..Library..parse_libs_cflags..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h738be6e4f27d655cE"(ptr align 8 %iter13) #28
          to label %bb241 unwind label %terminate

cleanup35:                                        ; preds = %bb193, %bb191, %bb189, %bb188, %bb187, %bb186, %bb139, %bb134, %bb133, %bb118, %bb143, %bb142, %bb140, %bb152, %bb149, %bb148, %bb144, %bb185, %bb161, %bb160, %bb156, %bb155, %bb153, %bb124, %bb123, %bb122, %bb121, %bb120, %bb119, %bb117, %bb115
  %99 = landingpad { ptr, i32 }
          cleanup
  %100 = extractvalue { ptr, i32 } %99, 0
  %101 = extractvalue { ptr, i32 } %99, 1
  store ptr %100, ptr %3, align 8
  %102 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %101, ptr %102, align 8
  br label %bb234

bb116:                                            ; preds = %bb115
  %103 = extractvalue { ptr, i64 } %98, 0
  %104 = extractvalue { ptr, i64 } %98, 1
  store ptr %103, ptr %_196, align 8
  %105 = getelementptr inbounds i8, ptr %_196, i64 8
  store i64 %104, ptr %105, align 8
  %106 = load ptr, ptr %_196, align 8, !noundef !3
  %107 = ptrtoint ptr %106 to i64
  %108 = icmp eq i64 %107, 0
  %_198 = select i1 %108, i64 0, i64 1
  %109 = icmp eq i64 %_198, 1
  br i1 %109, label %bb117, label %bb186

bb117:                                            ; preds = %bb116
  %110 = load ptr, ptr %_196, align 8, !nonnull !3, !align !4, !noundef !3
  %111 = getelementptr inbounds i8, ptr %_196, i64 8
  %112 = load i64, ptr %111, align 8, !noundef !3
  store ptr %110, ptr %part, align 8
  %113 = getelementptr inbounds i8, ptr %part, i64 8
  store i64 %112, ptr %113, align 8
  %114 = load ptr, ptr %part, align 8, !nonnull !3, !align !4, !noundef !3
  %115 = getelementptr inbounds i8, ptr %part, i64 8
  %116 = load i64, ptr %115, align 8, !noundef !3
; invoke core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_205 = invoke zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h6d0ba1924bcb9aebE"(ptr align 1 %114, i64 %116, ptr align 1 @alloc_65c8cf3ba2361b1f8b363adfcdbf2b17, i64 10)
          to label %bb130 unwind label %cleanup35

bb186:                                            ; preds = %bb116
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %117 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd778bbd1b5a53518E"(ptr align 8 %words)
          to label %bb187 unwind label %cleanup35

bb130:                                            ; preds = %bb117
  br i1 %_205, label %bb118, label %bb119

bb119:                                            ; preds = %bb130
  %118 = load ptr, ptr %part, align 8, !nonnull !3, !align !4, !noundef !3
  %119 = getelementptr inbounds i8, ptr %part, i64 8
  %120 = load i64, ptr %119, align 8, !noundef !3
; invoke core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_204 = invoke zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h6d0ba1924bcb9aebE"(ptr align 1 %118, i64 %120, ptr align 1 @alloc_c1630faa47c01a5de646890175d30173, i64 8)
          to label %bb129 unwind label %cleanup35

bb118:                                            ; preds = %bb130
; invoke <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next
  %121 = invoke { ptr, i64 } @"_ZN114_$LT$core..iter..adapters..flatten..FlatMap$LT$I$C$U$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3509507725d469b9E"(ptr align 8 %iter13)
          to label %bb131 unwind label %cleanup35

bb129:                                            ; preds = %bb119
  br i1 %_204, label %bb140, label %bb120

bb120:                                            ; preds = %bb129
  %122 = load ptr, ptr %part, align 8, !nonnull !3, !align !4, !noundef !3
  %123 = getelementptr inbounds i8, ptr %part, i64 8
  %124 = load i64, ptr %123, align 8, !noundef !3
; invoke core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_203 = invoke zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h6d0ba1924bcb9aebE"(ptr align 1 %122, i64 %124, ptr align 1 @alloc_459973b1dae428a740433a2200641014, i64 7)
          to label %bb128 unwind label %cleanup35

bb140:                                            ; preds = %bb127, %bb128, %bb129
; invoke <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next
  %125 = invoke { ptr, i64 } @"_ZN114_$LT$core..iter..adapters..flatten..FlatMap$LT$I$C$U$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3509507725d469b9E"(ptr align 8 %iter13)
          to label %bb141 unwind label %cleanup35

bb128:                                            ; preds = %bb120
  br i1 %_203, label %bb140, label %bb121

bb121:                                            ; preds = %bb128
  %126 = load ptr, ptr %part, align 8, !nonnull !3, !align !4, !noundef !3
  %127 = getelementptr inbounds i8, ptr %part, i64 8
  %128 = load i64, ptr %127, align 8, !noundef !3
; invoke core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_202 = invoke zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h6d0ba1924bcb9aebE"(ptr align 1 %126, i64 %128, ptr align 1 @alloc_daccd6c8bcb993c55816cadd8230919b, i64 10)
          to label %bb127 unwind label %cleanup35

bb127:                                            ; preds = %bb121
  br i1 %_202, label %bb140, label %bb122

bb122:                                            ; preds = %bb127
  %129 = load ptr, ptr %part, align 8, !nonnull !3, !align !4, !noundef !3
  %130 = getelementptr inbounds i8, ptr %part, i64 8
  %131 = load i64, ptr %130, align 8, !noundef !3
; invoke core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_201 = invoke zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h6d0ba1924bcb9aebE"(ptr align 1 %129, i64 %131, ptr align 1 @alloc_150ea2967dc4de3d418c188ed8a2314e, i64 10)
          to label %bb126 unwind label %cleanup35

bb126:                                            ; preds = %bb122
  br i1 %_201, label %bb144, label %bb123

bb123:                                            ; preds = %bb126
  %132 = load ptr, ptr %part, align 8, !nonnull !3, !align !4, !noundef !3
  %133 = getelementptr inbounds i8, ptr %part, i64 8
  %134 = load i64, ptr %133, align 8, !noundef !3
; invoke core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_200 = invoke zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h6d0ba1924bcb9aebE"(ptr align 1 %132, i64 %134, ptr align 1 @alloc_4b12ca9bd0a53281bb7e12838400b144, i64 11)
          to label %bb125 unwind label %cleanup35

bb144:                                            ; preds = %bb125, %bb126
; invoke <core::iter::adapters::flatten::FlatMap<I,U,F> as core::iter::traits::iterator::Iterator>::next
  %135 = invoke { ptr, i64 } @"_ZN114_$LT$core..iter..adapters..flatten..FlatMap$LT$I$C$U$C$F$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3509507725d469b9E"(ptr align 8 %iter13)
          to label %bb145 unwind label %cleanup35

bb125:                                            ; preds = %bb123
  br i1 %_200, label %bb144, label %bb124

bb124:                                            ; preds = %bb125
  %_254.0 = load ptr, ptr %part, align 8, !nonnull !3, !align !4, !noundef !3
  %136 = getelementptr inbounds i8, ptr %part, i64 8
  %_254.1 = load i64, ptr %136, align 8, !noundef !3
; invoke std::path::Path::new
  %137 = invoke { ptr, i64 } @_ZN3std4path4Path3new17hec83025b7d21bc96E(ptr align 1 %_254.0, i64 %_254.1)
          to label %bb153 unwind label %cleanup35

bb153:                                            ; preds = %bb124
  %path.0 = extractvalue { ptr, i64 } %137, 0
  %path.1 = extractvalue { ptr, i64 } %137, 1
; invoke std::path::Path::is_file
  %_255 = invoke zeroext i1 @_ZN3std4path4Path7is_file17hd7382553c84cb3f0E(ptr align 1 %path.0, i64 %path.1)
          to label %bb154 unwind label %cleanup35

bb154:                                            ; preds = %bb153
  br i1 %_255, label %bb155, label %bb115

bb155:                                            ; preds = %bb154
; invoke std::path::Path::parent
  %138 = invoke { ptr, i64 } @_ZN3std4path4Path6parent17ha5a2fb916f04a680E(ptr align 1 %path.0, i64 %path.1)
          to label %bb156 unwind label %cleanup35

bb156:                                            ; preds = %bb155
  %_257.0 = extractvalue { ptr, i64 } %138, 0
  %_257.1 = extractvalue { ptr, i64 } %138, 1
; invoke std::path::Path::file_name
  %139 = invoke { ptr, i64 } @_ZN3std4path4Path9file_name17h22b35a9cf8dd929dE(ptr align 1 %path.0, i64 %path.1)
          to label %bb157 unwind label %cleanup35

bb157:                                            ; preds = %bb156
  %_258.0 = extractvalue { ptr, i64 } %139, 0
  %_258.1 = extractvalue { ptr, i64 } %139, 1
  store ptr %_257.0, ptr %_256, align 8
  %140 = getelementptr inbounds i8, ptr %_256, i64 8
  store i64 %_257.1, ptr %140, align 8
  %141 = getelementptr inbounds { %"core::option::Option<&std::path::Path>", %"core::option::Option<&std::ffi::os_str::OsStr>", ptr }, ptr %_256, i32 0, i32 1
  store ptr %_258.0, ptr %141, align 8
  %142 = getelementptr inbounds i8, ptr %141, i64 8
  store i64 %_258.1, ptr %142, align 8
  %143 = getelementptr inbounds { %"core::option::Option<&std::path::Path>", %"core::option::Option<&std::ffi::os_str::OsStr>", ptr }, ptr %_256, i32 0, i32 2
  store ptr %target, ptr %143, align 8
  %144 = load ptr, ptr %_256, align 8, !noundef !3
  %145 = ptrtoint ptr %144 to i64
  %146 = icmp eq i64 %145, 0
  %_262 = select i1 %146, i64 0, i64 1
  %147 = icmp eq i64 %_262, 1
  br i1 %147, label %bb158, label %bb115

bb158:                                            ; preds = %bb157
  %148 = getelementptr inbounds { %"core::option::Option<&std::path::Path>", %"core::option::Option<&std::ffi::os_str::OsStr>", ptr }, ptr %_256, i32 0, i32 1
  %149 = load ptr, ptr %148, align 8, !noundef !3
  %150 = ptrtoint ptr %149 to i64
  %151 = icmp eq i64 %150, 0
  %_261 = select i1 %151, i64 0, i64 1
  %152 = icmp eq i64 %_261, 1
  br i1 %152, label %bb159, label %bb115

bb159:                                            ; preds = %bb158
  %153 = getelementptr inbounds { %"core::option::Option<&std::path::Path>", %"core::option::Option<&std::ffi::os_str::OsStr>", ptr }, ptr %_256, i32 0, i32 2
  %_378 = load ptr, ptr %153, align 8, !nonnull !3, !align !5, !noundef !3
  %_260 = load i64, ptr %_378, align 8, !range !9, !noundef !3
  %154 = icmp eq i64 %_260, 0
  br i1 %154, label %bb160, label %bb115

bb160:                                            ; preds = %bb159
  %dir.0 = load ptr, ptr %_256, align 8, !nonnull !3, !align !4, !noundef !3
  %155 = getelementptr inbounds i8, ptr %_256, i64 8
  %dir.1 = load i64, ptr %155, align 8, !noundef !3
  %156 = getelementptr inbounds { %"core::option::Option<&std::path::Path>", %"core::option::Option<&std::ffi::os_str::OsStr>", ptr }, ptr %_256, i32 0, i32 1
  %file_name.0 = load ptr, ptr %156, align 8, !nonnull !3, !align !4, !noundef !3
  %157 = getelementptr inbounds i8, ptr %156, i64 8
  %file_name.1 = load i64, ptr %157, align 8, !noundef !3
  %158 = getelementptr inbounds { %"core::option::Option<&std::path::Path>", %"core::option::Option<&std::ffi::os_str::OsStr>", ptr }, ptr %_256, i32 0, i32 2
  %_379 = load ptr, ptr %158, align 8, !nonnull !3, !align !5, !noundef !3
  %target36 = getelementptr inbounds %"core::result::Result<alloc::string::String, std::env::VarError>::Ok", ptr %_379, i32 0, i32 1
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %159 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %target36)
          to label %bb161 unwind label %cleanup35

bb161:                                            ; preds = %bb160
  %_267.0 = extractvalue { ptr, i64 } %159, 0
  %_267.1 = extractvalue { ptr, i64 } %159, 1
; invoke std::ffi::os_str::OsStr::to_string_lossy
  invoke void @_ZN3std3ffi6os_str5OsStr15to_string_lossy17h2ca5630174251fceE(ptr sret(%"alloc::borrow::Cow<'_, str>") align 8 %_270, ptr align 1 %file_name.0, i64 %file_name.1)
          to label %bb162 unwind label %cleanup35

bb162:                                            ; preds = %bb161
; invoke <alloc::borrow::Cow<B> as core::ops::deref::Deref>::deref
  %160 = invoke { ptr, i64 } @"_ZN71_$LT$alloc..borrow..Cow$LT$B$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h445e1b4694eb6d64E"(ptr align 8 %_270)
          to label %bb163 unwind label %cleanup37

bb231:                                            ; preds = %bb230, %cleanup37
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %_270) #28
          to label %bb234 unwind label %terminate

cleanup37:                                        ; preds = %bb180, %bb169, %bb168, %bb166, %bb184, %bb183, %bb165, %bb163, %bb162
  %161 = landingpad { ptr, i32 }
          cleanup
  %162 = extractvalue { ptr, i32 } %161, 0
  %163 = extractvalue { ptr, i32 } %161, 1
  store ptr %162, ptr %3, align 8
  %164 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %163, ptr %164, align 8
  br label %bb231

bb163:                                            ; preds = %bb162
  %_268.0 = extractvalue { ptr, i64 } %160, 0
  %_268.1 = extractvalue { ptr, i64 } %160, 1
; invoke pkg_config::Library::extract_lib_from_filename
  %165 = invoke { ptr, i64 } @_ZN10pkg_config7Library25extract_lib_from_filename17ha27a0809c973d2c1E(ptr align 1 %_267.0, i64 %_267.1, ptr align 1 %_268.0, i64 %_268.1)
          to label %bb164 unwind label %cleanup37

bb164:                                            ; preds = %bb163
  %166 = extractvalue { ptr, i64 } %165, 0
  %167 = extractvalue { ptr, i64 } %165, 1
  store ptr %166, ptr %_266, align 8
  %168 = getelementptr inbounds i8, ptr %_266, i64 8
  store i64 %167, ptr %168, align 8
  %169 = load ptr, ptr %_266, align 8, !noundef !3
  %170 = ptrtoint ptr %169 to i64
  %171 = icmp eq i64 %170, 0
  %_271 = select i1 %171, i64 0, i64 1
  %172 = icmp eq i64 %_271, 0
  br i1 %172, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
; invoke std::path::Path::display
  %173 = invoke { ptr, i64 } @_ZN3std4path4Path7display17hb652942038187f6eE(ptr align 1 %path.0, i64 %path.1)
          to label %bb181 unwind label %cleanup37

bb166:                                            ; preds = %bb164
  %174 = load ptr, ptr %_266, align 8, !nonnull !3, !align !4, !noundef !3
  %175 = getelementptr inbounds i8, ptr %_266, i64 8
  %176 = load i64, ptr %175, align 8, !noundef !3
  store ptr %174, ptr %lib_basename, align 8
  %177 = getelementptr inbounds i8, ptr %lib_basename, i64 8
  store i64 %176, ptr %177, align 8
; invoke std::path::Path::display
  %178 = invoke { ptr, i64 } @_ZN3std4path4Path7display17hb652942038187f6eE(ptr align 1 %dir.0, i64 %dir.1)
          to label %bb167 unwind label %cleanup37

bb181:                                            ; preds = %bb165
  %179 = extractvalue { ptr, i64 } %173, 0
  %180 = extractvalue { ptr, i64 } %173, 1
  store ptr %179, ptr %_311, align 8
  %181 = getelementptr inbounds i8, ptr %_311, i64 8
  store i64 %180, ptr %181, align 8
  store ptr %_311, ptr %_0.i66, align 8
  %182 = getelementptr inbounds i8, ptr %_0.i66, i64 8
  store ptr @"_ZN57_$LT$std..path..Display$u20$as$u20$core..fmt..Display$GT$3fmt17he7fc3be6b5ec5834E", ptr %182, align 8
  %183 = load ptr, ptr %_0.i66, align 8, !nonnull !3, !align !4, !noundef !3
  %184 = getelementptr inbounds i8, ptr %_0.i66, i64 8
  %185 = load ptr, ptr %184, align 8, !nonnull !3, !noundef !3
  %186 = insertvalue { ptr, ptr } poison, ptr %183, 0
  %187 = insertvalue { ptr, ptr } %186, ptr %185, 1
  br label %bb182

bb182:                                            ; preds = %bb181
  %_309.0 = extractvalue { ptr, ptr } %187, 0
  %_309.1 = extractvalue { ptr, ptr } %187, 1
  store ptr %name, ptr %_0.i63, align 8
  %188 = getelementptr inbounds i8, ptr %_0.i63, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %188, align 8
  %189 = load ptr, ptr %_0.i63, align 8, !nonnull !3, !align !4, !noundef !3
  %190 = getelementptr inbounds i8, ptr %_0.i63, i64 8
  %191 = load ptr, ptr %190, align 8, !nonnull !3, !noundef !3
  %192 = insertvalue { ptr, ptr } poison, ptr %189, 0
  %193 = insertvalue { ptr, ptr } %192, ptr %191, 1
  br label %bb183

bb183:                                            ; preds = %bb182
  %_312.0 = extractvalue { ptr, ptr } %193, 0
  %_312.1 = extractvalue { ptr, ptr } %193, 1
  %194 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_308, i64 0, i64 0
  store ptr %_309.0, ptr %194, align 8
  %195 = getelementptr inbounds i8, ptr %194, i64 8
  store ptr %_309.1, ptr %195, align 8
  %196 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_308, i64 0, i64 1
  store ptr %_312.0, ptr %196, align 8
  %197 = getelementptr inbounds i8, ptr %196, i64 8
  store ptr %_312.1, ptr %197, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_304, ptr align 8 @alloc_ee847d53142e0005da73ea8745649cca, i64 3, ptr align 8 %_308, i64 2)
          to label %bb184 unwind label %cleanup37

bb184:                                            ; preds = %bb183
; invoke std::io::stdio::_print
  invoke void @_ZN3std2io5stdio6_print17hc62f134794ba50d8E(ptr align 8 %_304)
          to label %bb272 unwind label %cleanup37

bb272:                                            ; preds = %bb184
  br label %bb185

bb185:                                            ; preds = %bb180, %bb272
; invoke core::ptr::drop_in_place<alloc::borrow::Cow<str>>
  invoke void @"_ZN4core3ptr50drop_in_place$LT$alloc..borrow..Cow$LT$str$GT$$GT$17h83939f53a3414d4cE"(ptr align 8 %_270)
          to label %bb115 unwind label %cleanup35

bb167:                                            ; preds = %bb166
  %198 = extractvalue { ptr, i64 } %178, 0
  %199 = extractvalue { ptr, i64 } %178, 1
  store ptr %198, ptr %_282, align 8
  %200 = getelementptr inbounds i8, ptr %_282, i64 8
  store i64 %199, ptr %200, align 8
  store ptr %_282, ptr %_0.i65, align 8
  %201 = getelementptr inbounds i8, ptr %_0.i65, i64 8
  store ptr @"_ZN57_$LT$std..path..Display$u20$as$u20$core..fmt..Display$GT$3fmt17he7fc3be6b5ec5834E", ptr %201, align 8
  %202 = load ptr, ptr %_0.i65, align 8, !nonnull !3, !align !4, !noundef !3
  %203 = getelementptr inbounds i8, ptr %_0.i65, i64 8
  %204 = load ptr, ptr %203, align 8, !nonnull !3, !noundef !3
  %205 = insertvalue { ptr, ptr } poison, ptr %202, 0
  %206 = insertvalue { ptr, ptr } %205, ptr %204, 1
  br label %bb168

bb168:                                            ; preds = %bb167
  %_280.0 = extractvalue { ptr, ptr } %206, 0
  %_280.1 = extractvalue { ptr, ptr } %206, 1
  %207 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_279, i64 0, i64 0
  store ptr %_280.0, ptr %207, align 8
  %208 = getelementptr inbounds i8, ptr %207, i64 8
  store ptr %_280.1, ptr %208, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_275, ptr align 8 @alloc_5562b61e41f982f38f0e134e7302ef66, i64 1, ptr align 8 %_279, i64 1)
          to label %bb169 unwind label %cleanup37

bb169:                                            ; preds = %bb168
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res18, ptr align 8 %_275)
          to label %bb170 unwind label %cleanup37

bb170:                                            ; preds = %bb169
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %link_search, ptr align 8 %res18, i64 24, i1 false)
  %_284 = load ptr, ptr %config, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %209 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %link_search)
          to label %bb171 unwind label %cleanup38

bb230:                                            ; preds = %bb229, %cleanup38
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %link_search) #28
          to label %bb231 unwind label %terminate

cleanup38:                                        ; preds = %bb179, %bb174, %bb173, %bb171, %bb170
  %210 = landingpad { ptr, i32 }
          cleanup
  %211 = extractvalue { ptr, i32 } %210, 0
  %212 = extractvalue { ptr, i32 } %210, 1
  store ptr %211, ptr %3, align 8
  %213 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %212, ptr %213, align 8
  br label %bb230

bb171:                                            ; preds = %bb170
  %_285.0 = extractvalue { ptr, i64 } %209, 0
  %_285.1 = extractvalue { ptr, i64 } %209, 1
; invoke pkg_config::Config::print_metadata
  invoke void @_ZN10pkg_config6Config14print_metadata17hb3a7412ee808451aE(ptr align 8 %_284, ptr align 1 %_285.0, i64 %_285.1)
          to label %bb172 unwind label %cleanup38

bb172:                                            ; preds = %bb171
  store ptr %lib_basename, ptr %_0.i62, align 8
  %214 = getelementptr inbounds i8, ptr %_0.i62, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %214, align 8
  %215 = load ptr, ptr %_0.i62, align 8, !nonnull !3, !align !4, !noundef !3
  %216 = getelementptr inbounds i8, ptr %_0.i62, i64 8
  %217 = load ptr, ptr %216, align 8, !nonnull !3, !noundef !3
  %218 = insertvalue { ptr, ptr } poison, ptr %215, 0
  %219 = insertvalue { ptr, ptr } %218, ptr %217, 1
  br label %bb173

bb173:                                            ; preds = %bb172
  %_294.0 = extractvalue { ptr, ptr } %219, 0
  %_294.1 = extractvalue { ptr, ptr } %219, 1
  %220 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_293, i64 0, i64 0
  store ptr %_294.0, ptr %220, align 8
  %221 = getelementptr inbounds i8, ptr %220, i64 8
  store ptr %_294.1, ptr %221, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_289, ptr align 8 @alloc_69525d560fd19b091bde0739dc06fbf9, i64 1, ptr align 8 %_293, i64 1)
          to label %bb174 unwind label %cleanup38

bb174:                                            ; preds = %bb173
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res19, ptr align 8 %_289)
          to label %bb175 unwind label %cleanup38

bb175:                                            ; preds = %bb174
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %link_lib, ptr align 8 %res19, i64 24, i1 false)
  %_297 = load ptr, ptr %config, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %222 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %link_lib)
          to label %bb176 unwind label %cleanup39

bb229:                                            ; preds = %cleanup39
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %link_lib) #28
          to label %bb230 unwind label %terminate

cleanup39:                                        ; preds = %bb178, %bb177, %bb176, %bb175
  %223 = landingpad { ptr, i32 }
          cleanup
  %224 = extractvalue { ptr, i32 } %223, 0
  %225 = extractvalue { ptr, i32 } %223, 1
  store ptr %224, ptr %3, align 8
  %226 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %225, ptr %226, align 8
  br label %bb229

bb176:                                            ; preds = %bb175
  %_298.0 = extractvalue { ptr, i64 } %222, 0
  %_298.1 = extractvalue { ptr, i64 } %222, 1
; invoke pkg_config::Config::print_metadata
  invoke void @_ZN10pkg_config6Config14print_metadata17hb3a7412ee808451aE(ptr align 8 %_297, ptr align 1 %_298.0, i64 %_298.1)
          to label %bb177 unwind label %cleanup39

bb177:                                            ; preds = %bb176
  %_301 = getelementptr inbounds %Library, ptr %self, i32 0, i32 2
; invoke <std::path::PathBuf as core::convert::From<&T>>::from
  invoke void @"_ZN71_$LT$std..path..PathBuf$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hf53fefcc0c86f474E"(ptr sret(%"std::path::PathBuf") align 8 %_302, ptr align 1 %path.0, i64 %path.1)
          to label %bb178 unwind label %cleanup39

bb178:                                            ; preds = %bb177
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hf03bc2b7898a48eeE"(ptr align 8 %_301, ptr align 8 %_302)
          to label %bb179 unwind label %cleanup39

bb179:                                            ; preds = %bb178
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %link_lib)
          to label %bb180 unwind label %cleanup38

bb180:                                            ; preds = %bb179
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %link_search)
          to label %bb185 unwind label %cleanup37

bb145:                                            ; preds = %bb144
  %227 = extractvalue { ptr, i64 } %135, 0
  %228 = extractvalue { ptr, i64 } %135, 1
  store ptr %227, ptr %_234, align 8
  %229 = getelementptr inbounds i8, ptr %_234, i64 8
  store i64 %228, ptr %229, align 8
  %230 = load ptr, ptr %_234, align 8, !noundef !3
  %231 = ptrtoint ptr %230 to i64
  %232 = icmp eq i64 %231, 0
  %_236 = select i1 %232, i64 0, i64 1
  %233 = icmp eq i64 %_236, 1
  br i1 %233, label %bb146, label %bb115

bb146:                                            ; preds = %bb145
  %234 = load ptr, ptr %_234, align 8, !nonnull !3, !align !4, !noundef !3
  %235 = getelementptr inbounds i8, ptr %_234, i64 8
  %236 = load i64, ptr %235, align 8, !noundef !3
  store ptr %234, ptr %symbol, align 8
  %237 = getelementptr inbounds i8, ptr %symbol, i64 8
  store i64 %236, ptr %237, align 8
  store ptr %part, ptr %_0.i61, align 8
  %238 = getelementptr inbounds i8, ptr %_0.i61, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %238, align 8
  %239 = load ptr, ptr %_0.i61, align 8, !nonnull !3, !align !4, !noundef !3
  %240 = getelementptr inbounds i8, ptr %_0.i61, i64 8
  %241 = load ptr, ptr %240, align 8, !nonnull !3, !noundef !3
  %242 = insertvalue { ptr, ptr } poison, ptr %239, 0
  %243 = insertvalue { ptr, ptr } %242, ptr %241, 1
  br label %bb147

bb147:                                            ; preds = %bb146
  %_245.0 = extractvalue { ptr, ptr } %243, 0
  %_245.1 = extractvalue { ptr, ptr } %243, 1
  store ptr %symbol, ptr %_0.i60, align 8
  %244 = getelementptr inbounds i8, ptr %_0.i60, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %244, align 8
  %245 = load ptr, ptr %_0.i60, align 8, !nonnull !3, !align !4, !noundef !3
  %246 = getelementptr inbounds i8, ptr %_0.i60, i64 8
  %247 = load ptr, ptr %246, align 8, !nonnull !3, !noundef !3
  %248 = insertvalue { ptr, ptr } poison, ptr %245, 0
  %249 = insertvalue { ptr, ptr } %248, ptr %247, 1
  br label %bb148

bb148:                                            ; preds = %bb147
  %_247.0 = extractvalue { ptr, ptr } %249, 0
  %_247.1 = extractvalue { ptr, ptr } %249, 1
  %250 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_244, i64 0, i64 0
  store ptr %_245.0, ptr %250, align 8
  %251 = getelementptr inbounds i8, ptr %250, i64 8
  store ptr %_245.1, ptr %251, align 8
  %252 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_244, i64 0, i64 1
  store ptr %_247.0, ptr %252, align 8
  %253 = getelementptr inbounds i8, ptr %252, i64 8
  store ptr %_247.1, ptr %253, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_240, ptr align 8 @alloc_d0b76532827c6ec023a612aa13ae3b09, i64 2, ptr align 8 %_244, i64 2)
          to label %bb149 unwind label %cleanup35

bb149:                                            ; preds = %bb148
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res17, ptr align 8 %_240)
          to label %bb150 unwind label %cleanup35

bb150:                                            ; preds = %bb149
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %meta16, ptr align 8 %res17, i64 24, i1 false)
  %_250 = load ptr, ptr %config, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %254 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %meta16)
          to label %bb151 unwind label %cleanup40

bb232:                                            ; preds = %cleanup40
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta16) #28
          to label %bb234 unwind label %terminate

cleanup40:                                        ; preds = %bb151, %bb150
  %255 = landingpad { ptr, i32 }
          cleanup
  %256 = extractvalue { ptr, i32 } %255, 0
  %257 = extractvalue { ptr, i32 } %255, 1
  store ptr %256, ptr %3, align 8
  %258 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %257, ptr %258, align 8
  br label %bb232

bb151:                                            ; preds = %bb150
  %_251.0 = extractvalue { ptr, i64 } %254, 0
  %_251.1 = extractvalue { ptr, i64 } %254, 1
; invoke pkg_config::Config::print_metadata
  invoke void @_ZN10pkg_config6Config14print_metadata17hb3a7412ee808451aE(ptr align 8 %_250, ptr align 1 %_251.0, i64 %_251.1)
          to label %bb152 unwind label %cleanup40

bb152:                                            ; preds = %bb151
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta16)
          to label %bb115 unwind label %cleanup35

bb141:                                            ; preds = %bb140
  %259 = extractvalue { ptr, i64 } %125, 0
  %260 = extractvalue { ptr, i64 } %125, 1
  store ptr %259, ptr %_227, align 8
  %261 = getelementptr inbounds i8, ptr %_227, i64 8
  store i64 %260, ptr %261, align 8
  %262 = load ptr, ptr %_227, align 8, !noundef !3
  %263 = ptrtoint ptr %262 to i64
  %264 = icmp eq i64 %263, 0
  %_229 = select i1 %264, i64 0, i64 1
  %265 = icmp eq i64 %_229, 1
  br i1 %265, label %bb142, label %bb115

bb142:                                            ; preds = %bb141
  %inc.0 = load ptr, ptr %_227, align 8, !nonnull !3, !align !4, !noundef !3
  %266 = getelementptr inbounds i8, ptr %_227, i64 8
  %inc.1 = load i64, ptr %266, align 8, !noundef !3
  %_232 = getelementptr inbounds %Library, ptr %self, i32 0, i32 5
; invoke <std::path::PathBuf as core::convert::From<&T>>::from
  invoke void @"_ZN71_$LT$std..path..PathBuf$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hed97eefc100830f2E"(ptr sret(%"std::path::PathBuf") align 8 %_233, ptr align 1 %inc.0, i64 %inc.1)
          to label %bb143 unwind label %cleanup35

bb143:                                            ; preds = %bb142
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hf03bc2b7898a48eeE"(ptr align 8 %_232, ptr align 8 %_233)
          to label %bb271 unwind label %cleanup35

bb271:                                            ; preds = %bb143
  br label %bb115

bb131:                                            ; preds = %bb118
  %267 = extractvalue { ptr, i64 } %121, 0
  %268 = extractvalue { ptr, i64 } %121, 1
  store ptr %267, ptr %_206, align 8
  %269 = getelementptr inbounds i8, ptr %_206, i64 8
  store i64 %268, ptr %269, align 8
  %270 = load ptr, ptr %_206, align 8, !noundef !3
  %271 = ptrtoint ptr %270 to i64
  %272 = icmp eq i64 %271, 0
  %_208 = select i1 %272, i64 0, i64 1
  %273 = icmp eq i64 %_208, 1
  br i1 %273, label %bb132, label %bb115

bb132:                                            ; preds = %bb131
  %274 = load ptr, ptr %_206, align 8, !nonnull !3, !align !4, !noundef !3
  %275 = getelementptr inbounds i8, ptr %_206, i64 8
  %276 = load i64, ptr %275, align 8, !noundef !3
  store ptr %274, ptr %lib, align 8
  %277 = getelementptr inbounds i8, ptr %lib, i64 8
  store i64 %276, ptr %277, align 8
  store ptr %lib, ptr %_0.i59, align 8
  %278 = getelementptr inbounds i8, ptr %_0.i59, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %278, align 8
  %279 = load ptr, ptr %_0.i59, align 8, !nonnull !3, !align !4, !noundef !3
  %280 = getelementptr inbounds i8, ptr %_0.i59, i64 8
  %281 = load ptr, ptr %280, align 8, !nonnull !3, !noundef !3
  %282 = insertvalue { ptr, ptr } poison, ptr %279, 0
  %283 = insertvalue { ptr, ptr } %282, ptr %281, 1
  br label %bb133

bb133:                                            ; preds = %bb132
  %_217.0 = extractvalue { ptr, ptr } %283, 0
  %_217.1 = extractvalue { ptr, ptr } %283, 1
  %284 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_216, i64 0, i64 0
  store ptr %_217.0, ptr %284, align 8
  %285 = getelementptr inbounds i8, ptr %284, i64 8
  store ptr %_217.1, ptr %285, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_212, ptr align 8 @alloc_57328cd0e08492da65005665ccae6f31, i64 1, ptr align 8 %_216, i64 1)
          to label %bb134 unwind label %cleanup35

bb134:                                            ; preds = %bb133
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res15, ptr align 8 %_212)
          to label %bb135 unwind label %cleanup35

bb135:                                            ; preds = %bb134
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %meta14, ptr align 8 %res15, i64 24, i1 false)
  %_220 = load ptr, ptr %config, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %286 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %meta14)
          to label %bb136 unwind label %cleanup41

bb233:                                            ; preds = %cleanup41
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta14) #28
          to label %bb234 unwind label %terminate

cleanup41:                                        ; preds = %bb138, %bb137, %bb136, %bb135
  %287 = landingpad { ptr, i32 }
          cleanup
  %288 = extractvalue { ptr, i32 } %287, 0
  %289 = extractvalue { ptr, i32 } %287, 1
  store ptr %288, ptr %3, align 8
  %290 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %289, ptr %290, align 8
  br label %bb233

bb136:                                            ; preds = %bb135
  %_221.0 = extractvalue { ptr, i64 } %286, 0
  %_221.1 = extractvalue { ptr, i64 } %286, 1
; invoke pkg_config::Config::print_metadata
  invoke void @_ZN10pkg_config6Config14print_metadata17hb3a7412ee808451aE(ptr align 8 %_220, ptr align 1 %_221.0, i64 %_221.1)
          to label %bb137 unwind label %cleanup41

bb137:                                            ; preds = %bb136
  %_224 = getelementptr inbounds %Library, ptr %self, i32 0, i32 3
  %_226.0 = load ptr, ptr %lib, align 8, !nonnull !3, !align !4, !noundef !3
  %291 = getelementptr inbounds i8, ptr %lib, i64 8
  %_226.1 = load i64, ptr %291, align 8, !noundef !3
; invoke <str as alloc::string::ToString>::to_string
  invoke void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17h19f0c60c67b6d201E"(ptr sret(%"alloc::string::String") align 8 %_225, ptr align 1 %_226.0, i64 %_226.1)
          to label %bb138 unwind label %cleanup41

bb138:                                            ; preds = %bb137
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h8a7b231363c15384E"(ptr align 8 %_224, ptr align 8 %_225)
          to label %bb139 unwind label %cleanup41

bb139:                                            ; preds = %bb138
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta14)
          to label %bb115 unwind label %cleanup35

bb187:                                            ; preds = %bb186
  %_316.0 = extractvalue { ptr, i64 } %117, 0
  %_316.1 = extractvalue { ptr, i64 } %117, 1
; invoke core::slice::<impl [T]>::iter
  %292 = invoke { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h0b2dd7033a7b2ee6E"(ptr align 8 %_316.0, i64 %_316.1)
          to label %bb188 unwind label %cleanup35

bb188:                                            ; preds = %bb187
  %_315.0 = extractvalue { ptr, ptr } %292, 0
  %_315.1 = extractvalue { ptr, ptr } %292, 1
; invoke core::iter::traits::iterator::Iterator::filter
  %293 = invoke { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator6filter17h6b8bed99a7f0449dE(ptr %_315.0, ptr %_315.1)
          to label %bb189 unwind label %cleanup35

bb189:                                            ; preds = %bb188
  %linker_options.0 = extractvalue { ptr, ptr } %293, 0
  %linker_options.1 = extractvalue { ptr, ptr } %293, 1
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  %294 = invoke { ptr, ptr } @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h93b96e9b8d260840E"(ptr %linker_options.0, ptr %linker_options.1)
          to label %bb190 unwind label %cleanup35

bb190:                                            ; preds = %bb189
  %_318.0 = extractvalue { ptr, ptr } %294, 0
  %_318.1 = extractvalue { ptr, ptr } %294, 1
  store ptr %_318.0, ptr %iter20, align 8
  %295 = getelementptr inbounds i8, ptr %iter20, i64 8
  store ptr %_318.1, ptr %295, align 8
  br label %bb191

bb191:                                            ; preds = %bb220, %bb190
; invoke <core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::next
  %296 = invoke align 8 ptr @"_ZN108_$LT$core..iter..adapters..filter..Filter$LT$I$C$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h3b66128e15d12519E"(ptr align 8 %iter20)
          to label %bb192 unwind label %cleanup35

bb192:                                            ; preds = %bb191
  store ptr %296, ptr %_320, align 8
  %297 = load ptr, ptr %_320, align 8, !noundef !3
  %298 = ptrtoint ptr %297 to i64
  %299 = icmp eq i64 %298, 0
  %_322 = select i1 %299, i64 0, i64 1
  %300 = icmp eq i64 %_322, 0
  br i1 %300, label %bb194, label %bb193

bb194:                                            ; preds = %bb192
; invoke core::ptr::drop_in_place<core::iter::adapters::flatten::FlatMap<core::slice::iter::Iter<alloc::string::String>,alloc::vec::Vec<&str>,pkg_config::Library::parse_libs_cflags::{{closure}}>>
  invoke void @"_ZN4core3ptr222drop_in_place$LT$core..iter..adapters..flatten..FlatMap$LT$core..slice..iter..Iter$LT$alloc..string..String$GT$$C$alloc..vec..Vec$LT$$RF$str$GT$$C$pkg_config..Library..parse_libs_cflags..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$17h738be6e4f27d655cE"(ptr align 8 %iter13)
          to label %bb221 unwind label %cleanup34

bb193:                                            ; preds = %bb192
  %option = load ptr, ptr %_320, align 8, !nonnull !3, !align !5, !noundef !3
  store i8 0, ptr %pop, align 1
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17ha4159766d030dcfaE"(ptr sret(%"alloc::vec::Vec<&str>") align 8 %ld_option)
          to label %bb195 unwind label %cleanup35

bb221:                                            ; preds = %bb194
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %words)
          to label %bb222 unwind label %cleanup33

bb222:                                            ; preds = %bb221
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %dirs)
          to label %bb223 unwind label %cleanup32

bb223:                                            ; preds = %bb222
; invoke core::ptr::drop_in_place<alloc::vec::Vec<std::path::PathBuf>>
  invoke void @"_ZN4core3ptr62drop_in_place$LT$alloc..vec..Vec$LT$std..path..PathBuf$GT$$GT$17hdb33a561d8f98a0aE"(ptr align 8 %system_roots)
          to label %bb224 unwind label %cleanup

bb224:                                            ; preds = %bb223
; call core::ptr::drop_in_place<core::result::Result<alloc::string::String,std::env::VarError>>
  call void @"_ZN4core3ptr91drop_in_place$LT$core..result..Result$LT$alloc..string..String$C$std..env..VarError$GT$$GT$17he3784d90bbaa7c42E"(ptr align 8 %target)
  ret void

bb195:                                            ; preds = %bb193
  store i8 1, ptr %_382, align 1
  store i64 4, ptr %_329, align 8
  %301 = load i64, ptr %_329, align 8, !noundef !3
; invoke <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFrom<usize>>>::index
  %302 = invoke { ptr, i64 } @"_ZN113_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFrom$LT$usize$GT$$GT$$GT$5index17h5518cacbec564e85E"(ptr align 8 %option, i64 %301, ptr align 8 @alloc_1f053a89755d01077bd7134e1ff11664)
          to label %bb196 unwind label %cleanup42

bb252:                                            ; preds = %bb228, %bb227, %bb226, %cleanup42
  %303 = load i8, ptr %_382, align 1, !range !10, !noundef !3
  %304 = trunc i8 %303 to i1
  br i1 %304, label %bb251, label %bb234

cleanup42:                                        ; preds = %bb207, %bb204, %bb219, %bb208, %bb202, %bb199, %bb197, %bb196, %bb195
  %305 = landingpad { ptr, i32 }
          cleanup
  %306 = extractvalue { ptr, i32 } %305, 0
  %307 = extractvalue { ptr, i32 } %305, 1
  store ptr %306, ptr %3, align 8
  %308 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %307, ptr %308, align 8
  br label %bb252

bb196:                                            ; preds = %bb195
  %_328.0 = extractvalue { ptr, i64 } %302, 0
  %_328.1 = extractvalue { ptr, i64 } %302, 1
; invoke core::str::<impl str>::split
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h37b7a3ae21cc6b09E"(ptr sret(%"core::str::iter::Split<'_, char>") align 8 %_327, ptr align 1 %_328.0, i64 %_328.1, i32 44)
          to label %bb197 unwind label %cleanup42

bb197:                                            ; preds = %bb196
; invoke <I as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN63_$LT$I$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17h18d0da7106718c14E"(ptr sret(%"core::str::iter::Split<'_, char>") align 8 %_326, ptr align 8 %_327)
          to label %bb198 unwind label %cleanup42

bb198:                                            ; preds = %bb197
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %iter21, ptr align 8 %_326, i64 72, i1 false)
  br label %bb199

bb199:                                            ; preds = %bb203, %bb206, %bb273, %bb198
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %309 = invoke { ptr, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0568ea1bfd125502E"(ptr align 8 %iter21)
          to label %bb200 unwind label %cleanup42

bb200:                                            ; preds = %bb199
  %310 = extractvalue { ptr, i64 } %309, 0
  %311 = extractvalue { ptr, i64 } %309, 1
  store ptr %310, ptr %_331, align 8
  %312 = getelementptr inbounds i8, ptr %_331, i64 8
  store i64 %311, ptr %312, align 8
  %313 = load ptr, ptr %_331, align 8, !noundef !3
  %314 = ptrtoint ptr %313 to i64
  %315 = icmp eq i64 %314, 0
  %_333 = select i1 %315, i64 0, i64 1
  %316 = icmp eq i64 %_333, 0
  br i1 %316, label %bb202, label %bb201

bb202:                                            ; preds = %bb200
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %317 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h5724e53d580ba91fE"(ptr align 8 %ld_option)
          to label %bb208 unwind label %cleanup42

bb201:                                            ; preds = %bb200
  %318 = load ptr, ptr %_331, align 8, !nonnull !3, !align !4, !noundef !3
  %319 = getelementptr inbounds i8, ptr %_331, i64 8
  %320 = load i64, ptr %319, align 8, !noundef !3
  store ptr %318, ptr %subopt, align 8
  %321 = getelementptr inbounds i8, ptr %subopt, i64 8
  store i64 %320, ptr %321, align 8
  %322 = load i8, ptr %pop, align 1, !range !10, !noundef !3
  %_335 = trunc i8 %322 to i1
  br i1 %_335, label %bb203, label %bb204

bb208:                                            ; preds = %bb202
  %_351.0 = extractvalue { ptr, i64 } %317, 0
  %_351.1 = extractvalue { ptr, i64 } %317, 1
; invoke alloc::slice::<impl [T]>::join
  invoke void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4join17hada6e44c2df73d1aE"(ptr sret(%"alloc::string::String") align 8 %_350, ptr align 8 %_351.0, i64 %_351.1, ptr align 1 @alloc_41a776d8d06dc2b9b0480e88fa257ffe, i64 1)
          to label %bb209 unwind label %cleanup42

bb209:                                            ; preds = %bb208
  store ptr %_350, ptr %_0.i64, align 8
  %323 = getelementptr inbounds i8, ptr %_0.i64, i64 8
  store ptr @"_ZN60_$LT$alloc..string..String$u20$as$u20$core..fmt..Display$GT$3fmt17h15fcfb39847e4326E", ptr %323, align 8
  %324 = load ptr, ptr %_0.i64, align 8, !nonnull !3, !align !4, !noundef !3
  %325 = getelementptr inbounds i8, ptr %_0.i64, i64 8
  %326 = load ptr, ptr %325, align 8, !nonnull !3, !noundef !3
  %327 = insertvalue { ptr, ptr } poison, ptr %324, 0
  %328 = insertvalue { ptr, ptr } %327, ptr %326, 1
  br label %bb210

bb228:                                            ; preds = %cleanup43
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_350) #28
          to label %bb252 unwind label %terminate

cleanup43:                                        ; preds = %bb211, %bb210
  %329 = landingpad { ptr, i32 }
          cleanup
  %330 = extractvalue { ptr, i32 } %329, 0
  %331 = extractvalue { ptr, i32 } %329, 1
  store ptr %330, ptr %3, align 8
  %332 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %331, ptr %332, align 8
  br label %bb228

bb210:                                            ; preds = %bb209
  %_348.0 = extractvalue { ptr, ptr } %328, 0
  %_348.1 = extractvalue { ptr, ptr } %328, 1
  %333 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_347, i64 0, i64 0
  store ptr %_348.0, ptr %333, align 8
  %334 = getelementptr inbounds i8, ptr %333, i64 8
  store ptr %_348.1, ptr %334, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_343, ptr align 8 @alloc_640948477594b724035d002f9c731505, i64 1, ptr align 8 %_347, i64 1)
          to label %bb211 unwind label %cleanup43

bb211:                                            ; preds = %bb210
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res23, ptr align 8 %_343)
          to label %bb212 unwind label %cleanup43

bb212:                                            ; preds = %bb211
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_350)
          to label %bb213 unwind label %cleanup44

bb227:                                            ; preds = %cleanup44
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %res23) #28
          to label %bb252 unwind label %terminate

cleanup44:                                        ; preds = %bb212
  %335 = landingpad { ptr, i32 }
          cleanup
  %336 = extractvalue { ptr, i32 } %335, 0
  %337 = extractvalue { ptr, i32 } %335, 1
  store ptr %336, ptr %3, align 8
  %338 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %337, ptr %338, align 8
  br label %bb227

bb213:                                            ; preds = %bb212
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %meta22, ptr align 8 %res23, i64 24, i1 false)
  %_355 = load ptr, ptr %config, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %339 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %meta22)
          to label %bb214 unwind label %cleanup45

bb226:                                            ; preds = %cleanup45
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta22) #28
          to label %bb252 unwind label %terminate

cleanup45:                                        ; preds = %bb218, %bb217, %bb216, %bb215, %bb214, %bb213
  %340 = landingpad { ptr, i32 }
          cleanup
  %341 = extractvalue { ptr, i32 } %340, 0
  %342 = extractvalue { ptr, i32 } %340, 1
  store ptr %341, ptr %3, align 8
  %343 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %342, ptr %343, align 8
  br label %bb226

bb214:                                            ; preds = %bb213
  %_356.0 = extractvalue { ptr, i64 } %339, 0
  %_356.1 = extractvalue { ptr, i64 } %339, 1
; invoke pkg_config::Config::print_metadata
  invoke void @_ZN10pkg_config6Config14print_metadata17hb3a7412ee808451aE(ptr align 8 %_355, ptr align 1 %_356.0, i64 %_356.1)
          to label %bb215 unwind label %cleanup45

bb215:                                            ; preds = %bb214
  %_359 = getelementptr inbounds %Library, ptr %self, i32 0, i32 6
  store i8 0, ptr %_382, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_363, ptr align 8 %ld_option, i64 24, i1 false)
; invoke <alloc::vec::Vec<T,A> as core::iter::traits::collect::IntoIterator>::into_iter
  invoke void @"_ZN90_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..iter..traits..collect..IntoIterator$GT$9into_iter17hea4a6b49e6435c75E"(ptr sret(%"alloc::vec::into_iter::IntoIter<&str>") align 8 %_362, ptr align 8 %_363)
          to label %bb216 unwind label %cleanup45

bb216:                                            ; preds = %bb215
; invoke core::iter::traits::iterator::Iterator::map
  invoke void @_ZN4core4iter6traits8iterator8Iterator3map17ha175b8935e57b4d1E(ptr sret(%"core::iter::adapters::map::Map<alloc::vec::into_iter::IntoIter<&str>, fn(&str) -> alloc::string::String {<alloc::string::String as core::convert::From<&str>>::from}>") align 8 %_361, ptr align 8 %_362)
          to label %bb217 unwind label %cleanup45

bb217:                                            ; preds = %bb216
; invoke core::iter::traits::iterator::Iterator::collect
  invoke void @_ZN4core4iter6traits8iterator8Iterator7collect17h22dfae07877a7444E(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_360, ptr align 8 %_361)
          to label %bb218 unwind label %cleanup45

bb218:                                            ; preds = %bb217
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h08ef0425e8f0d2b6E"(ptr align 8 %_359, ptr align 8 %_360)
          to label %bb219 unwind label %cleanup45

bb219:                                            ; preds = %bb218
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta22)
          to label %bb220 unwind label %cleanup42

bb220:                                            ; preds = %bb219
  store i8 0, ptr %_382, align 1
  br label %bb191

bb204:                                            ; preds = %bb201
; invoke core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq
  %_336 = invoke zeroext i1 @"_ZN4core3cmp5impls69_$LT$impl$u20$core..cmp..PartialEq$LT$$RF$B$GT$$u20$for$u20$$RF$A$GT$2eq17h73624e3f33ed922aE"(ptr align 8 %subopt, ptr align 8 @alloc_07b7b45c4fa6ac028ad5e9bd38ae9290)
          to label %bb205 unwind label %cleanup42

bb203:                                            ; preds = %bb201
  store i8 0, ptr %pop, align 1
  br label %bb199

bb205:                                            ; preds = %bb204
  br i1 %_336, label %bb206, label %bb207

bb207:                                            ; preds = %bb205
  %_340.0 = load ptr, ptr %subopt, align 8, !nonnull !3, !align !4, !noundef !3
  %344 = getelementptr inbounds i8, ptr %subopt, i64 8
  %_340.1 = load i64, ptr %344, align 8, !noundef !3
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h67f941fe3bed3648E"(ptr align 8 %ld_option, ptr align 1 %_340.0, i64 %_340.1)
          to label %bb273 unwind label %cleanup42

bb206:                                            ; preds = %bb205
  store i8 1, ptr %pop, align 1
  br label %bb199

bb273:                                            ; preds = %bb207
  br label %bb199

bb251:                                            ; preds = %bb252
; invoke core::ptr::drop_in_place<alloc::vec::Vec<&str>>
  invoke void @"_ZN4core3ptr51drop_in_place$LT$alloc..vec..Vec$LT$$RF$str$GT$$GT$17h0e3817a1800996b1E"(ptr align 8 %ld_option) #28
          to label %bb234 unwind label %terminate

bb53:                                             ; preds = %bb35
  br i1 %_68, label %bb37, label %bb38

bb38:                                             ; preds = %bb53
  %345 = load ptr, ptr %flag, align 8, !nonnull !3, !align !4, !noundef !3
  %346 = getelementptr inbounds i8, ptr %flag, i64 8
  %347 = load i64, ptr %346, align 8, !noundef !3
; invoke core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_67 = invoke zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h6d0ba1924bcb9aebE"(ptr align 1 %345, i64 %347, ptr align 1 @alloc_3a992cc6e4d01a5b6d488fec7638d7b0, i64 2)
          to label %bb52 unwind label %cleanup34

bb37:                                             ; preds = %bb53
  store ptr %val, ptr %_0.i, align 8
  %348 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %348, align 8
  %349 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %350 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %351 = load ptr, ptr %350, align 8, !nonnull !3, !noundef !3
  %352 = insertvalue { ptr, ptr } poison, ptr %349, 0
  %353 = insertvalue { ptr, ptr } %352, ptr %351, 1
  br label %bb54

bb52:                                             ; preds = %bb38
  br i1 %_67, label %bb39, label %bb40

bb40:                                             ; preds = %bb52
  %354 = load ptr, ptr %flag, align 8, !nonnull !3, !align !4, !noundef !3
  %355 = getelementptr inbounds i8, ptr %flag, i64 8
  %356 = load i64, ptr %355, align 8, !noundef !3
; invoke core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_66 = invoke zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h6d0ba1924bcb9aebE"(ptr align 1 %354, i64 %356, ptr align 1 @alloc_5fd2da0302ebe7328dc023f4447a3a41, i64 2)
          to label %bb51 unwind label %cleanup34

bb39:                                             ; preds = %bb52
  store ptr %val, ptr %_0.i53, align 8
  %357 = getelementptr inbounds i8, ptr %_0.i53, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %357, align 8
  %358 = load ptr, ptr %_0.i53, align 8, !nonnull !3, !align !4, !noundef !3
  %359 = getelementptr inbounds i8, ptr %_0.i53, i64 8
  %360 = load ptr, ptr %359, align 8, !nonnull !3, !noundef !3
  %361 = insertvalue { ptr, ptr } poison, ptr %358, 0
  %362 = insertvalue { ptr, ptr } %361, ptr %360, 1
  br label %bb63

bb51:                                             ; preds = %bb40
  br i1 %_66, label %bb41, label %bb42

bb42:                                             ; preds = %bb51
  %363 = load ptr, ptr %flag, align 8, !nonnull !3, !align !4, !noundef !3
  %364 = getelementptr inbounds i8, ptr %flag, i64 8
  %365 = load i64, ptr %364, align 8, !noundef !3
; invoke core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_65 = invoke zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h6d0ba1924bcb9aebE"(ptr align 1 %363, i64 %365, ptr align 1 @alloc_665d7d49e00c782fd25e4fa7099ae8ab, i64 2)
          to label %bb50 unwind label %cleanup34

bb41:                                             ; preds = %bb51
  %_108 = getelementptr inbounds %Library, ptr %self, i32 0, i32 5
  %_110.0 = load ptr, ptr %val, align 8, !nonnull !3, !align !4, !noundef !3
  %366 = getelementptr inbounds i8, ptr %val, i64 8
  %_110.1 = load i64, ptr %366, align 8, !noundef !3
; invoke <std::path::PathBuf as core::convert::From<&T>>::from
  invoke void @"_ZN71_$LT$std..path..PathBuf$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hed97eefc100830f2E"(ptr sret(%"std::path::PathBuf") align 8 %_109, ptr align 1 %_110.0, i64 %_110.1)
          to label %bb70 unwind label %cleanup34

bb50:                                             ; preds = %bb42
  br i1 %_65, label %bb43, label %bb44

bb44:                                             ; preds = %bb50
  %367 = load ptr, ptr %flag, align 8, !nonnull !3, !align !4, !noundef !3
  %368 = getelementptr inbounds i8, ptr %flag, i64 8
  %369 = load i64, ptr %368, align 8, !noundef !3
; invoke core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_64 = invoke zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h6d0ba1924bcb9aebE"(ptr align 1 %367, i64 %369, ptr align 1 @alloc_80cfbceebfc90e4304683418bf90bb9c, i64 2)
          to label %bb49 unwind label %cleanup34

bb43:                                             ; preds = %bb50
  %370 = load i8, ptr %is_msvc, align 1, !range !10, !noundef !3
  %_111 = trunc i8 %370 to i1
  br i1 %_111, label %bb71, label %bb73

bb49:                                             ; preds = %bb44
  br i1 %_64, label %bb45, label %bb46

bb46:                                             ; preds = %bb49
  %371 = load ptr, ptr %flag, align 8, !nonnull !3, !align !4, !noundef !3
  %372 = getelementptr inbounds i8, ptr %flag, i64 8
  %373 = load i64, ptr %372, align 8, !noundef !3
; invoke core::str::traits::<impl core::cmp::PartialEq for str>::eq
  %_63 = invoke zeroext i1 @"_ZN4core3str6traits54_$LT$impl$u20$core..cmp..PartialEq$u20$for$u20$str$GT$2eq17h6d0ba1924bcb9aebE"(ptr align 1 %371, i64 %373, ptr align 1 @alloc_d793d56e905810586c9ec80591506f51, i64 2)
          to label %bb48 unwind label %cleanup34

bb45:                                             ; preds = %bb49
  %_169.0 = load ptr, ptr %val, align 8, !nonnull !3, !align !4, !noundef !3
  %374 = getelementptr inbounds i8, ptr %val, i64 8
  %_169.1 = load i64, ptr %374, align 8, !noundef !3
; invoke core::str::<impl str>::split
  invoke void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h37b7a3ae21cc6b09E"(ptr sret(%"core::str::iter::Split<'_, char>") align 8 %iter10, ptr align 1 %_169.0, i64 %_169.1, i32 61)
          to label %bb101 unwind label %cleanup34

bb48:                                             ; preds = %bb46
  br i1 %_63, label %bb47, label %bb33

bb47:                                             ; preds = %bb48
  store ptr %val, ptr %_0.i58, align 8
  %375 = getelementptr inbounds i8, ptr %_0.i58, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %375, align 8
  %376 = load ptr, ptr %_0.i58, align 8, !nonnull !3, !align !4, !noundef !3
  %377 = getelementptr inbounds i8, ptr %_0.i58, i64 8
  %378 = load ptr, ptr %377, align 8, !nonnull !3, !noundef !3
  %379 = insertvalue { ptr, ptr } poison, ptr %376, 0
  %380 = insertvalue { ptr, ptr } %379, ptr %378, 1
  br label %bb108

bb108:                                            ; preds = %bb47
  %_186.0 = extractvalue { ptr, ptr } %380, 0
  %_186.1 = extractvalue { ptr, ptr } %380, 1
  %381 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_185, i64 0, i64 0
  store ptr %_186.0, ptr %381, align 8
  %382 = getelementptr inbounds i8, ptr %381, i64 8
  store ptr %_186.1, ptr %382, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_181, ptr align 8 @alloc_dd7944267044200cc6adbecbe4e74159, i64 1, ptr align 8 %_185, i64 1)
          to label %bb109 unwind label %cleanup34

bb109:                                            ; preds = %bb108
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res12, ptr align 8 %_181)
          to label %bb110 unwind label %cleanup34

bb110:                                            ; preds = %bb109
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %meta11, ptr align 8 %res12, i64 24, i1 false)
  %_189 = load ptr, ptr %config, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %383 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %meta11)
          to label %bb111 unwind label %cleanup46

bb235:                                            ; preds = %cleanup46
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta11) #28
          to label %bb241 unwind label %terminate

cleanup46:                                        ; preds = %bb111, %bb110
  %384 = landingpad { ptr, i32 }
          cleanup
  %385 = extractvalue { ptr, i32 } %384, 0
  %386 = extractvalue { ptr, i32 } %384, 1
  store ptr %385, ptr %3, align 8
  %387 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %386, ptr %387, align 8
  br label %bb235

bb111:                                            ; preds = %bb110
  %_190.0 = extractvalue { ptr, i64 } %383, 0
  %_190.1 = extractvalue { ptr, i64 } %383, 1
; invoke pkg_config::Config::print_metadata
  invoke void @_ZN10pkg_config6Config14print_metadata17hb3a7412ee808451aE(ptr align 8 %_189, ptr align 1 %_190.0, i64 %_190.1)
          to label %bb112 unwind label %cleanup46

bb112:                                            ; preds = %bb111
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta11)
          to label %bb33 unwind label %cleanup34

bb101:                                            ; preds = %bb45
  %_171 = getelementptr inbounds %Library, ptr %self, i32 0, i32 8
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %388 = invoke { ptr, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0568ea1bfd125502E"(ptr align 8 %iter10)
          to label %bb102 unwind label %cleanup34

bb102:                                            ; preds = %bb101
  %_174.0 = extractvalue { ptr, i64 } %388, 0
  %_174.1 = extractvalue { ptr, i64 } %388, 1
  store ptr %_174.0, ptr %self.i, align 8
  %389 = getelementptr inbounds i8, ptr %self.i, i64 8
  store i64 %_174.1, ptr %389, align 8
  %390 = load ptr, ptr %self.i, align 8, !noundef !3
  %391 = ptrtoint ptr %390 to i64
  %392 = icmp eq i64 %391, 0
  %_2.i = select i1 %392, i64 0, i64 1
  br i1 %392, label %bb1.i, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17hf75b1bda0c3ed38cE.exit"

bb1.i:                                            ; preds = %bb102
; invoke core::option::unwrap_failed
  invoke void @_ZN4core6option13unwrap_failed17h630ca121a67dc3e4E(ptr align 8 @alloc_9ea3925b761d43fbdd1912574ecd6a53) #27
          to label %.noexc unwind label %cleanup34

.noexc:                                           ; preds = %bb1.i
  unreachable

"_ZN4core6option15Option$LT$T$GT$6unwrap17hf75b1bda0c3ed38cE.exit": ; preds = %bb102
  %val.0.i = load ptr, ptr %self.i, align 8, !nonnull !3, !align !4, !noundef !3
  %393 = getelementptr inbounds i8, ptr %self.i, i64 8
  %val.1.i = load i64, ptr %393, align 8, !noundef !3
  %394 = insertvalue { ptr, i64 } poison, ptr %val.0.i, 0
  %395 = insertvalue { ptr, i64 } %394, i64 %val.1.i, 1
  br label %bb103

bb103:                                            ; preds = %"_ZN4core6option15Option$LT$T$GT$6unwrap17hf75b1bda0c3ed38cE.exit"
  %_173.0 = extractvalue { ptr, i64 } %395, 0
  %_173.1 = extractvalue { ptr, i64 } %395, 1
; invoke alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  invoke void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h67276cf824909686E"(ptr sret(%"alloc::string::String") align 8 %_172, ptr align 1 %_173.0, i64 %_173.1)
          to label %bb104 unwind label %cleanup34

bb104:                                            ; preds = %bb103
  store i8 1, ptr %_383, align 1
; invoke <core::str::iter::Split<P> as core::iter::traits::iterator::Iterator>::next
  %396 = invoke { ptr, i64 } @"_ZN90_$LT$core..str..iter..Split$LT$P$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h0568ea1bfd125502E"(ptr align 8 %iter10)
          to label %bb105 unwind label %cleanup47

bb254:                                            ; preds = %cleanup47
  %397 = load i8, ptr %_383, align 1, !range !10, !noundef !3
  %398 = trunc i8 %397 to i1
  br i1 %398, label %bb253, label %bb241

cleanup47:                                        ; preds = %bb106, %bb105, %bb104
  %399 = landingpad { ptr, i32 }
          cleanup
  %400 = extractvalue { ptr, i32 } %399, 0
  %401 = extractvalue { ptr, i32 } %399, 1
  store ptr %400, ptr %3, align 8
  %402 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %401, ptr %402, align 8
  br label %bb254

bb105:                                            ; preds = %bb104
  %_177.0 = extractvalue { ptr, i64 } %396, 0
  %_177.1 = extractvalue { ptr, i64 } %396, 1
; invoke core::option::Option<T>::map
  invoke void @"_ZN4core6option15Option$LT$T$GT$3map17h7c83fa309a2e1838E"(ptr sret(%"core::option::Option<alloc::string::String>") align 8 %_176, ptr align 1 %_177.0, i64 %_177.1)
          to label %bb106 unwind label %cleanup47

bb106:                                            ; preds = %bb105
  store i8 0, ptr %_383, align 1
; invoke std::collections::hash::map::HashMap<K,V,S>::insert
  invoke void @"_ZN3std11collections4hash3map24HashMap$LT$K$C$V$C$S$GT$6insert17h1f4e78aba2e29e02E"(ptr sret(%"core::option::Option<core::option::Option<alloc::string::String>>") align 8 %_170, ptr align 8 %_171, ptr align 8 %_172, ptr align 8 %_176)
          to label %bb107 unwind label %cleanup47

bb107:                                            ; preds = %bb106
  store i8 0, ptr %_383, align 1
; invoke core::ptr::drop_in_place<core::option::Option<core::option::Option<alloc::string::String>>>
  invoke void @"_ZN4core3ptr98drop_in_place$LT$core..option..Option$LT$core..option..Option$LT$alloc..string..String$GT$$GT$$GT$17h55bfdfe9d14a7ea8E"(ptr align 8 %_170)
          to label %bb33 unwind label %cleanup34

bb253:                                            ; preds = %bb254
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %_172) #28
          to label %bb241 unwind label %terminate

bb73:                                             ; preds = %bb72, %bb43
  %_116.0 = load ptr, ptr %val, align 8, !nonnull !3, !align !4, !noundef !3
  %403 = getelementptr inbounds i8, ptr %val, i64 8
  %_116.1 = load i64, ptr %403, align 8, !noundef !3
; invoke core::str::<impl str>::starts_with
  %_115 = invoke zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h2b55c0e217167ca8E"(ptr align 1 %_116.0, i64 %_116.1, i32 58)
          to label %bb74 unwind label %cleanup34

bb71:                                             ; preds = %bb43
; invoke core::slice::<impl [T]>::contains
  %_112 = invoke zeroext i1 @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8contains17hae3153edb422aa01E"(ptr align 8 @alloc_a161b95a513a6c8003ba17020d57fbd5, i64 3, ptr align 8 %val)
          to label %bb72 unwind label %cleanup34

bb72:                                             ; preds = %bb71
  br i1 %_112, label %bb33, label %bb73

bb74:                                             ; preds = %bb73
  br i1 %_115, label %bb75, label %bb82

bb82:                                             ; preds = %bb74
  br i1 %statik, label %bb83, label %bb93

bb75:                                             ; preds = %bb74
  store ptr %flag, ptr %_0.i55, align 8
  %404 = getelementptr inbounds i8, ptr %_0.i55, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %404, align 8
  %405 = load ptr, ptr %_0.i55, align 8, !nonnull !3, !align !4, !noundef !3
  %406 = getelementptr inbounds i8, ptr %_0.i55, i64 8
  %407 = load ptr, ptr %406, align 8, !nonnull !3, !noundef !3
  %408 = insertvalue { ptr, ptr } poison, ptr %405, 0
  %409 = insertvalue { ptr, ptr } %408, ptr %407, 1
  br label %bb76

bb93:                                             ; preds = %bb86, %bb82
  store ptr %val, ptr %_0.i57, align 8
  %410 = getelementptr inbounds i8, ptr %_0.i57, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %410, align 8
  %411 = load ptr, ptr %_0.i57, align 8, !nonnull !3, !align !4, !noundef !3
  %412 = getelementptr inbounds i8, ptr %_0.i57, i64 8
  %413 = load ptr, ptr %412, align 8, !nonnull !3, !noundef !3
  %414 = insertvalue { ptr, ptr } poison, ptr %411, 0
  %415 = insertvalue { ptr, ptr } %414, ptr %413, 1
  br label %bb94

bb83:                                             ; preds = %bb82
  %_133.0 = load ptr, ptr %val, align 8, !nonnull !3, !align !4, !noundef !3
  %416 = getelementptr inbounds i8, ptr %val, i64 8
  %_133.1 = load i64, ptr %416, align 8, !noundef !3
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %417 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4bebbda27fc201fdE"(ptr align 8 %system_roots)
          to label %bb84 unwind label %cleanup34

bb84:                                             ; preds = %bb83
  %_134.0 = extractvalue { ptr, i64 } %417, 0
  %_134.1 = extractvalue { ptr, i64 } %417, 1
; invoke <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %418 = invoke { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17h4bebbda27fc201fdE"(ptr align 8 %dirs)
          to label %bb85 unwind label %cleanup34

bb85:                                             ; preds = %bb84
  %_136.0 = extractvalue { ptr, i64 } %418, 0
  %_136.1 = extractvalue { ptr, i64 } %418, 1
; invoke pkg_config::is_static_available
  %_132 = invoke zeroext i1 @_ZN10pkg_config19is_static_available17h4c39d606f406d6dcE(ptr align 1 %_133.0, i64 %_133.1, ptr align 8 %_134.0, i64 %_134.1, ptr align 8 %_136.0, i64 %_136.1)
          to label %bb86 unwind label %cleanup34

bb86:                                             ; preds = %bb85
  br i1 %_132, label %bb87, label %bb93

bb87:                                             ; preds = %bb86
  store ptr %val, ptr %_0.i56, align 8
  %419 = getelementptr inbounds i8, ptr %_0.i56, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %419, align 8
  %420 = load ptr, ptr %_0.i56, align 8, !nonnull !3, !align !4, !noundef !3
  %421 = getelementptr inbounds i8, ptr %_0.i56, i64 8
  %422 = load ptr, ptr %421, align 8, !nonnull !3, !noundef !3
  %423 = insertvalue { ptr, ptr } poison, ptr %420, 0
  %424 = insertvalue { ptr, ptr } %423, ptr %422, 1
  br label %bb88

bb94:                                             ; preds = %bb93
  %_158.0 = extractvalue { ptr, ptr } %415, 0
  %_158.1 = extractvalue { ptr, ptr } %415, 1
  %425 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_157, i64 0, i64 0
  store ptr %_158.0, ptr %425, align 8
  %426 = getelementptr inbounds i8, ptr %425, i64 8
  store ptr %_158.1, ptr %426, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_153, ptr align 8 @alloc_69525d560fd19b091bde0739dc06fbf9, i64 1, ptr align 8 %_157, i64 1)
          to label %bb95 unwind label %cleanup34

bb95:                                             ; preds = %bb94
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res9, ptr align 8 %_153)
          to label %bb96 unwind label %cleanup34

bb96:                                             ; preds = %bb95
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %meta8, ptr align 8 %res9, i64 24, i1 false)
  %_161 = load ptr, ptr %config, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %427 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %meta8)
          to label %bb97 unwind label %cleanup48

bb236:                                            ; preds = %cleanup48
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta8) #28
          to label %bb241 unwind label %terminate

cleanup48:                                        ; preds = %bb97, %bb96
  %428 = landingpad { ptr, i32 }
          cleanup
  %429 = extractvalue { ptr, i32 } %428, 0
  %430 = extractvalue { ptr, i32 } %428, 1
  store ptr %429, ptr %3, align 8
  %431 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %430, ptr %431, align 8
  br label %bb236

bb97:                                             ; preds = %bb96
  %_162.0 = extractvalue { ptr, i64 } %427, 0
  %_162.1 = extractvalue { ptr, i64 } %427, 1
; invoke pkg_config::Config::print_metadata
  invoke void @_ZN10pkg_config6Config14print_metadata17hb3a7412ee808451aE(ptr align 8 %_161, ptr align 1 %_162.0, i64 %_162.1)
          to label %bb98 unwind label %cleanup48

bb98:                                             ; preds = %bb97
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta8)
          to label %bb99 unwind label %cleanup34

bb99:                                             ; preds = %bb81, %bb92, %bb98
  %_167.0 = load ptr, ptr %val, align 8, !nonnull !3, !align !4, !noundef !3
  %432 = getelementptr inbounds i8, ptr %val, i64 8
  %_167.1 = load i64, ptr %432, align 8, !noundef !3
; invoke <str as alloc::string::ToString>::to_string
  invoke void @"_ZN47_$LT$str$u20$as$u20$alloc..string..ToString$GT$9to_string17h19f0c60c67b6d201E"(ptr sret(%"alloc::string::String") align 8 %_166, ptr align 1 %_167.0, i64 %_167.1)
          to label %bb100 unwind label %cleanup34

bb88:                                             ; preds = %bb87
  %_145.0 = extractvalue { ptr, ptr } %424, 0
  %_145.1 = extractvalue { ptr, ptr } %424, 1
  %433 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_144, i64 0, i64 0
  store ptr %_145.0, ptr %433, align 8
  %434 = getelementptr inbounds i8, ptr %433, i64 8
  store ptr %_145.1, ptr %434, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_140, ptr align 8 @alloc_a19fe9d5e1d0dabcb73f06808f3eea3f, i64 1, ptr align 8 %_144, i64 1)
          to label %bb89 unwind label %cleanup34

bb89:                                             ; preds = %bb88
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res7, ptr align 8 %_140)
          to label %bb90 unwind label %cleanup34

bb90:                                             ; preds = %bb89
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %meta6, ptr align 8 %res7, i64 24, i1 false)
  %_148 = load ptr, ptr %config, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %435 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %meta6)
          to label %bb91 unwind label %cleanup49

bb237:                                            ; preds = %cleanup49
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta6) #28
          to label %bb241 unwind label %terminate

cleanup49:                                        ; preds = %bb91, %bb90
  %436 = landingpad { ptr, i32 }
          cleanup
  %437 = extractvalue { ptr, i32 } %436, 0
  %438 = extractvalue { ptr, i32 } %436, 1
  store ptr %437, ptr %3, align 8
  %439 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %438, ptr %439, align 8
  br label %bb237

bb91:                                             ; preds = %bb90
  %_149.0 = extractvalue { ptr, i64 } %435, 0
  %_149.1 = extractvalue { ptr, i64 } %435, 1
; invoke pkg_config::Config::print_metadata
  invoke void @_ZN10pkg_config6Config14print_metadata17hb3a7412ee808451aE(ptr align 8 %_148, ptr align 1 %_149.0, i64 %_149.1)
          to label %bb92 unwind label %cleanup49

bb92:                                             ; preds = %bb91
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta6)
          to label %bb99 unwind label %cleanup34

bb76:                                             ; preds = %bb75
  %_124.0 = extractvalue { ptr, ptr } %409, 0
  %_124.1 = extractvalue { ptr, ptr } %409, 1
  store ptr %val, ptr %_0.i54, align 8
  %440 = getelementptr inbounds i8, ptr %_0.i54, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %440, align 8
  %441 = load ptr, ptr %_0.i54, align 8, !nonnull !3, !align !4, !noundef !3
  %442 = getelementptr inbounds i8, ptr %_0.i54, i64 8
  %443 = load ptr, ptr %442, align 8, !nonnull !3, !noundef !3
  %444 = insertvalue { ptr, ptr } poison, ptr %441, 0
  %445 = insertvalue { ptr, ptr } %444, ptr %443, 1
  br label %bb77

bb77:                                             ; preds = %bb76
  %_126.0 = extractvalue { ptr, ptr } %445, 0
  %_126.1 = extractvalue { ptr, ptr } %445, 1
  %446 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_123, i64 0, i64 0
  store ptr %_124.0, ptr %446, align 8
  %447 = getelementptr inbounds i8, ptr %446, i64 8
  store ptr %_124.1, ptr %447, align 8
  %448 = getelementptr inbounds [2 x %"core::fmt::rt::Argument<'_>"], ptr %_123, i64 0, i64 1
  store ptr %_126.0, ptr %448, align 8
  %449 = getelementptr inbounds i8, ptr %448, i64 8
  store ptr %_126.1, ptr %449, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_119, ptr align 8 @alloc_303033c148b649b824414b6a0c0fe0ca, i64 2, ptr align 8 %_123, i64 2)
          to label %bb78 unwind label %cleanup34

bb78:                                             ; preds = %bb77
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res5, ptr align 8 %_119)
          to label %bb79 unwind label %cleanup34

bb79:                                             ; preds = %bb78
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %meta4, ptr align 8 %res5, i64 24, i1 false)
  %_129 = load ptr, ptr %config, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %450 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %meta4)
          to label %bb80 unwind label %cleanup50

bb238:                                            ; preds = %cleanup50
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta4) #28
          to label %bb241 unwind label %terminate

cleanup50:                                        ; preds = %bb80, %bb79
  %451 = landingpad { ptr, i32 }
          cleanup
  %452 = extractvalue { ptr, i32 } %451, 0
  %453 = extractvalue { ptr, i32 } %451, 1
  store ptr %452, ptr %3, align 8
  %454 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %453, ptr %454, align 8
  br label %bb238

bb80:                                             ; preds = %bb79
  %_130.0 = extractvalue { ptr, i64 } %450, 0
  %_130.1 = extractvalue { ptr, i64 } %450, 1
; invoke pkg_config::Config::print_metadata
  invoke void @_ZN10pkg_config6Config14print_metadata17hb3a7412ee808451aE(ptr align 8 %_129, ptr align 1 %_130.0, i64 %_130.1)
          to label %bb81 unwind label %cleanup50

bb81:                                             ; preds = %bb80
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta4)
          to label %bb99 unwind label %cleanup34

bb100:                                            ; preds = %bb99
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h8a7b231363c15384E"(ptr align 8 %self, ptr align 8 %_166)
          to label %bb269 unwind label %cleanup34

bb269:                                            ; preds = %bb100
  br label %bb33

bb70:                                             ; preds = %bb41
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hf03bc2b7898a48eeE"(ptr align 8 %_108, ptr align 8 %_109)
          to label %bb268 unwind label %cleanup34

bb268:                                            ; preds = %bb70
  br label %bb33

bb63:                                             ; preds = %bb39
  %_97.0 = extractvalue { ptr, ptr } %362, 0
  %_97.1 = extractvalue { ptr, ptr } %362, 1
  %455 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_96, i64 0, i64 0
  store ptr %_97.0, ptr %455, align 8
  %456 = getelementptr inbounds i8, ptr %455, i64 8
  store ptr %_97.1, ptr %456, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_92, ptr align 8 @alloc_d560a3fd033a6be62b9f63f09e47ec45, i64 1, ptr align 8 %_96, i64 1)
          to label %bb64 unwind label %cleanup34

bb64:                                             ; preds = %bb63
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res3, ptr align 8 %_92)
          to label %bb65 unwind label %cleanup34

bb65:                                             ; preds = %bb64
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %meta2, ptr align 8 %res3, i64 24, i1 false)
  %_100 = load ptr, ptr %config, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %457 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %meta2)
          to label %bb66 unwind label %cleanup51

bb239:                                            ; preds = %cleanup51
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta2) #28
          to label %bb241 unwind label %terminate

cleanup51:                                        ; preds = %bb68, %bb67, %bb66, %bb65
  %458 = landingpad { ptr, i32 }
          cleanup
  %459 = extractvalue { ptr, i32 } %458, 0
  %460 = extractvalue { ptr, i32 } %458, 1
  store ptr %459, ptr %3, align 8
  %461 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %460, ptr %461, align 8
  br label %bb239

bb66:                                             ; preds = %bb65
  %_101.0 = extractvalue { ptr, i64 } %457, 0
  %_101.1 = extractvalue { ptr, i64 } %457, 1
; invoke pkg_config::Config::print_metadata
  invoke void @_ZN10pkg_config6Config14print_metadata17hb3a7412ee808451aE(ptr align 8 %_100, ptr align 1 %_101.0, i64 %_101.1)
          to label %bb67 unwind label %cleanup51

bb67:                                             ; preds = %bb66
  %_104 = getelementptr inbounds %Library, ptr %self, i32 0, i32 4
  %_106.0 = load ptr, ptr %val, align 8, !nonnull !3, !align !4, !noundef !3
  %462 = getelementptr inbounds i8, ptr %val, i64 8
  %_106.1 = load i64, ptr %462, align 8, !noundef !3
; invoke <std::path::PathBuf as core::convert::From<&T>>::from
  invoke void @"_ZN71_$LT$std..path..PathBuf$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hed97eefc100830f2E"(ptr sret(%"std::path::PathBuf") align 8 %_105, ptr align 1 %_106.0, i64 %_106.1)
          to label %bb68 unwind label %cleanup51

bb68:                                             ; preds = %bb67
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hf03bc2b7898a48eeE"(ptr align 8 %_104, ptr align 8 %_105)
          to label %bb69 unwind label %cleanup51

bb69:                                             ; preds = %bb68
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta2)
          to label %bb33 unwind label %cleanup34

bb54:                                             ; preds = %bb37
  %_76.0 = extractvalue { ptr, ptr } %353, 0
  %_76.1 = extractvalue { ptr, ptr } %353, 1
  %463 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_75, i64 0, i64 0
  store ptr %_76.0, ptr %463, align 8
  %464 = getelementptr inbounds i8, ptr %463, i64 8
  store ptr %_76.1, ptr %464, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_71, ptr align 8 @alloc_e25ecc6b9d0f677a7d5eef36e85104dd, i64 1, ptr align 8 %_75, i64 1)
          to label %bb55 unwind label %cleanup34

bb55:                                             ; preds = %bb54
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res, ptr align 8 %_71)
          to label %bb56 unwind label %cleanup34

bb56:                                             ; preds = %bb55
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %meta, ptr align 8 %res, i64 24, i1 false)
  %_79 = load ptr, ptr %config, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <alloc::string::String as core::ops::deref::Deref>::deref
  %465 = invoke { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %meta)
          to label %bb57 unwind label %cleanup52

bb240:                                            ; preds = %cleanup52
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta) #28
          to label %bb241 unwind label %terminate

cleanup52:                                        ; preds = %bb61, %bb60, %bb59, %bb58, %bb57, %bb56
  %466 = landingpad { ptr, i32 }
          cleanup
  %467 = extractvalue { ptr, i32 } %466, 0
  %468 = extractvalue { ptr, i32 } %466, 1
  store ptr %467, ptr %3, align 8
  %469 = getelementptr inbounds i8, ptr %3, i64 8
  store i32 %468, ptr %469, align 8
  br label %bb240

bb57:                                             ; preds = %bb56
  %_80.0 = extractvalue { ptr, i64 } %465, 0
  %_80.1 = extractvalue { ptr, i64 } %465, 1
; invoke pkg_config::Config::print_metadata
  invoke void @_ZN10pkg_config6Config14print_metadata17hb3a7412ee808451aE(ptr align 8 %_79, ptr align 1 %_80.0, i64 %_80.1)
          to label %bb58 unwind label %cleanup52

bb58:                                             ; preds = %bb57
  %_85.0 = load ptr, ptr %val, align 8, !nonnull !3, !align !4, !noundef !3
  %470 = getelementptr inbounds i8, ptr %val, i64 8
  %_85.1 = load i64, ptr %470, align 8, !noundef !3
; invoke <std::path::PathBuf as core::convert::From<&T>>::from
  invoke void @"_ZN71_$LT$std..path..PathBuf$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hed97eefc100830f2E"(ptr sret(%"std::path::PathBuf") align 8 %_84, ptr align 1 %_85.0, i64 %_85.1)
          to label %bb59 unwind label %cleanup52

bb59:                                             ; preds = %bb58
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hf03bc2b7898a48eeE"(ptr align 8 %dirs, ptr align 8 %_84)
          to label %bb60 unwind label %cleanup52

bb60:                                             ; preds = %bb59
  %_87 = getelementptr inbounds %Library, ptr %self, i32 0, i32 1
  %_89.0 = load ptr, ptr %val, align 8, !nonnull !3, !align !4, !noundef !3
  %471 = getelementptr inbounds i8, ptr %val, i64 8
  %_89.1 = load i64, ptr %471, align 8, !noundef !3
; invoke <std::path::PathBuf as core::convert::From<&T>>::from
  invoke void @"_ZN71_$LT$std..path..PathBuf$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hed97eefc100830f2E"(ptr sret(%"std::path::PathBuf") align 8 %_88, ptr align 1 %_89.0, i64 %_89.1)
          to label %bb61 unwind label %cleanup52

bb61:                                             ; preds = %bb60
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17hf03bc2b7898a48eeE"(ptr align 8 %_87, ptr align 8 %_88)
          to label %bb62 unwind label %cleanup52

bb62:                                             ; preds = %bb61
; invoke core::ptr::drop_in_place<alloc::string::String>
  invoke void @"_ZN4core3ptr42drop_in_place$LT$alloc..string..String$GT$17hda72216013508a8fE"(ptr align 8 %meta)
          to label %bb33 unwind label %cleanup34

bb266:                                            ; No predecessors!
  unreachable

bb275:                                            ; preds = %bb262
  br label %bb245

bb246:                                            ; preds = %bb245
  %472 = load ptr, ptr %3, align 8, !noundef !3
  %473 = getelementptr inbounds i8, ptr %3, i64 8
  %474 = load i32, ptr %473, align 8, !noundef !3
  %475 = insertvalue { ptr, i32 } poison, ptr %472, 0
  %476 = insertvalue { ptr, i32 } %475, i32 %474, 1
  resume { ptr, i32 } %476
}

; pkg_config::Library::parse_libs_cflags::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config7Library17parse_libs_cflags28_$u7b$$u7b$closure$u7d$$u7d$17h839b6d0fc656a5a7E"(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %0) unnamed_addr #0 {
start:
  %_1 = alloca ptr, align 8
  store ptr %0, ptr %_1, align 8
  %_3 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  %_4 = load ptr, ptr %_3, align 8, !nonnull !3, !align !5, !noundef !3
; call pkg_config::Config::env_var_os
  call void @_ZN10pkg_config6Config10env_var_os17hfbc9ab72e9fc468eE(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8 %_0, ptr align 8 %_4, ptr align 1 @alloc_d94058656367933767f61d1a71b68185, i64 7)
  ret void
}

; pkg_config::Library::parse_libs_cflags::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN10pkg_config7Library17parse_libs_cflags28_$u7b$$u7b$closure$u7d$$u7d$17ha8ea34036de8d50cE"(ptr align 1 %_1, ptr align 8 %l) unnamed_addr #0 {
start:
  %_4 = load ptr, ptr %l, align 8, !nonnull !3, !align !5, !noundef !3
; call alloc::string::String::len
  %_3 = call i64 @_ZN5alloc6string6String3len17h40ae4a8f256dd53eE(ptr align 8 %_4)
  %_0 = icmp ugt i64 %_3, 2
  ret i1 %_0
}

; pkg_config::Library::parse_libs_cflags::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config7Library17parse_libs_cflags28_$u7b$$u7b$closure$u7d$$u7d$17ha4e0f09298fa65eaE"(ptr sret({ { ptr, i64 }, { ptr, i64 } }) align 8 %_0, ptr align 1 %_1, ptr align 8 %arg) unnamed_addr #0 {
start:
  %_6 = alloca i64, align 8
  %_4 = alloca %"core::ops::range::Range<usize>", align 8
  store i64 0, ptr %_4, align 8
  %0 = getelementptr inbounds i8, ptr %_4, i64 8
  store i64 2, ptr %0, align 8
  %1 = load i64, ptr %_4, align 8, !noundef !3
  %2 = getelementptr inbounds i8, ptr %_4, i64 8
  %3 = load i64, ptr %2, align 8, !noundef !3
; call <alloc::string::String as core::ops::index::Index<core::ops::range::Range<usize>>>::index
  %4 = call { ptr, i64 } @"_ZN109_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..Range$LT$usize$GT$$GT$$GT$5index17h518197816a613e7bE"(ptr align 8 %arg, i64 %1, i64 %3, ptr align 8 @alloc_374754662dc32b6d89223b0ceeeb9526)
  %_3.0 = extractvalue { ptr, i64 } %4, 0
  %_3.1 = extractvalue { ptr, i64 } %4, 1
  store i64 2, ptr %_6, align 8
  %5 = load i64, ptr %_6, align 8, !noundef !3
; call <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFrom<usize>>>::index
  %6 = call { ptr, i64 } @"_ZN113_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFrom$LT$usize$GT$$GT$$GT$5index17h5518cacbec564e85E"(ptr align 8 %arg, i64 %5, ptr align 8 @alloc_d1c98ea29339261184cc91f96609ac1a)
  %_5.0 = extractvalue { ptr, i64 } %6, 0
  %_5.1 = extractvalue { ptr, i64 } %6, 1
  store ptr %_3.0, ptr %_0, align 8
  %7 = getelementptr inbounds i8, ptr %_0, i64 8
  store i64 %_3.1, ptr %7, align 8
  %8 = getelementptr inbounds { { ptr, i64 }, { ptr, i64 } }, ptr %_0, i32 0, i32 1
  store ptr %_5.0, ptr %8, align 8
  %9 = getelementptr inbounds i8, ptr %8, i64 8
  store i64 %_5.1, ptr %9, align 8
  ret void
}

; pkg_config::Library::parse_libs_cflags::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config7Library17parse_libs_cflags28_$u7b$$u7b$closure$u7d$$u7d$17h408390c6aadb4495E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %s.0, i64 %s.1) unnamed_addr #0 {
start:
; call alloc::str::<impl alloc::borrow::ToOwned for str>::to_owned
  call void @"_ZN5alloc3str56_$LT$impl$u20$alloc..borrow..ToOwned$u20$for$u20$str$GT$8to_owned17h67276cf824909686E"(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %s.0, i64 %s.1)
  ret void
}

; pkg_config::Library::parse_libs_cflags::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config7Library17parse_libs_cflags28_$u7b$$u7b$closure$u7d$$u7d$17h4191f920284ace44E"(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 1 %_1, ptr align 8 %arg) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %_13 = alloca ptr, align 8
  %_7 = alloca i64, align 8
  %_5 = alloca %"core::str::iter::Split<'_, char>", align 8
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %arg)
  %_4.0 = extractvalue { ptr, i64 } %1, 0
  %_4.1 = extractvalue { ptr, i64 } %1, 1
; call core::str::<impl str>::starts_with
  %_3 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h54bd2905953ff258E"(ptr align 1 %_4.0, i64 %_4.1, ptr align 1 @alloc_81f0eb753630c48ad89ed8c7f585a68a, i64 4)
  br i1 %_3, label %bb3, label %bb6

bb6:                                              ; preds = %start
; call alloc::alloc::exchange_malloc
  %_12 = call ptr @_ZN5alloc5alloc15exchange_malloc17hd3112a05f766f5e6E(i64 16, i64 8)
  store ptr %_12, ptr %_13, align 8
; invoke <alloc::string::String as core::convert::AsRef<str>>::as_ref
  %2 = invoke { ptr, i64 } @"_ZN73_$LT$alloc..string..String$u20$as$u20$core..convert..AsRef$LT$str$GT$$GT$6as_ref17h3e3fce076f625b8aE"(ptr align 8 %arg)
          to label %bb8 unwind label %cleanup

bb3:                                              ; preds = %start
  store i64 4, ptr %_7, align 8
  %3 = load i64, ptr %_7, align 8, !noundef !3
; call <alloc::string::String as core::ops::index::Index<core::ops::range::RangeFrom<usize>>>::index
  %4 = call { ptr, i64 } @"_ZN113_$LT$alloc..string..String$u20$as$u20$core..ops..index..Index$LT$core..ops..range..RangeFrom$LT$usize$GT$$GT$$GT$5index17h5518cacbec564e85E"(ptr align 8 %arg, i64 %3, ptr align 8 @alloc_ac8645abf469c9000a6424ddcd3fb58f)
  %_6.0 = extractvalue { ptr, i64 } %4, 0
  %_6.1 = extractvalue { ptr, i64 } %4, 1
; call core::str::<impl str>::split
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5split17h37b7a3ae21cc6b09E"(ptr sret(%"core::str::iter::Split<'_, char>") align 8 %_5, ptr align 1 %_6.0, i64 %_6.1, i32 44)
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17h643c76494ad516aaE(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 8 %_5)
  br label %bb9

bb10:                                             ; preds = %cleanup
; invoke core::ptr::drop_in_place<alloc::boxed::Box<[&str; 1]>>
  invoke void @"_ZN4core3ptr74drop_in_place$LT$alloc..boxed..Box$LT$$u5b$$RF$str$u3b$$u20$1$u5d$$GT$$GT$17hbb283b7133642759E"(ptr align 8 %_13) #28
          to label %bb11 unwind label %terminate

cleanup:                                          ; preds = %bb6
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %0, align 8
  %8 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb10

bb8:                                              ; preds = %bb6
  %_14.0 = extractvalue { ptr, i64 } %2, 0
  %_14.1 = extractvalue { ptr, i64 } %2, 1
  %_15 = load ptr, ptr %_13, align 8, !noundef !3
  %_17 = ptrtoint ptr %_15 to i64
  %_20 = and i64 %_17, 7
  %_21 = icmp eq i64 %_20, 0
  %9 = call i1 @llvm.expect.i1(i1 %_21, i1 true)
  br i1 %9, label %bb12, label %panic

bb12:                                             ; preds = %bb8
  %10 = getelementptr inbounds [1 x { ptr, i64 }], ptr %_15, i64 0, i64 0
  store ptr %_14.0, ptr %10, align 8
  %11 = getelementptr inbounds i8, ptr %10, i64 8
  store i64 %_14.1, ptr %11, align 8
  %_9 = load ptr, ptr %_13, align 8, !nonnull !3, !align !5, !noundef !3
; call alloc::slice::<impl [T]>::into_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h915212dbeebea442E"(ptr sret(%"alloc::vec::Vec<&str>") align 8 %_0, ptr align 8 %_9, i64 1)
  br label %bb9

panic:                                            ; preds = %bb8
; call core::panicking::panic_misaligned_pointer_dereference
  call void @_ZN4core9panicking36panic_misaligned_pointer_dereference17hd2b8821d4f285972E(i64 8, i64 %_17, ptr align 8 @alloc_dd64e80d73328053fe8af6b371456931) #26
  unreachable

bb9:                                              ; preds = %bb3, %bb12
  ret void

terminate:                                        ; preds = %bb10
  %12 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %13 = extractvalue { ptr, i32 } %12, 0
  %14 = extractvalue { ptr, i32 } %12, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb11:                                             ; preds = %bb10
  %15 = load ptr, ptr %0, align 8, !noundef !3
  %16 = getelementptr inbounds i8, ptr %0, i64 8
  %17 = load i32, ptr %16, align 8, !noundef !3
  %18 = insertvalue { ptr, i32 } poison, ptr %15, 0
  %19 = insertvalue { ptr, i32 } %18, i32 %17, 1
  resume { ptr, i32 } %19
}

; pkg_config::Library::parse_libs_cflags::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN10pkg_config7Library17parse_libs_cflags28_$u7b$$u7b$closure$u7d$$u7d$17hbe2eab15cc6f5dc5E"(ptr align 1 %_1, ptr align 8 %arg) unnamed_addr #0 {
start:
  %_4 = load ptr, ptr %arg, align 8, !nonnull !3, !align !5, !noundef !3
; call <alloc::string::String as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN65_$LT$alloc..string..String$u20$as$u20$core..ops..deref..Deref$GT$5deref17h3593512897496018E"(ptr align 8 %_4)
  %_3.0 = extractvalue { ptr, i64 } %0, 0
  %_3.1 = extractvalue { ptr, i64 } %0, 1
; call core::str::<impl str>::starts_with
  %_0 = call zeroext i1 @"_ZN4core3str21_$LT$impl$u20$str$GT$11starts_with17h54bd2905953ff258E"(ptr align 1 %_3.0, i64 %_3.1, ptr align 1 @alloc_81f0eb753630c48ad89ed8c7f585a68a, i64 4)
  ret i1 %_0
}

; pkg_config::Library::parse_modversion
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10pkg_config7Library16parse_modversion17h0fd89375c3cc6906E(ptr align 8 %self, ptr align 1 %output.0, i64 %output.1) unnamed_addr #1 {
start:
  %self.i = alloca %"core::option::Option<&str>", align 8
  %_9 = alloca %"core::str::iter::Lines<'_>", align 8
  %_4 = getelementptr inbounds %Library, ptr %self, i32 0, i32 7
; call core::str::<impl str>::lines
  call void @"_ZN4core3str21_$LT$impl$u20$str$GT$5lines17h0e2af5859472f117E"(ptr sret(%"core::str::iter::Lines<'_>") align 8 %_9, ptr align 1 %output.0, i64 %output.1)
; call <core::str::iter::Lines as core::iter::traits::iterator::Iterator>::next
  %0 = call { ptr, i64 } @"_ZN81_$LT$core..str..iter..Lines$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hb05e96caa1284e5eE"(ptr align 8 %_9)
  %_7.0 = extractvalue { ptr, i64 } %0, 0
  %_7.1 = extractvalue { ptr, i64 } %0, 1
  store ptr %_7.0, ptr %self.i, align 8
  %1 = getelementptr inbounds i8, ptr %self.i, i64 8
  store i64 %_7.1, ptr %1, align 8
  %2 = load ptr, ptr %self.i, align 8, !noundef !3
  %3 = ptrtoint ptr %2 to i64
  %4 = icmp eq i64 %3, 0
  %_2.i = select i1 %4, i64 0, i64 1
  br i1 %4, label %bb1.i, label %"_ZN4core6option15Option$LT$T$GT$6unwrap17hf75b1bda0c3ed38cE.exit"

bb1.i:                                            ; preds = %start
; call core::option::unwrap_failed
  call void @_ZN4core6option13unwrap_failed17h630ca121a67dc3e4E(ptr align 8 @alloc_1782ea4018ba67dd7d6d6041da7ebe49) #27
  unreachable

"_ZN4core6option15Option$LT$T$GT$6unwrap17hf75b1bda0c3ed38cE.exit": ; preds = %start
  %val.0.i = load ptr, ptr %self.i, align 8, !nonnull !3, !align !4, !noundef !3
  %5 = getelementptr inbounds i8, ptr %self.i, i64 8
  %val.1.i = load i64, ptr %5, align 8, !noundef !3
  %6 = insertvalue { ptr, i64 } poison, ptr %val.0.i, 0
  %7 = insertvalue { ptr, i64 } %6, i64 %val.1.i, 1
  %_6.0 = extractvalue { ptr, i64 } %7, 0
  %_6.1 = extractvalue { ptr, i64 } %7, 1
; call core::str::<impl str>::trim
  %8 = call { ptr, i64 } @"_ZN4core3str21_$LT$impl$u20$str$GT$4trim17had31dd0927350be9E"(ptr align 1 %_6.0, i64 %_6.1)
  %_5.0 = extractvalue { ptr, i64 } %8, 0
  %_5.1 = extractvalue { ptr, i64 } %8, 1
; call alloc::string::String::push_str
  call void @_ZN5alloc6string6String8push_str17hd6e542df8f6735b7E(ptr align 8 %_4, ptr align 1 %_5.0, i64 %_5.1)
  ret void
}

; pkg_config::envify
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10pkg_config6envify17hd06c80ec37905a11E(ptr sret(%"alloc::string::String") align 8 %_0, ptr align 1 %name.0, i64 %name.1) unnamed_addr #1 {
start:
; call core::str::<impl str>::chars
  %0 = call { ptr, ptr } @"_ZN4core3str21_$LT$impl$u20$str$GT$5chars17h4fe91a739e15aab7E"(ptr align 1 %name.0, i64 %name.1)
  %_4.0 = extractvalue { ptr, ptr } %0, 0
  %_4.1 = extractvalue { ptr, ptr } %0, 1
; call core::iter::traits::iterator::Iterator::map
  %1 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17h94dcafea3865d658E(ptr %_4.0, ptr %_4.1)
  %_3.0 = extractvalue { ptr, ptr } %1, 0
  %_3.1 = extractvalue { ptr, ptr } %1, 1
; call core::iter::traits::iterator::Iterator::map
  %2 = call { ptr, ptr } @_ZN4core4iter6traits8iterator8Iterator3map17hf48e383d41007984E(ptr %_3.0, ptr %_3.1)
  %_2.0 = extractvalue { ptr, ptr } %2, 0
  %_2.1 = extractvalue { ptr, ptr } %2, 1
; call core::iter::traits::iterator::Iterator::collect
  call void @_ZN4core4iter6traits8iterator8Iterator7collect17ha20c52372ef8d074E(ptr sret(%"alloc::string::String") align 8 %_0, ptr %_2.0, ptr %_2.1)
  ret void
}

; pkg_config::envify::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN10pkg_config6envify28_$u7b$$u7b$closure$u7d$$u7d$17h288d09a4104bde75E"(ptr align 1 %_1, i32 %0) unnamed_addr #0 {
start:
  %c = alloca i32, align 4
  store i32 %0, ptr %c, align 4
; call core::char::methods::<impl char>::to_ascii_uppercase
  %_0 = call i32 @"_ZN4core4char7methods22_$LT$impl$u20$char$GT$18to_ascii_uppercase17h05040899095491d3E"(ptr align 4 %c), !range !8
  ret i32 %_0
}

; pkg_config::envify::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal i32 @"_ZN10pkg_config6envify28_$u7b$$u7b$closure$u7d$$u7d$17hcae50e12f20d25a4E"(ptr align 1 %_1, i32 %c) unnamed_addr #0 {
start:
  %_0 = alloca i32, align 4
  %0 = icmp eq i32 %c, 45
  br i1 %0, label %bb1, label %bb2

bb1:                                              ; preds = %start
  store i32 95, ptr %_0, align 4
  br label %bb3

bb2:                                              ; preds = %start
  store i32 %c, ptr %_0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %1 = load i32, ptr %_0, align 4, !range !8, !noundef !3
  ret i32 %1
}

; pkg_config::is_static_available
; Function Attrs: nonlazybind uwtable
define internal zeroext i1 @_ZN10pkg_config19is_static_available17h4c39d606f406d6dcE(ptr align 1 %0, i64 %1, ptr align 8 %2, i64 %3, ptr align 8 %dirs.0, i64 %dirs.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %_0.i4 = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %4 = alloca { ptr, i32, [1 x i32] }, align 8
  %_33 = alloca %"{closure@/users/zyuxuan/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pkg-config-0.3.30/src/lib.rs:1049:21: 1049:26}", align 8
  %_32 = alloca %"core::slice::iter::Iter<'_, std::path::PathBuf>", align 8
  %_28 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_24 = alloca %"core::fmt::Arguments<'_>", align 8
  %res1 = alloca %"alloc::string::String", align 8
  %_17 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_13 = alloca %"core::fmt::Arguments<'_>", align 8
  %res = alloca %"alloc::string::String", align 8
  %_11 = alloca ptr, align 8
  %names = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %libnames = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %system_roots = alloca { ptr, i64 }, align 8
  %name = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %name, align 8
  %5 = getelementptr inbounds i8, ptr %name, i64 8
  store i64 %1, ptr %5, align 8
  store ptr %2, ptr %system_roots, align 8
  %6 = getelementptr inbounds i8, ptr %system_roots, i64 8
  store i64 %3, ptr %6, align 8
; call alloc::alloc::exchange_malloc
  %_10 = call ptr @_ZN5alloc5alloc15exchange_malloc17hd3112a05f766f5e6E(i64 24, i64 8)
  store ptr %_10, ptr %_11, align 8
  store ptr %name, ptr %_0.i4, align 8
  %7 = getelementptr inbounds i8, ptr %_0.i4, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %7, align 8
  %8 = load ptr, ptr %_0.i4, align 8, !nonnull !3, !align !4, !noundef !3
  %9 = getelementptr inbounds i8, ptr %_0.i4, i64 8
  %10 = load ptr, ptr %9, align 8, !nonnull !3, !noundef !3
  %11 = insertvalue { ptr, ptr } poison, ptr %8, 0
  %12 = insertvalue { ptr, ptr } %11, ptr %10, 1
  br label %bb2

bb17:                                             ; preds = %cleanup
; invoke <alloc::boxed::Box<T,A> as core::ops::drop::Drop>::drop
  invoke void @"_ZN72_$LT$alloc..boxed..Box$LT$T$C$A$GT$$u20$as$u20$core..ops..drop..Drop$GT$4drop17h7d60048b94b70648E"(ptr align 8 %_11) #28
          to label %bb20 unwind label %terminate

cleanup:                                          ; preds = %bb3, %bb2
  %13 = landingpad { ptr, i32 }
          cleanup
  %14 = extractvalue { ptr, i32 } %13, 0
  %15 = extractvalue { ptr, i32 } %13, 1
  store ptr %14, ptr %4, align 8
  %16 = getelementptr inbounds i8, ptr %4, i64 8
  store i32 %15, ptr %16, align 8
  br label %bb17

bb2:                                              ; preds = %start
  %_18.0 = extractvalue { ptr, ptr } %12, 0
  %_18.1 = extractvalue { ptr, ptr } %12, 1
  %17 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_17, i64 0, i64 0
  store ptr %_18.0, ptr %17, align 8
  %18 = getelementptr inbounds i8, ptr %17, i64 8
  store ptr %_18.1, ptr %18, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_13, ptr align 8 @alloc_06870606c25ed1b2d4d4c2db42aeb979, i64 2, ptr align 8 %_17, i64 1)
          to label %bb3 unwind label %cleanup

bb3:                                              ; preds = %bb2
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res, ptr align 8 %_13)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
  %_40 = load ptr, ptr %_11, align 8, !noundef !3
  %_42 = ptrtoint ptr %_40 to i64
  %_45 = and i64 %_42, 7
  %_46 = icmp eq i64 %_45, 0
  %19 = call i1 @llvm.expect.i1(i1 %_46, i1 true)
  br i1 %19, label %bb18, label %panic

bb18:                                             ; preds = %bb4
  %20 = getelementptr inbounds [1 x %"alloc::string::String"], ptr %_40, i64 0, i64 0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %res, i64 24, i1 false)
  %_7 = load ptr, ptr %_11, align 8, !nonnull !3, !align !5, !noundef !3
; call alloc::slice::<impl [T]>::into_vec
  call void @"_ZN5alloc5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$8into_vec17h0a9c87a108c744e8E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %names, ptr align 8 %_7, i64 1)
  br i1 false, label %bb6, label %bb10

panic:                                            ; preds = %bb4
; call core::panicking::panic_misaligned_pointer_dereference
  call void @_ZN4core9panicking36panic_misaligned_pointer_dereference17hd2b8821d4f285972E(i64 8, i64 %_42, ptr align 8 @alloc_f98c3024e5df2d92e7fd2ffbacbd279f) #26
  unreachable

bb10:                                             ; preds = %bb19, %bb18
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %libnames, ptr align 8 %names, i64 24, i1 false)
; invoke core::slice::<impl [T]>::iter
  %21 = invoke { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hc569e5d5155bd400E"(ptr align 8 %dirs.0, i64 %dirs.1)
          to label %bb11 unwind label %cleanup3

bb6:                                              ; preds = %bb18
  store ptr %name, ptr %_0.i, align 8
  %22 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %22, align 8
  %23 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %24 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %25 = load ptr, ptr %24, align 8, !nonnull !3, !noundef !3
  %26 = insertvalue { ptr, ptr } poison, ptr %23, 0
  %27 = insertvalue { ptr, ptr } %26, ptr %25, 1
  br label %bb7

bb15:                                             ; preds = %cleanup2
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %names) #28
          to label %bb16 unwind label %terminate

cleanup2:                                         ; preds = %bb9, %bb8, %bb7
  %28 = landingpad { ptr, i32 }
          cleanup
  %29 = extractvalue { ptr, i32 } %28, 0
  %30 = extractvalue { ptr, i32 } %28, 1
  store ptr %29, ptr %4, align 8
  %31 = getelementptr inbounds i8, ptr %4, i64 8
  store i32 %30, ptr %31, align 8
  br label %bb15

bb7:                                              ; preds = %bb6
  %_29.0 = extractvalue { ptr, ptr } %27, 0
  %_29.1 = extractvalue { ptr, ptr } %27, 1
  %32 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_28, i64 0, i64 0
  store ptr %_29.0, ptr %32, align 8
  %33 = getelementptr inbounds i8, ptr %32, i64 8
  store ptr %_29.1, ptr %33, align 8
; invoke core::fmt::Arguments::new_v1
  invoke void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_24, ptr align 8 @alloc_95ec4aba0127b28671d5f59e26b8fdb8, i64 2, ptr align 8 %_28, i64 1)
          to label %bb8 unwind label %cleanup2

bb8:                                              ; preds = %bb7
; invoke alloc::fmt::format
  invoke void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res1, ptr align 8 %_24)
          to label %bb9 unwind label %cleanup2

bb9:                                              ; preds = %bb8
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h8a7b231363c15384E"(ptr align 8 %names, ptr align 8 %res1)
          to label %bb19 unwind label %cleanup2

bb19:                                             ; preds = %bb9
  br label %bb10

bb14:                                             ; preds = %cleanup3
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %libnames) #28
          to label %bb16 unwind label %terminate

cleanup3:                                         ; preds = %bb11, %bb10
  %34 = landingpad { ptr, i32 }
          cleanup
  %35 = extractvalue { ptr, i32 } %34, 0
  %36 = extractvalue { ptr, i32 } %34, 1
  store ptr %35, ptr %4, align 8
  %37 = getelementptr inbounds i8, ptr %4, i64 8
  store i32 %36, ptr %37, align 8
  br label %bb14

bb11:                                             ; preds = %bb10
  %38 = extractvalue { ptr, ptr } %21, 0
  %39 = extractvalue { ptr, ptr } %21, 1
  store ptr %38, ptr %_32, align 8
  %40 = getelementptr inbounds i8, ptr %_32, i64 8
  store ptr %39, ptr %40, align 8
  store ptr %libnames, ptr %_33, align 8
  %41 = getelementptr inbounds i8, ptr %_33, i64 8
  store ptr %system_roots, ptr %41, align 8
  %42 = load ptr, ptr %_33, align 8, !nonnull !3, !align !5, !noundef !3
  %43 = getelementptr inbounds i8, ptr %_33, i64 8
  %44 = load ptr, ptr %43, align 8, !nonnull !3, !align !5, !noundef !3
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
  %_0 = invoke zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17hf354645fb402e899E"(ptr align 8 %_32, ptr align 8 %42, ptr align 8 %44)
          to label %bb12 unwind label %cleanup3

bb12:                                             ; preds = %bb11
; call core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  call void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %libnames)
  ret i1 %_0

terminate:                                        ; preds = %bb17, %bb15, %bb14
  %45 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %46 = extractvalue { ptr, i32 } %45, 0
  %47 = extractvalue { ptr, i32 } %45, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb16:                                             ; preds = %bb20, %bb15, %bb14
  %48 = load ptr, ptr %4, align 8, !noundef !3
  %49 = getelementptr inbounds i8, ptr %4, i64 8
  %50 = load i32, ptr %49, align 8, !noundef !3
  %51 = insertvalue { ptr, i32 } poison, ptr %48, 0
  %52 = insertvalue { ptr, i32 } %51, i32 %50, 1
  resume { ptr, i32 } %52

bb20:                                             ; preds = %bb17
  br label %bb16
}

; pkg_config::is_static_available::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN10pkg_config19is_static_available28_$u7b$$u7b$closure$u7d$$u7d$17h69cf82c723a76363E"(ptr align 8 %_1, ptr align 8 %0) unnamed_addr #0 {
start:
  %_12 = alloca ptr, align 8
  %_11 = alloca %"core::slice::iter::Iter<'_, std::path::PathBuf>", align 8
  %_7 = alloca ptr, align 8
  %_5 = alloca %"core::slice::iter::Iter<'_, alloc::string::String>", align 8
  %_0 = alloca i8, align 1
  %dir = alloca ptr, align 8
  store ptr %0, ptr %dir, align 8
  %_14 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
; call <alloc::vec::Vec<T,A> as core::ops::deref::Deref>::deref
  %1 = call { ptr, i64 } @"_ZN72_$LT$alloc..vec..Vec$LT$T$C$A$GT$$u20$as$u20$core..ops..deref..Deref$GT$5deref17hd778bbd1b5a53518E"(ptr align 8 %_14)
  %_6.0 = extractvalue { ptr, i64 } %1, 0
  %_6.1 = extractvalue { ptr, i64 } %1, 1
; call core::slice::<impl [T]>::iter
  %2 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17h0b2dd7033a7b2ee6E"(ptr align 8 %_6.0, i64 %_6.1)
  %3 = extractvalue { ptr, ptr } %2, 0
  %4 = extractvalue { ptr, ptr } %2, 1
  store ptr %3, ptr %_5, align 8
  %5 = getelementptr inbounds i8, ptr %_5, i64 8
  store ptr %4, ptr %5, align 8
  store ptr %dir, ptr %_7, align 8
  %6 = load ptr, ptr %_7, align 8, !nonnull !3, !align !5, !noundef !3
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
  %library_exists = call zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h15818eeed413592dE"(ptr align 8 %_5, ptr align 8 %6)
  br i1 %library_exists, label %bb4, label %bb5

bb5:                                              ; preds = %start
  store i8 0, ptr %_0, align 1
  br label %bb8

bb4:                                              ; preds = %start
  %7 = getelementptr inbounds i8, ptr %_1, i64 8
  %_15 = load ptr, ptr %7, align 8, !nonnull !3, !align !5, !noundef !3
  %_16.0 = load ptr, ptr %_15, align 8, !nonnull !3, !align !5, !noundef !3
  %8 = getelementptr inbounds i8, ptr %_15, i64 8
  %_16.1 = load i64, ptr %8, align 8, !noundef !3
; call core::slice::<impl [T]>::iter
  %9 = call { ptr, ptr } @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$4iter17hc569e5d5155bd400E"(ptr align 8 %_16.0, i64 %_16.1)
  %10 = extractvalue { ptr, ptr } %9, 0
  %11 = extractvalue { ptr, ptr } %9, 1
  store ptr %10, ptr %_11, align 8
  %12 = getelementptr inbounds i8, ptr %_11, i64 8
  store ptr %11, ptr %12, align 8
  store ptr %dir, ptr %_12, align 8
  %13 = load ptr, ptr %_12, align 8, !nonnull !3, !align !5, !noundef !3
; call <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::any
  %_9 = call zeroext i1 @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$3any17h9a4ba2ef200b552fE"(ptr align 8 %_11, ptr align 8 %13)
  %14 = xor i1 %_9, true
  %15 = zext i1 %14 to i8
  store i8 %15, ptr %_0, align 1
  br label %bb8

bb8:                                              ; preds = %bb4, %bb5
  %16 = load i8, ptr %_0, align 1, !range !10, !noundef !3
  %17 = trunc i8 %16 to i1
  ret i1 %17
}

; pkg_config::is_static_available::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN10pkg_config19is_static_available28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17he9599d1f1cc6b711E"(ptr align 8 %_1, ptr align 8 %0) unnamed_addr #0 personality ptr @rust_eh_personality {
start:
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %_5 = alloca %"std::path::PathBuf", align 8
  %libname = alloca ptr, align 8
  store ptr %0, ptr %libname, align 8
  %_8 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  %_9 = load ptr, ptr %_8, align 8, !nonnull !3, !align !5, !noundef !3
; call <std::path::PathBuf as core::ops::deref::Deref>::deref
  %2 = call { ptr, i64 } @"_ZN62_$LT$std..path..PathBuf$u20$as$u20$core..ops..deref..Deref$GT$5deref17he2917e5103d42affE"(ptr align 8 %_9)
  %_6.0 = extractvalue { ptr, i64 } %2, 0
  %_6.1 = extractvalue { ptr, i64 } %2, 1
; call std::path::Path::join
  call void @_ZN3std4path4Path4join17hd872b003b6fb079aE(ptr sret(%"std::path::PathBuf") align 8 %_5, ptr align 1 %_6.0, i64 %_6.1, ptr align 8 %libname)
; invoke <std::path::PathBuf as core::ops::deref::Deref>::deref
  %3 = invoke { ptr, i64 } @"_ZN62_$LT$std..path..PathBuf$u20$as$u20$core..ops..deref..Deref$GT$5deref17he2917e5103d42affE"(ptr align 8 %_5)
          to label %bb3 unwind label %cleanup

bb6:                                              ; preds = %cleanup
; invoke core::ptr::drop_in_place<std::path::PathBuf>
  invoke void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17h3bed19ef85725cb6E"(ptr align 8 %_5) #28
          to label %bb7 unwind label %terminate

cleanup:                                          ; preds = %bb3, %start
  %4 = landingpad { ptr, i32 }
          cleanup
  %5 = extractvalue { ptr, i32 } %4, 0
  %6 = extractvalue { ptr, i32 } %4, 1
  store ptr %5, ptr %1, align 8
  %7 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %6, ptr %7, align 8
  br label %bb6

bb3:                                              ; preds = %start
  %_3.0 = extractvalue { ptr, i64 } %3, 0
  %_3.1 = extractvalue { ptr, i64 } %3, 1
; invoke std::path::Path::exists
  %_0 = invoke zeroext i1 @_ZN3std4path4Path6exists17hc4fdac10b4667547E(ptr align 1 %_3.0, i64 %_3.1)
          to label %bb4 unwind label %cleanup

bb4:                                              ; preds = %bb3
; call core::ptr::drop_in_place<std::path::PathBuf>
  call void @"_ZN4core3ptr39drop_in_place$LT$std..path..PathBuf$GT$17h3bed19ef85725cb6E"(ptr align 8 %_5)
  ret i1 %_0

terminate:                                        ; preds = %bb6
  %8 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %9 = extractvalue { ptr, i32 } %8, 0
  %10 = extractvalue { ptr, i32 } %8, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb7:                                              ; preds = %bb6
  %11 = load ptr, ptr %1, align 8, !noundef !3
  %12 = getelementptr inbounds i8, ptr %1, i64 8
  %13 = load i32, ptr %12, align 8, !noundef !3
  %14 = insertvalue { ptr, i32 } poison, ptr %11, 0
  %15 = insertvalue { ptr, i32 } %14, i32 %13, 1
  resume { ptr, i32 } %15
}

; pkg_config::is_static_available::{{closure}}::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal zeroext i1 @"_ZN10pkg_config19is_static_available28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17h150d26c40966e162E"(ptr align 8 %_1, ptr align 8 %sys) unnamed_addr #0 {
start:
  %_4 = load ptr, ptr %_1, align 8, !nonnull !3, !align !5, !noundef !3
  %_5 = load ptr, ptr %_4, align 8, !nonnull !3, !align !5, !noundef !3
; call <std::path::PathBuf as core::ops::deref::Deref>::deref
  %0 = call { ptr, i64 } @"_ZN62_$LT$std..path..PathBuf$u20$as$u20$core..ops..deref..Deref$GT$5deref17he2917e5103d42affE"(ptr align 8 %_5)
  %_3.0 = extractvalue { ptr, i64 } %0, 0
  %_3.1 = extractvalue { ptr, i64 } %0, 1
; call std::path::Path::starts_with
  %_0 = call zeroext i1 @_ZN3std4path4Path11starts_with17h846632d016cdf6dfE(ptr align 1 %_3.0, i64 %_3.1, ptr align 8 %sys)
  ret i1 %_0
}

; pkg_config::split_flags
; Function Attrs: nonlazybind uwtable
define internal void @_ZN10pkg_config11split_flags17ha85798ccaf61fc1bE(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %_0, ptr align 1 %output.0, i64 %output.1) unnamed_addr #1 personality ptr @rust_eh_personality {
start:
  %0 = alloca { ptr, i32, [1 x i32] }, align 8
  %e.i2 = alloca %"alloc::string::FromUtf8Error", align 8
  %1 = alloca { ptr, i32, [1 x i32] }, align 8
  %e.i = alloca %"alloc::string::FromUtf8Error", align 8
  %2 = alloca { ptr, i32, [1 x i32] }, align 8
  %_32 = alloca i8, align 1
  %_30 = alloca %"alloc::vec::Vec<u8>", align 8
  %_29 = alloca %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>", align 8
  %_28 = alloca %"alloc::string::String", align 8
  %_22 = alloca %"alloc::vec::Vec<u8>", align 8
  %_21 = alloca %"alloc::vec::Vec<u8>", align 8
  %_20 = alloca %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>", align 8
  %_19 = alloca %"alloc::string::String", align 8
  %_8 = alloca ptr, align 8
  %iter = alloca %"core::slice::iter::Iter<'_, u8>", align 8
  %escaped = alloca i8, align 1
  %words = alloca %"alloc::vec::Vec<alloc::string::String>", align 8
  %word = alloca %"alloc::vec::Vec<u8>", align 8
  store i8 0, ptr %_32, align 1
  store i8 1, ptr %_32, align 1
; call alloc::vec::Vec<T>::new
  call void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h13fecb78cd1b9de4E"(ptr sret(%"alloc::vec::Vec<u8>") align 8 %word)
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h14e2cbe069ce13f7E"(ptr sret(%"alloc::vec::Vec<alloc::string::String>") align 8 %words)
          to label %bb2 unwind label %cleanup

bb29:                                             ; preds = %bb25, %cleanup
  %3 = load i8, ptr %_32, align 1, !range !10, !noundef !3
  %4 = trunc i8 %3 to i1
  br i1 %4, label %bb28, label %bb26

cleanup:                                          ; preds = %start
  %5 = landingpad { ptr, i32 }
          cleanup
  %6 = extractvalue { ptr, i32 } %5, 0
  %7 = extractvalue { ptr, i32 } %5, 1
  store ptr %6, ptr %2, align 8
  %8 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %7, ptr %8, align 8
  br label %bb29

bb2:                                              ; preds = %start
  store i8 0, ptr %escaped, align 1
; invoke core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter
  %9 = invoke { ptr, ptr } @"_ZN4core5slice4iter87_$LT$impl$u20$core..iter..traits..collect..IntoIterator$u20$for$u20$$RF$$u5b$T$u5d$$GT$9into_iter17h8f87b9c981928abfE"(ptr align 1 %output.0, i64 %output.1)
          to label %bb3 unwind label %cleanup1

bb25:                                             ; preds = %cleanup1.body
; invoke core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>
  invoke void @"_ZN4core3ptr65drop_in_place$LT$alloc..vec..Vec$LT$alloc..string..String$GT$$GT$17h3cbf32a4c5f55999E"(ptr align 8 %words) #28
          to label %bb29 unwind label %terminate

cleanup1:                                         ; preds = %bb9, %bb8, %bb17, %bb16, %bb14, %bb12, %bb22, %bb20, %bb7, %bb4, %bb2
  %10 = landingpad { ptr, i32 }
          cleanup
  br label %cleanup1.body9

cleanup1.body9:                                   ; preds = %bb5.i7, %cleanup1
  %eh.lpad-body10 = phi { ptr, i32 } [ %10, %cleanup1 ], [ %36, %bb5.i7 ]
  br label %cleanup1.body

cleanup1.body:                                    ; preds = %bb5.i, %cleanup1.body9
  %eh.lpad-body = phi { ptr, i32 } [ %eh.lpad-body10, %cleanup1.body9 ], [ %51, %bb5.i ]
  %11 = extractvalue { ptr, i32 } %eh.lpad-body, 0
  %12 = extractvalue { ptr, i32 } %eh.lpad-body, 1
  store ptr %11, ptr %2, align 8
  %13 = getelementptr inbounds i8, ptr %2, i64 8
  store i32 %12, ptr %13, align 8
  br label %bb25

bb3:                                              ; preds = %bb2
  %_5.0 = extractvalue { ptr, ptr } %9, 0
  %_5.1 = extractvalue { ptr, ptr } %9, 1
  store ptr %_5.0, ptr %iter, align 8
  %14 = getelementptr inbounds i8, ptr %iter, i64 8
  store ptr %_5.1, ptr %14, align 8
  br label %bb4

bb4:                                              ; preds = %bb32, %bb31, %bb18, %bb13, %bb11, %bb3
; invoke <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next
  %15 = invoke align 1 ptr @"_ZN91_$LT$core..slice..iter..Iter$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17hcae68254e9640bb1E"(ptr align 8 %iter)
          to label %bb5 unwind label %cleanup1

bb5:                                              ; preds = %bb4
  store ptr %15, ptr %_8, align 8
  %16 = load ptr, ptr %_8, align 8, !noundef !3
  %17 = ptrtoint ptr %16 to i64
  %18 = icmp eq i64 %17, 0
  %_10 = select i1 %18, i64 0, i64 1
  %19 = icmp eq i64 %_10, 0
  br i1 %19, label %bb7, label %bb6

bb7:                                              ; preds = %bb5
; invoke alloc::vec::Vec<T,A>::is_empty
  %_24 = invoke zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17h4b5582c2e32aef6bE"(ptr align 8 %word)
          to label %bb19 unwind label %cleanup1

bb6:                                              ; preds = %bb5
  %_31 = load ptr, ptr %_8, align 8, !nonnull !3, !align !4, !noundef !3
  %b = load i8, ptr %_31, align 1, !noundef !3
  %20 = load i8, ptr %escaped, align 1, !range !10, !noundef !3
  %_12 = trunc i8 %20 to i1
  br i1 %_12, label %bb9, label %bb10

bb19:                                             ; preds = %bb7
  br i1 %_24, label %bb23, label %bb20

bb20:                                             ; preds = %bb19
  store i8 0, ptr %_32, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_30, ptr align 8 %word, i64 24, i1 false)
; invoke alloc::string::String::from_utf8
  invoke void @_ZN5alloc6string6String9from_utf817h4b7ef7083b636b2dE(ptr sret(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>") align 8 %_29, ptr align 8 %_30)
          to label %bb21 unwind label %cleanup1

bb23:                                             ; preds = %bb33, %bb19
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_0, ptr align 8 %words, i64 24, i1 false)
  %21 = load i8, ptr %_32, align 1, !range !10, !noundef !3
  %22 = trunc i8 %21 to i1
  br i1 %22, label %bb27, label %bb24

bb21:                                             ; preds = %bb20
  %23 = load i64, ptr %_29, align 8, !range !12, !noundef !3
  %24 = icmp eq i64 %23, -9223372036854775808
  %_2.i3 = select i1 %24, i64 0, i64 1
  br i1 %24, label %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hd4928f4077f8a4e1E.exit11", label %bb1.i4

bb1.i4:                                           ; preds = %bb21
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e.i2, ptr align 8 %_29, i64 40, i1 false)
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h1356562ef8bc898cE(ptr align 1 @alloc_00ae4b301f7fab8ac9617c03fcbd7274, i64 43, ptr align 1 %e.i2, ptr align 8 @vtable.a, ptr align 8 @alloc_4864c65952b93e46575fdc7ff97234b0) #27
          to label %unreachable.i8 unwind label %cleanup.i5

cleanup.i5:                                       ; preds = %bb1.i4
  %25 = landingpad { ptr, i32 }
          cleanup
  %26 = extractvalue { ptr, i32 } %25, 0
  %27 = extractvalue { ptr, i32 } %25, 1
  store ptr %26, ptr %0, align 8
  %28 = getelementptr inbounds i8, ptr %0, i64 8
  store i32 %27, ptr %28, align 8
; invoke core::ptr::drop_in_place<alloc::string::FromUtf8Error>
  invoke void @"_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17h425befde36ad8c1cE"(ptr align 8 %e.i2) #28
          to label %bb5.i7 unwind label %terminate.i6

unreachable.i8:                                   ; preds = %bb1.i4
  unreachable

terminate.i6:                                     ; preds = %cleanup.i5
  %29 = landingpad { ptr, i32 }
          cleanup
          filter [0 x ptr] zeroinitializer
  %30 = extractvalue { ptr, i32 } %29, 0
  %31 = extractvalue { ptr, i32 } %29, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb5.i7:                                           ; preds = %cleanup.i5
  %32 = load ptr, ptr %0, align 8, !noundef !3
  %33 = getelementptr inbounds i8, ptr %0, i64 8
  %34 = load i32, ptr %33, align 8, !noundef !3
  %35 = insertvalue { ptr, i32 } poison, ptr %32, 0
  %36 = insertvalue { ptr, i32 } %35, i32 %34, 1
  br label %cleanup1.body9

"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hd4928f4077f8a4e1E.exit11": ; preds = %bb21
  %37 = getelementptr inbounds %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok", ptr %_29, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_28, ptr align 8 %37, i64 24, i1 false)
  br label %bb22

bb22:                                             ; preds = %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hd4928f4077f8a4e1E.exit11"
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h8a7b231363c15384E"(ptr align 8 %words, ptr align 8 %_28)
          to label %bb33 unwind label %cleanup1

bb33:                                             ; preds = %bb22
  br label %bb23

bb24:                                             ; preds = %bb27, %bb23
  store i8 0, ptr %_32, align 1
  ret void

bb27:                                             ; preds = %bb23
; call core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  call void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %word)
  br label %bb24

bb10:                                             ; preds = %bb6
  switch i8 %b, label %bb8 [
    i8 92, label %bb11
    i8 9, label %bb12
    i8 10, label %bb12
    i8 13, label %bb12
    i8 32, label %bb12
  ]

bb9:                                              ; preds = %bb6
  store i8 0, ptr %escaped, align 1
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h0fab4a587d1a0e24E"(ptr align 8 %word, i8 %b)
          to label %bb32 unwind label %cleanup1

bb8:                                              ; preds = %bb10
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h0fab4a587d1a0e24E"(ptr align 8 %word, i8 %b)
          to label %bb31 unwind label %cleanup1

bb11:                                             ; preds = %bb10
  store i8 1, ptr %escaped, align 1
  br label %bb4

bb12:                                             ; preds = %bb10, %bb10, %bb10, %bb10
; invoke alloc::vec::Vec<T,A>::is_empty
  %_15 = invoke zeroext i1 @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$8is_empty17h4b5582c2e32aef6bE"(ptr align 8 %word)
          to label %bb13 unwind label %cleanup1

bb13:                                             ; preds = %bb12
  br i1 %_15, label %bb4, label %bb14

bb14:                                             ; preds = %bb13
  store i8 0, ptr %_32, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_21, ptr align 8 %word, i64 24, i1 false)
; invoke alloc::string::String::from_utf8
  invoke void @_ZN5alloc6string6String9from_utf817h4b7ef7083b636b2dE(ptr sret(%"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>") align 8 %_20, ptr align 8 %_21)
          to label %bb15 unwind label %cleanup1

bb15:                                             ; preds = %bb14
  %38 = load i64, ptr %_20, align 8, !range !12, !noundef !3
  %39 = icmp eq i64 %38, -9223372036854775808
  %_2.i = select i1 %39, i64 0, i64 1
  br i1 %39, label %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hd4928f4077f8a4e1E.exit", label %bb1.i

bb1.i:                                            ; preds = %bb15
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %e.i, ptr align 8 %_20, i64 40, i1 false)
; invoke core::result::unwrap_failed
  invoke void @_ZN4core6result13unwrap_failed17h1356562ef8bc898cE(ptr align 1 @alloc_00ae4b301f7fab8ac9617c03fcbd7274, i64 43, ptr align 1 %e.i, ptr align 8 @vtable.a, ptr align 8 @alloc_f7ecf659acdfa1095fddcaa0bf720674) #27
          to label %unreachable.i unwind label %cleanup.i

cleanup.i:                                        ; preds = %bb1.i
  %40 = landingpad { ptr, i32 }
          cleanup
  %41 = extractvalue { ptr, i32 } %40, 0
  %42 = extractvalue { ptr, i32 } %40, 1
  store ptr %41, ptr %1, align 8
  %43 = getelementptr inbounds i8, ptr %1, i64 8
  store i32 %42, ptr %43, align 8
; invoke core::ptr::drop_in_place<alloc::string::FromUtf8Error>
  invoke void @"_ZN4core3ptr49drop_in_place$LT$alloc..string..FromUtf8Error$GT$17h425befde36ad8c1cE"(ptr align 8 %e.i) #28
          to label %bb5.i unwind label %terminate.i

unreachable.i:                                    ; preds = %bb1.i
  unreachable

terminate.i:                                      ; preds = %cleanup.i
  %44 = landingpad { ptr, i32 }
          cleanup
          filter [0 x ptr] zeroinitializer
  %45 = extractvalue { ptr, i32 } %44, 0
  %46 = extractvalue { ptr, i32 } %44, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb5.i:                                            ; preds = %cleanup.i
  %47 = load ptr, ptr %1, align 8, !noundef !3
  %48 = getelementptr inbounds i8, ptr %1, i64 8
  %49 = load i32, ptr %48, align 8, !noundef !3
  %50 = insertvalue { ptr, i32 } poison, ptr %47, 0
  %51 = insertvalue { ptr, i32 } %50, i32 %49, 1
  br label %cleanup1.body

"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hd4928f4077f8a4e1E.exit": ; preds = %bb15
  %52 = getelementptr inbounds %"core::result::Result<alloc::string::String, alloc::string::FromUtf8Error>::Ok", ptr %_20, i32 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %_19, ptr align 8 %52, i64 24, i1 false)
  br label %bb16

bb16:                                             ; preds = %"_ZN4core6result19Result$LT$T$C$E$GT$6unwrap17hd4928f4077f8a4e1E.exit"
; invoke alloc::vec::Vec<T,A>::push
  invoke void @"_ZN5alloc3vec16Vec$LT$T$C$A$GT$4push17h8a7b231363c15384E"(ptr align 8 %words, ptr align 8 %_19)
          to label %bb17 unwind label %cleanup1

bb17:                                             ; preds = %bb16
; invoke alloc::vec::Vec<T>::new
  invoke void @"_ZN5alloc3vec12Vec$LT$T$GT$3new17h13fecb78cd1b9de4E"(ptr sret(%"alloc::vec::Vec<u8>") align 8 %_22)
          to label %bb18 unwind label %cleanup1

bb18:                                             ; preds = %bb17
  store i8 1, ptr %_32, align 1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %word, ptr align 8 %_22, i64 24, i1 false)
  br label %bb4

bb31:                                             ; preds = %bb8
  br label %bb4

bb32:                                             ; preds = %bb9
  br label %bb4

bb30:                                             ; No predecessors!
  unreachable

terminate:                                        ; preds = %bb28, %bb25
  %53 = landingpad { ptr, i32 }
          filter [0 x ptr] zeroinitializer
  %54 = extractvalue { ptr, i32 } %53, 0
  %55 = extractvalue { ptr, i32 } %53, 1
; call core::panicking::panic_in_cleanup
  call void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() #15
  unreachable

bb26:                                             ; preds = %bb28, %bb29
  %56 = load ptr, ptr %2, align 8, !noundef !3
  %57 = getelementptr inbounds i8, ptr %2, i64 8
  %58 = load i32, ptr %57, align 8, !noundef !3
  %59 = insertvalue { ptr, i32 } poison, ptr %56, 0
  %60 = insertvalue { ptr, i32 } %59, i32 %58, 1
  resume { ptr, i32 } %60

bb28:                                             ; preds = %bb29
; invoke core::ptr::drop_in_place<alloc::vec::Vec<u8>>
  invoke void @"_ZN4core3ptr46drop_in_place$LT$alloc..vec..Vec$LT$u8$GT$$GT$17h178100fb9801f333E"(ptr align 8 %word) #28
          to label %bb26 unwind label %terminate
}

; <pkg_config::Error as core::fmt::Display>::fmt::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN56_$LT$pkg_config..Error$u20$as$u20$core..fmt..Display$GT$3fmt28_$u7b$$u7b$closure$u7d$$u7d$17h85159a2cd0fe500dE"(ptr sret(%"alloc::string::String") align 8 %res, ptr align 1 %_1, ptr align 1 %0, i64 %1) unnamed_addr #0 {
start:
  %_0.i = alloca %"core::fmt::rt::Argument<'_>", align 8
  %_7 = alloca [1 x %"core::fmt::rt::Argument<'_>"], align 8
  %_3 = alloca %"core::fmt::Arguments<'_>", align 8
  %path = alloca { ptr, i64 }, align 8
  store ptr %0, ptr %path, align 8
  %2 = getelementptr inbounds i8, ptr %path, i64 8
  store i64 %1, ptr %2, align 8
  store ptr %path, ptr %_0.i, align 8
  %3 = getelementptr inbounds i8, ptr %_0.i, i64 8
  store ptr @"_ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7493490aaa574334E", ptr %3, align 8
  %4 = load ptr, ptr %_0.i, align 8, !nonnull !3, !align !4, !noundef !3
  %5 = getelementptr inbounds i8, ptr %_0.i, i64 8
  %6 = load ptr, ptr %5, align 8, !nonnull !3, !noundef !3
  %7 = insertvalue { ptr, ptr } poison, ptr %4, 0
  %8 = insertvalue { ptr, ptr } %7, ptr %6, 1
  %_8.0 = extractvalue { ptr, ptr } %8, 0
  %_8.1 = extractvalue { ptr, ptr } %8, 1
  %9 = getelementptr inbounds [1 x %"core::fmt::rt::Argument<'_>"], ptr %_7, i64 0, i64 0
  store ptr %_8.0, ptr %9, align 8
  %10 = getelementptr inbounds i8, ptr %9, i64 8
  store ptr %_8.1, ptr %10, align 8
; call core::fmt::Arguments::new_v1
  call void @_ZN4core3fmt9Arguments6new_v117h15db85c189f33308E(ptr sret(%"core::fmt::Arguments<'_>") align 8 %_3, ptr align 8 @alloc_be8662a971b48efeddae33e6fec76446, i64 1, ptr align 8 %_7, i64 1)
; call alloc::fmt::format
  call void @_ZN5alloc3fmt6format17h75e8e6cb383a9023E(ptr sret(%"alloc::string::String") align 8 %res, ptr align 8 %_3)
  ret void
}

; pkg_config::Library::parse_libs_cflags::{{closure}}
; Function Attrs: inlinehint nonlazybind uwtable
define internal void @"_ZN10pkg_config7Library17parse_libs_cflags28_$u7b$$u7b$closure$u7d$$u7d$17h4f3ed1af3b78865dE"(ptr sret(%"std::path::PathBuf") align 8 %_0) unnamed_addr #0 {
start:
; call <std::path::PathBuf as core::convert::From<&T>>::from
  call void @"_ZN71_$LT$std..path..PathBuf$u20$as$u20$core..convert..From$LT$$RF$T$GT$$GT$4from17hed97eefc100830f2E"(ptr sret(%"std::path::PathBuf") align 8 %_0, ptr align 1 @alloc_1a88633319cb23fad7e8fd4588c36cb0, i64 4)
  ret void
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #11

; core::panicking::panic
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking5panic17h59297120e85ea178E(ptr align 1, i64, ptr align 8) unnamed_addr #4

; core::panicking::panic_nounwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking14panic_nounwind17h93deae2a6e800156E(ptr align 1, i64) unnamed_addr #12

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #13

; core::slice::index::slice_end_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index24slice_end_index_len_fail17h4c9cdbdfca4072caE(i64, i64, ptr align 8) unnamed_addr #4

; core::slice::index::slice_index_order_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index22slice_index_order_fail17h06f4de41a511866fE(i64, i64, ptr align 8) unnamed_addr #4

; core::str::slice_error_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core3str16slice_error_fail17h9c5d67f5de864a44E(ptr align 1, i64, i64, i64, ptr align 8) unnamed_addr #4

; Function Attrs: nonlazybind uwtable
declare i32 @rust_eh_personality(i32, i32, i64, ptr, ptr) unnamed_addr #1

; core::panicking::panic_in_cleanup
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking16panic_in_cleanup17h803841cec7522372E() unnamed_addr #12

; core::panicking::panic_fmt
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking9panic_fmt17h0d3f1893e38be419E(ptr align 8, ptr align 8) unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.uadd.sat.i64(i64, i64) #14

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #15

; std::sys::pal::unix::fs::stat
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys3pal4unix2fs4stat17hf684e63aa6a8db72E(ptr sret(%"core::result::Result<std::sys::pal::unix::fs::FileAttr, std::io::error::Error>") align 8, ptr align 1, i64) unnamed_addr #1

; <std::sys::pal::unix::stdio::Stderr as std::io::Write>::write
; Function Attrs: nonlazybind uwtable
declare void @"_ZN69_$LT$std..sys..pal..unix..stdio..Stderr$u20$as$u20$std..io..Write$GT$5write17hef8e66488f853197E"(ptr sret(%"core::result::Result<usize, std::io::error::Error>") align 8, ptr align 1, ptr align 1, i64) unnamed_addr #1

; core::slice::index::slice_start_index_len_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core5slice5index26slice_start_index_len_fail17hd7aab39f3024a402E(i64, i64, ptr align 8) unnamed_addr #4

; core::fmt::write
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt5write17h938c332fdab924ebE(ptr align 1, ptr align 8, ptr align 8) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #16

; std::env::_var
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3env4_var17h15b5dab35f465e04E(ptr sret(%"core::result::Result<alloc::string::String, std::env::VarError>") align 8, ptr align 1, i64) unnamed_addr #1

; std::env::_var_os
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3env7_var_os17h2aab7dfe7e2cd591E(ptr sret(%"core::option::Option<std::ffi::os_str::OsString>") align 8, ptr align 1, i64) unnamed_addr #1

; std::sys::os_str::bytes::Slice::to_owned
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys6os_str5bytes5Slice8to_owned17h805dfc47b79ea5d4E(ptr sret(%"std::sys::os_str::bytes::Buf") align 8, ptr align 1, i64) unnamed_addr #1

; std::sys::os_str::bytes::Slice::to_string_lossy
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys6os_str5bytes5Slice15to_string_lossy17h1bd8192d7d8d942fE(ptr sret(%"alloc::borrow::Cow<'_, str>") align 8, ptr align 1, i64) unnamed_addr #1

; std::sys::pal::unix::thread_local_dtor::register_dtor
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys3pal4unix17thread_local_dtor13register_dtor17hff0e24710dd24134E(ptr, ptr) unnamed_addr #1

; core::panicking::panic_cannot_unwind
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking19panic_cannot_unwind17h05e6c610e4e95bd9E() unnamed_addr #12

; std::sys::pal::unix::abort_internal
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN3std3sys3pal4unix14abort_internal17h0c90a563b8bd268fE() unnamed_addr #17

; std::sys::pal::unix::rand::hashmap_random_keys
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN3std3sys3pal4unix4rand19hashmap_random_keys17hee6d0984481f50adE() unnamed_addr #1

; std::path::Path::_starts_with
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN3std4path4Path12_starts_with17hd5ff97bc39d427f6E(ptr align 1, i64, ptr align 1, i64) unnamed_addr #1

; std::path::Path::_join
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std4path4Path5_join17hec75aca45f8136f8E(ptr sret(%"std::path::PathBuf") align 8, ptr align 1, i64, ptr align 1, i64) unnamed_addr #1

; std::sys::pal::unix::process::process_common::Command::arg
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys3pal4unix7process14process_common7Command3arg17h2f5a0e34ed366842E(ptr align 8, ptr align 1, i64) unnamed_addr #1

; std::sys_common::process::CommandEnv::set
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std10sys_common7process10CommandEnv3set17h1b39159d5c305db7E(ptr align 8, ptr align 1, i64, ptr align 1, i64) unnamed_addr #1

; std::sys::pal::unix::process::process_common::Command::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std3sys3pal4unix7process14process_common7Command3new17h2720cbe0a0e2318cE(ptr sret(%"std::sys::pal::unix::process::process_common::Command") align 8, ptr align 1, i64) unnamed_addr #1

; std::panicking::rust_panic_with_hook
; Function Attrs: noreturn nonlazybind uwtable
declare void @_ZN3std9panicking20rust_panic_with_hook17h49021cdbc4b22349E(ptr align 1, ptr align 8, ptr align 8, ptr align 8, i1 zeroext, i1 zeroext) unnamed_addr #17

; Function Attrs: nonlazybind
define internal i32 @__rust_try(ptr %0, ptr %1, ptr %2) unnamed_addr #18 personality ptr @rust_eh_personality {
entry-block:
  invoke void %0(ptr %1)
          to label %then unwind label %catch

then:                                             ; preds = %entry-block
  ret i32 0

catch:                                            ; preds = %entry-block
  %3 = landingpad { ptr, i32 }
          catch ptr null
  %4 = extractvalue { ptr, i32 } %3, 0
  call void %2(ptr %1, ptr %4)
  ret i32 1
}

; std::panicking::try::cleanup
; Function Attrs: cold nonlazybind uwtable
declare { ptr, ptr } @_ZN3std9panicking3try7cleanup17h64243c6ceae774e7E(ptr) unnamed_addr #9

; <str as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17h86309c7b5dd516e7E"(ptr align 1, i64, ptr align 8) unnamed_addr #1

; <std::io::error::Error as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN60_$LT$std..io..error..Error$u20$as$u20$core..fmt..Display$GT$3fmt17h425a926be932f95fE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_list
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3fmt9Formatter10debug_list17h876a1c15cedf3397E(ptr sret(%"core::fmt::builders::DebugList<'_, '_>") align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt8builders9DebugList6finish17h052888958915dc88E(ptr align 8) unnamed_addr #1

; <std::process::ExitStatus as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN63_$LT$std..process..ExitStatus$u20$as$u20$core..fmt..Display$GT$3fmt17hf691fd4a1afbd45cE"(ptr align 4, ptr align 8) unnamed_addr #1

; <std::path::Display as core::fmt::Display>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN57_$LT$std..path..Display$u20$as$u20$core..fmt..Display$GT$3fmt17he7fc3be6b5ec5834E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for i32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$i32$GT$3fmt17hefb7f2f762607f15E"(ptr align 4, ptr align 8) unnamed_addr #1

; <std::ffi::os_str::OsString as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN63_$LT$std..ffi..os_str..OsString$u20$as$u20$core..fmt..Debug$GT$3fmt17h6ef77d5bdcd6a4d7E"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17h8e60102b0743c13cE"(ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for u8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u8$GT$3fmt17hb339727406d21c1fE"(ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for u8>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$u8$GT$3fmt17ha5e2045323f0c8f5E"(ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num3imp54_$LT$impl$u20$core..fmt..Display$u20$for$u20$usize$GT$3fmt17h7bbbd896a38dcccaE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$usize$GT$3fmt17hdaf6f71ebb81ebeeE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num55_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$usize$GT$3fmt17hdcbbec87e7e8bf7bE"(ptr align 8, ptr align 8) unnamed_addr #1

; core::fmt::builders::DebugList::entry
; Function Attrs: nonlazybind uwtable
declare align 8 ptr @_ZN4core3fmt8builders9DebugList5entry17hd1d9a4a9a039c3ebE(ptr align 8, ptr align 1, ptr align 8) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #14

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(none)
declare i1 @llvm.expect.i1(i1, i1) #19

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctpop.i64(i64) #14

; <alloc::collections::btree::mem::replace::PanicGuard as core::ops::drop::Drop>::drop
; Function Attrs: nonlazybind uwtable
declare void @"_ZN93_$LT$alloc..collections..btree..mem..replace..PanicGuard$u20$as$u20$core..ops..drop..Drop$GT$4drop17h556ad0e0ca16dd4dE"(ptr align 1) unnamed_addr #1

; core::panicking::panic_bounds_check
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking18panic_bounds_check17hf45ce6debf926a45E(i64, i64, ptr align 8) unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.usub.sat.i64(i64, i64) #14

; core::option::expect_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6option13expect_failed17h465b3d6aa69dcb6dE(ptr align 1, i64, ptr align 8) unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.cttz.i16(i16, i1 immarg) #14

; core::fmt::num::<impl core::fmt::UpperHex for u32>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$u32$GT$3fmt17h79f4c0ef1dfa4c73E"(ptr align 4, ptr align 8) unnamed_addr #1

; core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @"_ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17len_mismatch_fail17h91356e456d8f3056E"(i64, i64, ptr align 8) unnamed_addr #4

; core::option::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6option13unwrap_failed17h630ca121a67dc3e4E(ptr align 8) unnamed_addr #4

; <std::thread::local::AccessError as core::fmt::Debug>::fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @"_ZN68_$LT$std..thread..local..AccessError$u20$as$u20$core..fmt..Debug$GT$3fmt17hdebbe333f47105ecE"(ptr align 1, ptr align 8) unnamed_addr #1

; core::result::unwrap_failed
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core6result13unwrap_failed17h1356562ef8bc898cE(ptr align 1, i64, ptr align 1, ptr align 8, ptr align 8) unnamed_addr #4

; core::panicking::assert_failed_inner
; Function Attrs: cold noinline noreturn nonlazybind uwtable
declare void @_ZN4core9panicking19assert_failed_inner17he66e930fc360d575E(i8, ptr align 1, ptr align 8, ptr align 1, ptr align 8, ptr align 8, ptr align 8) unnamed_addr #4

; core::fmt::Formatter::write_str
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_str17h4bb7c9399e0c7fb5E(ptr align 8, ptr align 1, i64) unnamed_addr #1

; core::slice::memchr::memchr_aligned
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN4core5slice6memchr14memchr_aligned17h2b2455b94ee89b25E(i8, ptr align 1, i64) unnamed_addr #1

; core::str::pattern::StrSearcher::new
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3str7pattern11StrSearcher3new17h92bc4266e1ec1403E(ptr sret(%"core::str::pattern::StrSearcher<'_, '_>") align 8, ptr align 1, i64, ptr align 1, i64) unnamed_addr #1

; alloc::fmt::format::format_inner
; Function Attrs: nonlazybind uwtable
declare void @_ZN5alloc3fmt6format12format_inner17h335f7dd944b9a48cE(ptr sret(%"alloc::string::String") align 8, ptr align 8) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #14

; alloc::alloc::handle_alloc_error
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN5alloc5alloc18handle_alloc_error17h48039cdfd0d60c1cE(i64, i64) unnamed_addr #20

; Function Attrs: nounwind nonlazybind allockind("alloc,uninitialized,aligned") allocsize(0) uwtable
declare noalias ptr @__rust_alloc(i64, i64 allocalign) unnamed_addr #21

; Function Attrs: nounwind nonlazybind allockind("alloc,zeroed,aligned") allocsize(0) uwtable
declare noalias ptr @__rust_alloc_zeroed(i64, i64 allocalign) unnamed_addr #22

; Function Attrs: nounwind nonlazybind allockind("realloc,aligned") allocsize(3) uwtable
declare noalias ptr @__rust_realloc(ptr allocptr, i64, i64 allocalign, i64) unnamed_addr #23

; core::str::converts::from_utf8
; Function Attrs: nonlazybind uwtable
declare void @_ZN4core3str8converts9from_utf817hc8e8a5bde000841dE(ptr sret(%"core::result::Result<&str, core::str::error::Utf8Error>") align 8, ptr align 1, i64) unnamed_addr #1

; alloc::raw_vec::capacity_overflow
; Function Attrs: noinline noreturn nonlazybind uwtable
declare void @_ZN5alloc7raw_vec17capacity_overflow17hdebe4d61eabe5c80E() unnamed_addr #2

; Function Attrs: nounwind nonlazybind allockind("free") uwtable
declare void @__rust_dealloc(ptr allocptr, i64, i64) unnamed_addr #24

; core::fmt::Formatter::debug_struct_field2_finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter26debug_struct_field2_finish17h1f3ee845d6554337E(ptr align 8, ptr align 1, i64, ptr align 1, i64, ptr align 1, ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::debug_tuple_field1_finish
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter25debug_tuple_field1_finish17hac56ed013e0598f8E(ptr align 8, ptr align 1, i64, ptr align 1, ptr align 8) unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.fshl.i64(i64, i64, i64) #14

; Function Attrs: nonlazybind uwtable
declare i32 @close(i32) unnamed_addr #1

; Function Attrs: nonlazybind
declare i32 @memcmp(ptr, ptr, i64) #25

; std::process::abort
; Function Attrs: cold noreturn nonlazybind uwtable
declare void @_ZN3std7process5abort17hc349207d9ba9ad71E() unnamed_addr #20

; hashbrown::raw::Fallibility::capacity_overflow
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN9hashbrown3raw11Fallibility17capacity_overflow17h1c17936991031757E(i1 zeroext) unnamed_addr #1

; hashbrown::raw::Fallibility::alloc_err
; Function Attrs: nonlazybind uwtable
declare { i64, i64 } @_ZN9hashbrown3raw11Fallibility9alloc_err17h30b3981f862c146eE(i1 zeroext, i64, i64) unnamed_addr #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #11

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; std::process::Command::output
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std7process7Command6output17h2e6f5511378f18e8E(ptr sret(%"core::result::Result<std::process::Output, std::io::error::Error>") align 8, ptr align 8) unnamed_addr #1

; core::fmt::Formatter::write_fmt
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN4core3fmt9Formatter9write_fmt17hc259f3b2db5654c8E(ptr align 8, ptr align 8) unnamed_addr #1

; alloc::string::String::from_utf8_lossy
; Function Attrs: nonlazybind uwtable
declare void @_ZN5alloc6string6String15from_utf8_lossy17hbf042ff195c62d58E(ptr sret(%"alloc::borrow::Cow<'_, str>") align 8, ptr align 1, i64) unnamed_addr #1

; std::io::stdio::_print
; Function Attrs: nonlazybind uwtable
declare void @_ZN3std2io5stdio6_print17hc62f134794ba50d8E(ptr align 8) unnamed_addr #1

; std::process::ExitStatus::success
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN3std7process10ExitStatus7success17h5522c19843a1d498E(ptr align 4) unnamed_addr #1

; core::panicking::panic_misaligned_pointer_dereference
; Function Attrs: cold noinline noreturn nounwind nonlazybind uwtable
declare void @_ZN4core9panicking36panic_misaligned_pointer_dereference17hd2b8821d4f285972E(i64, i64, ptr align 8) unnamed_addr #12

; std::path::Path::is_file
; Function Attrs: nonlazybind uwtable
declare zeroext i1 @_ZN3std4path4Path7is_file17hd7382553c84cb3f0E(ptr align 1, i64) unnamed_addr #1

; std::path::Path::parent
; Function Attrs: nonlazybind uwtable
declare { ptr, i64 } @_ZN3std4path4Path6parent17ha5a2fb916f04a680E(ptr align 1, i64) unnamed_addr #1

; std::path::Path::file_name
; Function Attrs: nonlazybind uwtable
declare { ptr, i64 } @_ZN3std4path4Path9file_name17h22b35a9cf8dd929dE(ptr align 1, i64) unnamed_addr #1

attributes #0 = { inlinehint nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #1 = { nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #2 = { noinline noreturn nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #3 = { noinline nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #4 = { cold noinline noreturn nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #5 = { inlinehint noreturn nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #6 = { inlinehint nounwind nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #7 = { cold inlinehint nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #8 = { inlinehint nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" "target-features"="+sse2" }
attributes #9 = { cold nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #10 = { cold noinline nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #11 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #12 = { cold noinline noreturn nounwind nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #13 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #14 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #15 = { cold noreturn nounwind }
attributes #16 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #17 = { noreturn nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #18 = { nonlazybind "target-cpu"="x86-64" }
attributes #19 = { nocallback nofree nosync nounwind willreturn memory(none) }
attributes #20 = { cold noreturn nonlazybind uwtable "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #21 = { nounwind nonlazybind allockind("alloc,uninitialized,aligned") allocsize(0) uwtable "alloc-family"="__rust_alloc" "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #22 = { nounwind nonlazybind allockind("alloc,zeroed,aligned") allocsize(0) uwtable "alloc-family"="__rust_alloc" "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #23 = { nounwind nonlazybind allockind("realloc,aligned") allocsize(3) uwtable "alloc-family"="__rust_alloc" "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #24 = { nounwind nonlazybind allockind("free") uwtable "alloc-family"="__rust_alloc" "probe-stack"="inline-asm" "target-cpu"="x86-64" }
attributes #25 = { nonlazybind }
attributes #26 = { noreturn nounwind }
attributes #27 = { noreturn }
attributes #28 = { cold }
attributes #29 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.ident = !{!2}

!0 = !{i32 8, !"PIC Level", i32 2}
!1 = !{i32 2, !"RtLibUseGOT", i32 1}
!2 = !{!"rustc version 1.77.0 (aedd173a2 2024-03-17)"}
!3 = !{}
!4 = !{i64 1}
!5 = !{i64 8}
!6 = !{i32 0, i32 2}
!7 = !{i32 0, i32 1114113}
!8 = !{i32 0, i32 1114112}
!9 = !{i64 0, i64 2}
!10 = !{i8 0, i8 2}
!11 = !{i64 0, i64 3}
!12 = !{i64 0, i64 -9223372036854775807}
!13 = !{i64 0, i64 -9223372036854775808}
!14 = !{i32 5378844}
!15 = !{i8 0, i8 42}
!16 = !{i8 0, i8 41}
!17 = !{i8 0, i8 4}
!18 = !{i8 0, i8 3}
!19 = !{i8 -1, i8 2}
!20 = !{i32 0, i32 6}
!21 = !{i64 0, i64 6}
!22 = !{i32 0, i32 5}
!23 = !{i64 0, i64 -9223372036854775806}
!24 = !{i64 1, i64 0}
!25 = !{i64 16}
!26 = !{i64 1, i64 -9223372036854775807}
!27 = !{i64 0, i64 7}
!28 = !{i16 1, i16 0}
